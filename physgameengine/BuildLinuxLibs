#!/bin/bash
# Â© Copyright 2010 - 2011 BlackTopp Studios Inc.
# This file is part of The PhysGame Engine.
#
#    The PhysGame Engine is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    The PhysGame Engine is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with The PhysGame Engine.  If not, see <http://www.gnu.org/licenses/>.
#
#   The original authors have included a copy of the license specified above in the
#   'Docs' folder. See 'gpl.txt'
#
#   We welcome the use of The PhysGame anyone, including companies who wish to
#   Build professional software and charge for their product.
#
#   However there are some practical restrictions, so if your project involves
#   any of the following you should contact us and we will try to work something
#   out:
#    - DRM or Copy Protection of any kind(except Copyrights)
#    - Software Patents You Do Not Wish to Freely License
#    - Any Kind of Linking to Non-GPL licensed Works
#    - Are Currently In Violation of Another Copyright Holder's GPL License
#    - If You want to change our code and not add a few hundred MB of stuff to
#        your distribution
#
#   These and other limitations could cause serious legal problems if you ignore
#   them, so it is best to simply contact us or the Free Software Foundation, if
#   you have any questions.
#
#   Joseph Toppi - toppij@gmail.com
#   John Blackwood - makoenergy02@gmail.com

# This will build ogre and SDL and make sure their files wind up were CMake Expects them to be
# This will not copy files to the data directory. That is up to you or to cmake.

ThreadCount=1
DebugSymbols=""
DebugCMake="-DCMAKE_BUILD_TYPE=Release"
DebugMode=false

########################################################
#Check arg1 for thread count
if [ ! -n "$1" ]
then
	echo "Usage: `basename $0` [CompilationThreadCount] [\"Debug\"]"
	echo "CompilationThreadCount is the number of threads to compile with. You usually want to enter you amount of CPU cores."
	echo "\"Debug\" - If the word Debug appears after the CPU count, then The software will be compile with Debug Symbols"
else
	ThreadCount=$1
	echo "All compilations will be run in $ThreadCount Threads."
fi

########################################################
#check arg2 for the word "Debug"
if [ "Debug" = "$2" ]
then
	DebugSymbols="-g"
	DebugMode=true
	DebugCMake="-DCMAKE_BUILD_TYPE=Debug"	
	echo "Compiling for Debugging"	
else
	echo "Compiling for Release"	
fi

########################################################
# Prepare Ogre Library
cd libincludes/linux/ogresrc/ogre
cmake -G"CodeBlocks - Unix Makefiles" $DebugCMake -DOGRE_STATIC=false
make -j$ThreadCount OgreMain
make -j$ThreadCount RenderSystem_GL
make -j$ThreadCount Plugin_CgProgramManager
make -j$ThreadCount Plugin_ParticleFX


# This actually breaks the build process, it still loks for the wrong name somehow...
# rename debug libs
#echo "Renaming any debug libraries"
#rename 's/_d//' lib/*
#cd lib
#for i in *; do
#	if [ -h "$i" ]
#	then
#		Target=`readlink "$i"`
#		Target=${Target/_d/}
#		echo "Retargeting $i -> $Target"
#		rm "$i"
#		ln -s "$Target" "$i"
#	fi
#done


########################################################
#Now lets do SDL
cd ../../../common/sdlsrc/
cp -an SDL SDLbuild
cd SDLbuild

./autogen.sh
./configure LDFLAGS=-fPIC CFLAGS="-O2 $DebugSymbols -fPIC"
make -j$ThreadCount

