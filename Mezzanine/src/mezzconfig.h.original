//Â© Copyright 2010 - 2012 BlackTopp Studios Inc.
/* This file is part of The Mezzanine Engine.

    The Mezzanine Engine is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    The Mezzanine Engine is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.
*/
/* The original authors have included a copy of the license specified above in the
   'Docs' folder. See 'gpl.txt'
*/
/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to
   Build professional software and charge for their product.

   However there are some practical restrictions, so if your project involves
   any of the following you should contact us and we will try to work something
   out:
    - DRM or Copy Protection of any kind(except Copyrights)
    - Software Patents You Do Not Wish to Freely License
    - Any Kind of Linking to Non-GPL licensed Works
    - Are Currently In Violation of Another Copyright Holder's GPL License
    - If You want to change our code and not add a few hundred MB of stuff to
        your distribution

   These and other limitations could cause serious legal problems if you ignore
   them, so it is best to simply contact us or the Free Software Foundation, if
   you have any questions.

   Joseph Toppi - toppij@gmail.com
   John Blackwood - makoenergy02@gmail.com
*/
#ifndef _config_h
#define _config_h

/// @file This File optionally defines a number of values about the inclusion of subsystems in the Mezzanine
/// @details This values in this file are all converted to preprocessor directives, suitable for use in and
/// only in #ifdef and #ifndef expressions. This is designed to control which parts of the engine compiles.
/// In theory this allows you to remove or add all of a given feature by changing just one value here and
/// recompiling. @n @n
/// When cmake is run, or this is manually configured each configure variable must be removed. The configure
/// variables begin with '$' and '{' and end with '}'. After the closing bracket, and before the dollar sign
/// there must be at least one whitespace character. The contents between the brackets is the variable name
/// and the first character must be an letter, followed by any amount of alphanumeric or underscore
/// characters. @n @n
/// The values the configure variables can replaced with with coincide with the CMake definitions for them.
/// Specifically this means that each variable can have one of two values has the following indicates: @n
/// VariableName => "FalseValue" / "TrueValue"
/// Mezz_Debug_Defined => "MEZZDEBUG_undefined" / "MEZZDEBUG = 1"
/// Mezz_Lua51_Defined => "MEZZLUA51_undefined" / "MEZZLUA51 = 1"
/// Mezz_Profile_Defined => "MEZZPROFILE_undefined" / MEZZPROFILE" = 1"
/// Mezz_Network_Defined => "MEZZNETWORK_undefined" / "MEZZNETWORK = 1"
/// Mezz_XML_Defined => "MEZZXML_undefined" / "MEZZXML = 1"
/// Mezz_ThrowOnSingletonFetch_Defined => "THROW_ON_FETCH_FAIL_undefined" / "THROW_ON_FETCH_FAIL = 1" @n @n
/// Currently all the variables and values follow a noticable pattern, however due to technical constraints
/// this may not always be possible.

    #define ${Mezz_Debug_Defined}
    #define ${Mezz_Lua51_Defined}
    #define ${Mezz_Profile_Defined}
    #define ${Mezz_Network_Defined}
    #define ${Mezz_XML_Defined}
    #define ${Mezz_ThrowOnSingletonFetch_Defined}

#endif
