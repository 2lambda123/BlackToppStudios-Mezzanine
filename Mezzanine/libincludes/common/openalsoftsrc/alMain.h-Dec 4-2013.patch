+++ "b/D:\\MezzanineSafe\\Mezzanine\\libincludes\\common\\openalsoftsrc\\openalsoft\\OpenAL32\\Include\\alMain.h"
@@ -62,7 +62,7 @@ 
 static const union {
 
 #define COUNTOF(x) (sizeof((x))/sizeof((x)[0]))
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(HAVE_PTHREAD_H)
 
 #define WIN32_LEAN_AND_MEAN
 #include <windows.h>
@@ -87,6 +87,19 @@ 
 void pthread_once(pthread_once_t *once, void (*callback)(void));
 static __inline int sched_yield(void)
 { SwitchToThread(); return 0; }
 
+#elif defined(_WIN32) && defined(HAVE_PTHREAD_H)
+
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#include <pthread.h>
+
+#define HAVE_DYNLOAD 1
+void *LoadLib(const char *name);
+void CloseLib(void *handle);
+void *GetSymbol(void *handle, const char *name);
+
+WCHAR *strdupW(const WCHAR *str);
+
 #else
 
 #include <unistd.h>
