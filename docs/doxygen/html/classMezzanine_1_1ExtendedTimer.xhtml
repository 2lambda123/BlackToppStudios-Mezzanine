<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::ExtendedTimer Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1ExtendedTimer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::ExtendedTimer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>An enhanced timer class that can store and track many units of time.  
 <a href="classMezzanine_1_1ExtendedTimer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="extendedtimer_8h_source.xhtml">extendedtimer.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::ExtendedTimer:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ExtendedTimer__inherit__graph.svg" width="184" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::ExtendedTimer:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ExtendedTimer__coll__graph.svg" width="300" height="259"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a52119e2da54ea7ae5da0dc1f921a3b61"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">TimeStruct</a> { <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">Current</a>, 
<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61afd99677d1774c80bfaa92b6dba36c2ba">Goal</a>, 
<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61addcde9da9ed25254cd4919c1d6fb7172">Initial</a>
 }</td></tr>
<tr class="memdesc:a52119e2da54ea7ae5da0dc1f921a3b61"><td class="mdescLeft">&#160;</td><td class="mdescRight">The internal time struct to be used...  <a href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">More...</a><br/></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1Timer"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1Timer')"><img src="closed.png" alt="-"/>&nbsp;Public Types inherited from <a class="el" href="classMezzanine_1_1Timer.xhtml">Mezzanine::Timer</a></td></tr>
<tr class="memitem:a1db436d4e0d6f1676e41ba3cb2ea3aaa inherit pub_types_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaa">TimerStyle</a> { <a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaaa023d2336d30bf4bcba70f2511af2c3c3">Normal</a>, 
<a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaaae421b07061ca1f45a2f1080316c3dbb7">StopWatch</a>, 
<a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaaad408501a2b2ad050dce4591e1735a6a2">Alarm</a>
 }</td></tr>
<tr class="memdesc:a1db436d4e0d6f1676e41ba3cb2ea3aaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">The style of timer to be used.  <a href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaa">More...</a><br/></td></tr>
<tr class="memitem:afdc9cac008cfe642ce8a11d090f29ec6 inherit pub_types_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#afdc9cac008cfe642ce8a11d090f29ec6">TimerType</a> { <a class="el" href="classMezzanine_1_1Timer.xhtml#afdc9cac008cfe642ce8a11d090f29ec6a80b0c92976edff568342b1fc7994b417">Simple</a>, 
<a class="el" href="classMezzanine_1_1Timer.xhtml#afdc9cac008cfe642ce8a11d090f29ec6a737fc1c906a893c9d905eedd4a3c17a5">Extended</a>
 }</td></tr>
<tr class="memdesc:afdc9cac008cfe642ce8a11d090f29ec6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of timer to be used.  <a href="classMezzanine_1_1Timer.xhtml#afdc9cac008cfe642ce8a11d090f29ec6">More...</a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6217772d13e5d80b5c1fe9198bf16eb8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a6217772d13e5d80b5c1fe9198bf16eb8">ExtendedTimer</a> (const <a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaa">Timer::TimerStyle</a> style)</td></tr>
<tr class="memdesc:a6217772d13e5d80b5c1fe9198bf16eb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor.  <a href="#a6217772d13e5d80b5c1fe9198bf16eb8"></a><br/></td></tr>
<tr class="memitem:a34b8fa893484a0000bc6ee8153c8a992"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a34b8fa893484a0000bc6ee8153c8a992"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a34b8fa893484a0000bc6ee8153c8a992">~ExtendedTimer</a> ()</td></tr>
<tr class="memdesc:a34b8fa893484a0000bc6ee8153c8a992"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:abb6ca662c88909785070e441fc7cabd9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#abb6ca662c88909785070e441fc7cabd9">GetDays</a> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:abb6ca662c88909785070e441fc7cabd9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current internal Day count.  <a href="#abb6ca662c88909785070e441fc7cabd9"></a><br/></td></tr>
<tr class="memitem:ad629fa0bf3b4572c5b8263160e961164"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#ad629fa0bf3b4572c5b8263160e961164">GetHours</a> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:ad629fa0bf3b4572c5b8263160e961164"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current internal Hour count.  <a href="#ad629fa0bf3b4572c5b8263160e961164"></a><br/></td></tr>
<tr class="memitem:ac2deb102d0ffb5a10a4b789327201f94"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#ac2deb102d0ffb5a10a4b789327201f94">GetMilliseconds</a> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:ac2deb102d0ffb5a10a4b789327201f94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current internal Millisecond count.  <a href="#ac2deb102d0ffb5a10a4b789327201f94"></a><br/></td></tr>
<tr class="memitem:a887d97ca0b17b834e10f22171ffc06f2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a887d97ca0b17b834e10f22171ffc06f2">GetMinutes</a> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:a887d97ca0b17b834e10f22171ffc06f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current internal Minute count.  <a href="#a887d97ca0b17b834e10f22171ffc06f2"></a><br/></td></tr>
<tr class="memitem:aa1a390965f10b0b57614987bec9db6da"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#aa1a390965f10b0b57614987bec9db6da">GetSeconds</a> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:aa1a390965f10b0b57614987bec9db6da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current internal Second count.  <a href="#aa1a390965f10b0b57614987bec9db6da"></a><br/></td></tr>
<tr class="memitem:a60355c006a3e30ce2d6e1652828266be"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60355c006a3e30ce2d6e1652828266be"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a60355c006a3e30ce2d6e1652828266be">Reset</a> ()</td></tr>
<tr class="memdesc:a60355c006a3e30ce2d6e1652828266be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current values to their initial values. <br/></td></tr>
<tr class="memitem:a43109532bd5f6d8a74db8a5047531afc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a43109532bd5f6d8a74db8a5047531afc">SetAutoReset</a> (const bool AutoReset)</td></tr>
<tr class="memdesc:a43109532bd5f6d8a74db8a5047531afc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not the <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a> should reset if it reaches it's goal. <br/>
 Ex. If a stopwatch reaches 0.  <a href="#a43109532bd5f6d8a74db8a5047531afc"></a><br/></td></tr>
<tr class="memitem:ada851388d522ecc9a90d72a5734a97f7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#ada851388d522ecc9a90d72a5734a97f7">SetDays</a> (<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Day, const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:ada851388d522ecc9a90d72a5734a97f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value for Days of the specified struct.  <a href="#ada851388d522ecc9a90d72a5734a97f7"></a><br/></td></tr>
<tr class="memitem:a3bd55e92c5f330732b7c32d88e8df982"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a3bd55e92c5f330732b7c32d88e8df982">SetHours</a> (<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Hr, const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:a3bd55e92c5f330732b7c32d88e8df982"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value for Hours of the specified struct.  <a href="#a3bd55e92c5f330732b7c32d88e8df982"></a><br/></td></tr>
<tr class="memitem:a8212dac4ed81472c9c9004d5b2d738f9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a8212dac4ed81472c9c9004d5b2d738f9">SetMicroseconds</a> (<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> MS, const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:a8212dac4ed81472c9c9004d5b2d738f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value for Microseconds of the specified struct.  <a href="#a8212dac4ed81472c9c9004d5b2d738f9"></a><br/></td></tr>
<tr class="memitem:ac80dc2a08ce5f1631e4bcc5487b7b5d8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#ac80dc2a08ce5f1631e4bcc5487b7b5d8">SetMilliseconds</a> (<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> MS, const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:ac80dc2a08ce5f1631e4bcc5487b7b5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value for Milliseconds of the specified struct.  <a href="#ac80dc2a08ce5f1631e4bcc5487b7b5d8"></a><br/></td></tr>
<tr class="memitem:acd546d6e5a2a9663b45fb8183997aab1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#acd546d6e5a2a9663b45fb8183997aab1">SetMinutes</a> (<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Min, const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:acd546d6e5a2a9663b45fb8183997aab1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value for Minutes of the specified struct.  <a href="#acd546d6e5a2a9663b45fb8183997aab1"></a><br/></td></tr>
<tr class="memitem:ab5f76e1791b1e3b1b1ef17c36ca49b15"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#ab5f76e1791b1e3b1b1ef17c36ca49b15">SetSeconds</a> (<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Sec, const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct=<a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a>)</td></tr>
<tr class="memdesc:ab5f76e1791b1e3b1b1ef17c36ca49b15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value for Seconds of the specified struct.  <a href="#ab5f76e1791b1e3b1b1ef17c36ca49b15"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Timer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Timer')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Timer.xhtml">Mezzanine::Timer</a></td></tr>
<tr class="memitem:af93b23ec9bdd7f88a5d333029edb00d1 inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#af93b23ec9bdd7f88a5d333029edb00d1">Timer</a> (const <a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaa">Timer::TimerStyle</a> style)</td></tr>
<tr class="memdesc:af93b23ec9bdd7f88a5d333029edb00d1 inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor.  <a href="#af93b23ec9bdd7f88a5d333029edb00d1"></a><br/></td></tr>
<tr class="memitem:af9f53c261429f22eaf09ae9d86e8b931 inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af9f53c261429f22eaf09ae9d86e8b931"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#af9f53c261429f22eaf09ae9d86e8b931">~Timer</a> ()</td></tr>
<tr class="memdesc:af9f53c261429f22eaf09ae9d86e8b931 inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="memitem:a58083b89492615c5aab7d32caa151d7b inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Timer.xhtml#afdc9cac008cfe642ce8a11d090f29ec6">Timer::TimerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#a58083b89492615c5aab7d32caa151d7b">GetType</a> ()</td></tr>
<tr class="memdesc:a58083b89492615c5aab7d32caa151d7b inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of timer this is.  <a href="#a58083b89492615c5aab7d32caa151d7b"></a><br/></td></tr>
<tr class="memitem:ae9234cbfc7a02fb2130bbf4bb790c27d inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae9234cbfc7a02fb2130bbf4bb790c27d"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#ae9234cbfc7a02fb2130bbf4bb790c27d">IsStopped</a> ()</td></tr>
<tr class="memdesc:ae9234cbfc7a02fb2130bbf4bb790c27d inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets Whether or not this timer is currently running. <br/></td></tr>
<tr class="memitem:a065f49422924ce93dcc2e25b2e059e3b inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#a065f49422924ce93dcc2e25b2e059e3b">SetCallback</a> (<a class="el" href="classMezzanine_1_1TimerCallback.xhtml">TimerCallback</a> *Call)</td></tr>
<tr class="memdesc:a065f49422924ce93dcc2e25b2e059e3b inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the callback to be used with this timer.  <a href="#a065f49422924ce93dcc2e25b2e059e3b"></a><br/></td></tr>
<tr class="memitem:a971737d83ba98db13b7cabb4213cbca5 inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a971737d83ba98db13b7cabb4213cbca5"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#a971737d83ba98db13b7cabb4213cbca5">Start</a> ()</td></tr>
<tr class="memdesc:a971737d83ba98db13b7cabb4213cbca5 inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activates the <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. <br/></td></tr>
<tr class="memitem:ac128fca1ea52a5b91295d1dff838074c inherit pub_methods_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac128fca1ea52a5b91295d1dff838074c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Timer.xhtml#ac128fca1ea52a5b91295d1dff838074c">Stop</a> ()</td></tr>
<tr class="memdesc:ac128fca1ea52a5b91295d1dff838074c inherit pub_methods_classMezzanine_1_1Timer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deactivates the <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a5a142cbe2a7045ddd712a9982cfa3081"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5a142cbe2a7045ddd712a9982cfa3081"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckAll</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:ad7a181d6967c65b6771c8cb14fc27625"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad7a181d6967c65b6771c8cb14fc27625"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckDays</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:aca41bbeb30bba5d9a00046b3da8a0b45"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aca41bbeb30bba5d9a00046b3da8a0b45"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckHours</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:ad72b4173512801bc626992bef7d62d1e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad72b4173512801bc626992bef7d62d1e"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckMicroSeconds</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:a198c069508204e2c6d47ace5b16a0cd0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a198c069508204e2c6d47ace5b16a0cd0"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckMilliSeconds</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:afdecf85d186c85bdacd7a5ccf30c4149"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afdecf85d186c85bdacd7a5ccf30c4149"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckMinutes</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:a879067beada4be88641a046766642337"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a879067beada4be88641a046766642337"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckSeconds</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:ad9c8104d57a28dbd2022d1be96c4d1e6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad9c8104d57a28dbd2022d1be96c4d1e6"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>CompareCurrentAndGoal</b> (const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">Current</a>, const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61afd99677d1774c80bfaa92b6dba36c2ba">Goal</a>)</td></tr>
<tr class="memitem:a5c657cf409a8354a8aedc9db9e85930f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5c657cf409a8354a8aedc9db9e85930f"></a>
virtual <a class="el" href="structMezzanine_1_1Time.xhtml">Time</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetStruct</b> (const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a> Struct)</td></tr>
<tr class="memitem:aee216403dbf0022b7aec314634c7480a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aee216403dbf0022b7aec314634c7480a"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>GoalReached</b> ()</td></tr>
<tr class="memitem:a8578ac6572f05bcfecb6e4203a125b14"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8578ac6572f05bcfecb6e4203a125b14"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>Update</b> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> MicroSecondsElapsed)</td></tr>
<tr class="memitem:adb8914cfecc1be80f2aaa63c4a37055f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adb8914cfecc1be80f2aaa63c4a37055f"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateAsNormal</b> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> MicroSecondsElapsed)</td></tr>
<tr class="memitem:ac2275ccf4140e5461c07b0f8e8d37e6e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac2275ccf4140e5461c07b0f8e8d37e6e"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateAsStopWatch</b> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> MicroSecondsElapsed)</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ae69f409f004bac0f61a36701c4148962"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae69f409f004bac0f61a36701c4148962"></a>
<a class="el" href="structMezzanine_1_1Time.xhtml">Time</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CurrentTime</b></td></tr>
<tr class="memitem:a4701b9a55e5e3429a34f448af8b9a183"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4701b9a55e5e3429a34f448af8b9a183"></a>
<a class="el" href="structMezzanine_1_1Time.xhtml">Time</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GoalTime</b></td></tr>
<tr class="memitem:ab77a055c94642679c83ce37214daff4b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab77a055c94642679c83ce37214daff4b"></a>
<a class="el" href="structMezzanine_1_1Time.xhtml">Time</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InitialTime</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Timer"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Timer')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Timer.xhtml">Mezzanine::Timer</a></td></tr>
<tr class="memitem:a2f44fad00f593a6dccbb334710a9a5c8 inherit pro_attribs_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f44fad00f593a6dccbb334710a9a5c8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Active</b></td></tr>
<tr class="memitem:a9a6f3b9f91df95a8fdb738912700f278 inherit pro_attribs_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9a6f3b9f91df95a8fdb738912700f278"></a>
<a class="el" href="classMezzanine_1_1TimerCallback.xhtml">TimerCallback</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Callback</b></td></tr>
<tr class="memitem:a24ae86a0c5016cb88a200495a4742120 inherit pro_attribs_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a24ae86a0c5016cb88a200495a4742120"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsSimple</b></td></tr>
<tr class="memitem:af9e26668b4473a456296a0d54842953f inherit pro_attribs_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af9e26668b4473a456296a0d54842953f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ResetAtGoal</b></td></tr>
<tr class="memitem:a87a70e0471ba821996b350923a2a6740 inherit pro_attribs_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a87a70e0471ba821996b350923a2a6740"></a>
<a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaa">Timer::TimerStyle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Style</b></td></tr>
<tr class="memitem:a576bed93ac9bb7bf5a57810ca2e48518 inherit pro_attribs_classMezzanine_1_1Timer"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a576bed93ac9bb7bf5a57810ca2e48518"></a>
<a class="el" href="classMezzanine_1_1Timer.xhtml#afdc9cac008cfe642ce8a11d090f29ec6">Timer::TimerType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Type</b></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>An enhanced timer class that can store and track many units of time. </p>
<p>This timer class should be used only for longer periods, such as tracking game uptime. For shorter periods of time look at the <a class="el" href="classMezzanine_1_1SimpleTimer.xhtml" title="A basic timer class that can be used to track short intervals of time.">SimpleTimer</a> class. </p>

<p>Definition at line <a class="el" href="extendedtimer_8h_source.xhtml#l00072">72</a> of file <a class="el" href="extendedtimer_8h_source.xhtml">extendedtimer.h</a>.</p>
</div><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="a52119e2da54ea7ae5da0dc1f921a3b61"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">Mezzanine::ExtendedTimer::TimeStruct</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The internal time struct to be used... </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff"></a>Current</em>&nbsp;</td><td>
<p>Current description. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a52119e2da54ea7ae5da0dc1f921a3b61afd99677d1774c80bfaa92b6dba36c2ba"></a>Goal</em>&nbsp;</td><td>
<p>Goal description. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a52119e2da54ea7ae5da0dc1f921a3b61addcde9da9ed25254cd4919c1d6fb7172"></a>Initial</em>&nbsp;</td><td>
<p>Initial description. </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="extendedtimer_8h_source.xhtml#l00076">76</a> of file <a class="el" href="extendedtimer_8h_source.xhtml">extendedtimer.h</a>.</p>

</div>
</div>
<h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a6217772d13e5d80b5c1fe9198bf16eb8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ExtendedTimer::ExtendedTimer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Timer.xhtml#a1db436d4e0d6f1676e41ba3cb2ea3aaa">Timer::TimerStyle</a>&#160;</td>
          <td class="paramname"><em>style</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">style</td><td>The styling/type of timer to be constructed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="abb6ca662c88909785070e441fc7cabd9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Mezzanine::ExtendedTimer::GetDays </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current internal Day count. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an Integer representing the current Day count of this <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad629fa0bf3b4572c5b8263160e961164"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Mezzanine::ExtendedTimer::GetHours </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current internal Hour count. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an Integer representing the current Hour count of this <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac2deb102d0ffb5a10a4b789327201f94"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Mezzanine::ExtendedTimer::GetMilliseconds </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current internal Millisecond count. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an Integer representing the current Millisecond count of this <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a887d97ca0b17b834e10f22171ffc06f2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Mezzanine::ExtendedTimer::GetMinutes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current internal Minute count. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an Integer representing the current Minute count of this <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa1a390965f10b0b57614987bec9db6da"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Mezzanine::ExtendedTimer::GetSeconds </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current internal Second count. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an Integer representing the current Second count of this <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a43109532bd5f6d8a74db8a5047531afc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetAutoReset </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>AutoReset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not the <a class="el" href="classMezzanine_1_1Timer.xhtml" title="A base timer class for the different timers.">Timer</a> should reset if it reaches it's goal. <br/>
 Ex. If a stopwatch reaches 0. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>

</div>
</div>
<a class="anchor" id="ada851388d522ecc9a90d72a5734a97f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetDays </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>Day</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value for Days of the specified struct. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Day</td><td>The number of Days to set. </td></tr>
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3bd55e92c5f330732b7c32d88e8df982"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetHours </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>Hr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value for Hours of the specified struct. </p>
<p>If a number greater then 23 is passed in, it will be reduced to 23. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Hr</td><td>The number of Hours to set. </td></tr>
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8212dac4ed81472c9c9004d5b2d738f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetMicroseconds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>MS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value for Microseconds of the specified struct. </p>
<p>If a number greater then 999 is passed in, it will be reduced to 999. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MS</td><td>The number of Microseconds to set. </td></tr>
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac80dc2a08ce5f1631e4bcc5487b7b5d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetMilliseconds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>MS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value for Milliseconds of the specified struct. </p>
<p>If a number greater then 999 is passed in, it will be reduced to 999. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MS</td><td>The number of Milliseconds to set. </td></tr>
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acd546d6e5a2a9663b45fb8183997aab1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetMinutes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>Min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value for Minutes of the specified struct. </p>
<p>If a number greater then 59 is passed in, it will be reduced to 59. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Min</td><td>The number of Minutes to set. </td></tr>
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab5f76e1791b1e3b1b1ef17c36ca49b15"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml">ExtendedTimer</a>&amp; Mezzanine::ExtendedTimer::SetSeconds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>Sec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61">ExtendedTimer::TimeStruct</a>&#160;</td>
          <td class="paramname"><em>Struct</em> = <code><a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff">ExtendedTimer::Current</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value for Seconds of the specified struct. </p>
<p>If a number greater then 59 is passed in, it will be reduced to 59. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this timer. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Sec</td><td>The number of Seconds to set. </td></tr>
    <tr><td class="paramname">Struct</td><td>The Kind of TimeStructure this timer should use, defaults to <a class="el" href="classMezzanine_1_1ExtendedTimer.xhtml#a52119e2da54ea7ae5da0dc1f921a3b61ab66b80ae57d622d3555bdd2828b5dfff" title="Current description.">ExtendedTimer::Current</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Projects/MezzanineCurrent/Mezzanine/Mezzanine/src/<a class="el" href="extendedtimer_8h_source.xhtml">extendedtimer.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 10 2013 23:44:05 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
