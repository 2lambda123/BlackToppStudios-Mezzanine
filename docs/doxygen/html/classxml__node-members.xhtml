<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Member List</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">xml_node Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classxml__node.xhtml">xml_node</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>_root</b> (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>append_attribute</b>(const char_t *name) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>append_child</b>(xml_node_type type=node_element) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>append_child</b>(const char_t *name) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>append_copy</b>(const xml_attribute &amp;proto) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>append_copy</b>(const xml_node &amp;proto) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>attribute</b>(const char_t *name) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>attribute_iterator</b> typedef (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>attributes</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>attributes_begin</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>attributes_end</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>begin</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>child</b>(const char_t *name) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>child_value</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>child_value</b>(const char_t *name) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>children</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>children</b>(const char_t *name) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>empty</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>end</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>find_attribute</b>(Predicate pred) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>find_child</b>(Predicate pred) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>find_child_by_attribute</b>(const char_t *name, const char_t *attr_name, const char_t *attr_value) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>find_child_by_attribute</b>(const char_t *attr_name, const char_t *attr_value) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>find_node</b>(Predicate pred) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>first_attribute</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>first_child</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>first_element_by_path</b>(const char_t *path, char_t delimiter= '/') const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>hash_value</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert_attribute_after</b>(const char_t *name, const xml_attribute &amp;attr) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert_attribute_before</b>(const char_t *name, const xml_attribute &amp;attr) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert_child_after</b>(xml_node_type type, const xml_node &amp;node) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert_child_after</b>(const char_t *name, const xml_node &amp;node) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert_child_before</b>(xml_node_type type, const xml_node &amp;node) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert_child_before</b>(const char_t *name, const xml_node &amp;node) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert_copy_after</b>(const xml_attribute &amp;proto, const xml_attribute &amp;attr) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert_copy_after</b>(const xml_node &amp;proto, const xml_node &amp;node) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert_copy_before</b>(const xml_attribute &amp;proto, const xml_attribute &amp;attr) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert_copy_before</b>(const xml_node &amp;proto, const xml_node &amp;node) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>internal_object</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>iterator</b> typedef (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>last_attribute</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>last_child</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>name</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>next_sibling</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>next_sibling</b>(const char_t *name) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>offset_debug</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator unspecified_bool_type</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator!</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator!=</b>(const xml_node &amp;r) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;</b>(const xml_node &amp;r) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;=</b>(const xml_node &amp;r) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator==</b>(const xml_node &amp;r) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;</b>(const xml_node &amp;r) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;=</b>(const xml_node &amp;r) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>parent</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>path</b>(char_t delimiter= '/') const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>prepend_attribute</b>(const char_t *name) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>prepend_child</b>(xml_node_type type=node_element) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>prepend_child</b>(const char_t *name) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>prepend_copy</b>(const xml_attribute &amp;proto) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>prepend_copy</b>(const xml_node &amp;proto) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>previous_sibling</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>previous_sibling</b>(const char_t *name) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>print</b>(xml_writer &amp;writer, const char_t *indent=&quot;\t&quot;, unsigned int flags=format_default, xml_encoding encoding=encoding_auto, unsigned int depth=0) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>print</b>(std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;os, const char_t *indent=&quot;\t&quot;, unsigned int flags=format_default, xml_encoding encoding=encoding_auto, unsigned int depth=0) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>print</b>(std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;os, const char_t *indent=&quot;\t&quot;, unsigned int flags=format_default, unsigned int depth=0) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>remove_attribute</b>(const xml_attribute &amp;a) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>remove_attribute</b>(const char_t *name) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>remove_child</b>(const xml_node &amp;n) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>remove_child</b>(const char_t *name) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>root</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>select_nodes</b>(const char_t *query, xpath_variable_set *variables=0) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>select_nodes</b>(const xpath_query &amp;query) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>select_single_node</b>(const char_t *query, xpath_variable_set *variables=0) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>select_single_node</b>(const xpath_query &amp;query) const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>set_name</b>(const char_t *rhs) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>set_value</b>(const char_t *rhs) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>text</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>traverse</b>(xml_tree_walker &amp;walker) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>type</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>unspecified_bool_type</b> typedef (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>value</b>() const  (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>xml_attribute_iterator</b> (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>xml_named_node_iterator</b> (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>xml_node</b>() (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>xml_node</b>(xml_node_struct *p) (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">explicit</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>xml_node_iterator</b> (defined in <a class="el" href="classxml__node.xhtml">xml_node</a>)</td><td class="entry"><a class="el" href="classxml__node.xhtml">xml_node</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
</table></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Jun 20 2013 20:29:51 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
