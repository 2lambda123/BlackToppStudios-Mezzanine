<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/sqeaky/Code/Mezzanine/Mezzanine/src/linegroup.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_282391f6f4177160a7bfc5213c65158e.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_b044052e4980a71349e081a68f99b09b.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">linegroup.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _LINEGROUP_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _LINEGROUP_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;linegroup.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;scenemanager.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;entresol.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#define POSITION_BINDING 0</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TEXCOORD_BINDING 1</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span><span class="comment">// Mezzanine::Internal::Line3D</span><span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">///////////////////////////////////////</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">//We need to decalare an internal class to make this work.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">namespace </span>Internal</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">        /// @internal</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">        /// @brief Does the bulk of the work that that the Mezzanine::LineGroup performs</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">        /// @details Mezzanine::LineGroup is a simple wrapper around this to perform precise</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">        /// low level interactions with Ogre, the rendering subsystem. This uses too much stuff</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">        /// from ogre to use publicly. so we need to hide it here in the Mezzanine::internal namespace.</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml">   70</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml" title="Does the bulk of the work that that the Mezzanine::LineGroup performs.">Line3D</a>: <span class="keyword">public</span> Ogre::SimpleRenderable</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">                /// @brief Default Constructor</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">                /// @details This creates an empty Line3D.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"></span>                <a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml" title="Does the bulk of the work that that the Mezzanine::LineGroup performs.">Line3D</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">                /// @brief Destructor</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">                /// @details This safely tears down the Line3D.</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>                ~<a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml" title="Does the bulk of the work that that the Mezzanine::LineGroup performs.">Line3D</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">                /// @brief This adds a point to the list of what should be rendered.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">                /// @param p The point to be added.</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span>                <span class="keywordtype">void</span> addPoint(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;p);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">                /// @brief Access a specific point by index</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">                /// @param index The index.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">                /// @details This really does just access the underlying vector.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">                /// @return This Returns the specific Vector3 requested.</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span>                <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;getPoint(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> index) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">                /// @brief How many points are in this Line3D.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">                /// @return This returns the amount of points stored in this class.</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span>                <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> getNumPoints(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">                /// @brief Change an existing point.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">                /// @details This replaces a point specified by index with a new point</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">                /// @param index The index of the point to replace.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">                /// @param value A point to replace the existing point with</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span>                <span class="keywordtype">void</span> updatePoint(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> index, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;value);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">                /// @brief Adds two points</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">                /// @details This adds to points, to guarantee that a specific line segment is drawn.</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">                /// @param start The first point to be added</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">                /// @param end The first point to be added</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span>                <span class="keywordtype">void</span> drawLine(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;start, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;end);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">                /// @brief Renders this</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">                /// @details This does the actual rendering.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span>                <span class="keywordtype">void</span> drawLines(<span class="keywordtype">void</span>);        <span class="comment">//Render this</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">                /// @brief Not Used</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">                /// @details Not Used</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">                /// @param cam Not Used</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">                /// @return This returns a Real.</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span>                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> getSquaredViewDepth(<span class="keyword">const</span> Ogre::Camera *cam) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">                /// @brief How big would a circle need to be to encapsulate this</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">                /// @details This returns the radius the a circle would need to have to surround this line group.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">                /// @return This returns a real number which indicates the radius.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span>                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> getBoundingRadius(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="comment">//void getWorldTransforms(Matrix4 *xform) const;</span><span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">                /// @brief Gets how rotated this is currently</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">                /// @details Returns a quaternion with the rotation</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">                /// @return Is a Ogre::Quaternion which stores the rotation information of this Line3D</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"></span>                <span class="keyword">const</span> Ogre::Quaternion &amp;getWorldOrientation(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">                /// @brief Get the position of this Line3d</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">                /// @return This returns a Vector3 with the Position relative to the world Origin</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span>                <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;getWorldPosition(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">                /// @brief This is a vector which stores the point data</span></div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a3d294fe9c1649e393a57cda0fed9ec07">  146</a></span>&#160;<span class="comment"></span>                std::vector&lt;Vector3&gt; <a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a3d294fe9c1649e393a57cda0fed9ec07" title="This is a vector which stores the point data.">mPoints</a>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">                /// @brief This indicates whether or not the the line have been done yet.</span></div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a150be0d32c18fe847e3cddf9d0779304">  150</a></span>&#160;<span class="comment"></span>                <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a150be0d32c18fe847e3cddf9d0779304" title="This indicates whether or not the the line have been done yet.">mDrawn</a>;     <span class="comment">//Has this been rendered yet?</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        };</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#ad8c6be3d80eea871212d2f7daaed187e">  153</a></span>&#160;        Line3D::Line3D(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;           mRenderOp.vertexData = <span class="keyword">new</span> Ogre::VertexData();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;           mDrawn = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;           this-&gt;setMaterial(<span class="stringliteral">&quot;BaseWhiteNoLighting&quot;</span>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a8248d5f26079a6c611aabd66e95ecc3e">  161</a></span>&#160;        Line3D::~Line3D(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;           <span class="keyword">delete</span> mRenderOp.vertexData;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a57807959318842e7b6745ab513373472">  166</a></span>&#160;        <span class="keywordtype">void</span> Line3D::addPoint(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;p)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;           mPoints.push_back(p);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a548454fc4435a3d2870d23d007ba482f">  171</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;Line3D::getPoint(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;           assert(index &lt; mPoints.size() &amp;&amp; <span class="stringliteral">&quot;Point index is out of bounds!!&quot;</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;           <span class="keywordflow">return</span> mPoints[index];</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a72b39dc5c1b8bab658eb07a2276165b3">  178</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> Line3D::getNumPoints(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;           <span class="keywordflow">return</span> mPoints.size();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#aaf35675b00047e10f8863d1758f575c4">  183</a></span>&#160;        <span class="keywordtype">void</span> Line3D::updatePoint(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> index, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;value)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;           assert(index &lt; mPoints.size() &amp;&amp; <span class="stringliteral">&quot;Point index is out of bounds!!&quot;</span>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;           mPoints[index] = value;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a65e447dd23d6428bb7c2715e57f4e972">  190</a></span>&#160;        <span class="keywordtype">void</span> Line3D::drawLine(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;start, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;end)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">           /// @todo TODO: when using this function there should be a break in the line segment rendering. Not sure abot the best way to implement that, but it should happen</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"></span>           <span class="keywordflow">if</span>(mPoints.size())</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;              mPoints.clear();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;           mPoints.push_back(start);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;           mPoints.push_back(end);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;           drawLines();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a6847536bf3f33cd45c2e4ce18a518456">  202</a></span>&#160;        <span class="keywordtype">void</span> Line3D::drawLines(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span>(mDrawn)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                mDrawn = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="comment">// Initialization stuff</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            mRenderOp.indexData = 0;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            mRenderOp.vertexData-&gt;vertexCount = mPoints.size();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            mRenderOp.vertexData-&gt;vertexStart = 0;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            mRenderOp.operationType = Ogre::RenderOperation::OT_LINE_STRIP; <span class="comment">// OT_LINE_LIST, OT_LINE_STRIP</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            mRenderOp.useIndexes = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            Ogre::VertexDeclaration *decl = mRenderOp.vertexData-&gt;vertexDeclaration;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            Ogre::VertexBufferBinding *bind = mRenderOp.vertexData-&gt;vertexBufferBinding;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            decl-&gt;addElement(POSITION_BINDING, 0, Ogre::VET_FLOAT3, Ogre::VES_POSITION);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            Ogre::HardwareVertexBufferSharedPtr vbuf =</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;              Ogre::HardwareBufferManager::getSingleton().createVertexBuffer(</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                 decl-&gt;getVertexSize(POSITION_BINDING),</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                 mRenderOp.vertexData-&gt;vertexCount,</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                 Ogre::HardwareBuffer::HBU_STATIC_WRITE_ONLY);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            bind-&gt;setBinding(POSITION_BINDING, vbuf);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="comment">// Drawing stuff</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordtype">int</span> size = mPoints.size();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">if</span>( size &gt; 0 )</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;               <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> vaabMin = mPoints[0];</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;               <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> vaabMax = mPoints[0];</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;               <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> *prPos = <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>*<span class="keyword">&gt;</span>(vbuf-&gt;lock(Ogre::HardwareBuffer::HBL_DISCARD));</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;               <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; size; i++)</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;               {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                  *prPos++ = mPoints[i].<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                  *prPos++ = mPoints[i].Y;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                  *prPos++ = mPoints[i].Z;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                  <span class="keywordflow">if</span>(mPoints[i].X &lt; vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                     vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> = mPoints[i].X;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                  <span class="keywordflow">if</span>(mPoints[i].Y &lt; vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                     vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> = mPoints[i].Y;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                  <span class="keywordflow">if</span>(mPoints[i].Z &lt; vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>)</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                     vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> = mPoints[i].Z;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                  <span class="keywordflow">if</span>(mPoints[i].X &gt; vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                     vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> = mPoints[i].X;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                  <span class="keywordflow">if</span>(mPoints[i].Y &gt; vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                     vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> = mPoints[i].Y;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                  <span class="keywordflow">if</span>(mPoints[i].Z &gt; vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                     vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> = mPoints[i].Z;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;               }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;               vbuf-&gt;unlock();</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;               mBox.setExtents(vaabMin.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>(), vaabMax.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#ab58bb84b3e45964e6fe43c27ae3285c8">  266</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Line3D::getSquaredViewDepth(<span class="keyword">const</span> Ogre::Camera *cam)<span class="keyword"> const</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;           Ogre::Vector3 vMin, vMax, vMid, vDist;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;           vMin = mBox.getMinimum();</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;           vMax = mBox.getMaximum();</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;           vMid = ((vMin - vMax) * 0.5) + vMin;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;           vDist = cam-&gt;getDerivedPosition() - vMid;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;           <span class="keywordflow">return</span> vDist.squaredLength();</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a82e765f27d5708c4e7d5a96cf7a3dac8">  277</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Line3D::getBoundingRadius(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;           <span class="keywordflow">return</span> Ogre::Math::Sqrt(max(mBox.getMaximum().squaredLength(), mBox.getMinimum().squaredLength()));</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;           <span class="comment">//return mRadius;</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">        void Line3D::getWorldTransforms(Matrix4 *xform) const</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">           // return identity matrix to prevent parent transforms</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">           *xform = Matrix4::IDENTITY;</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml#a413d358740bc83b7ab6d063e93f64f2e">  289</a></span>&#160;        <span class="keyword">const</span> Ogre::Quaternion &amp;Line3D::getWorldOrientation(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;           <span class="keywordflow">return</span> Ogre::Quaternion::IDENTITY;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="comment">/*const Vector3 &amp;Line3D::getWorldPosition(void) const</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">           return Vector3::ZERO;</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">        }*/</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }<span class="comment">// /internal</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"></span><span class="comment">// Mezzanine::LineGroup</span><span class="comment"></span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">///////////////////////////////////////</span></div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#afbc11e001ce594846b926c7dab7ceafd">  304</a></span>&#160;<span class="comment"></span>    LineGroup::LineGroup()</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        this-&gt;LineData = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Internal_1_1Line3D.xhtml" title="Does the bulk of the work that that the Mezzanine::LineGroup performs.">Internal::Line3D</a>();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#afd14821b5b54fff9d670458748125f3f">  309</a></span>&#160;    LineGroup::~LineGroup(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keyword">delete</span> this-&gt;LineData;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#a3326fcfa0207505082af2610d73c2e46">  314</a></span>&#160;    <span class="keywordtype">void</span> LineGroup::addPoint(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;p)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        this-&gt;LineData-&gt;addPoint( p);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#a5a6aca5f86fa5751b335ee4a3d498cbf">  319</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> LineGroup::getPoint(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> temp(this-&gt;LineData-&gt;getPoint(index));</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keywordflow">return</span> temp;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#a518e2ccf64cb6dc9bcc309a08d40f8c9">  325</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> LineGroup::getNumPoints(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordflow">return</span> this-&gt;LineData-&gt;getNumPoints();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#adfb54ecbd62dc13d42b4e05c1b30a155">  330</a></span>&#160;    <span class="keywordtype">void</span> LineGroup::updatePoint(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> index, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;value)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="keywordflow">return</span> this-&gt;LineData-&gt;updatePoint(index, value);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#acadb6f8ccbe70828b094f07a11f276ac">  335</a></span>&#160;    <span class="keywordtype">void</span> LineGroup::drawLine(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;start, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> &amp;end)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="comment">//Ogre::Vector3 Ostart = start.GetOgreVector3();</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="comment">//Ogre::Vector3 Oend = end.GetOgreVector3();</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        this-&gt;LineData-&gt;drawLine(start, end);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#a85da1685525915f1e07d685b98f79f23">  342</a></span>&#160;    <span class="keywordtype">void</span> LineGroup::drawLines(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        this-&gt;LineData-&gt;drawLines();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div>
<div class="line"><a name="l00347"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#acf6419a64d2d387bafe36b3dda752678">  347</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> LineGroup::getBoundingRadius(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">return</span> this-&gt;LineData-&gt;getBoundingRadius();</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="code" href="classMezzanine_1_1LineGroup.xhtml#ab94688dd800d390aefce0e6b9742b296">  352</a></span>&#160;    <span class="keywordtype">void</span> LineGroup::PrepareForRendering()</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    {</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        Ogre::SceneNode *myNode = SceneManager::GetSingletonPtr()-&gt;GetGraphicsWorldPointer()-&gt;getRootSceneNode()-&gt;createChildSceneNode();</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        myNode-&gt;attachObject(this-&gt;LineData);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;}</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 23:09:53 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
