<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Physics::Generic6DofSpringConstraint Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml">Physics</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml">Generic6DofSpringConstraint</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Physics::Generic6DofSpringConstraint Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Creates a constraint as configurable as the 6Dof constraint, but has added support for spring motion.  
 <a href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="constraint_8h_source.xhtml">constraint.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Physics::Generic6DofSpringConstraint:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint__inherit__graph.svg" width="206" height="430"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Physics::Generic6DofSpringConstraint:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab3c5442035edfcec950a3b3456618fc3"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3">UsableAxis</a> { <br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3a82a8731b4bf24441f765ce621809a1ea">LinearX</a> =  0, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3a9184cfd7954baf46c0aa34a71e361f11">LinearY</a> =  1, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3a2d24c435402f52d4ea02a36da3f7b54a">LinearZ</a> =  2, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3af2f5d6b84f060adcc2344a63d128cbe6">AngularX</a> =  3, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3abbd85c59d627e3b336961bcf9eddded3">AngularY</a> =  4, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3aef627d96121819668a3a798253d301ef">AngularZ</a> =  5
<br/>
 }</td></tr>
<tr class="memdesc:ab3c5442035edfcec950a3b3456618fc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identify the Axis a bit easier when iterating over them is less convienent than typing an Identifier.  <a href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3">More...</a><br/></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1Physics_1_1Generic6DofConstraint')"><img src="closed.png" alt="-"/>&nbsp;Public Types inherited from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml">Mezzanine::Physics::Generic6DofConstraint</a></td></tr>
<tr class="memitem:aa5f11bf632d324dd4c3f5645c85e0565 inherit pub_types_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565">UsableAxis</a> { <br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9">LinearX</a> =  0, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab">LinearY</a> =  1, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91">LinearZ</a> =  2, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a481c517297b6466565b561fc0d814952">AngularX</a> =  3, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a5582eed3f9b3bdc06d12a66e715cdf01">AngularY</a> =  4, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac1d9b33debdb33a2c7dd11aaabfde4bc">AngularZ</a> =  5, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1">AngularXAsRotationalAxis</a> =  0, 
<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161">AngularYAsRotationalAxis</a> =  1, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8">AngularZAsRotationalAxis</a> =  2
<br/>
 }</td></tr>
<tr class="memdesc:aa5f11bf632d324dd4c3f5645c85e0565"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identify the Axis a bit easier when iterating over them is less convienent than typing an Identifier.  <a href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565">More...</a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a843701e0fde9e9433d1e6b2837271a8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a843701e0fde9e9433d1e6b2837271a8d">Generic6DofSpringConstraint</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorA, <a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorB, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;VectorA, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;VectorB, const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;QuaternionA, const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;QuaternionB, bool UseLinearReferenceA=false)</td></tr>
<tr class="memdesc:a843701e0fde9e9433d1e6b2837271a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Two body Verbose constructor.  <a href="#a843701e0fde9e9433d1e6b2837271a8d"></a><br/></td></tr>
<tr class="memitem:a9377d08d8f752700e7e42b809d33ec71"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a9377d08d8f752700e7e42b809d33ec71">Generic6DofSpringConstraint</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorA, <a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorB, const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TransformA, const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TransformB, bool UseLinearReferenceA=false)</td></tr>
<tr class="memdesc:a9377d08d8f752700e7e42b809d33ec71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Two body Terse constructor.  <a href="#a9377d08d8f752700e7e42b809d33ec71"></a><br/></td></tr>
<tr class="memitem:ab09f28a5ccc536e87aec787e438c0517"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab09f28a5ccc536e87aec787e438c0517">~Generic6DofSpringConstraint</a> ()</td></tr>
<tr class="memdesc:ab09f28a5ccc536e87aec787e438c0517"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor.  <a href="#ab09f28a5ccc536e87aec787e438c0517"></a><br/></td></tr>
<tr class="memitem:a9c7bcaa5173ac62c251a7df2351319a7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a9c7bcaa5173ac62c251a7df2351319a7">CalculateSpringEquilibriumPoint</a> ()</td></tr>
<tr class="memitem:af61f4c260d4d0ddf6922fc036c943bdb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#af61f4c260d4d0ddf6922fc036c943bdb">CalculateSpringEquilibriumPoint</a> (int Index)</td></tr>
<tr class="memitem:a0d8568270c4cab38678609221ae5206d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a0d8568270c4cab38678609221ae5206d">GetCurrentSpringAngularEquilibriumPoints</a> () const </td></tr>
<tr class="memitem:a59d1dd2e74f7630359d0bfde15e632a8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a59d1dd2e74f7630359d0bfde15e632a8">GetCurrentSpringEquilibriumPoint</a> (int Index) const </td></tr>
<tr class="memitem:a82fa120b375a7f4fad9584e6ec4d2f85"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a82fa120b375a7f4fad9584e6ec4d2f85">GetCurrentSpringLinearEquilibriumPoints</a> () const </td></tr>
<tr class="memitem:a73522f15b7b017c6671b46254161689c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a73522f15b7b017c6671b46254161689c">GetSpringAngularDamping</a> () const </td></tr>
<tr class="memdesc:a73522f15b7b017c6671b46254161689c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Damping for all Angular Axis.  <a href="#a73522f15b7b017c6671b46254161689c"></a><br/></td></tr>
<tr class="memitem:ae4af5d6d34ab6c081775b459ea506ee4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ae4af5d6d34ab6c081775b459ea506ee4">GetSpringAngularEnabled</a> () const </td></tr>
<tr class="memdesc:ae4af5d6d34ab6c081775b459ea506ee4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Enabled Status for all Angular Axis.  <a href="#ae4af5d6d34ab6c081775b459ea506ee4"></a><br/></td></tr>
<tr class="memitem:abafb81eaa89054d2227266c53263bbbd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#abafb81eaa89054d2227266c53263bbbd">GetSpringAngularStiffness</a> () const </td></tr>
<tr class="memdesc:abafb81eaa89054d2227266c53263bbbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Stiffness for all Angular Axis.  <a href="#abafb81eaa89054d2227266c53263bbbd"></a><br/></td></tr>
<tr class="memitem:ac65492616d248ea81fb036a5e18aad01"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ac65492616d248ea81fb036a5e18aad01">GetSpringDamping</a> (int Index) const </td></tr>
<tr class="memdesc:ac65492616d248ea81fb036a5e18aad01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the Damping of the spring on the given axis.  <a href="#ac65492616d248ea81fb036a5e18aad01"></a><br/></td></tr>
<tr class="memitem:af0394ba34c804f0fe352c2934e337128"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#af0394ba34c804f0fe352c2934e337128">GetSpringEnabled</a> (int Index) const </td></tr>
<tr class="memdesc:af0394ba34c804f0fe352c2934e337128"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the EnabledStatus of the spring on the given axis.  <a href="#af0394ba34c804f0fe352c2934e337128"></a><br/></td></tr>
<tr class="memitem:a378e7f0e6faad4568dd4750e3367909e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a378e7f0e6faad4568dd4750e3367909e">GetSpringLinearDamping</a> () const </td></tr>
<tr class="memdesc:a378e7f0e6faad4568dd4750e3367909e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Damping for all Linear Axis.  <a href="#a378e7f0e6faad4568dd4750e3367909e"></a><br/></td></tr>
<tr class="memitem:a51a0f49042bf5d20835009569127ce01"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a51a0f49042bf5d20835009569127ce01">GetSpringLinearEnabled</a> () const </td></tr>
<tr class="memdesc:a51a0f49042bf5d20835009569127ce01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Enabled Status for all Linear Axis.  <a href="#a51a0f49042bf5d20835009569127ce01"></a><br/></td></tr>
<tr class="memitem:a30edfa65bb70e7251f7c9ecd6ec1a8bd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a30edfa65bb70e7251f7c9ecd6ec1a8bd">GetSpringLinearStiffness</a> () const </td></tr>
<tr class="memdesc:a30edfa65bb70e7251f7c9ecd6ec1a8bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Stiffness for all Linear Axis.  <a href="#a30edfa65bb70e7251f7c9ecd6ec1a8bd"></a><br/></td></tr>
<tr class="memitem:a500b40ece33fc7757d56cc0d3de9599e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a500b40ece33fc7757d56cc0d3de9599e">GetSpringStiffness</a> (int Index) const </td></tr>
<tr class="memdesc:a500b40ece33fc7757d56cc0d3de9599e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the Stiffness of the spring on the given axis.  <a href="#a500b40ece33fc7757d56cc0d3de9599e"></a><br/></td></tr>
<tr class="memitem:af9d6453c1dc6a7c46f93840f02f97b4e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#af9d6453c1dc6a7c46f93840f02f97b4e">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:af9d6453c1dc6a7c46f93840f02f97b4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it.  <a href="#af9d6453c1dc6a7c46f93840f02f97b4e"></a><br/></td></tr>
<tr class="memitem:a6ecb401209e7108836bf291d79b81b6d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a6ecb401209e7108836bf291d79b81b6d">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:a6ecb401209e7108836bf291d79b81b6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a6ecb401209e7108836bf291d79b81b6d"></a><br/></td></tr>
<tr class="memitem:aa0f792cc96d1277cd8f439623da4a430"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#aa0f792cc96d1277cd8f439623da4a430">SetSpringAngularDamping</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Damps)</td></tr>
<tr class="memdesc:aa0f792cc96d1277cd8f439623da4a430"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Damping of the springs on each Angular Axis.  <a href="#aa0f792cc96d1277cd8f439623da4a430"></a><br/></td></tr>
<tr class="memitem:ac77f9c26bd73bbf6643a77ffa04cb7d6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ac77f9c26bd73bbf6643a77ffa04cb7d6">SetSpringAngularEnabled</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Enableness)</td></tr>
<tr class="memdesc:ac77f9c26bd73bbf6643a77ffa04cb7d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Stiffness of the springs on each Angular Axis.  <a href="#ac77f9c26bd73bbf6643a77ffa04cb7d6"></a><br/></td></tr>
<tr class="memitem:ab841cfd68b6dd4a861fb63db925f59ee"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab841cfd68b6dd4a861fb63db925f59ee">SetSpringAngularStiffness</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Stiffies)</td></tr>
<tr class="memdesc:ab841cfd68b6dd4a861fb63db925f59ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Stiffness of the springs on each Angular Axis.  <a href="#ab841cfd68b6dd4a861fb63db925f59ee"></a><br/></td></tr>
<tr class="memitem:a531021504aa58d20216093026c97cc2c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a531021504aa58d20216093026c97cc2c">SetSpringDamping</a> (int Index, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Damping)</td></tr>
<tr class="memdesc:a531021504aa58d20216093026c97cc2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the spring Damping on a given axis.  <a href="#a531021504aa58d20216093026c97cc2c"></a><br/></td></tr>
<tr class="memitem:ae89b1703dae820501401725b42f9a496"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ae89b1703dae820501401725b42f9a496">SetSpringEnabled</a> (int Index, bool Enable)</td></tr>
<tr class="memdesc:ae89b1703dae820501401725b42f9a496"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the spring's enabled status on a given axis.  <a href="#ae89b1703dae820501401725b42f9a496"></a><br/></td></tr>
<tr class="memitem:ad127d739aade42ca5930c472bfd1c957"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ad127d739aade42ca5930c472bfd1c957">SetSpringLinearDamping</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Damps)</td></tr>
<tr class="memdesc:ad127d739aade42ca5930c472bfd1c957"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Damping of the springs on each Linear Axis.  <a href="#ad127d739aade42ca5930c472bfd1c957"></a><br/></td></tr>
<tr class="memitem:ad89e47a2cacbf496c42a834c0b596be5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ad89e47a2cacbf496c42a834c0b596be5">SetSpringLinearEnabled</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Enableness)</td></tr>
<tr class="memdesc:ad89e47a2cacbf496c42a834c0b596be5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Stiffness of the springs on each Linear Axis.  <a href="#ad89e47a2cacbf496c42a834c0b596be5"></a><br/></td></tr>
<tr class="memitem:aa1fa8d22151e1a0ad713a87a994c4f4f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#aa1fa8d22151e1a0ad713a87a994c4f4f">SetSpringLinearStiffness</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Stiffies)</td></tr>
<tr class="memdesc:aa1fa8d22151e1a0ad713a87a994c4f4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Stiffness of the springs on each Linear Axis.  <a href="#aa1fa8d22151e1a0ad713a87a994c4f4f"></a><br/></td></tr>
<tr class="memitem:a9b142b319cb8375c8c0240f659a71d1b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a9b142b319cb8375c8c0240f659a71d1b">SetSpringStiffness</a> (int Index, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Stiffness)</td></tr>
<tr class="memdesc:a9b142b319cb8375c8c0240f659a71d1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the spring stiffness on a given axis.  <a href="#a9b142b319cb8375c8c0240f659a71d1b"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml">Mezzanine::Physics::Generic6DofConstraint</a></td></tr>
<tr class="memitem:a0c67371097bf265834b74df77cd1fce5 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0c67371097bf265834b74df77cd1fce5">Generic6DofConstraint</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorA, <a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorB, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;VectorA, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;VectorB, const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;QuaternionA, const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;QuaternionB, bool UseLinearReferenceA=false)</td></tr>
<tr class="memdesc:a0c67371097bf265834b74df77cd1fce5 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Two body Verbose constructor.  <a href="#a0c67371097bf265834b74df77cd1fce5"></a><br/></td></tr>
<tr class="memitem:a32d0a3d2b69edaff952c1dc121fc6272 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a32d0a3d2b69edaff952c1dc121fc6272">Generic6DofConstraint</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorA, <a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorB, const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TransformA, const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TransformB, bool UseLinearReferenceA=false)</td></tr>
<tr class="memdesc:a32d0a3d2b69edaff952c1dc121fc6272 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Two body Terse constructor.  <a href="#a32d0a3d2b69edaff952c1dc121fc6272"></a><br/></td></tr>
<tr class="memitem:ae6296f0e8ec5448f230e9c117ab231bf inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae6296f0e8ec5448f230e9c117ab231bf">Generic6DofConstraint</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorB, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;VectorB, const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;QuaternionB, bool UseLinearReferenceB=true)</td></tr>
<tr class="memdesc:ae6296f0e8ec5448f230e9c117ab231bf inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Body and <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Verbose constructor.  <a href="#ae6296f0e8ec5448f230e9c117ab231bf"></a><br/></td></tr>
<tr class="memitem:adac5b87a52407957112fc64c039e737e inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adac5b87a52407957112fc64c039e737e">Generic6DofConstraint</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *ActorB, const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TransformB, bool UseLinearReferenceB=true)</td></tr>
<tr class="memdesc:adac5b87a52407957112fc64c039e737e inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Body and <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Terse constructor.  <a href="#adac5b87a52407957112fc64c039e737e"></a><br/></td></tr>
<tr class="memitem:a5fc6ccd124d551aeccaa5fbd7531ccac inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5fc6ccd124d551aeccaa5fbd7531ccac"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5fc6ccd124d551aeccaa5fbd7531ccac">~Generic6DofConstraint</a> ()</td></tr>
<tr class="memdesc:a5fc6ccd124d551aeccaa5fbd7531ccac inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a54fa075c03de60b10db1319f446692cd inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd">AxisToAngularAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a54fa075c03de60b10db1319f446692cd inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to internal Axis IDs from external or internal axis IDs.  <a href="#a54fa075c03de60b10db1319f446692cd"></a><br/></td></tr>
<tr class="memitem:acfb538363f3d2abe18e52ed9da420198 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acfb538363f3d2abe18e52ed9da420198">GetAngularLimitLower</a> () const </td></tr>
<tr class="memdesc:acfb538363f3d2abe18e52ed9da420198 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Upper limits on rotation.  <a href="#acfb538363f3d2abe18e52ed9da420198"></a><br/></td></tr>
<tr class="memitem:a3446c6ebe6da3c0093b71cde53b3edb2 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3446c6ebe6da3c0093b71cde53b3edb2">GetAngularLimitLowerOnAxis</a> (int RotationalAxis) const </td></tr>
<tr class="memdesc:a3446c6ebe6da3c0093b71cde53b3edb2 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a specific lower rotational limit.  <a href="#a3446c6ebe6da3c0093b71cde53b3edb2"></a><br/></td></tr>
<tr class="memitem:a8a8b0069fa592f441fef603fb1bba5b6 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8a8b0069fa592f441fef603fb1bba5b6">GetAngularLimitMaxForce</a> () const </td></tr>
<tr class="memdesc:a8a8b0069fa592f441fef603fb1bba5b6 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Maximimum amount of force applied to ensure limits are not surpassed.  <a href="#a8a8b0069fa592f441fef603fb1bba5b6"></a><br/></td></tr>
<tr class="memitem:a9491303c6a8e1095b95dfbd5ba38e110 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9491303c6a8e1095b95dfbd5ba38e110">GetAngularLimitMaxForceOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a9491303c6a8e1095b95dfbd5ba38e110 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Maximimum amount of force applied to ensure a limit one axis is not surpassed.  <a href="#a9491303c6a8e1095b95dfbd5ba38e110"></a><br/></td></tr>
<tr class="memitem:a19ea0a99f55ea88234afa41dfc03df18 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a19ea0a99f55ea88234afa41dfc03df18">GetAngularLimitUpper</a> () const </td></tr>
<tr class="memdesc:a19ea0a99f55ea88234afa41dfc03df18 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Power limits on rotation.  <a href="#a19ea0a99f55ea88234afa41dfc03df18"></a><br/></td></tr>
<tr class="memitem:a84bbb6ec90516f012291f15d635f79bd inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a84bbb6ec90516f012291f15d635f79bd">GetAngularLimitUpperOnAxis</a> (int RotationalAxis) const </td></tr>
<tr class="memdesc:a84bbb6ec90516f012291f15d635f79bd inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a specific upper rotational limit.  <a href="#a84bbb6ec90516f012291f15d635f79bd"></a><br/></td></tr>
<tr class="memitem:a851527118c5d52409901e44c864c7c86 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a851527118c5d52409901e44c864c7c86">GetAngularMotorDamping</a> () const </td></tr>
<tr class="memdesc:a851527118c5d52409901e44c864c7c86 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Damping for all Angular Axis.  <a href="#a851527118c5d52409901e44c864c7c86"></a><br/></td></tr>
<tr class="memitem:a48c9cd77f10bd1a2c29e8ac35b8ba4aa inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a48c9cd77f10bd1a2c29e8ac35b8ba4aa">GetAngularMotorDampingOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a48c9cd77f10bd1a2c29e8ac35b8ba4aa inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Damping for one given Axis.  <a href="#a48c9cd77f10bd1a2c29e8ac35b8ba4aa"></a><br/></td></tr>
<tr class="memitem:ac2840489b04d4430c3b14d671d9960b1 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac2840489b04d4430c3b14d671d9960b1">GetAngularMotorEnabled</a> () const </td></tr>
<tr class="memdesc:ac2840489b04d4430c3b14d671d9960b1 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with 3 zero or nonzero values that store whether or not a given rotational motor is enable.  <a href="#ac2840489b04d4430c3b14d671d9960b1"></a><br/></td></tr>
<tr class="memitem:ae94ce87a4d2625b57bca4b4dbc694e0d inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae94ce87a4d2625b57bca4b4dbc694e0d">GetAngularMotorEnabledOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:ae94ce87a4d2625b57bca4b4dbc694e0d inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is a specific rotational motor enabled.  <a href="#ae94ce87a4d2625b57bca4b4dbc694e0d"></a><br/></td></tr>
<tr class="memitem:abbb583d3c94eb2a50bd6dbb32087c611 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abbb583d3c94eb2a50bd6dbb32087c611">GetAngularMotorMaxForce</a> () const </td></tr>
<tr class="memdesc:abbb583d3c94eb2a50bd6dbb32087c611 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Max Motor Force for each Axis.  <a href="#abbb583d3c94eb2a50bd6dbb32087c611"></a><br/></td></tr>
<tr class="memitem:a2ce9593e4fe488f4fb7f8c6691704c2e inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a2ce9593e4fe488f4fb7f8c6691704c2e">GetAngularMotorMaxForceOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a2ce9593e4fe488f4fb7f8c6691704c2e inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Max motor Force on a certain Axis.  <a href="#a2ce9593e4fe488f4fb7f8c6691704c2e"></a><br/></td></tr>
<tr class="memitem:afaa0942b75357aaea33d9fa5b3610832 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afaa0942b75357aaea33d9fa5b3610832">GetAngularMotorRestitution</a> () const </td></tr>
<tr class="memdesc:afaa0942b75357aaea33d9fa5b3610832 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Restistution values for all three axis.  <a href="#afaa0942b75357aaea33d9fa5b3610832"></a><br/></td></tr>
<tr class="memitem:a249769d4b7d5425c5879eacd27d3d0b3 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a249769d4b7d5425c5879eacd27d3d0b3">GetAngularMotorRestitutionOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a249769d4b7d5425c5879eacd27d3d0b3 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Restistution/Bounciness for a single Axis.  <a href="#a249769d4b7d5425c5879eacd27d3d0b3"></a><br/></td></tr>
<tr class="memitem:afc6f3c14010918da42a38be1b67adbfd inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afc6f3c14010918da42a38be1b67adbfd">GetAngularMotorTargetVelocity</a> () const </td></tr>
<tr class="memdesc:afc6f3c14010918da42a38be1b67adbfd inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the target velocity for all angular Axis.  <a href="#afc6f3c14010918da42a38be1b67adbfd"></a><br/></td></tr>
<tr class="memitem:ae3f1c33c967d3201e99c083462ad0172 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3f1c33c967d3201e99c083462ad0172">GetAngularMotorTargetVelocityOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:ae3f1c33c967d3201e99c083462ad0172 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Target Velocity for one axis.  <a href="#ae3f1c33c967d3201e99c083462ad0172"></a><br/></td></tr>
<tr class="memitem:a8d1b907693628d78c9890c439848d895 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual btTypedConstraint *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d1b907693628d78c9890c439848d895">GetConstraintBase</a> () const </td></tr>
<tr class="memdesc:a8d1b907693628d78c9890c439848d895 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Bullet constraint that this class encapsulates.   <a href="#a8d1b907693628d78c9890c439848d895"></a><br/></td></tr>
<tr class="memitem:a2b73517132beccbfddc928d32366f03b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a2b73517132beccbfddc928d32366f03b">GetLinearLimitDamping</a> () const </td></tr>
<tr class="memdesc:a2b73517132beccbfddc928d32366f03b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Damping of the linear Limits.  <a href="#a2b73517132beccbfddc928d32366f03b"></a><br/></td></tr>
<tr class="memitem:a4acce0aa9a8125ee7abd3c45d3f7853a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4acce0aa9a8125ee7abd3c45d3f7853a">GetLinearLimitLower</a> () const </td></tr>
<tr class="memdesc:a4acce0aa9a8125ee7abd3c45d3f7853a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Upper limits on translation.  <a href="#a4acce0aa9a8125ee7abd3c45d3f7853a"></a><br/></td></tr>
<tr class="memitem:a5ef704138ca163b530345ab201011b37 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5ef704138ca163b530345ab201011b37">GetLinearLimitRestitution</a> () const </td></tr>
<tr class="memdesc:a5ef704138ca163b530345ab201011b37 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Restitution of the linear Limits.  <a href="#a5ef704138ca163b530345ab201011b37"></a><br/></td></tr>
<tr class="memitem:a8d042e7a405f31571933b077eb0a79af inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d042e7a405f31571933b077eb0a79af">GetLinearLimitSoftness</a> () const </td></tr>
<tr class="memdesc:a8d042e7a405f31571933b077eb0a79af inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Softness of the linear Limits.  <a href="#a8d042e7a405f31571933b077eb0a79af"></a><br/></td></tr>
<tr class="memitem:ac0469abe3a0d7563018843e491db2ab4 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac0469abe3a0d7563018843e491db2ab4">GetLinearLimitUpper</a> () const </td></tr>
<tr class="memdesc:ac0469abe3a0d7563018843e491db2ab4 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the lower limits on translation.  <a href="#ac0469abe3a0d7563018843e491db2ab4"></a><br/></td></tr>
<tr class="memitem:ab679ae6fdb80c6614990584ec026423c inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab679ae6fdb80c6614990584ec026423c">GetLinearMotorEnabled</a> () const </td></tr>
<tr class="memdesc:ab679ae6fdb80c6614990584ec026423c inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with 3 zero or nonzero values that store whether or not a given rotational motor is enable.  <a href="#ab679ae6fdb80c6614990584ec026423c"></a><br/></td></tr>
<tr class="memitem:a8024f330543e0a37661da901bd839a4a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8024f330543e0a37661da901bd839a4a">GetLinearMotorEnabledOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a8024f330543e0a37661da901bd839a4a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is a specific Linear motor enabled.  <a href="#a8024f330543e0a37661da901bd839a4a"></a><br/></td></tr>
<tr class="memitem:a30fb048a87486dc14db8da5b4c6515ac inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a30fb048a87486dc14db8da5b4c6515ac">GetLinearMotorMaxForce</a> () const </td></tr>
<tr class="memdesc:a30fb048a87486dc14db8da5b4c6515ac inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Max Motor Force for each Axis.  <a href="#a30fb048a87486dc14db8da5b4c6515ac"></a><br/></td></tr>
<tr class="memitem:a7c569b317d04d05f2757bfdd6454891a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7c569b317d04d05f2757bfdd6454891a">GetLinearMotorMaxForceOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a7c569b317d04d05f2757bfdd6454891a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Max motor Force on a certain Axis.  <a href="#a7c569b317d04d05f2757bfdd6454891a"></a><br/></td></tr>
<tr class="memitem:ade4e933812a07188dff801a24f2dc786 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ade4e933812a07188dff801a24f2dc786">GetLinearMotorTargetVelocity</a> () const </td></tr>
<tr class="memdesc:ade4e933812a07188dff801a24f2dc786 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the target velocity for all Linear Axis.  <a href="#ade4e933812a07188dff801a24f2dc786"></a><br/></td></tr>
<tr class="memitem:a4580540f132decbae944fc32c4bdd007 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4580540f132decbae944fc32c4bdd007">GetLinearMotorTargetVelocityOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:a4580540f132decbae944fc32c4bdd007 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Target Velocity for one axis.  <a href="#a4580540f132decbae944fc32c4bdd007"></a><br/></td></tr>
<tr class="memitem:a127591cd9f7898facdcf403fa2f660fa inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a127591cd9f7898facdcf403fa2f660fa">GetPivotALocation</a> () const </td></tr>
<tr class="memdesc:a127591cd9f7898facdcf403fa2f660fa inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the location of the pivot relative to ActorA's Center of gravity.   <a href="#a127591cd9f7898facdcf403fa2f660fa"></a><br/></td></tr>
<tr class="memitem:ab8557563b325346379511b1a384bcccb inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab8557563b325346379511b1a384bcccb">GetPivotARotation</a> () const </td></tr>
<tr class="memdesc:ab8557563b325346379511b1a384bcccb inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the relative rotation for ActorA.   <a href="#ab8557563b325346379511b1a384bcccb"></a><br/></td></tr>
<tr class="memitem:ad04534ca4d20de5d172098124c4d789a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad04534ca4d20de5d172098124c4d789a">GetPivotATransform</a> () const </td></tr>
<tr class="memdesc:ad04534ca4d20de5d172098124c4d789a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current Rotation and Location of Actor A.   <a href="#ad04534ca4d20de5d172098124c4d789a"></a><br/></td></tr>
<tr class="memitem:a88d6ced2c3e65b639cb717765a74f679 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a88d6ced2c3e65b639cb717765a74f679">GetPivotBLocation</a> () const </td></tr>
<tr class="memdesc:a88d6ced2c3e65b639cb717765a74f679 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the location of the pivot relative to ActorB's Center of gravity.   <a href="#a88d6ced2c3e65b639cb717765a74f679"></a><br/></td></tr>
<tr class="memitem:a15986de2090717b8969ef250ee431c30 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a15986de2090717b8969ef250ee431c30">GetPivotBRotation</a> () const </td></tr>
<tr class="memdesc:a15986de2090717b8969ef250ee431c30 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the relative rotation for ActorB.   <a href="#a15986de2090717b8969ef250ee431c30"></a><br/></td></tr>
<tr class="memitem:adde0ef8437f9a1f63bd72d99e48197f0 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adde0ef8437f9a1f63bd72d99e48197f0">GetPivotBTransform</a> () const </td></tr>
<tr class="memdesc:adde0ef8437f9a1f63bd72d99e48197f0 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current Rotation and Location of Actor B.   <a href="#adde0ef8437f9a1f63bd72d99e48197f0"></a><br/></td></tr>
<tr class="memitem:abdcc8ef2ee7d94ea6f805f4c5ffda3c1 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abdcc8ef2ee7d94ea6f805f4c5ffda3c1">GetUseFrameOffset</a> () const </td></tr>
<tr class="memdesc:abdcc8ef2ee7d94ea6f805f4c5ffda3c1 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the stored value from the physics subsystem(bullet)  <a href="#abdcc8ef2ee7d94ea6f805f4c5ffda3c1"></a><br/></td></tr>
<tr class="memitem:ad57f48d72a7a14b30b191a138258190b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad57f48d72a7a14b30b191a138258190b">HasParamBeenSet</a> (<a class="el" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1">ConstraintParam</a> Param, int Axis) const </td></tr>
<tr class="memdesc:ad57f48d72a7a14b30b191a138258190b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#ad57f48d72a7a14b30b191a138258190b"></a><br/></td></tr>
<tr class="memitem:ad1922632c3afcd6c245ba5278510b817 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad1922632c3afcd6c245ba5278510b817">SetAngularLimitLower</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Limit)</td></tr>
<tr class="memdesc:ad1922632c3afcd6c245ba5278510b817 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Lower limits on rotation.  <a href="#ad1922632c3afcd6c245ba5278510b817"></a><br/></td></tr>
<tr class="memitem:aa5d4489e4b159055ff56682092a9e19a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5d4489e4b159055ff56682092a9e19a">SetAngularLimitMaxForce</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;MaxLimitForces)</td></tr>
<tr class="memdesc:aa5d4489e4b159055ff56682092a9e19a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Maximimum amount of force applied to ensure limits are not surpassed.  <a href="#aa5d4489e4b159055ff56682092a9e19a"></a><br/></td></tr>
<tr class="memitem:ad59216e06e498bbfdeb1b8b4d43d83bb inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad59216e06e498bbfdeb1b8b4d43d83bb">SetAngularLimitMaxForceOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> MaxLimitForce, int Axis)</td></tr>
<tr class="memdesc:ad59216e06e498bbfdeb1b8b4d43d83bb inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Maximimum amount of force applied to ensure a limit on one axis is not surpassed.  <a href="#ad59216e06e498bbfdeb1b8b4d43d83bb"></a><br/></td></tr>
<tr class="memitem:aa9fefacf011dadbdc4bee127343ff8a3 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa9fefacf011dadbdc4bee127343ff8a3">SetAngularLimitUpper</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Limit)</td></tr>
<tr class="memdesc:aa9fefacf011dadbdc4bee127343ff8a3 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Upper limits on rotation.  <a href="#aa9fefacf011dadbdc4bee127343ff8a3"></a><br/></td></tr>
<tr class="memitem:a0e9a4a01dc05a6d9247b564c038af3ab inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0e9a4a01dc05a6d9247b564c038af3ab">SetAngularMotorDamping</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Dampings)</td></tr>
<tr class="memdesc:a0e9a4a01dc05a6d9247b564c038af3ab inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Angular Motor Damping for each Angular Axis.  <a href="#a0e9a4a01dc05a6d9247b564c038af3ab"></a><br/></td></tr>
<tr class="memitem:a63b5fbfc844f61f9db808fbfba94125e inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a63b5fbfc844f61f9db808fbfba94125e">SetAngularMotorDampingOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Damping, int Axis)</td></tr>
<tr class="memdesc:a63b5fbfc844f61f9db808fbfba94125e inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set the Damping.  <a href="#a63b5fbfc844f61f9db808fbfba94125e"></a><br/></td></tr>
<tr class="memitem:a806efb7a3812be28d71071654ca8284f inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a806efb7a3812be28d71071654ca8284f">SetAngularMotorEnabled</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Enableds)</td></tr>
<tr class="memdesc:a806efb7a3812be28d71071654ca8284f inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set whether or not the motor is enabled for all Axis Simultaneously.  <a href="#a806efb7a3812be28d71071654ca8284f"></a><br/></td></tr>
<tr class="memitem:a316b0f44ada93d89e4ad334d75ebe5ad inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a316b0f44ada93d89e4ad334d75ebe5ad">SetAngularMotorEnabledOnAxis</a> (bool Enabled, int Axis)</td></tr>
<tr class="memdesc:a316b0f44ada93d89e4ad334d75ebe5ad inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set whether or not the motor is enabled.  <a href="#a316b0f44ada93d89e4ad334d75ebe5ad"></a><br/></td></tr>
<tr class="memitem:ae7ca4810feb7e6ea7929ce22198dc7ad inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae7ca4810feb7e6ea7929ce22198dc7ad">SetAngularMotorMaxForce</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Forces)</td></tr>
<tr class="memdesc:ae7ca4810feb7e6ea7929ce22198dc7ad inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Angular Motor Maximum force on all 3 rotational axis.  <a href="#ae7ca4810feb7e6ea7929ce22198dc7ad"></a><br/></td></tr>
<tr class="memitem:a35d801acd6ac8c088d9ca60f8906c3c8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a35d801acd6ac8c088d9ca60f8906c3c8">SetAngularMotorMaxForceOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Force, int Axis)</td></tr>
<tr class="memdesc:a35d801acd6ac8c088d9ca60f8906c3c8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set the Maximimum Motor Force.  <a href="#a35d801acd6ac8c088d9ca60f8906c3c8"></a><br/></td></tr>
<tr class="memitem:aea2064e350b5dff0e48b55816f8c1626 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aea2064e350b5dff0e48b55816f8c1626">SetAngularMotorRestitution</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Restistutions)</td></tr>
<tr class="memdesc:aea2064e350b5dff0e48b55816f8c1626 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Bounciness/Restition for rotation on all three Axis.  <a href="#aea2064e350b5dff0e48b55816f8c1626"></a><br/></td></tr>
<tr class="memitem:ab32f1ae77ca11d4d7ff14f5407bf6899 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab32f1ae77ca11d4d7ff14f5407bf6899">SetAngularMotorRestitutionOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Restistution, int Axis)</td></tr>
<tr class="memdesc:ab32f1ae77ca11d4d7ff14f5407bf6899 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set the Restistution/Bounciness/.  <a href="#ab32f1ae77ca11d4d7ff14f5407bf6899"></a><br/></td></tr>
<tr class="memitem:a8fb281e62779e39353bd6a5c6ac64b49 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8fb281e62779e39353bd6a5c6ac64b49">SetAngularMotorTargetVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Velocities)</td></tr>
<tr class="memdesc:a8fb281e62779e39353bd6a5c6ac64b49 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Target velocity of the motor on each anuglar axis.  <a href="#a8fb281e62779e39353bd6a5c6ac64b49"></a><br/></td></tr>
<tr class="memitem:aa6a8d128430427336c78a1b554ba1c13 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa6a8d128430427336c78a1b554ba1c13">SetAngularMotorTargetVelocityOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Velocity, int Axis)</td></tr>
<tr class="memdesc:aa6a8d128430427336c78a1b554ba1c13 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set the target velocity of the angular motor.  <a href="#aa6a8d128430427336c78a1b554ba1c13"></a><br/></td></tr>
<tr class="memitem:ab479a35146478d91fc2b0d5ec4213df1 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab479a35146478d91fc2b0d5ec4213df1">SetLimit</a> (int Axis, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Lower, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Upper)</td></tr>
<tr class="memdesc:ab479a35146478d91fc2b0d5ec4213df1 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the upper and lower limit for one axis of translation or rotation limit.  <a href="#ab479a35146478d91fc2b0d5ec4213df1"></a><br/></td></tr>
<tr class="memitem:a09050515f4de59485a4eebe11a12c995 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a09050515f4de59485a4eebe11a12c995">SetLinearLimitDamping</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Damping)</td></tr>
<tr class="memdesc:a09050515f4de59485a4eebe11a12c995 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Damping of the linear Limits.  <a href="#a09050515f4de59485a4eebe11a12c995"></a><br/></td></tr>
<tr class="memitem:acd255fc5063eb6a647d2c279dab9bb39 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acd255fc5063eb6a647d2c279dab9bb39">SetLinearLimitLower</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Limit)</td></tr>
<tr class="memdesc:acd255fc5063eb6a647d2c279dab9bb39 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Upper limits on translation.  <a href="#acd255fc5063eb6a647d2c279dab9bb39"></a><br/></td></tr>
<tr class="memitem:aa62daee324872a6ded98e5820046a38b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa62daee324872a6ded98e5820046a38b">SetLinearLimitRestitution</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Restitution)</td></tr>
<tr class="memdesc:aa62daee324872a6ded98e5820046a38b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Restitution of the linear Limits.  <a href="#aa62daee324872a6ded98e5820046a38b"></a><br/></td></tr>
<tr class="memitem:a866c2415c281c31ff47286cd8c8e65af inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a866c2415c281c31ff47286cd8c8e65af">SetLinearLimitSoftness</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Softness)</td></tr>
<tr class="memdesc:a866c2415c281c31ff47286cd8c8e65af inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Softness of the linear Limits.  <a href="#a866c2415c281c31ff47286cd8c8e65af"></a><br/></td></tr>
<tr class="memitem:aefc0ced5bd854ab69d80f2716eb4fbb8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aefc0ced5bd854ab69d80f2716eb4fbb8">SetLinearLimitUpper</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Limit)</td></tr>
<tr class="memdesc:aefc0ced5bd854ab69d80f2716eb4fbb8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the lower limits on translation.  <a href="#aefc0ced5bd854ab69d80f2716eb4fbb8"></a><br/></td></tr>
<tr class="memitem:af89fdcb702d42491ed55a247af7b5f28 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#af89fdcb702d42491ed55a247af7b5f28">SetLinearMotorEnabled</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Enableds)</td></tr>
<tr class="memdesc:af89fdcb702d42491ed55a247af7b5f28 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set whether or not the motor is enabled for all Linear Axis Simultaneously.  <a href="#af89fdcb702d42491ed55a247af7b5f28"></a><br/></td></tr>
<tr class="memitem:a22f57c862ae47ab0f35b33c128e431d8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a22f57c862ae47ab0f35b33c128e431d8">SetLinearMotorEnabledOnAxis</a> (bool Enabled, int Axis)</td></tr>
<tr class="memdesc:a22f57c862ae47ab0f35b33c128e431d8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set whether or not the motor is enabled.  <a href="#a22f57c862ae47ab0f35b33c128e431d8"></a><br/></td></tr>
<tr class="memitem:aa36d2b138e6de70e80800684e7478ba7 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa36d2b138e6de70e80800684e7478ba7">SetLinearMotorMaxForce</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Forces)</td></tr>
<tr class="memdesc:aa36d2b138e6de70e80800684e7478ba7 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Linear Motor Maximum force on all 3 translation axis.  <a href="#aa36d2b138e6de70e80800684e7478ba7"></a><br/></td></tr>
<tr class="memitem:a6fd33ab5dda9e79ba9fe4b31637c5a2b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6fd33ab5dda9e79ba9fe4b31637c5a2b">SetLinearMotorMaxForceOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Force, int Axis)</td></tr>
<tr class="memdesc:a6fd33ab5dda9e79ba9fe4b31637c5a2b inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set the Maximimum Motor Force.  <a href="#a6fd33ab5dda9e79ba9fe4b31637c5a2b"></a><br/></td></tr>
<tr class="memitem:aa271e622b7ad3ec3465041ad8daa4cd6 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa271e622b7ad3ec3465041ad8daa4cd6">SetLinearMotorTargetVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Velocities)</td></tr>
<tr class="memdesc:aa271e622b7ad3ec3465041ad8daa4cd6 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Target velocity of the motor on each anuglar axis.  <a href="#aa271e622b7ad3ec3465041ad8daa4cd6"></a><br/></td></tr>
<tr class="memitem:a3c2113f412fe85927dcd50c3e167fad6 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3c2113f412fe85927dcd50c3e167fad6">SetLinearMotorTargetVelocityOnAxis</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Velocity, int Axis)</td></tr>
<tr class="memdesc:a3c2113f412fe85927dcd50c3e167fad6 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">For one Axis, set the target velocity of the Linear motor.  <a href="#a3c2113f412fe85927dcd50c3e167fad6"></a><br/></td></tr>
<tr class="memitem:ac566670e4bc04717020a8666c0d1ae9a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac566670e4bc04717020a8666c0d1ae9a">SetPivotALocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:ac566670e4bc04717020a8666c0d1ae9a inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set The relative location of the pivot from ActorA's Center of gravity.   <a href="#ac566670e4bc04717020a8666c0d1ae9a"></a><br/></td></tr>
<tr class="memitem:af2a7c3ec4c952e9e4c8a53844d8a74bb inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#af2a7c3ec4c952e9e4c8a53844d8a74bb">SetPivotARotation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:af2a7c3ec4c952e9e4c8a53844d8a74bb inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set The relative rotation of ActorA.   <a href="#af2a7c3ec4c952e9e4c8a53844d8a74bb"></a><br/></td></tr>
<tr class="memitem:a078d762035281ed3675e3fdcf60e57d0 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a078d762035281ed3675e3fdcf60e57d0">SetPivotATransform</a> (const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TranA)</td></tr>
<tr class="memdesc:a078d762035281ed3675e3fdcf60e57d0 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Position and Rotation using a <a class="el" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>.   <a href="#a078d762035281ed3675e3fdcf60e57d0"></a><br/></td></tr>
<tr class="memitem:ac869337d2758700ba0f2aeb813224128 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac869337d2758700ba0f2aeb813224128">SetPivotBLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:ac869337d2758700ba0f2aeb813224128 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set The relative location of the pivot from ActorB's Center of gravity.   <a href="#ac869337d2758700ba0f2aeb813224128"></a><br/></td></tr>
<tr class="memitem:a5f4e10d0dd5576384519a6e960f9a624 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5f4e10d0dd5576384519a6e960f9a624">SetPivotBRotation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:a5f4e10d0dd5576384519a6e960f9a624 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set The relative rotation of ActorB.   <a href="#a5f4e10d0dd5576384519a6e960f9a624"></a><br/></td></tr>
<tr class="memitem:a9b347e7d5dae4b3f1fd46e698631f299 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9b347e7d5dae4b3f1fd46e698631f299">SetPivotBTransform</a> (const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;TranB)</td></tr>
<tr class="memdesc:a9b347e7d5dae4b3f1fd46e698631f299 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Position and Rotation using a <a class="el" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>.   <a href="#a9b347e7d5dae4b3f1fd46e698631f299"></a><br/></td></tr>
<tr class="memitem:a0b0e64bb0c78b41290d75a087f27d0e9 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0b0e64bb0c78b41290d75a087f27d0e9">SetUseFrameOffset</a> (bool FrameOffset)</td></tr>
<tr class="memdesc:a0b0e64bb0c78b41290d75a087f27d0e9 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the stored value for UseFrameOffset on this hinge in the physics subsystem(bullet)  <a href="#a0b0e64bb0c78b41290d75a087f27d0e9"></a><br/></td></tr>
<tr class="memitem:a61cf1f287de847875ccec698d5d783c0 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547">Constraint::AxisList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a61cf1f287de847875ccec698d5d783c0">ValidAngularAxis</a> () const </td></tr>
<tr class="memdesc:a61cf1f287de847875ccec698d5d783c0 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get A list sorted (low to high) of all axis that operate Angularly (that lock sliding/translation)   <a href="#a61cf1f287de847875ccec698d5d783c0"></a><br/></td></tr>
<tr class="memitem:afc69ceade4a90f5b2ac9f687a04336f3 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547">Constraint::AxisList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afc69ceade4a90f5b2ac9f687a04336f3">ValidLinearAxis</a> () const </td></tr>
<tr class="memdesc:afc69ceade4a90f5b2ac9f687a04336f3 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a sorted (low to high) list of all axis that operate linearly (that lock sliding/translation)   <a href="#afc69ceade4a90f5b2ac9f687a04336f3"></a><br/></td></tr>
<tr class="memitem:ade32e213fc805352668ea0cd5bbef1e8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#ab434efbcfdfe803d6f7cc014e7794868">Constraint::ParamList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ade32e213fc805352668ea0cd5bbef1e8">ValidParamOnAxis</a> (int Axis) const </td></tr>
<tr class="memdesc:ade32e213fc805352668ea0cd5bbef1e8 inherit pub_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a sorted (low to high) list of Parameters that are valid on this Axis.   <a href="#ade32e213fc805352668ea0cd5bbef1e8"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a37216dbef9f315c357005c7fae646340"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a37216dbef9f315c357005c7fae646340">SerializableName</a> ()</td></tr>
<tr class="memdesc:a37216dbef9f315c357005c7fae646340"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#a37216dbef9f315c357005c7fae646340"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a773aee35edea3f909bd2edc0c14d5eb1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a773aee35edea3f909bd2edc0c14d5eb1">Generic6DofSpringConstraint</a> ()</td></tr>
<tr class="memdesc:a773aee35edea3f909bd2edc0c14d5eb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inheritance Constructor.  <a href="#a773aee35edea3f909bd2edc0c14d5eb1"></a><br/></td></tr>
<tr class="memitem:a7463c06de3e30b64a025148c78b73994"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
btGeneric6DofSpringConstraint *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#a7463c06de3e30b64a025148c78b73994">Generic6dofSpring</a> () const </td></tr>
<tr class="memdesc:a7463c06de3e30b64a025148c78b73994"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a7463c06de3e30b64a025148c78b73994"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml">Mezzanine::Physics::Generic6DofConstraint</a></td></tr>
<tr class="memitem:a6dc8902c0d1d11eab3e1bbacdfa196cd inherit pro_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd">Generic6DofConstraint</a> ()</td></tr>
<tr class="memdesc:a6dc8902c0d1d11eab3e1bbacdfa196cd inherit pro_methods_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inheritance Constructor.  <a href="#a6dc8902c0d1d11eab3e1bbacdfa196cd"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Physics_1_1Generic6DofConstraint')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml">Mezzanine::Physics::Generic6DofConstraint</a></td></tr>
<tr class="memitem:ae3d7e21b9b64c1218d8ea6f9646b7089 inherit pro_attribs_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae3d7e21b9b64c1218d8ea6f9646b7089"></a>
btGeneric6DofConstraint *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089">Generic6dof</a></td></tr>
<tr class="memdesc:ae3d7e21b9b64c1218d8ea6f9646b7089 inherit pro_attribs_classMezzanine_1_1Physics_1_1Generic6DofConstraint"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bullet constraint that this class encapsulates. <br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Creates a constraint as configurable as the 6Dof constraint, but has added support for spring motion. </p>
<p>When using functions of this class that require you to specify the index, the springs are arranged like so: <br/>
</p>
<ul>
<li>0: Translation X</li>
<li>1: Translation Y</li>
<li>2: Translation Z</li>
<li>3: Rotation X</li>
<li>4: Rotation Y</li>
<li>5: Rotation Z </li>
</ul>

<p>Definition at line <a class="el" href="generic6dofspringconstraint_8h_source.xhtml#l00063">63</a> of file <a class="el" href="generic6dofspringconstraint_8h_source.xhtml">generic6dofspringconstraint.h</a>.</p>
</div><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofSpringConstraint.xhtml#ab3c5442035edfcec950a3b3456618fc3">Mezzanine::Physics::Generic6DofSpringConstraint::UsableAxis</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identify the Axis a bit easier when iterating over them is less convienent than typing an Identifier. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3a82a8731b4bf24441f765ce621809a1ea"></a>LinearX</em>&nbsp;</td><td>
<p>Translation on the X axis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3a9184cfd7954baf46c0aa34a71e361f11"></a>LinearY</em>&nbsp;</td><td>
<p>Translation on the Y axis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3a2d24c435402f52d4ea02a36da3f7b54a"></a>LinearZ</em>&nbsp;</td><td>
<p>Translation on the Z axis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3af2f5d6b84f060adcc2344a63d128cbe6"></a>AngularX</em>&nbsp;</td><td>
<p>Rotation on the X axis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3abbd85c59d627e3b336961bcf9eddded3"></a>AngularY</em>&nbsp;</td><td>
<p>Rotation on the Y axis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab3c5442035edfcec950a3b3456618fc3aef627d96121819668a3a798253d301ef"></a>AngularZ</em>&nbsp;</td><td>
<p>Rotation on the Z axis. </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="generic6dofspringconstraint_8h_source.xhtml#l00073">73</a> of file <a class="el" href="generic6dofspringconstraint_8h_source.xhtml">generic6dofspringconstraint.h</a>.</p>

</div>
</div>
<h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a773aee35edea3f909bd2edc0c14d5eb1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::Generic6DofSpringConstraint::Generic6DofSpringConstraint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inheritance Constructor. </p>
<p>This is only called by derived classes, and shouldn't be called manually. </p>

</div>
</div>
<a class="anchor" id="a843701e0fde9e9433d1e6b2837271a8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::Generic6DofSpringConstraint::Generic6DofSpringConstraint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *&#160;</td>
          <td class="paramname"><em>ActorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *&#160;</td>
          <td class="paramname"><em>ActorB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>VectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>VectorB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>QuaternionA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>QuaternionB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>UseLinearReferenceA</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Two body Verbose constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ActorA</td><td>The First body to be bound </td></tr>
    <tr><td class="paramname">ActorB</td><td>The Second body to be bound </td></tr>
    <tr><td class="paramname">VectorA</td><td>The offset from ActorA's center of gravity to get to match an offset from ActorB </td></tr>
    <tr><td class="paramname">VectorB</td><td>The offset from ActorB's center of gravity. </td></tr>
    <tr><td class="paramname">QuaternionA</td><td>Relative rotation from ActorA </td></tr>
    <tr><td class="paramname">QuaternionB</td><td>Relative rotation from ActorB </td></tr>
    <tr><td class="paramname">UseLinearReferenceA</td><td>Perform Linear math from ActorA's perspective, default to false. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9377d08d8f752700e7e42b809d33ec71"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::Generic6DofSpringConstraint::Generic6DofSpringConstraint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *&#160;</td>
          <td class="paramname"><em>ActorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *&#160;</td>
          <td class="paramname"><em>ActorB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>TransformA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>TransformB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>UseLinearReferenceA</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Two body Terse constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ActorA</td><td>The First body to be bound </td></tr>
    <tr><td class="paramname">ActorB</td><td>The Second body to be bound </td></tr>
    <tr><td class="paramname">TransformA</td><td>The offset and rotation from ActorA's center of gravity to get to match an offset from ActorB </td></tr>
    <tr><td class="paramname">TransformB</td><td>The offset and rotation from ActorB's center of gravity. </td></tr>
    <tr><td class="paramname">UseLinearReferenceA</td><td>Perform Linear math from ActorA's perspective, default to false. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab09f28a5ccc536e87aec787e438c0517"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Mezzanine::Physics::Generic6DofSpringConstraint::~Generic6DofSpringConstraint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class destructor. </p>
<p>The class destructor. </p>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a9c7bcaa5173ac62c251a7df2351319a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::CalculateSpringEquilibriumPoint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af61f4c260d4d0ddf6922fc036c943bdb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::CalculateSpringEquilibriumPoint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7463c06de3e30b64a025148c78b73994"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual btGeneric6DofSpringConstraint* Mezzanine::Physics::Generic6DofSpringConstraint::Generic6dofSpring </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

</div>
</div>
<a class="anchor" id="a0d8568270c4cab38678609221ae5206d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetCurrentSpringAngularEquilibriumPoints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a59d1dd2e74f7630359d0bfde15e632a8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetCurrentSpringEquilibriumPoint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a82fa120b375a7f4fad9584e6ec4d2f85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetCurrentSpringLinearEquilibriumPoints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a73522f15b7b017c6671b46254161689c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringAngularDamping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Damping for all Angular Axis. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Damping on the X, Y and Z Angular Axis. </dd></dl>

</div>
</div>
<a class="anchor" id="ae4af5d6d34ab6c081775b459ea506ee4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringAngularEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Enabled Status for all Angular Axis. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Enabled Status on the X, Y and Z Angular Axis. </dd></dl>

</div>
</div>
<a class="anchor" id="abafb81eaa89054d2227266c53263bbbd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringAngularStiffness </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Stiffness for all Angular Axis. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Stiffness on the X, Y and Z Angular Axis. </dd></dl>

</div>
</div>
<a class="anchor" id="ac65492616d248ea81fb036a5e18aad01"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringDamping </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve the Damping of the spring on the given axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Desired axis. This accepts 0,1,2 for Linear X,Y, and Z or 3,4,5 for Angular X,Y, and Z. This can also accept Item from this classes Usable Axis enum; </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A real with the requested value. </dd></dl>

</div>
</div>
<a class="anchor" id="af0394ba34c804f0fe352c2934e337128"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringEnabled </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve the EnabledStatus of the spring on the given axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Desired axis. This accepts 0,1,2 for Linear X,Y, and Z or 3,4,5 for Angular X,Y, and Z. This can also accept Item from this classes Usable Axis enum; </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A bool with the requested value. </dd></dl>

</div>
</div>
<a class="anchor" id="a378e7f0e6faad4568dd4750e3367909e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringLinearDamping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Damping for all Linear Axis. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Damping on the X, Y and Z Linear Axis. </dd></dl>

</div>
</div>
<a class="anchor" id="a51a0f49042bf5d20835009569127ce01"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringLinearEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Enabled Status for all Linear Axis. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Enabled Status on the X, Y and Z Linear Axis. </dd></dl>

</div>
</div>
<a class="anchor" id="a30edfa65bb70e7251f7c9ecd6ec1a8bd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringLinearStiffness </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Stiffness for all Linear Axis. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Stiffness on the X, Y and Z Linear Axis. </dd></dl>

</div>
</div>
<a class="anchor" id="a500b40ece33fc7757d56cc0d3de9599e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::Generic6DofSpringConstraint::GetSpringStiffness </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve the Stiffness of the spring on the given axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Desired axis. This accepts 0,1,2 for Linear X,Y, and Z or 3,4,5 for Angular X,Y, and Z. This can also accept Item from this classes Usable Axis enum; </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A real with the requested value; </dd></dl>

</div>
</div>
<a class="anchor" id="af9d6453c1dc6a7c46f93840f02f97b4e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> containing the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>A precondition of using this is that all of the actors intended for use must already be Deserialized. </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54766032d9b5df75f88363660d195b88">Mezzanine::Physics::Generic6DofConstraint</a>.</p>

</div>
</div>
<a class="anchor" id="a6ecb401209e7108836bf291d79b81b6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CurrentRoot</td><td>The point in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> hierarchy that all this vectorw should be appended to. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a2953230d0be5ef8c5be9e5793f2b9bbf">Mezzanine::Physics::Generic6DofConstraint</a>.</p>

</div>
</div>
<a class="anchor" id="a37216dbef9f315c357005c7fae646340"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Physics::Generic6DofSpringConstraint::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "Generic6DofConstraint" </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aaf822b5994d8c5046cbd6737ad02d85f">Mezzanine::Physics::Generic6DofConstraint</a>.</p>

</div>
</div>
<a class="anchor" id="aa0f792cc96d1277cd8f439623da4a430"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringAngularDamping </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Damps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Damping of the springs on each Angular Axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Damps</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the X, Y and Z desired damping. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac77f9c26bd73bbf6643a77ffa04cb7d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringAngularEnabled </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Enableness</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Stiffness of the springs on each Angular Axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stiffies</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the X, Y and Z enabled statuses. This is interpretted as 0 for false and any other value for true. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab841cfd68b6dd4a861fb63db925f59ee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringAngularStiffness </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Stiffies</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Stiffness of the springs on each Angular Axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stiffies</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the X, Y and Z stiffnesses. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a531021504aa58d20216093026c97cc2c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringDamping </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Damping</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the spring Damping on a given axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Desired axis. This accepts 0,1,2 for Linear X,Y, and Z or 3,4,5 for Angular X,Y, and Z. This can also accept Item from this classes Usable Axis enum; </td></tr>
    <tr><td class="paramname">Damping</td><td>A real with the new desired Damping. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae89b1703dae820501401725b42f9a496"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringEnabled </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the spring's enabled status on a given axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Desired axis. This accepts 0,1,2 for Linear X,Y, and Z or 3,4,5 for Angular X,Y, and Z. This can also accept Item from this classes Usable Axis enum; </td></tr>
    <tr><td class="paramname">Enable</td><td>A bool with the spring's enabled status. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad127d739aade42ca5930c472bfd1c957"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringLinearDamping </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Damps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Damping of the springs on each Linear Axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Damps</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the X, Y and Z desired damping. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad89e47a2cacbf496c42a834c0b596be5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringLinearEnabled </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Enableness</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Stiffness of the springs on each Linear Axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stiffies</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the X, Y and Z enabled statuses. This is interpretted as 0 for false and any other value for true. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa1fa8d22151e1a0ad713a87a994c4f4f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringLinearStiffness </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Stiffies</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Stiffness of the springs on each Linear Axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stiffies</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the X, Y and Z stiffnesses. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9b142b319cb8375c8c0240f659a71d1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::Generic6DofSpringConstraint::SetSpringStiffness </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Stiffness</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the spring stiffness on a given axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Desired axis. This accepts 0,1,2 for Linear X,Y, and Z or 3,4,5 for Angular X,Y, and Z. This can also accept Item from this classes Usable Axis enum; </td></tr>
    <tr><td class="paramname">Stiffness</td><td>A real with the new desired stiffness. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="generic6dofspringconstraint_8h_source.xhtml">generic6dofspringconstraint.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Apr 9 2013 23:03:28 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
