<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::XML::Document Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><b>XML</b></li><li class="navelem"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classMezzanine_1_1XML_1_1Document-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::XML::Document Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The root node of any xml hierarchy is a <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document Node.">Document</a> <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  
 <a href="classMezzanine_1_1XML_1_1Document.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="xmldoc_8h_source.xhtml">xmldoc.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::XML::Document:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1XML_1_1Document__inherit__graph.svg" width="192" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::XML::Document:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1XML_1_1Document__coll__graph.svg" width="192" height="214"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abd396c2c3a8cc3879125c995e266a6b1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd396c2c3a8cc3879125c995e266a6b1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#abd396c2c3a8cc3879125c995e266a6b1">Document</a> ()</td></tr>
<tr class="memdesc:abd396c2c3a8cc3879125c995e266a6b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty document with just a root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>. <br/></td></tr>
<tr class="memitem:afb796c92e89f2f38bc71aefd0e794e6d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afb796c92e89f2f38bc71aefd0e794e6d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#afb796c92e89f2f38bc71aefd0e794e6d">~Document</a> ()</td></tr>
<tr class="memdesc:afb796c92e89f2f38bc71aefd0e794e6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tears down a document, and incidentally invalidates all <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> handles to this document. <br/></td></tr>
<tr class="memitem:aac1611207ee9ef11a80bc1796020cf4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#aac1611207ee9ef11a80bc1796020cf4d">DocumentElement</a> () const </td></tr>
<tr class="memdesc:aac1611207ee9ef11a80bc1796020cf4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get document element.  <a href="#aac1611207ee9ef11a80bc1796020cf4d"></a><br/></td></tr>
<tr class="memitem:afb9abd5b77651735b1380f6bd5934837"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#afb9abd5b77651735b1380f6bd5934837">Load</a> (<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;stream, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:afb9abd5b77651735b1380f6bd5934837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load a document from a data stream.  <a href="#afb9abd5b77651735b1380f6bd5934837"></a><br/></td></tr>
<tr class="memitem:a2b7d62d9936914bdce0c289ca3d4934c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a2b7d62d9936914bdce0c289ca3d4934c">Load</a> (std::basic_istream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;stream, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:a2b7d62d9936914bdce0c289ca3d4934c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load XML from a stream.  <a href="#a2b7d62d9936914bdce0c289ca3d4934c"></a><br/></td></tr>
<tr class="memitem:ac2f012cfbf4f15d75a69fe049b5a5e18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#ac2f012cfbf4f15d75a69fe049b5a5e18">Load</a> (std::basic_istream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;stream, unsigned int options=ParseDefault)</td></tr>
<tr class="memdesc:ac2f012cfbf4f15d75a69fe049b5a5e18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load XML from a wide stream.  <a href="#ac2f012cfbf4f15d75a69fe049b5a5e18"></a><br/></td></tr>
<tr class="memitem:a160b482e13a3eedd89e377c1aca17fa7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a160b482e13a3eedd89e377c1aca17fa7"></a>
<a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Load</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *contents, unsigned int options=ParseDefault)</td></tr>
<tr class="memitem:a1d697315ccd549558e9cad7e06eb7c65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a1d697315ccd549558e9cad7e06eb7c65">LoadBuffer</a> (const void *contents, size_t size, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:a1d697315ccd549558e9cad7e06eb7c65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from buffer. Copies/converts the buffer, so it may be deleted or changed after the function returns.  <a href="#a1d697315ccd549558e9cad7e06eb7c65"></a><br/></td></tr>
<tr class="memitem:a8be0ede460622c63de94b734bc258ab6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a8be0ede460622c63de94b734bc258ab6">LoadBufferInplace</a> (void *contents, size_t size, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:a8be0ede460622c63de94b734bc258ab6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data).  <a href="#a8be0ede460622c63de94b734bc258ab6"></a><br/></td></tr>
<tr class="memitem:a30fdca5c7cacb1cceff28e03f5b27850"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a30fdca5c7cacb1cceff28e03f5b27850">LoadBufferInplaceOwn</a> (void *contents, size_t size, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:a30fdca5c7cacb1cceff28e03f5b27850"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data).  <a href="#a30fdca5c7cacb1cceff28e03f5b27850"></a><br/></td></tr>
<tr class="memitem:a89365dd7aa1cd2e25ebd72ceae8cad90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a89365dd7aa1cd2e25ebd72ceae8cad90">LoadFile</a> (const char *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7308be59266ffc1247e23d9445951325">Path</a>, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:a89365dd7aa1cd2e25ebd72ceae8cad90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from file.  <a href="#a89365dd7aa1cd2e25ebd72ceae8cad90"></a><br/></td></tr>
<tr class="memitem:a66fe56a796539d5eb3576d058072c2eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a66fe56a796539d5eb3576d058072c2eb">LoadFile</a> (const wchar_t *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7308be59266ffc1247e23d9445951325">Path</a>, unsigned int options=ParseDefault, Encoding DocumentEncoding=EncodingAuto)</td></tr>
<tr class="memdesc:a66fe56a796539d5eb3576d058072c2eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from file.  <a href="#a66fe56a796539d5eb3576d058072c2eb"></a><br/></td></tr>
<tr class="memitem:a41ef6b17e781e62cd2363a61633ed37f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a41ef6b17e781e62cd2363a61633ed37f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a41ef6b17e781e62cd2363a61633ed37f">Reset</a> ()</td></tr>
<tr class="memdesc:a41ef6b17e781e62cd2363a61633ed37f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all nodes, leaving the empty document. <br/></td></tr>
<tr class="memitem:a6123f97d91bbce265c4771f06607e0d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a6123f97d91bbce265c4771f06607e0d9">Reset</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a> &amp;proto)</td></tr>
<tr class="memdesc:a6123f97d91bbce265c4771f06607e0d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all nodes, then copies the entire contents of the specified document.  <a href="#a6123f97d91bbce265c4771f06607e0d9"></a><br/></td></tr>
<tr class="memitem:a877e44869d67a6ea736c82bb8adbc0ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a877e44869d67a6ea736c82bb8adbc0ad">Save</a> (<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;stream, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto) const </td></tr>
<tr class="memdesc:a877e44869d67a6ea736c82bb8adbc0ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save XML document to a stream.  <a href="#a877e44869d67a6ea736c82bb8adbc0ad"></a><br/></td></tr>
<tr class="memitem:aebf22bbc54f2e69bcf19c7f2f9978ade"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#aebf22bbc54f2e69bcf19c7f2f9978ade">Save</a> (<a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml">Writer</a> &amp;WriterInstance, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto) const </td></tr>
<tr class="memdesc:aebf22bbc54f2e69bcf19c7f2f9978ade"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save XML document to WriterInstance.  <a href="#aebf22bbc54f2e69bcf19c7f2f9978ade"></a><br/></td></tr>
<tr class="memitem:a884b9b13900807915db66a7caf7e42d4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a884b9b13900807915db66a7caf7e42d4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Save</b> (std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;stream, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto) const </td></tr>
<tr class="memitem:a086b685984950c88316c549acbf77ec9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a086b685984950c88316c549acbf77ec9">Save</a> (std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;stream, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault) const </td></tr>
<tr class="memdesc:a086b685984950c88316c549acbf77ec9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save XML document to a stream of wide characters.  <a href="#a086b685984950c88316c549acbf77ec9"></a><br/></td></tr>
<tr class="memitem:a42feffdea66cc25d48fbc81eff21268e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a42feffdea66cc25d48fbc81eff21268e">SaveFile</a> (const char *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7308be59266ffc1247e23d9445951325">Path</a>, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto) const </td></tr>
<tr class="memdesc:a42feffdea66cc25d48fbc81eff21268e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save XML to file.  <a href="#a42feffdea66cc25d48fbc81eff21268e"></a><br/></td></tr>
<tr class="memitem:ac2d3b702a673110ec67ec7740f8b467b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#ac2d3b702a673110ec67ec7740f8b467b">SaveFile</a> (const wchar_t *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7308be59266ffc1247e23d9445951325">Path</a>, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto) const </td></tr>
<tr class="memdesc:ac2d3b702a673110ec67ec7740f8b467b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save XML to file.  <a href="#ac2d3b702a673110ec67ec7740f8b467b"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:a7e5f944993c8ee46091f6d0bf032af79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7e5f944993c8ee46091f6d0bf032af79"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7e5f944993c8ee46091f6d0bf032af79">Node</a> ()</td></tr>
<tr class="memdesc:a7e5f944993c8ee46091f6d0bf032af79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. Constructs an empty node. <br/></td></tr>
<tr class="memitem:aa02d36ecbae471a7059e0bc931ad0ebf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa02d36ecbae471a7059e0bc931ad0ebf">Node</a> (<a class="el" href="classNodeStruct.xhtml">NodeStruct</a> *p)</td></tr>
<tr class="memdesc:aa02d36ecbae471a7059e0bc931ad0ebf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs node from internal pointer.  <a href="#aa02d36ecbae471a7059e0bc931ad0ebf"></a><br/></td></tr>
<tr class="memitem:a20ea63a61ca1a7df2e00e074178bd9a4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4">AppendAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:a20ea63a61ca1a7df2e00e074178bd9a4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it at the end of this Nodes attributes.  <a href="#a20ea63a61ca1a7df2e00e074178bd9a4"></a><br/></td></tr>
<tr class="memitem:a4e82bbe2dbf46f1a88ece73f243e030c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4e82bbe2dbf46f1a88ece73f243e030c">AppendAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:a4e82bbe2dbf46f1a88ece73f243e030c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it at the end of this Nodes attributes.  <a href="#a4e82bbe2dbf46f1a88ece73f243e030c"></a><br/></td></tr>
<tr class="memitem:a65772e1f13ac21655e3ffbe8ffe4aaa1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1">AppendChild</a> (NodeType <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7133499c84df7f8f0c0aa705f51a6d4e">Type</a>=NodeElement)</td></tr>
<tr class="memdesc:a65772e1f13ac21655e3ffbe8ffe4aaa1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one.  <a href="#a65772e1f13ac21655e3ffbe8ffe4aaa1"></a><br/></td></tr>
<tr class="memitem:a1ffb126e0c5cd05046b6e139d14db7a3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a1ffb126e0c5cd05046b6e139d14db7a3">AppendChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:a1ffb126e0c5cd05046b6e139d14db7a3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name.  <a href="#a1ffb126e0c5cd05046b6e139d14db7a3"></a><br/></td></tr>
<tr class="memitem:a27d343774e365c9fe719765e71c1eb91 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a27d343774e365c9fe719765e71c1eb91">AppendChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:a27d343774e365c9fe719765e71c1eb91 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name.  <a href="#a27d343774e365c9fe719765e71c1eb91"></a><br/></td></tr>
<tr class="memitem:a6aff8fe6b9a3458e34932c86d5b832fd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6aff8fe6b9a3458e34932c86d5b832fd">AppendCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto)</td></tr>
<tr class="memdesc:a6aff8fe6b9a3458e34932c86d5b832fd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy at the end of this Nodes attributes.  <a href="#a6aff8fe6b9a3458e34932c86d5b832fd"></a><br/></td></tr>
<tr class="memitem:a3032c72206f8a568d32bde4a3e76614a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3032c72206f8a568d32bde4a3e76614a">AppendCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto)</td></tr>
<tr class="memdesc:a3032c72206f8a568d32bde4a3e76614a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy at the end of the list of this Nodes Childrem.  <a href="#a3032c72206f8a568d32bde4a3e76614a"></a><br/></td></tr>
<tr class="memitem:a352f6ae4404113b7ebaa3e7e766d3eda inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a352f6ae4404113b7ebaa3e7e766d3eda"></a>
ObjectRange&lt; <a class="el" href="classMezzanine_1_1XML_1_1AttributeIterator.xhtml">AttributeIterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>attributes</b> () const </td></tr>
<tr class="memitem:a3c1c76bcdc016003da9ac7a6b4e8077d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a962d98a9df5534a1cd518c2a4352dfc9">attribute_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3c1c76bcdc016003da9ac7a6b4e8077d">attributes_begin</a> () const </td></tr>
<tr class="memdesc:a3c1c76bcdc016003da9ac7a6b4e8077d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> iterator that references the first <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a3c1c76bcdc016003da9ac7a6b4e8077d"></a><br/></td></tr>
<tr class="memitem:a4b1a00ac548cc3c15b4fb48e7116195f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a962d98a9df5534a1cd518c2a4352dfc9">attribute_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4b1a00ac548cc3c15b4fb48e7116195f">attributes_end</a> () const </td></tr>
<tr class="memdesc:a4b1a00ac548cc3c15b4fb48e7116195f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> iterator that references the one past the last <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a4b1a00ac548cc3c15b4fb48e7116195f"></a><br/></td></tr>
<tr class="memitem:a7c9661538dc77fb5a36247aeb52c884e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a40649b2656e085f8f8005813753f5837">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7c9661538dc77fb5a36247aeb52c884e">begin</a> () const </td></tr>
<tr class="memdesc:a7c9661538dc77fb5a36247aeb52c884e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a Child node iterator that references the first child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a7c9661538dc77fb5a36247aeb52c884e"></a><br/></td></tr>
<tr class="memitem:a545f0dd45039a6d7d64ce2fd584b14bf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a545f0dd45039a6d7d64ce2fd584b14bf">ChildValue</a> () const </td></tr>
<tr class="memdesc:a545f0dd45039a6d7d64ce2fd584b14bf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the value of this(or a child's) Nodes PCDATA child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a545f0dd45039a6d7d64ce2fd584b14bf"></a><br/></td></tr>
<tr class="memitem:af115d976eed514b9419f23b2dd3c567d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af115d976eed514b9419f23b2dd3c567d"></a>
const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>ChildValue</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memitem:a78f6bd812055ebf1a8b6b867d436547d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a78f6bd812055ebf1a8b6b867d436547d">Empty</a> () const </td></tr>
<tr class="memdesc:a78f6bd812055ebf1a8b6b867d436547d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is this storing anything at all?  <a href="#a78f6bd812055ebf1a8b6b867d436547d"></a><br/></td></tr>
<tr class="memitem:a8f05b28d8f26ab67e3dd5337db6d4dc8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a40649b2656e085f8f8005813753f5837">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a8f05b28d8f26ab67e3dd5337db6d4dc8">end</a> () const </td></tr>
<tr class="memdesc:a8f05b28d8f26ab67e3dd5337db6d4dc8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a Child node iterator that references one past the last child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a8f05b28d8f26ab67e3dd5337db6d4dc8"></a><br/></td></tr>
<tr class="memitem:a9fccd8710362bf3f7e2b25e78f860ffd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplParams" colspan="2">template&lt;typename Predicate &gt; </td></tr>
<tr class="memitem:a9fccd8710362bf3f7e2b25e78f860ffd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9fccd8710362bf3f7e2b25e78f860ffd">FindAttribute</a> (Predicate pred) const </td></tr>
<tr class="memdesc:a9fccd8710362bf3f7e2b25e78f860ffd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> using a function to check each <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> individually.  <a href="#a9fccd8710362bf3f7e2b25e78f860ffd"></a><br/></td></tr>
<tr class="memitem:a52f9857da9b3b939895c8915286fd9ad inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplParams" colspan="2">template&lt;typename Predicate &gt; </td></tr>
<tr class="memitem:a52f9857da9b3b939895c8915286fd9ad"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a52f9857da9b3b939895c8915286fd9ad">FindChild</a> (Predicate pred) const </td></tr>
<tr class="memdesc:a52f9857da9b3b939895c8915286fd9ad inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for an child ( only direct children ) <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> using a function to check each <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> individually.  <a href="#a52f9857da9b3b939895c8915286fd9ad"></a><br/></td></tr>
<tr class="memitem:a3a494ed0b7df6b44854631a2197c204a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3a494ed0b7df6b44854631a2197c204a"></a>
<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><b>FindChildbyAttribute</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrName, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrValue) const </td></tr>
<tr class="memitem:a780a47da7a082e3a52a3e9292ef0a0ca inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a780a47da7a082e3a52a3e9292ef0a0ca">FindChildbyAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrName, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrValue) const </td></tr>
<tr class="memdesc:a780a47da7a082e3a52a3e9292ef0a0ca inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> by an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> it has.  <a href="#a780a47da7a082e3a52a3e9292ef0a0ca"></a><br/></td></tr>
<tr class="memitem:a5b6592942502b7cc6b5eb19baef24b85 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplParams" colspan="2">template&lt;typename Predicate &gt; </td></tr>
<tr class="memitem:a5b6592942502b7cc6b5eb19baef24b85"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a5b6592942502b7cc6b5eb19baef24b85">FindNode</a> (Predicate pred) const </td></tr>
<tr class="memdesc:a5b6592942502b7cc6b5eb19baef24b85 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for any <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> descended from this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> using a function to check each <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> individually.  <a href="#a5b6592942502b7cc6b5eb19baef24b85"></a><br/></td></tr>
<tr class="memitem:aa33661cf0b7ac69d67ed80ee74ff387c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNodeSet.xhtml">XPathNodeSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa33661cf0b7ac69d67ed80ee74ff387c">FindNodes</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *query, <a class="el" href="classMezzanine_1_1XML_1_1XPathVariableSet.xhtml">XPathVariableSet</a> *variables=0) const </td></tr>
<tr class="memdesc:aa33661cf0b7ac69d67ed80ee74ff387c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a group of nodes by evaluating an XPath query.  <a href="#aa33661cf0b7ac69d67ed80ee74ff387c"></a><br/></td></tr>
<tr class="memitem:a46852831dfcf1e5d1e51dd2bb89fea29 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNodeSet.xhtml">XPathNodeSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a46852831dfcf1e5d1e51dd2bb89fea29">FindNodes</a> (const <a class="el" href="classMezzanine_1_1XML_1_1XPathQuery.xhtml">XPathQuery</a> &amp;query) const </td></tr>
<tr class="memdesc:a46852831dfcf1e5d1e51dd2bb89fea29 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a group of nodes by evaluating an XPath query.  <a href="#a46852831dfcf1e5d1e51dd2bb89fea29"></a><br/></td></tr>
<tr class="memitem:a1c6c47f340158d638354e181218da8cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1c6c47f340158d638354e181218da8cc"></a>
<a class="el" href="classMezzanine_1_1XML_1_1XPathNode.xhtml">XPathNode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>FindSingleNode</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *query, <a class="el" href="classMezzanine_1_1XML_1_1XPathVariableSet.xhtml">XPathVariableSet</a> *variables=0) const </td></tr>
<tr class="memitem:a997483a7ca98f591574b62f945c1ad7e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNode.xhtml">XPathNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a997483a7ca98f591574b62f945c1ad7e">FindSingleNode</a> (const <a class="el" href="classMezzanine_1_1XML_1_1XPathQuery.xhtml">XPathQuery</a> &amp;query) const </td></tr>
<tr class="memdesc:a997483a7ca98f591574b62f945c1ad7e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select single node by evaluating an XPath query. Returns first node from the resulting node set.  <a href="#a997483a7ca98f591574b62f945c1ad7e"></a><br/></td></tr>
<tr class="memitem:a488c7619046a34cffc3d8cfd388f83a5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a488c7619046a34cffc3d8cfd388f83a5">FirstElementByPath</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7308be59266ffc1247e23d9445951325">Path</a>, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> delimiter= '/') const </td></tr>
<tr class="memdesc:a488c7619046a34cffc3d8cfd388f83a5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for a node by Path consisting of node names and . or .. elements.  <a href="#a488c7619046a34cffc3d8cfd388f83a5"></a><br/></td></tr>
<tr class="memitem:aba30181cac9d568594b3d82c472b481c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aba30181cac9d568594b3d82c472b481c">GetAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memdesc:aba30181cac9d568594b3d82c472b481c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> with a given name.  <a href="#aba30181cac9d568594b3d82c472b481c"></a><br/></td></tr>
<tr class="memitem:a9c5b7b5376c9444d3d1d0bfeb47e4dc4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4">GetChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memdesc:a9c5b7b5376c9444d3d1d0bfeb47e4dc4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get a child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> with a given name.  <a href="#a9c5b7b5376c9444d3d1d0bfeb47e4dc4"></a><br/></td></tr>
<tr class="memitem:a4719f451256da4ee457fa4cf696aba3c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4719f451256da4ee457fa4cf696aba3c">GetChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memdesc:a4719f451256da4ee457fa4cf696aba3c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get a child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> with a given name.  <a href="#a4719f451256da4ee457fa4cf696aba3c"></a><br/></td></tr>
<tr class="memitem:a410940d2f40341ccba4a52ec6e4bf2f3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a410940d2f40341ccba4a52ec6e4bf2f3"></a>
ObjectRange&lt; <a class="el" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml">NodeIterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetChildren</b> () const </td></tr>
<tr class="memitem:ae1e1df2857e4c50d62dd0c6d77aafd1f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae1e1df2857e4c50d62dd0c6d77aafd1f"></a>
ObjectRange&lt; <a class="el" href="classMezzanine_1_1XML_1_1NamedNode__iterator.xhtml">NamedNode_iterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetChildren</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memitem:abdb37ddb0f4596a774e02bfd0d220560 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#abdb37ddb0f4596a774e02bfd0d220560">GetFirstAttribute</a> () const </td></tr>
<tr class="memdesc:abdb37ddb0f4596a774e02bfd0d220560 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the First <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> in this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#abdb37ddb0f4596a774e02bfd0d220560"></a><br/></td></tr>
<tr class="memitem:ad286510b4d8d77b8632a74b92841fb08 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ad286510b4d8d77b8632a74b92841fb08">GetFirstChild</a> () const </td></tr>
<tr class="memdesc:ad286510b4d8d77b8632a74b92841fb08 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#ad286510b4d8d77b8632a74b92841fb08"></a><br/></td></tr>
<tr class="memitem:a52985e5cfaf8e36847eaf97d58bd6692 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a52985e5cfaf8e36847eaf97d58bd6692">GetLastAttribute</a> () const </td></tr>
<tr class="memdesc:a52985e5cfaf8e36847eaf97d58bd6692 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Last <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> in this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a52985e5cfaf8e36847eaf97d58bd6692"></a><br/></td></tr>
<tr class="memitem:a2024352ced4b6bd9176611089d9c85d0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a2024352ced4b6bd9176611089d9c85d0">GetLastChild</a> () const </td></tr>
<tr class="memdesc:a2024352ced4b6bd9176611089d9c85d0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the last child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a2024352ced4b6bd9176611089d9c85d0"></a><br/></td></tr>
<tr class="memitem:a6832dd76f958c7bdba1715ae499dfb40 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6832dd76f958c7bdba1715ae499dfb40">GetNextSibling</a> () const </td></tr>
<tr class="memdesc:a6832dd76f958c7bdba1715ae499dfb40 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the next sibling of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a6832dd76f958c7bdba1715ae499dfb40"></a><br/></td></tr>
<tr class="memitem:afe5426c7ead3ce5fbb68cd2ae6a0abe1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afe5426c7ead3ce5fbb68cd2ae6a0abe1"></a>
<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetNextSibling</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memitem:a94a841fb28f2e920208cdac05a6513a6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a94a841fb28f2e920208cdac05a6513a6">GetParent</a> () const </td></tr>
<tr class="memdesc:a94a841fb28f2e920208cdac05a6513a6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the parent of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a94a841fb28f2e920208cdac05a6513a6"></a><br/></td></tr>
<tr class="memitem:afce3d7436e0da9b53e5b3168035e3daa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afce3d7436e0da9b53e5b3168035e3daa"></a>
<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPreviousSibling</b> () const </td></tr>
<tr class="memitem:a0ddc523e67eafb78bd46abe06df05bbe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0ddc523e67eafb78bd46abe06df05bbe"></a>
<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPreviousSibling</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>) const </td></tr>
<tr class="memitem:aaf34249433ee415f5ad1cd7141a31c65 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aaf34249433ee415f5ad1cd7141a31c65">GetRoot</a> () const </td></tr>
<tr class="memdesc:aaf34249433ee415f5ad1cd7141a31c65 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, or the most base <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> containing this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#aaf34249433ee415f5ad1cd7141a31c65"></a><br/></td></tr>
<tr class="memitem:a6ecd9dfcace0589ac7e29d17225f9623 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6ecd9dfcace0589ac7e29d17225f9623">HashValue</a> () const </td></tr>
<tr class="memdesc:a6ecd9dfcace0589ac7e29d17225f9623 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get hash Value (unique for handles to the same object)  <a href="#a6ecd9dfcace0589ac7e29d17225f9623"></a><br/></td></tr>
<tr class="memitem:a3fbd1470826fdc2d451fb9a96d426be9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3fbd1470826fdc2d451fb9a96d426be9">InsertAttributeAfter</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:a3fbd1470826fdc2d451fb9a96d426be9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it into the list of this Nodes attributes.  <a href="#a3fbd1470826fdc2d451fb9a96d426be9"></a><br/></td></tr>
<tr class="memitem:a1d3fa5e114f5590f94fe48fb8a14d6e5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a1d3fa5e114f5590f94fe48fb8a14d6e5">InsertAttributeBefore</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:a1d3fa5e114f5590f94fe48fb8a14d6e5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it into the list of this Nodes attributes.  <a href="#a1d3fa5e114f5590f94fe48fb8a14d6e5"></a><br/></td></tr>
<tr class="memitem:a09592f5157a294e00f2f3032cb1f53f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a09592f5157a294e00f2f3032cb1f53f6">InsertChildAfter</a> (NodeType <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7133499c84df7f8f0c0aa705f51a6d4e">Type</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a09592f5157a294e00f2f3032cb1f53f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one, and puts at the middle of the Child Nodes.  <a href="#a09592f5157a294e00f2f3032cb1f53f6"></a><br/></td></tr>
<tr class="memitem:abcdbb99c3840311035690489db1ed991 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#abcdbb99c3840311035690489db1ed991">InsertChildAfter</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:abcdbb99c3840311035690489db1ed991 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the middle of the children.  <a href="#abcdbb99c3840311035690489db1ed991"></a><br/></td></tr>
<tr class="memitem:a3d880d9761fa75e9582f22355693a1f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3d880d9761fa75e9582f22355693a1f6">InsertChildBefore</a> (NodeType <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7133499c84df7f8f0c0aa705f51a6d4e">Type</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a3d880d9761fa75e9582f22355693a1f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one, and puts at the middle of the Child Nodes.  <a href="#a3d880d9761fa75e9582f22355693a1f6"></a><br/></td></tr>
<tr class="memitem:a586aebf39d7be7fe6ea7cc5507d80da1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a586aebf39d7be7fe6ea7cc5507d80da1">InsertChildBefore</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a586aebf39d7be7fe6ea7cc5507d80da1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the middle of the children.  <a href="#a586aebf39d7be7fe6ea7cc5507d80da1"></a><br/></td></tr>
<tr class="memitem:a8730a6fa8ef0368db283aac132822626 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a8730a6fa8ef0368db283aac132822626">InsertCopyAfter</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:a8730a6fa8ef0368db283aac132822626 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy into the list of this Nodes attributes.  <a href="#a8730a6fa8ef0368db283aac132822626"></a><br/></td></tr>
<tr class="memitem:a7fe228b595fbbefcaee39809a617ff77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7fe228b595fbbefcaee39809a617ff77">InsertCopyAfter</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a7fe228b595fbbefcaee39809a617ff77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy in the middle the list of this Nodes Childrem.  <a href="#a7fe228b595fbbefcaee39809a617ff77"></a><br/></td></tr>
<tr class="memitem:a6bb7ad3a48190df3b3f18314ad841159 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6bb7ad3a48190df3b3f18314ad841159">InsertCopyBefore</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:a6bb7ad3a48190df3b3f18314ad841159 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy into the list of this Nodes attributes.  <a href="#a6bb7ad3a48190df3b3f18314ad841159"></a><br/></td></tr>
<tr class="memitem:a71aae61a20841d1b673481e3a1e269b0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a71aae61a20841d1b673481e3a1e269b0">InsertCopyBefore</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a71aae61a20841d1b673481e3a1e269b0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy in the middle the list of this Nodes Childrem.  <a href="#a71aae61a20841d1b673481e3a1e269b0"></a><br/></td></tr>
<tr class="memitem:a2273021b94c06f1b815158582ef15f48 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classNodeStruct.xhtml">NodeStruct</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a2273021b94c06f1b815158582ef15f48">InternalObject</a> () const </td></tr>
<tr class="memdesc:a2273021b94c06f1b815158582ef15f48 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get internal pointer.  <a href="#a2273021b94c06f1b815158582ef15f48"></a><br/></td></tr>
<tr class="memitem:add2290b8f407079a69867ce063b49ee4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a> () const </td></tr>
<tr class="memdesc:add2290b8f407079a69867ce063b49ee4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>.  <a href="#add2290b8f407079a69867ce063b49ee4"></a><br/></td></tr>
<tr class="memitem:a4803ee81478d67b699aded5267cda36a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4803ee81478d67b699aded5267cda36a">OffSetDebug</a> () const </td></tr>
<tr class="memdesc:a4803ee81478d67b699aded5267cda36a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get node Offset in parsed file/string (in char_t units) for debugging purposes.  <a href="#a4803ee81478d67b699aded5267cda36a"></a><br/></td></tr>
<tr class="memitem:a759c8f45b96f77246fddf014074ba0fe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a759c8f45b96f77246fddf014074ba0fe">operator unspecified_bool_type</a> () const </td></tr>
<tr class="memdesc:a759c8f45b96f77246fddf014074ba0fe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to convert this to a boolean value in a safe way.  <a href="#a759c8f45b96f77246fddf014074ba0fe"></a><br/></td></tr>
<tr class="memitem:a071809ada4e9e3c0553cd4bfe93a02b6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a071809ada4e9e3c0553cd4bfe93a02b6">operator!</a> () const </td></tr>
<tr class="memdesc:a071809ada4e9e3c0553cd4bfe93a02b6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to convert this node the opposite of it's normal boolean value.  <a href="#a071809ada4e9e3c0553cd4bfe93a02b6"></a><br/></td></tr>
<tr class="memitem:aa7a6269a7dd7547cb311fed1ccb0f479 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa7a6269a7dd7547cb311fed1ccb0f479">operator!=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:aa7a6269a7dd7547cb311fed1ccb0f479 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check inequality.  <a href="#aa7a6269a7dd7547cb311fed1ccb0f479"></a><br/></td></tr>
<tr class="memitem:a22ba50349f1e6a1ca89dddcff160cfa8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a22ba50349f1e6a1ca89dddcff160cfa8">operator&lt;</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a22ba50349f1e6a1ca89dddcff160cfa8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for inequality.  <a href="#a22ba50349f1e6a1ca89dddcff160cfa8"></a><br/></td></tr>
<tr class="memitem:a89fb0e34466a687a0a7e7f8cbf32e9ee inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a89fb0e34466a687a0a7e7f8cbf32e9ee">operator&lt;=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a89fb0e34466a687a0a7e7f8cbf32e9ee inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for inequality.  <a href="#a89fb0e34466a687a0a7e7f8cbf32e9ee"></a><br/></td></tr>
<tr class="memitem:aec6bbccd2719687a83e1b5ed64fefd62 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aec6bbccd2719687a83e1b5ed64fefd62">operator==</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:aec6bbccd2719687a83e1b5ed64fefd62 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check equality.  <a href="#aec6bbccd2719687a83e1b5ed64fefd62"></a><br/></td></tr>
<tr class="memitem:a4f86ddb86daab1e2beebcaa319fb9422 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4f86ddb86daab1e2beebcaa319fb9422">operator&gt;</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a4f86ddb86daab1e2beebcaa319fb9422 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for inequality.  <a href="#a4f86ddb86daab1e2beebcaa319fb9422"></a><br/></td></tr>
<tr class="memitem:afc831ac8cfc82f04d50dfb0d0c147860 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afc831ac8cfc82f04d50dfb0d0c147860">operator&gt;=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:afc831ac8cfc82f04d50dfb0d0c147860 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for inequality.  <a href="#afc831ac8cfc82f04d50dfb0d0c147860"></a><br/></td></tr>
<tr class="memitem:a7308be59266ffc1247e23d9445951325 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7308be59266ffc1247e23d9445951325">Path</a> (<a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> delimiter= '/') const </td></tr>
<tr class="memdesc:a7308be59266ffc1247e23d9445951325 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the absolute path to this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a7308be59266ffc1247e23d9445951325"></a><br/></td></tr>
<tr class="memitem:ab325f1f76b8e7c046ea89e026bc7f7fb inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ab325f1f76b8e7c046ea89e026bc7f7fb">PrependAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:ab325f1f76b8e7c046ea89e026bc7f7fb inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it at the begining of this Nodes attributes.  <a href="#ab325f1f76b8e7c046ea89e026bc7f7fb"></a><br/></td></tr>
<tr class="memitem:af609002f7a507f69a4b74bd237619beb inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#af609002f7a507f69a4b74bd237619beb">PrependChild</a> (NodeType <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7133499c84df7f8f0c0aa705f51a6d4e">Type</a>=NodeElement)</td></tr>
<tr class="memdesc:af609002f7a507f69a4b74bd237619beb inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one, and puts at the beginning of the Child Nodes.  <a href="#af609002f7a507f69a4b74bd237619beb"></a><br/></td></tr>
<tr class="memitem:a6f2e7ebeea0e5c4b9cbab38dbdc1df79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6f2e7ebeea0e5c4b9cbab38dbdc1df79">PrependChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:a6f2e7ebeea0e5c4b9cbab38dbdc1df79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the beginning of the children.  <a href="#a6f2e7ebeea0e5c4b9cbab38dbdc1df79"></a><br/></td></tr>
<tr class="memitem:ab4d1112151cf7d7e8397b8ad2b3dd2c5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ab4d1112151cf7d7e8397b8ad2b3dd2c5">PrependChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:ab4d1112151cf7d7e8397b8ad2b3dd2c5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the beginning of the children.  <a href="#ab4d1112151cf7d7e8397b8ad2b3dd2c5"></a><br/></td></tr>
<tr class="memitem:a3204a256181933deef123dcac4a549ea inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3204a256181933deef123dcac4a549ea">PrependCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto)</td></tr>
<tr class="memdesc:a3204a256181933deef123dcac4a549ea inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy at the beginning of this Nodes attributes.  <a href="#a3204a256181933deef123dcac4a549ea"></a><br/></td></tr>
<tr class="memitem:a742ce843b690ac6c98a7bc8801f0d1e9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a742ce843b690ac6c98a7bc8801f0d1e9">PrependCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto)</td></tr>
<tr class="memdesc:a742ce843b690ac6c98a7bc8801f0d1e9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy at the start of the list of this Nodes Childrem.  <a href="#a742ce843b690ac6c98a7bc8801f0d1e9"></a><br/></td></tr>
<tr class="memitem:aef52a586c2e21dce71397f3400c61b72 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aef52a586c2e21dce71397f3400c61b72">Print</a> (<a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml">Writer</a> &amp;WriterInstance, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto, unsigned int Depth=0) const </td></tr>
<tr class="memdesc:aef52a586c2e21dce71397f3400c61b72 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output the XML document using a <a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml" title="Interface for node printing (see Node::Print)">Writer</a>.  <a href="#aef52a586c2e21dce71397f3400c61b72"></a><br/></td></tr>
<tr class="memitem:a2dfaf561bbda108c99242237424d573d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a2dfaf561bbda108c99242237424d573d">Print</a> (std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;os, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, Encoding DocumentEncoding=EncodingAuto, unsigned int Depth=0) const </td></tr>
<tr class="memdesc:a2dfaf561bbda108c99242237424d573d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output the XML document using a Output Stream.  <a href="#a2dfaf561bbda108c99242237424d573d"></a><br/></td></tr>
<tr class="memitem:aefc8888bd63decfb4cb571823367fe7a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aefc8888bd63decfb4cb571823367fe7a">Print</a> (std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;os, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=FormatDefault, unsigned int Depth=0) const </td></tr>
<tr class="memdesc:aefc8888bd63decfb4cb571823367fe7a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output the XML document using a Output Stream.  <a href="#aefc8888bd63decfb4cb571823367fe7a"></a><br/></td></tr>
<tr class="memitem:aafa6f5c14a5cef75736988d2bdeab698 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aafa6f5c14a5cef75736988d2bdeab698">RemoveAttribute</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;a)</td></tr>
<tr class="memdesc:aafa6f5c14a5cef75736988d2bdeab698 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove specified <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a>.  <a href="#aafa6f5c14a5cef75736988d2bdeab698"></a><br/></td></tr>
<tr class="memitem:a93bd84e1ad8a030be1484a08a777289e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a93bd84e1ad8a030be1484a08a777289e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAttribute</b> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memitem:aee98afeb76eb08b3f4bfe9bd5a13be77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aee98afeb76eb08b3f4bfe9bd5a13be77">RemoveChild</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;n)</td></tr>
<tr class="memdesc:aee98afeb76eb08b3f4bfe9bd5a13be77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove specified child element.  <a href="#aee98afeb76eb08b3f4bfe9bd5a13be77"></a><br/></td></tr>
<tr class="memitem:ac679160f35df888455b8b72640e9d5e0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac679160f35df888455b8b72640e9d5e0">RemoveChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add2290b8f407079a69867ce063b49ee4">Name</a>)</td></tr>
<tr class="memdesc:ac679160f35df888455b8b72640e9d5e0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove child element as specified by name.  <a href="#ac679160f35df888455b8b72640e9d5e0"></a><br/></td></tr>
<tr class="memitem:ae8a54e421843e865e7171d48f78be969 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ae8a54e421843e865e7171d48f78be969">SetName</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *rhs)</td></tr>
<tr class="memdesc:ae8a54e421843e865e7171d48f78be969 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the name of .  <a href="#ae8a54e421843e865e7171d48f78be969"></a><br/></td></tr>
<tr class="memitem:a5e1c7c943cb272c5bd2308598e29968e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a5e1c7c943cb272c5bd2308598e29968e">SetName</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;rhs)</td></tr>
<tr class="memdesc:a5e1c7c943cb272c5bd2308598e29968e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the name of this object.  <a href="#a5e1c7c943cb272c5bd2308598e29968e"></a><br/></td></tr>
<tr class="memitem:aa8bad1055873931e97cd12b044e838b4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa8bad1055873931e97cd12b044e838b4">SetValue</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *rhs)</td></tr>
<tr class="memdesc:aa8bad1055873931e97cd12b044e838b4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the value of this.  <a href="#aa8bad1055873931e97cd12b044e838b4"></a><br/></td></tr>
<tr class="memitem:a359f3bd10c9bbcabff7eadc17257548f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a359f3bd10c9bbcabff7eadc17257548f"></a>
<a class="el" href="classMezzanine_1_1XML_1_1Text.xhtml">Text</a>&#160;</td><td class="memItemRight" valign="bottom"><b>text</b> () const </td></tr>
<tr class="memitem:a55c2d29eff312b0f8cc27a1b963d21cb inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a55c2d29eff312b0f8cc27a1b963d21cb">Traverse</a> (<a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml">TreeWalker</a> &amp;walker)</td></tr>
<tr class="memdesc:a55c2d29eff312b0f8cc27a1b963d21cb inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree.  <a href="#a55c2d29eff312b0f8cc27a1b963d21cb"></a><br/></td></tr>
<tr class="memitem:a7133499c84df7f8f0c0aa705f51a6d4e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">NodeType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7133499c84df7f8f0c0aa705f51a6d4e">Type</a> () const </td></tr>
<tr class="memdesc:a7133499c84df7f8f0c0aa705f51a6d4e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identify what kind of <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this is.  <a href="#a7133499c84df7f8f0c0aa705f51a6d4e"></a><br/></td></tr>
<tr class="memitem:a2981eee3e482dbcaab6b9793a499063c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a2981eee3e482dbcaab6b9793a499063c">Value</a> () const </td></tr>
<tr class="memdesc:a2981eee3e482dbcaab6b9793a499063c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Value of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>.  <a href="#a2981eee3e482dbcaab6b9793a499063c"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&nbsp;Public Types inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:a962d98a9df5534a1cd518c2a4352dfc9 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a962d98a9df5534a1cd518c2a4352dfc9"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1AttributeIterator.xhtml">AttributeIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a962d98a9df5534a1cd518c2a4352dfc9">attribute_iterator</a></td></tr>
<tr class="memdesc:a962d98a9df5534a1cd518c2a4352dfc9 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">An iterator for <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> members on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>. <br/></td></tr>
<tr class="memitem:a40649b2656e085f8f8005813753f5837 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a40649b2656e085f8f8005813753f5837"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml">NodeIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a40649b2656e085f8f8005813753f5837">iterator</a></td></tr>
<tr class="memdesc:a40649b2656e085f8f8005813753f5837 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">An iterator for child Nodes. <br/></td></tr>
<tr class="inherit_header pro_types_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&nbsp;Protected Types inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:ab27e92b7cbb929588c815d054861664d inherit pro_types_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab27e92b7cbb929588c815d054861664d"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>unspecified_bool_type</b> )(<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> ***)</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:a54479e446cce3b251847d23c7429fd8d inherit pro_attribs_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classNodeStruct.xhtml">NodeStruct</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a54479e446cce3b251847d23c7429fd8d">_GetRoot</a></td></tr>
<tr class="memdesc:a54479e446cce3b251847d23c7429fd8d inherit pro_attribs_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores pointers to the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> data and some metadata.  <a href="#a54479e446cce3b251847d23c7429fd8d"></a><br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>The root node of any xml hierarchy is a <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document Node.">Document</a> <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>. </p>
<p>This has all the same features as a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and include a few features for saving, loading, streaming and to a limited degree managing the document declaration. </p>

<p>Definition at line <a class="el" href="xml_8h_source.xhtml#l01110">1110</a> of file <a class="el" href="xml_8h_source.xhtml">xml.h</a>.</p>
</div><h2>Member Function Documentation</h2>
<a class="anchor" id="aac1611207ee9ef11a80bc1796020cf4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> Mezzanine::XML::Document::DocumentElement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get document element. </p>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> that is the root element of the xml <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document Node.">Document</a> </dd></dl>

</div>
</div>
<a class="anchor" id="afb9abd5b77651735b1380f6bd5934837"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load a document from a data stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The stream to load from. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a2b7d62d9936914bdce0c289ca3d4934c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype">std::basic_istream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load XML from a stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>An std::istream which has xml text in it. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="ac2f012cfbf4f15d75a69fe049b5a5e18"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype">std::basic_istream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load XML from a wide stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>An std::basic_istream which has xml wide character text in it. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a1d697315ccd549558e9cad7e06eb7c65"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::XML::Document::LoadBuffer </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from buffer. Copies/converts the buffer, so it may be deleted or changed after the function returns. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to buffer containing the xml document to be parsed, that will remain unchanged. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a8be0ede460622c63de94b734bc258ab6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadBufferInplace </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). </p>
<p>You should ensure that buffer data will persist throughout the documents lifetime, and free the buffer memory manually once document is destroyed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to buffer containing the xml document to be parsed, that must remain for the lifecycle of the <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document Node.">XML::Document</a>. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a30fdca5c7cacb1cceff28e03f5b27850"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadBufferInplaceOwn </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). </p>
<p>You should allocate the buffer with pugixml allocation function; <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document Node.">XML::Document</a> will free the buffer when it is no longer needed (you can not use it anymore). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to buffer containing the xml document to be parsed. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a89365dd7aa1cd2e25ebd72ceae8cad90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>An c-style char array that contains the path and filename of the xml document to load. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a66fe56a796539d5eb3576d058072c2eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadFile </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code>ParseDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>An c-style wide char array that contains the path and filename of the xml document to load. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="All the information needed to troubleshoot a Parsing error.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>

</div>
</div>
<a class="anchor" id="a6123f97d91bbce265c4771f06607e0d9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::XML::Document::Reset </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a> &amp;&#160;</td>
          <td class="paramname"><em>proto</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all nodes, then copies the entire contents of the specified document. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">proto</td><td>The <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document Node.">Document</a> to copy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a877e44869d67a6ea736c82bb8adbc0ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code>FormatDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save XML document to a stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The stream to save this document to. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to XML::FormatDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aebf22bbc54f2e69bcf19c7f2f9978ade"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml">Writer</a> &amp;&#160;</td>
          <td class="paramname"><em>WriterInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code>FormatDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save XML document to WriterInstance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WriterInstance</td><td>The <a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml" title="Interface for node printing (see Node::Print)">Writer</a> that will be used to output the xml text. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to XML::FormatDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a086b685984950c88316c549acbf77ec9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype">std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code>FormatDefault</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save XML document to a stream of wide characters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The output stream of wide characters to send the XML document to. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to XML::FormatDefault. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a42feffdea66cc25d48fbc81eff21268e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::XML::Document::SaveFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code>FormatDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save XML to file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>A c-style array of chars that contain the filename (and any path) of the file to be output. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to XML::FormatDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if the target file could not be opened for writing </dd></dl>

</div>
</div>
<a class="anchor" id="ac2d3b702a673110ec67ec7740f8b467b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::XML::Document::SaveFile </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code>FormatDefault</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Encoding&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code>EncodingAuto</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save XML to file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>A c-style array of wide chars that contain the filename (and any path) of the file to be output. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to XML::FormatDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if the target file could not be opened for writing </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Projects/MezzanineCurrent/Mezzanine/Mezzanine/src/XML/<a class="el" href="xml_8h_source.xhtml">xml.h</a></li>
<li>/home/sqeaky/Projects/MezzanineCurrent/Mezzanine/Mezzanine/src/XML/<a class="el" href="xmldoc_8h_source.xhtml">xmldoc.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 10 2013 23:53:12 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
