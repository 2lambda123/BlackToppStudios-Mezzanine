<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Light Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Light.xhtml">Light</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Light-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Light Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is the class used for dynamic lighting within the scene.  
 <a href="classMezzanine_1_1Light.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="light_8h_source.xhtml">light.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Light:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Light__inherit__graph.svg" width="190" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Light:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Light__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a783df27d8261c5af2226bc75586944be"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">LightType</a> { <a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944bea0374f1b4eee3903c6857838f0de8c48e">Directional</a> =  0, 
<a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944bea8922c0c85b8c971b99e636ff924bfb5d">Point</a> =  1, 
<a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944beab3af9a02884457e13f67d4bba11e4b4c">Spotlight</a> =  2
 }</td></tr>
<tr class="memdesc:a783df27d8261c5af2226bc75586944be"><td class="mdescLeft">&#160;</td><td class="mdescRight">What kind of light Source.  <a href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">More...</a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a22277def5a6adfa4ad0c510faa08f90a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a22277def5a6adfa4ad0c510faa08f90a">Light</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, <a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *manager)</td></tr>
<tr class="memdesc:a22277def5a6adfa4ad0c510faa08f90a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard initialization constructor.  <a href="#a22277def5a6adfa4ad0c510faa08f90a"></a><br/></td></tr>
<tr class="memitem:a78f9b77376839f757826336bf8f93f00"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a78f9b77376839f757826336bf8f93f00">Light</a> (Ogre::Light *light, <a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *manager)</td></tr>
<tr class="memdesc:a78f9b77376839f757826336bf8f93f00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal Constructor.  <a href="#a78f9b77376839f757826336bf8f93f00"></a><br/></td></tr>
<tr class="memitem:aa3df3e25033fa6001c6e6ea42a0f36f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa3df3e25033fa6001c6e6ea42a0f36f5"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aa3df3e25033fa6001c6e6ea42a0f36f5">~Light</a> ()</td></tr>
<tr class="memdesc:aa3df3e25033fa6001c6e6ea42a0f36f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a9564b933f74967b89b144650abe75a48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a9564b933f74967b89b144650abe75a48">GetAttenuationConstant</a> () const </td></tr>
<tr class="memdesc:a9564b933f74967b89b144650abe75a48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the constant factor of the attenuation.  <a href="#a9564b933f74967b89b144650abe75a48"></a><br/></td></tr>
<tr class="memitem:aeb3f9b4ce95a43fe9253dc455e83f45e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aeb3f9b4ce95a43fe9253dc455e83f45e">GetAttenuationLinear</a> () const </td></tr>
<tr class="memdesc:aeb3f9b4ce95a43fe9253dc455e83f45e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the linear factor of the attentuation.  <a href="#aeb3f9b4ce95a43fe9253dc455e83f45e"></a><br/></td></tr>
<tr class="memitem:a89f2ed0a02bf28bacad1569877e35a78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a89f2ed0a02bf28bacad1569877e35a78">GetAttenuationQuadric</a> () const </td></tr>
<tr class="memdesc:a89f2ed0a02bf28bacad1569877e35a78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the quadric factor of the attenuation.  <a href="#a89f2ed0a02bf28bacad1569877e35a78"></a><br/></td></tr>
<tr class="memitem:af94876bf25ec03b1cf34daeff1ffecd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#af94876bf25ec03b1cf34daeff1ffecd3">GetAttenuationRange</a> () const </td></tr>
<tr class="memdesc:af94876bf25ec03b1cf34daeff1ffecd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the absolute range of attenuation in world units.  <a href="#af94876bf25ec03b1cf34daeff1ffecd3"></a><br/></td></tr>
<tr class="memitem:af21912b8f7421f79bc8a24e7127b8d51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#af21912b8f7421f79bc8a24e7127b8d51">GetDiffuseColour</a> () const </td></tr>
<tr class="memdesc:af21912b8f7421f79bc8a24e7127b8d51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current colour of the diffuse light.  <a href="#af21912b8f7421f79bc8a24e7127b8d51"></a><br/></td></tr>
<tr class="memitem:a86b7fec45b3b9476a5f02cee0386c29c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a86b7fec45b3b9476a5f02cee0386c29c">GetDirection</a> () const </td></tr>
<tr class="memdesc:a86b7fec45b3b9476a5f02cee0386c29c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set direction of the light.  <a href="#a86b7fec45b3b9476a5f02cee0386c29c"></a><br/></td></tr>
<tr class="memitem:aab2517f0763552587f7d21e60e167069"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">Light::LightType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aab2517f0763552587f7d21e60e167069">GetLightType</a> () const </td></tr>
<tr class="memdesc:aab2517f0763552587f7d21e60e167069"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of light that this light is.  <a href="#aab2517f0763552587f7d21e60e167069"></a><br/></td></tr>
<tr class="memitem:a997d299abec130a6a9111b5659a6b0d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a997d299abec130a6a9111b5659a6b0d2">GetLocation</a> () const </td></tr>
<tr class="memdesc:a997d299abec130a6a9111b5659a6b0d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current location of the light.  <a href="#a997d299abec130a6a9111b5659a6b0d2"></a><br/></td></tr>
<tr class="memitem:a614256353a39fc326cfbb8541643a53f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a614256353a39fc326cfbb8541643a53f">GetName</a> () const </td></tr>
<tr class="memdesc:a614256353a39fc326cfbb8541643a53f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this light.  <a href="#a614256353a39fc326cfbb8541643a53f"></a><br/></td></tr>
<tr class="memitem:a08a415b00c94345ebb5155fa15819296"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a08a415b00c94345ebb5155fa15819296">GetOrientation</a> () const </td></tr>
<tr class="memdesc:a08a415b00c94345ebb5155fa15819296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inherited from Attachable, returns a default <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>.  <a href="#a08a415b00c94345ebb5155fa15819296"></a><br/></td></tr>
<tr class="memitem:a3206b96ca2e21c861e3a141464709beb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a3206b96ca2e21c861e3a141464709beb">GetPowerScale</a> () const </td></tr>
<tr class="memdesc:a3206b96ca2e21c861e3a141464709beb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the lights power scale.  <a href="#a3206b96ca2e21c861e3a141464709beb"></a><br/></td></tr>
<tr class="memitem:ac8742d7d9ac0b4059eeed80b4b566471"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#ac8742d7d9ac0b4059eeed80b4b566471">GetScaling</a> () const </td></tr>
<tr class="memdesc:ac8742d7d9ac0b4059eeed80b4b566471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.   <a href="#ac8742d7d9ac0b4059eeed80b4b566471"></a><br/></td></tr>
<tr class="memitem:af3cef4b433cc3563ae3abd3675c5b922"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#af3cef4b433cc3563ae3abd3675c5b922">GetSpecularColour</a> () const </td></tr>
<tr class="memdesc:af3cef4b433cc3563ae3abd3675c5b922"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current colour of the specular light.  <a href="#af3cef4b433cc3563ae3abd3675c5b922"></a><br/></td></tr>
<tr class="memitem:adc25087fe48fe78c1bae8785c28d30e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#adc25087fe48fe78c1bae8785c28d30e0">GetSpotlightFalloff</a> () const </td></tr>
<tr class="memdesc:adc25087fe48fe78c1bae8785c28d30e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the rate of falloff of the cone of light emitted by this spotlight.  <a href="#adc25087fe48fe78c1bae8785c28d30e0"></a><br/></td></tr>
<tr class="memitem:a88bb2a7515c4f67c8d367acfc1764420"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a88bb2a7515c4f67c8d367acfc1764420">GetSpotlightInnerAngle</a> () const </td></tr>
<tr class="memdesc:a88bb2a7515c4f67c8d367acfc1764420"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Inner angle of the cone of light emitted by this spotlight.  <a href="#a88bb2a7515c4f67c8d367acfc1764420"></a><br/></td></tr>
<tr class="memitem:a750426a53eeed92787c996f8b35c1d32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a750426a53eeed92787c996f8b35c1d32">GetSpotlightOuterAngle</a> () const </td></tr>
<tr class="memdesc:a750426a53eeed92787c996f8b35c1d32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Outer angle of the cone of light emitted by this spotlight.  <a href="#a750426a53eeed92787c996f8b35c1d32"></a><br/></td></tr>
<tr class="memitem:aa5cd7878d7507c0985d1cec54caa344e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aa5cd7878d7507c0985d1cec54caa344e">GetType</a> () const </td></tr>
<tr class="memdesc:aa5cd7878d7507c0985d1cec54caa344e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of <a class="el" href="classMezzanine_1_1World.xhtml">World</a> or Scene object this attachable is.   <a href="#aa5cd7878d7507c0985d1cec54caa344e"></a><br/></td></tr>
<tr class="memitem:a67cf2007b51378b1a3d22d1c63b6f54a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a67cf2007b51378b1a3d22d1c63b6f54a">SetAttenuation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Range, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Constant, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Linear, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Quadratic)</td></tr>
<tr class="memdesc:a67cf2007b51378b1a3d22d1c63b6f54a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the factors for the attenuation formula applied to this light.  <a href="#a67cf2007b51378b1a3d22d1c63b6f54a"></a><br/></td></tr>
<tr class="memitem:ae18656f81c8f9ac9490adb9f9d225c5c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#ae18656f81c8f9ac9490adb9f9d225c5c">SetDiffuseColour</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Red, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Green, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Blue)</td></tr>
<tr class="memdesc:ae18656f81c8f9ac9490adb9f9d225c5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the colour for the Diffuse light from this source.  <a href="#ae18656f81c8f9ac9490adb9f9d225c5c"></a><br/></td></tr>
<tr class="memitem:a577e92239a463c40207dc749b3f6c14a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a577e92239a463c40207dc749b3f6c14a">SetDiffuseColour</a> (const <a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> &amp;Colour)</td></tr>
<tr class="memdesc:a577e92239a463c40207dc749b3f6c14a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the colour for the Diffuse light from this source.  <a href="#a577e92239a463c40207dc749b3f6c14a"></a><br/></td></tr>
<tr class="memitem:a22cbfb15ef1c7caf1011574f568d19de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a22cbfb15ef1c7caf1011574f568d19de">SetDirection</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Direction)</td></tr>
<tr class="memdesc:a22cbfb15ef1c7caf1011574f568d19de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the direction the light will originate from.  <a href="#a22cbfb15ef1c7caf1011574f568d19de"></a><br/></td></tr>
<tr class="memitem:aedd1d87f5d1dffac4633ca8fe9ab4e15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aedd1d87f5d1dffac4633ca8fe9ab4e15">SetLightType</a> (<a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">Light::LightType</a> Type)</td></tr>
<tr class="memdesc:aedd1d87f5d1dffac4633ca8fe9ab4e15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the type of light this light is.  <a href="#aedd1d87f5d1dffac4633ca8fe9ab4e15"></a><br/></td></tr>
<tr class="memitem:a16815beba535ae398e8ae6016c6579f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a16815beba535ae398e8ae6016c6579f6">SetLocalLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a16815beba535ae398e8ae6016c6579f6"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a16815beba535ae398e8ae6016c6579f6"></a><br/></td></tr>
<tr class="memitem:ac97ef9f7544c0710ce8c18dac91ec1ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#ac97ef9f7544c0710ce8c18dac91ec1ce">SetLocalOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:ac97ef9f7544c0710ce8c18dac91ec1ce"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#ac97ef9f7544c0710ce8c18dac91ec1ce"></a><br/></td></tr>
<tr class="memitem:ac06da317651df700c2969cc81c3f8d3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#ac06da317651df700c2969cc81c3f8d3d">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:ac06da317651df700c2969cc81c3f8d3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location from where the light will originate.  <a href="#ac06da317651df700c2969cc81c3f8d3d"></a><br/></td></tr>
<tr class="memitem:aa2f3fe2b7cb7bf459f2526d2e5c234ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aa2f3fe2b7cb7bf459f2526d2e5c234ed">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:aa2f3fe2b7cb7bf459f2526d2e5c234ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inherited from Attachable, does nothing on <a class="el" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a> class.  <a href="#aa2f3fe2b7cb7bf459f2526d2e5c234ed"></a><br/></td></tr>
<tr class="memitem:af30837442661a8255a592b1a540b9692"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#af30837442661a8255a592b1a540b9692">SetPowerScale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Power)</td></tr>
<tr class="memdesc:af30837442661a8255a592b1a540b9692"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the lights power scale.  <a href="#af30837442661a8255a592b1a540b9692"></a><br/></td></tr>
<tr class="memitem:a643fa07c0b48ec2edad53e3c27345ab9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a643fa07c0b48ec2edad53e3c27345ab9">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:a643fa07c0b48ec2edad53e3c27345ab9"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a643fa07c0b48ec2edad53e3c27345ab9"></a><br/></td></tr>
<tr class="memitem:a6fdcce86ef61cf45f93378b381b9c3fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a6fdcce86ef61cf45f93378b381b9c3fe">SetSpecularColour</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Red, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Green, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Blue)</td></tr>
<tr class="memdesc:a6fdcce86ef61cf45f93378b381b9c3fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the colour for the Specular light from this source.  <a href="#a6fdcce86ef61cf45f93378b381b9c3fe"></a><br/></td></tr>
<tr class="memitem:a920d4d00a76b5643e3f7318a92011bbf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a920d4d00a76b5643e3f7318a92011bbf">SetSpecularColour</a> (const <a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> &amp;Colour)</td></tr>
<tr class="memdesc:a920d4d00a76b5643e3f7318a92011bbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the colour for the Specular light from this source.  <a href="#a920d4d00a76b5643e3f7318a92011bbf"></a><br/></td></tr>
<tr class="memitem:a2c729cbbcd38835159e82b3a7a3a2963"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a2c729cbbcd38835159e82b3a7a3a2963">SetSpotlightFalloff</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Falloff)</td></tr>
<tr class="memdesc:a2c729cbbcd38835159e82b3a7a3a2963"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the rate of falloff of the cone of light emitted by a spotlight.  <a href="#a2c729cbbcd38835159e82b3a7a3a2963"></a><br/></td></tr>
<tr class="memitem:a2ceaa2d5334fc944613f21ef705914ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a2ceaa2d5334fc944613f21ef705914ad">SetSpotlightInnerAngle</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;InnerAngle)</td></tr>
<tr class="memdesc:a2ceaa2d5334fc944613f21ef705914ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Inner angle of the cone of light emitted by a spotlight.  <a href="#a2ceaa2d5334fc944613f21ef705914ad"></a><br/></td></tr>
<tr class="memitem:a233ded1ccf6c7fe3fb83533ab1e8bb2a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a233ded1ccf6c7fe3fb83533ab1e8bb2a">SetSpotlightOuterAngle</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;OuterAngle)</td></tr>
<tr class="memdesc:a233ded1ccf6c7fe3fb83533ab1e8bb2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Outer angle of the cone of light emitted by a spotlight.  <a href="#a233ded1ccf6c7fe3fb83533ab1e8bb2a"></a><br/></td></tr>
<tr class="memitem:aebd96e0d10af9a5a6ad008d4360b649f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#aebd96e0d10af9a5a6ad008d4360b649f">SetSpotlightRange</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;InnerAngle, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;OuterAngle, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Falloff=1.0)</td></tr>
<tr class="memdesc:aebd96e0d10af9a5a6ad008d4360b649f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the cone of light emitted by a spotlight.  <a href="#aebd96e0d10af9a5a6ad008d4360b649f"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa1baf517c478f03c0116ccf6df62f750"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#aa1baf517c478f03c0116ccf6df62f750">AttachableChild</a> ()</td></tr>
<tr class="memdesc:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a2f42975f868a1591ec6ce7f285e19415 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f42975f868a1591ec6ce7f285e19415"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a2f42975f868a1591ec6ce7f285e19415">~AttachableChild</a> ()</td></tr>
<tr class="memdesc:a2f42975f868a1591ec6ce7f285e19415 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#ad34350de631e502a8bc3d4ce25fff4f6">_RecalculateGlobalTransform</a> (bool FromParent=false)</td></tr>
<tr class="memdesc:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates objects global transform from parent.  <a href="#ad34350de631e502a8bc3d4ce25fff4f6"></a><br/></td></tr>
<tr class="memitem:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a500d824fc29de69ac05ffcdbdaf67e9e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a500d824fc29de69ac05ffcdbdaf67e9e">_RecalculateLocalTransform</a> ()</td></tr>
<tr class="memdesc:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates this objects local transform based on it's current global position. <br/></td></tr>
<tr class="memitem:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a59bbbc115c028f87db652f32d252ee61">GetLocalLocation</a> () const </td></tr>
<tr class="memdesc:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Location of this object in local space.  <a href="#a59bbbc115c028f87db652f32d252ee61"></a><br/></td></tr>
<tr class="memitem:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a81104f92420f9558b39144cce4eb7cd0">GetLocalOrientation</a> () const </td></tr>
<tr class="memdesc:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of this object in local space.  <a href="#a81104f92420f9558b39144cce4eb7cd0"></a><br/></td></tr>
<tr class="memitem:a9015db8e4a6d041601b25b82246bbfc9 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a9015db8e4a6d041601b25b82246bbfc9">GetParent</a> () const </td></tr>
<tr class="memdesc:a9015db8e4a6d041601b25b82246bbfc9 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of this child.  <a href="#a9015db8e4a6d041601b25b82246bbfc9"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a72bee4c7d028162ececabf6010f9015d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a72bee4c7d028162ececabf6010f9015d">AttachableBase</a> ()</td></tr>
<tr class="memdesc:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a525c8f74c27cb29bc46a0330753fdcb4 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a525c8f74c27cb29bc46a0330753fdcb4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a525c8f74c27cb29bc46a0330753fdcb4">~AttachableBase</a> ()</td></tr>
<tr class="memdesc:a525c8f74c27cb29bc46a0330753fdcb4 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a33eb528b2e924ef70a9bab7fd79c70d0">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in global space to the same point in local space.  <a href="#a33eb528b2e924ef70a9bab7fd79c70d0"></a><br/></td></tr>
<tr class="memitem:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a39338b566a38828b8c9b1ddf3e2c865e">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in global space to the same rotation in local space.  <a href="#a39338b566a38828b8c9b1ddf3e2c865e"></a><br/></td></tr>
<tr class="memitem:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab8a5b6e1379ff5cedb5758c4aafe61ed">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in local space to the same point in global space.  <a href="#ab8a5b6e1379ff5cedb5758c4aafe61ed"></a><br/></td></tr>
<tr class="memitem:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a709ad287377d07a576ebaca995392e15">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in local space to the same rotation in global space.  <a href="#a709ad287377d07a576ebaca995392e15"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a33af923976c32b2a34aaae8549ed35e4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a33af923976c32b2a34aaae8549ed35e4"></a>
<a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a33af923976c32b2a34aaae8549ed35e4">Manager</a></td></tr>
<tr class="memdesc:a33af923976c32b2a34aaae8549ed35e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the manager that created this class. <br/></td></tr>
<tr class="memitem:a228f1f22dbee36bed47894086d2191ff"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a228f1f22dbee36bed47894086d2191ff"></a>
Ogre::Light *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Light.xhtml#a228f1f22dbee36bed47894086d2191ff">OgreLight</a></td></tr>
<tr class="memdesc:a228f1f22dbee36bed47894086d2191ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ogre light this class gets it's functionality from. <br/></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:a6940c66cc4725deb27024ddd6c5459b8 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6940c66cc4725deb27024ddd6c5459b8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GlobalTransformDirty</b></td></tr>
<tr class="memitem:a142c9f848101dec654f8eeca88e689b5 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a142c9f848101dec654f8eeca88e689b5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>LocalTransformDirty</b></td></tr>
<tr class="memitem:adc604405ff0ac70699a0286b5e4869b9 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc604405ff0ac70699a0286b5e4869b9"></a>
<a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><b>LocalXform</b></td></tr>
<tr class="memitem:acdd3042178a3bdc83c483b55498ae76e inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acdd3042178a3bdc83c483b55498ae76e"></a>
<a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Parent</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:ab1042d571c1a40f0ab79e33206ab9761 inherit pro_attribs_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab1042d571c1a40f0ab79e33206ab9761"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Updating</b></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a0d62e3708056e62911d6ec7c6beb3a97">GetUpdating</a> (<a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *AB) const </td></tr>
<tr class="memdesc:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the update status of another attachable.  <a href="#a0d62e3708056e62911d6ec7c6beb3a97"></a><br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This class is the class used for dynamic lighting within the scene. </p>
<p>Dynamic lights come in 3 flavors: <br/>
 Directional - Used to simulate light from a very distant source. Doesn't need a location, only a direction. <a class="el" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a> will hit all objects accordingly from that direction. <br/>
 Point - Used to simulate local light sources that emit light in all directions. Doesn't need a direction, just a Location. <br/>
 Spotlight - Used to simulate local light sources that emit light in one direction, such as a flashlight. Needs both a Location and direction. In addition needs values for falloff. <br/>
 Note: If attaching a light to a node, all transform information(Location and orientation) becomes relative to the nodes transform. </p>

<p>Definition at line <a class="el" href="light_8h_source.xhtml#l00072">72</a> of file <a class="el" href="light_8h_source.xhtml">light.h</a>.</p>
</div><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="a783df27d8261c5af2226bc75586944be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">Mezzanine::Light::LightType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>What kind of light Source. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a783df27d8261c5af2226bc75586944bea0374f1b4eee3903c6857838f0de8c48e"></a>Directional</em>&nbsp;</td><td>
<p>From one direction, like sunlight. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a783df27d8261c5af2226bc75586944bea8922c0c85b8c971b99e636ff924bfb5d"></a>Point</em>&nbsp;</td><td>
<p>From a point in space, like a Torch, campfire, muzzle flash, Mutant Fireflies, bonfires, light bulbs, non-hooded lantern, the DnD D20 <a class="el" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a> spell, explosions, and scotch tape separating from the roll in a unlit vacuum. There may be other uses, be creative. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a783df27d8261c5af2226bc75586944beab3af9a02884457e13f67d4bba11e4b4c"></a>Spotlight</em>&nbsp;</td><td>
<p>From a point emanating in a cone, like a flashlight, hooded lantern, really bright computer screens, flood lights, older style space heaters, Concert lights, camera flashes, etc... </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="light_8h_source.xhtml#l00076">76</a> of file <a class="el" href="light_8h_source.xhtml">light.h</a>.</p>

</div>
</div>
<h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a22277def5a6adfa4ad0c510faa08f90a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Light::Light </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td>
          <td class="paramname"><em>manager</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard initialization constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this light. </td></tr>
    <tr><td class="paramname">manager</td><td>Pointer to the manager that this light is to be used in. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a78f9b77376839f757826336bf8f93f00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Light::Light </td>
          <td>(</td>
          <td class="paramtype">Ogre::Light *&#160;</td>
          <td class="paramname"><em>light</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td>
          <td class="paramname"><em>manager</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Internal Constructor. </p>
<p>This constructor should not be called on manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">light</td><td>The <a class="el" href="namespaceOgre.xhtml">Ogre</a> light this class is based on. </td></tr>
    <tr><td class="paramname">manager</td><td>Pointer to the manager that this light is to be used in. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a9564b933f74967b89b144650abe75a48"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetAttenuationConstant </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the constant factor of the attenuation. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the constant factor of attenuation. </dd></dl>

</div>
</div>
<a class="anchor" id="aeb3f9b4ce95a43fe9253dc455e83f45e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetAttenuationLinear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the linear factor of the attentuation. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the linear factor of attenuation. </dd></dl>

</div>
</div>
<a class="anchor" id="a89f2ed0a02bf28bacad1569877e35a78"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetAttenuationQuadric </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the quadric factor of the attenuation. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the quadric factor of attenuation. </dd></dl>

</div>
</div>
<a class="anchor" id="af94876bf25ec03b1cf34daeff1ffecd3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetAttenuationRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the absolute range of attenuation in world units. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the absolute range of attenuation. </dd></dl>

</div>
</div>
<a class="anchor" id="af21912b8f7421f79bc8a24e7127b8d51"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> Mezzanine::Light::GetDiffuseColour </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current colour of the diffuse light. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a colourvalue representing the currently set Diffuse light. </dd></dl>

</div>
</div>
<a class="anchor" id="a86b7fec45b3b9476a5f02cee0386c29c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Light::GetDirection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the currently set direction of the light. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the set direction of the light.</dd></dl>
<p>Not used in point lights. </p>

</div>
</div>
<a class="anchor" id="aab2517f0763552587f7d21e60e167069"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">Light::LightType</a> Mezzanine::Light::GetLightType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the type of light that this light is. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an enum value for this lights type. </dd></dl>

</div>
</div>
<a class="anchor" id="a997d299abec130a6a9111b5659a6b0d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Light::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current location of the light. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the location of the light.</dd></dl>
<p>Not used in Directional Lights. </p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a927f25cb0f2ba3afd289586e7ab0f4e8">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="a614256353a39fc326cfbb8541643a53f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a>&amp; Mezzanine::Light::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this light. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name given to this light. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a04b114eccfbf9092b84dfe24e81548b6">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="a08a415b00c94345ebb5155fa15819296"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Mezzanine::Light::GetOrientation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inherited from Attachable, returns a default <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a quaternion with the orientation. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#af18f7d1f20ee332facb314291673a313">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="a3206b96ca2e21c861e3a141464709beb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetPowerScale </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the lights power scale. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the power scale of the light.</dd></dl>
<p>Only used with HDR ( High Dynamic Range ) rendering </p>

</div>
</div>
<a class="anchor" id="ac8742d7d9ac0b4059eeed80b4b566471"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Light::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the scaling being applied on all axes of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a8e01242f06e5aabc3d53004325f1eeee">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="af3cef4b433cc3563ae3abd3675c5b922"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> Mezzanine::Light::GetSpecularColour </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current colour of the specular light. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a colourvalue representing the currently set Specular light. </dd></dl>

</div>
</div>
<a class="anchor" id="adc25087fe48fe78c1bae8785c28d30e0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetSpotlightFalloff </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the rate of falloff of the cone of light emitted by this spotlight. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the falloff of the cone of light. </dd></dl>

</div>
</div>
<a class="anchor" id="a88bb2a7515c4f67c8d367acfc1764420"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetSpotlightInnerAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Inner angle of the cone of light emitted by this spotlight. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the inner angle of this spotlight, in radians. </dd></dl>

</div>
</div>
<a class="anchor" id="a750426a53eeed92787c996f8b35c1d32"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Light::GetSpotlightOuterAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Outer angle of the cone of light emitted by this spotlight. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the outer angle of this spotlight, in radians. </dd></dl>

</div>
</div>
<a class="anchor" id="aa5cd7878d7507c0985d1cec54caa344e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::Light::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of <a class="el" href="classMezzanine_1_1World.xhtml">World</a> or Scene object this attachable is.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns the type of <a class="el" href="classMezzanine_1_1World.xhtml">World</a> or Scene object this attachable is. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a42bb7c2cab933d28dea86d2ec2934c6a">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="a67cf2007b51378b1a3d22d1c63b6f54a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetAttenuation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Range</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Constant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Linear</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Quadratic</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the factors for the attenuation formula applied to this light. </p>
<p>This function is only applicable when using a spotlight or point type of light. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Range</td><td>The absolute range of the light in world units. Objects beyond this range will not be influenced by this light. </td></tr>
    <tr><td class="paramname">Constant</td><td>The constant of the attenuation, ranging from 0.0 to 1.0. 1.0 means never attenuate, 0.0 is complete attenuation. </td></tr>
    <tr><td class="paramname">Linear</td><td>The linear factor of the attentuation, ranging from 0.0 to 1.0. 1.0 means attenuate evenly over the distance. </td></tr>
    <tr><td class="paramname">Quadratic</td><td>The Quadratic factor of the attenuation. This value adds curvature to the attenuation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae18656f81c8f9ac9490adb9f9d225c5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetDiffuseColour </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the colour for the Diffuse light from this source. </p>
<p>When rendering the final color of an object values of the colours of 3 types of lights are taken into account. The 3 types are: Diffuse, Specular, and Ambient. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Red</td><td>Real in the range of 0.0 to 1.0 determining the amount of red in the colour. </td></tr>
    <tr><td class="paramname">Red</td><td>Green in the range of 0.0 to 1.0 determining the amount of green in the colour. </td></tr>
    <tr><td class="paramname">Red</td><td>Blue in the range of 0.0 to 1.0 determining the amount of blue in the colour. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a577e92239a463c40207dc749b3f6c14a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetDiffuseColour </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> &amp;&#160;</td>
          <td class="paramname"><em>Colour</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the colour for the Diffuse light from this source. </p>
<p>This allows the setting of Diffuse color by a premade <a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Colour</td><td><a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> representing the color of the light to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a22cbfb15ef1c7caf1011574f568d19de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetDirection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Direction</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the direction the light will originate from. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Direction</td><td>A vector3 representing the direction the light will come from.</td></tr>
  </table>
  </dd>
</dl>
<p>Not used in point lights. </p>

</div>
</div>
<a class="anchor" id="aedd1d87f5d1dffac4633ca8fe9ab4e15"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetLightType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Light.xhtml#a783df27d8261c5af2226bc75586944be">Light::LightType</a>&#160;</td>
          <td class="paramname"><em>Type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the type of light this light is. </p>
<p>The light types are listed with the class info. Types are Directional, Point, and Spotlight. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>The enum value representing the type of light this is. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a16815beba535ae398e8ae6016c6579f6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetLocalLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a527ef7ddbf4c3936214eff5af821ae63">Mezzanine::AttachableChild</a>.</p>

</div>
</div>
<a class="anchor" id="ac97ef9f7544c0710ce8c18dac91ec1ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetLocalOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a3604a2450a1647ae882ef1d9dab1ec5d">Mezzanine::AttachableChild</a>.</p>

</div>
</div>
<a class="anchor" id="ac06da317651df700c2969cc81c3f8d3d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the location from where the light will originate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>A vector3 representing the location to set the light.</td></tr>
  </table>
  </dd>
</dl>
<p>Not used in Directional Lights. </p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab4f0d73a5c313874766bd038a32f1ae2">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="aa2f3fe2b7cb7bf459f2526d2e5c234ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inherited from Attachable, does nothing on <a class="el" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a> class. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Orientation</td><td>The orientation. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a8c459c324efb01dc56cead8e7650f22e">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="af30837442661a8255a592b1a540b9692"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetPowerScale </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Power</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the lights power scale. </p>
<p>The power scale of the light is a scaling factor indicating the relative power of the light. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Power</td><td>Real representing the factor by which to scale the power of the light. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a643fa07c0b48ec2edad53e3c27345ab9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetScaling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a5201923c0685e592dee8cecabc72b508">Mezzanine::AttachableBase</a>.</p>

</div>
</div>
<a class="anchor" id="a6fdcce86ef61cf45f93378b381b9c3fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetSpecularColour </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the colour for the Specular light from this source. </p>
<p>When rendering the final color of an object values of the colours of 3 types of lights are taken into account. The 3 types are: Diffuse, Specular, and Ambient. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Red</td><td>Real in the range of 0.0 to 1.0 determining the amount of red in the colour. </td></tr>
    <tr><td class="paramname">Red</td><td>Green in the range of 0.0 to 1.0 determining the amount of green in the colour. </td></tr>
    <tr><td class="paramname">Red</td><td>Blue in the range of 0.0 to 1.0 determining the amount of blue in the colour. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a920d4d00a76b5643e3f7318a92011bbf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetSpecularColour </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> &amp;&#160;</td>
          <td class="paramname"><em>Colour</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the colour for the Specular light from this source. </p>
<p>This allows the setting of Specular color by a premade <a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Colour</td><td><a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> representing the color of the light to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2c729cbbcd38835159e82b3a7a3a2963"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetSpotlightFalloff </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Falloff</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the rate of falloff of the cone of light emitted by a spotlight. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Falloff</td><td>The rate of falloff between the inner and outer cones. 1.0 means linear falloff. Less means slower falloff and higher means faster falloff. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2ceaa2d5334fc944613f21ef705914ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetSpotlightInnerAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>InnerAngle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the Inner angle of the cone of light emitted by a spotlight. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">InnerAngle</td><td>Angle of the inner cone in radians. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a233ded1ccf6c7fe3fb83533ab1e8bb2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetSpotlightOuterAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>OuterAngle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the Outer angle of the cone of light emitted by a spotlight. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OuterAngle</td><td>Angle of the outer cone in radians. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aebd96e0d10af9a5a6ad008d4360b649f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Light::SetSpotlightRange </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>InnerAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>OuterAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Falloff</em> = <code>1.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the cone of light emitted by a spotlight. </p>
<p>InnerAngle and OuterAngle should be input as Radians. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">InnerAngle</td><td>Angle of the inner cone in radians. </td></tr>
    <tr><td class="paramname">OuterAngle</td><td>Angle of the outer cone in radions. </td></tr>
    <tr><td class="paramname">Falloff</td><td>The rate of falloff between the inner and outer cones. 1.0 means linear falloff. Less means slower falloff and higher means faster falloff. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Projects/MezzanineCurrent/Mezzanine/Mezzanine/src/<a class="el" href="light_8h_source.xhtml">light.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 10 2013 23:44:05 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
