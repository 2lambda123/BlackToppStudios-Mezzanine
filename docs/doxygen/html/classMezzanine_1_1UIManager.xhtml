<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::UIManager Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1UIManager.xhtml">UIManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1UIManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::UIManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is responsible for any and all user interactions with the User interface/HUD.  
 <a href="classMezzanine_1_1UIManager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="uimanager_8h_source.xhtml">uimanager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::UIManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1UIManager__inherit__graph.svg" width="344" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::UIManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1UIManager__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a783973bf051c57a9bb9d4fc39a455126"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a783973bf051c57a9bb9d4fc39a455126"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>AtlasContainer</b></td></tr>
<tr class="separator:a783973bf051c57a9bb9d4fc39a455126"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ce33d0b0447291bd10a226365fae589"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5ce33d0b0447291bd10a226365fae589"></a>
typedef AtlasContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>AtlasIterator</b></td></tr>
<tr class="separator:a5ce33d0b0447291bd10a226365fae589"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6af4d8f84c70f090f8de9399b232abbf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6af4d8f84c70f090f8de9399b232abbf"></a>
typedef std::vector&lt; <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ButtonContainer</b></td></tr>
<tr class="separator:a6af4d8f84c70f090f8de9399b232abbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9958e7d200c036a9c9fa2c6e4fde889f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9958e7d200c036a9c9fa2c6e4fde889f"></a>
typedef ButtonContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ButtonIterator</b></td></tr>
<tr class="separator:a9958e7d200c036a9c9fa2c6e4fde889f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a078fa11a2ef69660163e87b4b58d81a1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a078fa11a2ef69660163e87b4b58d81a1"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CodeContainer</b></td></tr>
<tr class="separator:a078fa11a2ef69660163e87b4b58d81a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16807e396615108a47d4e74c46464c85"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a16807e396615108a47d4e74c46464c85"></a>
typedef CodeContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>CodeIterator</b></td></tr>
<tr class="separator:a16807e396615108a47d4e74c46464c85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43a0a99df026b3363ee3dbf86ce3737a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a43a0a99df026b3363ee3dbf86ce3737a"></a>
typedef <br class="typebreak"/>
AtlasContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstAtlasIterator</b></td></tr>
<tr class="separator:a43a0a99df026b3363ee3dbf86ce3737a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a676da6aed730c925a0e57182e09be544"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a676da6aed730c925a0e57182e09be544"></a>
typedef <br class="typebreak"/>
ButtonContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstButtonIterator</b></td></tr>
<tr class="separator:a676da6aed730c925a0e57182e09be544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1175dbb987d6b0f97fce37b3f8d66cec"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1175dbb987d6b0f97fce37b3f8d66cec"></a>
typedef <br class="typebreak"/>
CodeContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstCodeIterator</b></td></tr>
<tr class="separator:a1175dbb987d6b0f97fce37b3f8d66cec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9ef8eca0460f0e9229703380a2ac521"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac9ef8eca0460f0e9229703380a2ac521"></a>
typedef <br class="typebreak"/>
HotKeyContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstHotKeyIterator</b></td></tr>
<tr class="separator:ac9ef8eca0460f0e9229703380a2ac521"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b2b933a9b25e7b4d3d8b3c8df3b681"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a76b2b933a9b25e7b4d3d8b3c8df3b681"></a>
typedef <br class="typebreak"/>
ScreenContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstScreenIterator</b></td></tr>
<tr class="separator:a76b2b933a9b25e7b4d3d8b3c8df3b681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab2c826f86e52e49d54364e928a6ef3d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aab2c826f86e52e49d54364e928a6ef3d"></a>
typedef <br class="typebreak"/>
VisibleScreenContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstVisibleScreenIterator</b></td></tr>
<tr class="separator:aab2c826f86e52e49d54364e928a6ef3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee547ecf438753819d395c91bc18ddc3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aee547ecf438753819d395c91bc18ddc3"></a>
typedef std::pair&lt; <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GlyphIndexResult</b></td></tr>
<tr class="separator:aee547ecf438753819d395c91bc18ddc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cea8dc1d6a16a1e033c3e52815b26f7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7cea8dc1d6a16a1e033c3e52815b26f7"></a>
typedef std::multimap<br class="typebreak"/>
&lt; <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a>, <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>HotKeyContainer</b></td></tr>
<tr class="separator:a7cea8dc1d6a16a1e033c3e52815b26f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1911d5d2e8fada4893e1e8f205b5b2f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af1911d5d2e8fada4893e1e8f205b5b2f"></a>
typedef HotKeyContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>HotKeyIterator</b></td></tr>
<tr class="separator:af1911d5d2e8fada4893e1e8f205b5b2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3a28877da64761f618ee71c87ec7e60"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab3a28877da64761f618ee71c87ec7e60"></a>
typedef std::vector&lt; <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ScreenContainer</b></td></tr>
<tr class="separator:ab3a28877da64761f618ee71c87ec7e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e82b6e417303efda243298c764089fa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0e82b6e417303efda243298c764089fa"></a>
typedef ScreenContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ScreenIterator</b></td></tr>
<tr class="separator:a0e82b6e417303efda243298c764089fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ff440472d88fce32e5c2124101beff3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0ff440472d88fce32e5c2124101beff3"></a>
typedef std::map<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> <br class="typebreak"/>
*, <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>VisibleScreenContainer</b></td></tr>
<tr class="separator:a0ff440472d88fce32e5c2124101beff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c6c84b0949e52fc4c1486f0b1e05df"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66c6c84b0949e52fc4c1486f0b1e05df"></a>
typedef <br class="typebreak"/>
VisibleScreenContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>VisibleScreenIterator</b></td></tr>
<tr class="separator:a66c6c84b0949e52fc4c1486f0b1e05df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ab23a9aa27c4e3cb58d902a149d3c6de2 inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab23a9aa27c4e3cb58d902a149d3c6de2"></a>
typedef bool(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> )()</td></tr>
<tr class="memdesc:ab23a9aa27c4e3cb58d902a149d3c6de2 inherit pub_types_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This makes working with Callback function pointer a bit easier. <br/></td></tr>
<tr class="separator:ab23a9aa27c4e3cb58d902a149d3c6de2 inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> { <br/>
&#160;&#160;<b>ActorManager</b> = 1, 
<b>AudioManager</b>, 
<b>CameraManager</b>, 
<b>CollisionShapeManager</b>, 
<br/>
&#160;&#160;<b>EventManager</b>, 
<b>GraphicsManager</b>, 
<b>InputManager</b>, 
<b>LogManager</b>, 
<br/>
&#160;&#160;<b>MeshManager</b>, 
<b>NetworkManager</b>, 
<b>PagingManager</b>, 
<b>PhysicsManager</b>, 
<br/>
&#160;&#160;<b>ResourceManager</b>, 
<b>SceneManager</b>, 
<b>ScriptingManager</b>, 
<b>SoundScapeManager</b>, 
<br/>
&#160;&#160;<b>TerrainManager</b>, 
<b>TimerManager</b>, 
<b>UIManager</b>, 
<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6caa58e48b5e043dfdaf6e2cd17b79a3194">UserCreated</a> = 512
<br/>
 }</td></tr>
<tr class="separator:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2101862a8b3f08f2fa657b0bffb75bd0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2101862a8b3f08f2fa657b0bffb75bd0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a2101862a8b3f08f2fa657b0bffb75bd0">UIManager</a> ()</td></tr>
<tr class="memdesc:a2101862a8b3f08f2fa657b0bffb75bd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="separator:a2101862a8b3f08f2fa657b0bffb75bd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9205e916c67a75f6af55c038642b29"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a7d9205e916c67a75f6af55c038642b29">UIManager</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode)</td></tr>
<tr class="memdesc:a7d9205e916c67a75f6af55c038642b29"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor.  <a href="#a7d9205e916c67a75f6af55c038642b29">More...</a><br/></td></tr>
<tr class="separator:a7d9205e916c67a75f6af55c038642b29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad480071e4f02d2e24903da56425e6b6a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad480071e4f02d2e24903da56425e6b6a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ad480071e4f02d2e24903da56425e6b6a">~UIManager</a> ()</td></tr>
<tr class="memdesc:ad480071e4f02d2e24903da56425e6b6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="separator:ad480071e4f02d2e24903da56425e6b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f28a7fbc0ea37df3c53bbd17549837b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a7f28a7fbc0ea37df3c53bbd17549837b">_NotifyScreenVisibility</a> (<a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *BeingShown, bool Visible)</td></tr>
<tr class="memdesc:a7f28a7fbc0ea37df3c53bbd17549837b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the screen that will be visible on the viewport it is bound to.  <a href="#a7f28a7fbc0ea37df3c53bbd17549837b">More...</a><br/></td></tr>
<tr class="separator:a7f28a7fbc0ea37df3c53bbd17549837b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293f7af73b027ce667fed5a7c6211738"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a293f7af73b027ce667fed5a7c6211738">AddAutoRegisterCode</a> (<a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> Code)</td></tr>
<tr class="memdesc:a293f7af73b027ce667fed5a7c6211738"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a key or button that will be auto-registered with every created <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> button.  <a href="#a293f7af73b027ce667fed5a7c6211738">More...</a><br/></td></tr>
<tr class="separator:a293f7af73b027ce667fed5a7c6211738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d8cc26ef8d2b8df8312eaeea184dd7b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a9d8cc26ef8d2b8df8312eaeea184dd7b">BindHotKey</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;HotKey, <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> *BoundButton)</td></tr>
<tr class="memdesc:a9d8cc26ef8d2b8df8312eaeea184dd7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds a key to a button.  <a href="#a9d8cc26ef8d2b8df8312eaeea184dd7b">More...</a><br/></td></tr>
<tr class="separator:a9d8cc26ef8d2b8df8312eaeea184dd7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e88a8d25ae95440032333179f2f493f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a7e88a8d25ae95440032333179f2f493f">ButtonAutoRegisterEnabled</a> ()</td></tr>
<tr class="memdesc:a7e88a8d25ae95440032333179f2f493f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the ButtonAutoRegister feature is enabled.  <a href="#a7e88a8d25ae95440032333179f2f493f">More...</a><br/></td></tr>
<tr class="separator:a7e88a8d25ae95440032333179f2f493f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab12c172934cb6836e97568266d973e50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ab12c172934cb6836e97568266d973e50">CheckWidgetMouseIsOver</a> ()</td></tr>
<tr class="memdesc:ab12c172934cb6836e97568266d973e50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all visable screens and layers to see if a widget was clicked.  <a href="#ab12c172934cb6836e97568266d973e50">More...</a><br/></td></tr>
<tr class="separator:ab12c172934cb6836e97568266d973e50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dee096496bf1d4b5cf3002a40146525"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a7dee096496bf1d4b5cf3002a40146525">CreateScreen</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ScreenName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas, <a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *WindowViewport)</td></tr>
<tr class="memdesc:a7dee096496bf1d4b5cf3002a40146525"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an internal HUD screen.  <a href="#a7dee096496bf1d4b5cf3002a40146525">More...</a><br/></td></tr>
<tr class="separator:a7dee096496bf1d4b5cf3002a40146525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e0ae42532e4c7a9d16ea46775be110"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a43e0ae42532e4c7a9d16ea46775be110"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a43e0ae42532e4c7a9d16ea46775be110">DestroyAllScreens</a> ()</td></tr>
<tr class="memdesc:a43e0ae42532e4c7a9d16ea46775be110"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes all screens stored in this manager. <br/></td></tr>
<tr class="separator:a43e0ae42532e4c7a9d16ea46775be110"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8634d75235a218f1b7c77a33fb2c4273"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a8634d75235a218f1b7c77a33fb2c4273">DestroyScreen</a> (<a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *Screen)</td></tr>
<tr class="memdesc:a8634d75235a218f1b7c77a33fb2c4273"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes a screen and removes all trace of it from the manager.  <a href="#a8634d75235a218f1b7c77a33fb2c4273">More...</a><br/></td></tr>
<tr class="separator:a8634d75235a218f1b7c77a33fb2c4273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af774da651d30b4fe1ea086899c1961ca"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#af774da651d30b4fe1ea086899c1961ca">DoMainLoopItems</a> ()</td></tr>
<tr class="memdesc:af774da651d30b4fe1ea086899c1961ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main loop calls this once per frame.  <a href="#af774da651d30b4fe1ea086899c1961ca">More...</a><br/></td></tr>
<tr class="separator:af774da651d30b4fe1ea086899c1961ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dda002532786846f076ed9c685af2f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a5dda002532786846f076ed9c685af2f5">EnableButtonAutoRegister</a> (bool Enable)</td></tr>
<tr class="memdesc:a5dda002532786846f076ed9c685af2f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables whether or not to automatically set the activation key or button for <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> buttons.  <a href="#a5dda002532786846f076ed9c685af2f5">More...</a><br/></td></tr>
<tr class="separator:a5dda002532786846f076ed9c685af2f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a904d4d7a3957a13cf5e27e8d97dd1add"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a904d4d7a3957a13cf5e27e8d97dd1add">GetAtlas</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;AtlasName)</td></tr>
<tr class="memdesc:a904d4d7a3957a13cf5e27e8d97dd1add"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a loaded Atlas being stored in this manager.  <a href="#a904d4d7a3957a13cf5e27e8d97dd1add">More...</a><br/></td></tr>
<tr class="separator:a904d4d7a3957a13cf5e27e8d97dd1add"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20dcc620a26bc2cce1094f810aca4500"><td class="memItemLeft" align="right" valign="top">CodeContainer *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a20dcc620a26bc2cce1094f810aca4500">GetAutoRegisteredCodes</a> ()</td></tr>
<tr class="memdesc:a20dcc620a26bc2cce1094f810aca4500"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the list of codes that will be auto-registered with each <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> button.  <a href="#a20dcc620a26bc2cce1094f810aca4500">More...</a><br/></td></tr>
<tr class="separator:a20dcc620a26bc2cce1094f810aca4500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4a7e054c5a5e52d37f1ff38f5328e9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ac4a7e054c5a5e52d37f1ff38f5328e9e">GetHoveredWidget</a> ()</td></tr>
<tr class="memdesc:ac4a7e054c5a5e52d37f1ff38f5328e9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Widget the mouse is hovering over.  <a href="#ac4a7e054c5a5e52d37f1ff38f5328e9e">More...</a><br/></td></tr>
<tr class="separator:ac4a7e054c5a5e52d37f1ff38f5328e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e3cd00f851c07ba4f5d8a7f1a867b19"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a9e3cd00f851c07ba4f5d8a7f1a867b19">GetImplementationTypeName</a> () const </td></tr>
<tr class="memdesc:a9e3cd00f851c07ba4f5d8a7f1a867b19"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#a9e3cd00f851c07ba4f5d8a7f1a867b19">More...</a><br/></td></tr>
<tr class="separator:a9e3cd00f851c07ba4f5d8a7f1a867b19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa900905eb59df281fd329c3f0f11f1ef"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#aa900905eb59df281fd329c3f0f11f1ef">GetInterfaceType</a> () const </td></tr>
<tr class="memdesc:aa900905eb59df281fd329c3f0f11f1ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#aa900905eb59df281fd329c3f0f11f1ef">More...</a><br/></td></tr>
<tr class="separator:aa900905eb59df281fd329c3f0f11f1ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a847efdfe7496f7bf3aeaef9991a3a631"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a847efdfe7496f7bf3aeaef9991a3a631">GetNumScreens</a> ()</td></tr>
<tr class="memdesc:a847efdfe7496f7bf3aeaef9991a3a631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of screens created and stored in this manager.  <a href="#a847efdfe7496f7bf3aeaef9991a3a631">More...</a><br/></td></tr>
<tr class="separator:a847efdfe7496f7bf3aeaef9991a3a631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11a4962c5f55d915d01a5598afcff6d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a11a4962c5f55d915d01a5598afcff6d6">GetScreen</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:a11a4962c5f55d915d01a5598afcff6d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an already created screen by name.  <a href="#a11a4962c5f55d915d01a5598afcff6d6">More...</a><br/></td></tr>
<tr class="separator:a11a4962c5f55d915d01a5598afcff6d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ac35a5f9781c460416fd6bfab65e5e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a6ac35a5f9781c460416fd6bfab65e5e7">GetScreen</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a6ac35a5f9781c460416fd6bfab65e5e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an already created screen by index.  <a href="#a6ac35a5f9781c460416fd6bfab65e5e7">More...</a><br/></td></tr>
<tr class="separator:a6ac35a5f9781c460416fd6bfab65e5e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34beacbbd550c2a4d730e511d65e89d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ab34beacbbd550c2a4d730e511d65e89d">GetVisibleScreenOnViewport</a> (<a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *WindowViewport)</td></tr>
<tr class="memdesc:ab34beacbbd550c2a4d730e511d65e89d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently visible screen on the provided viewport.  <a href="#ab34beacbbd550c2a4d730e511d65e89d">More...</a><br/></td></tr>
<tr class="separator:ab34beacbbd550c2a4d730e511d65e89d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4fda10f2f5af5df7ecbc089eb1ee359"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ac4fda10f2f5af5df7ecbc089eb1ee359">GetWidgetCapturingInput</a> ()</td></tr>
<tr class="memdesc:ac4fda10f2f5af5df7ecbc089eb1ee359"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the widget that is currently capturing input.  <a href="#ac4fda10f2f5af5df7ecbc089eb1ee359">More...</a><br/></td></tr>
<tr class="separator:ac4fda10f2f5af5df7ecbc089eb1ee359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57b306a3fca917e2dfa1c05ca87f6262"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a57b306a3fca917e2dfa1c05ca87f6262">GetWidgetFocus</a> ()</td></tr>
<tr class="memdesc:a57b306a3fca917e2dfa1c05ca87f6262"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current widget being controlled.  <a href="#a57b306a3fca917e2dfa1c05ca87f6262">More...</a><br/></td></tr>
<tr class="separator:a57b306a3fca917e2dfa1c05ca87f6262"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51dc53c08ac8657133279e75fbce466a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a51dc53c08ac8657133279e75fbce466a">Initialize</a> ()</td></tr>
<tr class="memdesc:a51dc53c08ac8657133279e75fbce466a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure Items requiring other Managers.  <a href="#a51dc53c08ac8657133279e75fbce466a">More...</a><br/></td></tr>
<tr class="separator:a51dc53c08ac8657133279e75fbce466a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78c3b7a0aafc83e0b4ea55b0b0ad640c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a78c3b7a0aafc83e0b4ea55b0b0ad640c">LoadMTA</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group=&quot;UI&quot;)</td></tr>
<tr class="memdesc:a78c3b7a0aafc83e0b4ea55b0b0ad640c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a <a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a> Texture Atlas file for use with <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>'s.  <a href="#a78c3b7a0aafc83e0b4ea55b0b0ad640c">More...</a><br/></td></tr>
<tr class="separator:a78c3b7a0aafc83e0b4ea55b0b0ad640c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f3ea82551d2a894545235f4a9cba549"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a7f3ea82551d2a894545235f4a9cba549">MouseIsInUISystem</a> ()</td></tr>
<tr class="memdesc:a7f3ea82551d2a894545235f4a9cba549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the mouse is over a <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> element.  <a href="#a7f3ea82551d2a894545235f4a9cba549">More...</a><br/></td></tr>
<tr class="separator:a7f3ea82551d2a894545235f4a9cba549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62fe2ec9d4dad13762aa154f65d707a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a62fe2ec9d4dad13762aa154f65d707a7">RedrawAll</a> (bool Force=false)</td></tr>
<tr class="memdesc:a62fe2ec9d4dad13762aa154f65d707a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces everything loaded into the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> system to be redrawn.  <a href="#a62fe2ec9d4dad13762aa154f65d707a7">More...</a><br/></td></tr>
<tr class="separator:a62fe2ec9d4dad13762aa154f65d707a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a294aa11be082a4d3130e7aedf34747c8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a294aa11be082a4d3130e7aedf34747c8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a294aa11be082a4d3130e7aedf34747c8">RemoveAllAutoRegisterCodes</a> ()</td></tr>
<tr class="memdesc:a294aa11be082a4d3130e7aedf34747c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all auto-registering input codes. <br/></td></tr>
<tr class="separator:a294aa11be082a4d3130e7aedf34747c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae08dfa033157e91247ca95bae4d3fd7f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae08dfa033157e91247ca95bae4d3fd7f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ae08dfa033157e91247ca95bae4d3fd7f">RemoveAllHotKeys</a> ()</td></tr>
<tr class="memdesc:ae08dfa033157e91247ca95bae4d3fd7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all registered hotkeys. <br/></td></tr>
<tr class="separator:ae08dfa033157e91247ca95bae4d3fd7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a129cd96269e23a33c38a6c6dfe149fc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a129cd96269e23a33c38a6c6dfe149fc2">RemoveAutoRegisterCode</a> (<a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> Code)</td></tr>
<tr class="memdesc:a129cd96269e23a33c38a6c6dfe149fc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a previously set auto-registering input code.  <a href="#a129cd96269e23a33c38a6c6dfe149fc2">More...</a><br/></td></tr>
<tr class="separator:a129cd96269e23a33c38a6c6dfe149fc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10d0c53e12e365d4e48ef9daab155817"><td class="memItemLeft" align="right" valign="top">GlyphIndexResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#a10d0c53e12e365d4e48ef9daab155817">SuggestGlyphIndex</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Height, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas)</td></tr>
<tr class="memdesc:a10d0c53e12e365d4e48ef9daab155817"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suggests a glyph index based on the desired actual height.  <a href="#a10d0c53e12e365d4e48ef9daab155817">More...</a><br/></td></tr>
<tr class="separator:a10d0c53e12e365d4e48ef9daab155817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab08ca0871b87c2f2ad098bdbdb3ab386"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UIManager.xhtml#ab08ca0871b87c2f2ad098bdbdb3ab386">UnbindHotKey</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;HotKey, <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> *BoundButton)</td></tr>
<tr class="memdesc:ab08ca0871b87c2f2ad098bdbdb3ab386"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a previously set hotkey binding.  <a href="#ab08ca0871b87c2f2ad098bdbdb3ab386">More...</a><br/></td></tr>
<tr class="separator:ab08ca0871b87c2f2ad098bdbdb3ab386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconstructor.  <a href="#a04cb832dc79f4559cc5b2f57cabfa70d">More...</a><br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff151003c2370c857dadb67148faffc inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acff151003c2370c857dadb67148faffc"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acff151003c2370c857dadb67148faffc">ErasePostMainLoopItems</a> ()</td></tr>
<tr class="memdesc:acff151003c2370c857dadb67148faffc inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This simply calls <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ec52058f4c8a3f1c5fb20230b4fc301" title="This assigns a function to be the callback function to run prior to the main loop.">SetPostMainLoopItems()</a> passing it 0. <br/></td></tr>
<tr class="separator:acff151003c2370c857dadb67148faffc inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f1b8b02c34ccfd72040a7183fc3cba1 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1f1b8b02c34ccfd72040a7183fc3cba1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a1f1b8b02c34ccfd72040a7183fc3cba1">ErasePreMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a1f1b8b02c34ccfd72040a7183fc3cba1 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This simply calls <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a84dd669c15e9db08c9efbc84c4fa3b0b" title="This assigns a function to be the callback function to run prior to the main loop.">SetPreMainLoopItems()</a> passing it 0. <br/></td></tr>
<tr class="separator:a1f1b8b02c34ccfd72040a7183fc3cba1 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02a9788d7a83de123083ce3bfdcef4b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa02a9788d7a83de123083ce3bfdcef4b">GetPostMainLoopItems</a> () const </td></tr>
<tr class="memdesc:aa02a9788d7a83de123083ce3bfdcef4b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the Callback that would be called before the main loop items.  <a href="#aa02a9788d7a83de123083ce3bfdcef4b">More...</a><br/></td></tr>
<tr class="separator:aa02a9788d7a83de123083ce3bfdcef4b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1ede605b127aeb1a96e226284c318ce inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#af1ede605b127aeb1a96e226284c318ce">GetPreMainLoopItems</a> () const </td></tr>
<tr class="memdesc:af1ede605b127aeb1a96e226284c318ce inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the Callback that would be called before the main loop items.  <a href="#af1ede605b127aeb1a96e226284c318ce">More...</a><br/></td></tr>
<tr class="separator:af1ede605b127aeb1a96e226284c318ce inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acb88dc379867430e76d328028862f0 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9acb88dc379867430e76d328028862f0">GetPriority</a> ()</td></tr>
<tr class="memdesc:a9acb88dc379867430e76d328028862f0 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the Priority of this manager.  <a href="#a9acb88dc379867430e76d328028862f0">More...</a><br/></td></tr>
<tr class="separator:a9acb88dc379867430e76d328028862f0 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade516a30e6d24b4ffd1accf1b1efd948 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ade516a30e6d24b4ffd1accf1b1efd948">IsInitialized</a> ()</td></tr>
<tr class="memdesc:ade516a30e6d24b4ffd1accf1b1efd948 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#ade516a30e6d24b4ffd1accf1b1efd948">More...</a><br/></td></tr>
<tr class="separator:ade516a30e6d24b4ffd1accf1b1efd948 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a1bfb2a137c6013a8a5e5fae4c4bb85 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a2a1bfb2a137c6013a8a5e5fae4c4bb85">PostMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a2a1bfb2a137c6013a8a5e5fae4c4bb85 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This runs any callback that is required after the mainloop items are run.  <a href="#a2a1bfb2a137c6013a8a5e5fae4c4bb85">More...</a><br/></td></tr>
<tr class="separator:a2a1bfb2a137c6013a8a5e5fae4c4bb85 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e0f19b5472eab47fbcd986656838070 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9e0f19b5472eab47fbcd986656838070">PreMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a9e0f19b5472eab47fbcd986656838070 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This runs any callback that is required before the mainloop items are run.  <a href="#a9e0f19b5472eab47fbcd986656838070">More...</a><br/></td></tr>
<tr class="separator:a9e0f19b5472eab47fbcd986656838070 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec52058f4c8a3f1c5fb20230b4fc301 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ec52058f4c8a3f1c5fb20230b4fc301">SetPostMainLoopItems</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> PostMainCallback)</td></tr>
<tr class="memdesc:a4ec52058f4c8a3f1c5fb20230b4fc301 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This assigns a function to be the callback function to run prior to the main loop.  <a href="#a4ec52058f4c8a3f1c5fb20230b4fc301">More...</a><br/></td></tr>
<tr class="separator:a4ec52058f4c8a3f1c5fb20230b4fc301 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84dd669c15e9db08c9efbc84c4fa3b0b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a84dd669c15e9db08c9efbc84c4fa3b0b">SetPreMainLoopItems</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> PreMainCallback)</td></tr>
<tr class="memdesc:a84dd669c15e9db08c9efbc84c4fa3b0b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This assigns a function to be the callback function to run prior to the main loop.  <a href="#a84dd669c15e9db08c9efbc84c4fa3b0b">More...</a><br/></td></tr>
<tr class="separator:a84dd669c15e9db08c9efbc84c4fa3b0b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71cd03e0a60427a1ee22637a3cc1b3e inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac71cd03e0a60427a1ee22637a3cc1b3e">SetPriority</a> (short int Priority_)</td></tr>
<tr class="memdesc:ac71cd03e0a60427a1ee22637a3cc1b3e inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the Priority of this manager.  <a href="#ac71cd03e0a60427a1ee22637a3cc1b3e">More...</a><br/></td></tr>
<tr class="separator:ac71cd03e0a60427a1ee22637a3cc1b3e inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; UIManager &gt;</a></td></tr>
<tr class="memitem:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7174af94e201bdaeab717cdbcbb2e565"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a7174af94e201bdaeab717cdbcbb2e565">Singleton</a> ()</td></tr>
<tr class="memdesc:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e45fc3969b0fae3d095676cc515da1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a5e45fc3969b0fae3d095676cc515da1d">~Singleton</a> ()</td></tr>
<tr class="memdesc:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aa3ade43e619161f471cdc7e7e7516934"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa3ade43e619161f471cdc7e7e7516934"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearButtonActivations</b> ()</td></tr>
<tr class="separator:aa3ade43e619161f471cdc7e7e7516934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f632161ffdb1b501c90775bf73e3263"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5f632161ffdb1b501c90775bf73e3263"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>HotKeyActivationCheck</b> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Code)</td></tr>
<tr class="separator:a5f632161ffdb1b501c90775bf73e3263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29cfa15278319a32fcd9a72a169b2b72"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29cfa15278319a32fcd9a72a169b2b72"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>HotKeyAndInputCaptureChecks</b> ()</td></tr>
<tr class="separator:a29cfa15278319a32fcd9a72a169b2b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2cd8695b0ac7fda1f026236e4a566e1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa2cd8695b0ac7fda1f026236e4a566e1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>HoverChecks</b> ()</td></tr>
<tr class="separator:aa2cd8695b0ac7fda1f026236e4a566e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fc8dfb7ed9ff97074b7a0a5f6f50f33"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0fc8dfb7ed9ff97074b7a0a5f6f50f33"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>MouseActivationCheck</b> (<a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> *ToCheck)</td></tr>
<tr class="separator:a0fc8dfb7ed9ff97074b7a0a5f6f50f33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7fcc5f7129bee162fc55e7acfceca59"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af7fcc5f7129bee162fc55e7acfceca59"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ViewportUpdateChecks</b> ()</td></tr>
<tr class="separator:af7fcc5f7129bee162fc55e7acfceca59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67910b0b5ce851160e950c1ba3812573"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67910b0b5ce851160e950c1ba3812573"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetUpdates</b> ()</td></tr>
<tr class="separator:a67910b0b5ce851160e950c1ba3812573"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:adc2278d5819e23f2d9f2fb9be13bf259"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc2278d5819e23f2d9f2fb9be13bf259"></a>
ButtonContainer&#160;</td><td class="memItemRight" valign="bottom"><b>ActivatedButtons</b></td></tr>
<tr class="separator:adc2278d5819e23f2d9f2fb9be13bf259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55e18dfd92bb73eccf39b404206c1b1c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a55e18dfd92bb73eccf39b404206c1b1c"></a>
AtlasContainer&#160;</td><td class="memItemRight" valign="bottom"><b>Atlases</b></td></tr>
<tr class="separator:a55e18dfd92bb73eccf39b404206c1b1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a706349fe35bf871bc3b80863bcbce635"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a706349fe35bf871bc3b80863bcbce635"></a>
CodeContainer&#160;</td><td class="memItemRight" valign="bottom"><b>AutoRegisterCodes</b></td></tr>
<tr class="separator:a706349fe35bf871bc3b80863bcbce635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc3062c3692ab87358783f647dd23b94"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acc3062c3692ab87358783f647dd23b94"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ButtonAutoRegister</b></td></tr>
<tr class="separator:acc3062c3692ab87358783f647dd23b94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acec6a966ffba81f374d0bbf5641cdeff"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acec6a966ffba81f374d0bbf5641cdeff"></a>
HotKeyContainer&#160;</td><td class="memItemRight" valign="bottom"><b>HotKeys</b></td></tr>
<tr class="separator:acec6a966ffba81f374d0bbf5641cdeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b60d5e81b1941a70d35e19f4a138e3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60b60d5e81b1941a70d35e19f4a138e3"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>HoveredWidget</b></td></tr>
<tr class="separator:a60b60d5e81b1941a70d35e19f4a138e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79ffa786184180adf026e8992973289c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a79ffa786184180adf026e8992973289c"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>InputCapture</b></td></tr>
<tr class="separator:a79ffa786184180adf026e8992973289c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a375acb1b3c751bc7e76f82d55f9d15d1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a375acb1b3c751bc7e76f82d55f9d15d1"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>LastWidgetSelected</b></td></tr>
<tr class="separator:a375acb1b3c751bc7e76f82d55f9d15d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc09e2cf091096d6e3e09e8467e538d5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc09e2cf091096d6e3e09e8467e538d5"></a>
ScreenContainer&#160;</td><td class="memItemRight" valign="bottom"><b>Screens</b></td></tr>
<tr class="separator:adc09e2cf091096d6e3e09e8467e538d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408262af0b7abc4af7573fda1955fcea"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a408262af0b7abc4af7573fda1955fcea"></a>
VisibleScreenContainer&#160;</td><td class="memItemRight" valign="bottom"><b>VisibleScreens</b></td></tr>
<tr class="separator:a408262af0b7abc4af7573fda1955fcea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ee130f7ac74f239e02c68919671afa4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee130f7ac74f239e02c68919671afa4"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetFocus</b></td></tr>
<tr class="separator:a6ee130f7ac74f239e02c68919671afa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab27f3f7458b9a6f2a08974d096125ed5 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab27f3f7458b9a6f2a08974d096125ed5">PostMainLoop</a></td></tr>
<tr class="memdesc:ab27f3f7458b9a6f2a08974d096125ed5 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a function pointer to the function that should be called after running Main Loop Items.  <a href="#ab27f3f7458b9a6f2a08974d096125ed5">More...</a><br/></td></tr>
<tr class="separator:ab27f3f7458b9a6f2a08974d096125ed5 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1652110258237bc313a02757229d0f47 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a1652110258237bc313a02757229d0f47">PreMainLoop</a></td></tr>
<tr class="memdesc:a1652110258237bc313a02757229d0f47 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a function pointer to the function that should be called before running Main Loop Items.  <a href="#a1652110258237bc313a02757229d0f47">More...</a><br/></td></tr>
<tr class="separator:a1652110258237bc313a02757229d0f47 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96fb02bf2f4e8b4afe70dedd0d8c6ac9 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9">Priority</a></td></tr>
<tr class="memdesc:a96fb02bf2f4e8b4afe70dedd0d8c6ac9 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a weighting used by the main loop to decide what order the managers should be called in.  <a href="#a96fb02bf2f4e8b4afe70dedd0d8c6ac9">More...</a><br/></td></tr>
<tr class="separator:a96fb02bf2f4e8b4afe70dedd0d8c6ac9 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the world.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6e93778e4b8cead1d8fc57ed386a012a inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6e93778e4b8cead1d8fc57ed386a012a">GetTypeNameAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:a6e93778e4b8cead1d8fc57ed386a012a inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#a6e93778e4b8cead1d8fc57ed386a012a">More...</a><br/></td></tr>
<tr class="separator:a6e93778e4b8cead1d8fc57ed386a012a inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5388364067d067e43136ab948af5451b inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a5388364067d067e43136ab948af5451b">GetTypeNameFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:a5388364067d067e43136ab948af5451b inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#a5388364067d067e43136ab948af5451b">More...</a><br/></td></tr>
<tr class="separator:a5388364067d067e43136ab948af5451b inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; UIManager &gt;</a></td></tr>
<tr class="memitem:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1UIManager.xhtml">UIManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67">GetSingletonPtr</a> ()</td></tr>
<tr class="memdesc:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetches a pointer to the singleton.  <a href="#a78fc425584913f0b2c615ec440871a67">More...</a><br/></td></tr>
<tr class="separator:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9">SingletonValid</a> ()</td></tr>
<tr class="memdesc:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the singleton pointer is valid.  <a href="#a554165fe3e4b594b678d64215fd7a6f9">More...</a><br/></td></tr>
<tr class="separator:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_attribs_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; UIManager &gt;</a></td></tr>
<tr class="memitem:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0db9959ccd7daa1345f4567aa0b0655d"></a>
static <a class="el" href="classMezzanine_1_1UIManager.xhtml">UIManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>SingletonPtr</b></td></tr>
<tr class="separator:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is responsible for any and all user interactions with the User interface/HUD. </p>
<p>Currently, you have to create the UI/HUD in code. Font and sprite data is loaded through a premade mta file(*.mta). </p>

<p>Definition at line <a class="el" href="uimanager_8h_source.xhtml#l00077">77</a> of file <a class="el" href="uimanager_8h_source.xhtml">uimanager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7d9205e916c67a75f6af55c038642b29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::UIManager::UIManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">XMLNode</td><td>The node of the xml document to construct from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000078">Todo:</a></b></dt><dd>This class currently doesn't initialize anything from <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a>, if that changes this constructor needs to be expanded. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7f28a7fbc0ea37df3c53bbd17549837b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::_NotifyScreenVisibility </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *&#160;</td>
          <td class="paramname"><em>BeingShown</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Visible</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the screen that will be visible on the viewport it is bound to. </p>
<dl class="section remark"><dt>Remarks</dt><dd>Only one screen may be visible at a time on a given viewport. This function updates the other screens so they are hidden when this screen becomes visible. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">BeingShown</td><td>The screen being set to visible. </td></tr>
    <tr><td class="paramname">Visible</td><td>The state of the screen's visibility. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00511">511</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a293f7af73b027ce667fed5a7c6211738"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::AddAutoRegisterCode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a>&#160;</td>
          <td class="paramname"><em>Code</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a key or button that will be auto-registered with every created <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> button. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Code</td><td>The input code for the keyboard key or mouse button to be added to the list of codes to be auto-registered. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00349">349</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9d8cc26ef8d2b8df8312eaeea184dd7b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::BindHotKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>HotKey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> *&#160;</td>
          <td class="paramname"><em>BoundButton</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binds a key to a button. </p>
<p>This function allows buttons to behave like they are pressed without mouse input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">HotKey</td><td>The key or button (on the input device) to activate the button. </td></tr>
    <tr><td class="paramname">BoundButton</td><td>The button being bound to the hotkey. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00315">315</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7e88a8d25ae95440032333179f2f493f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::UIManager::ButtonAutoRegisterEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not the ButtonAutoRegister feature is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a bool indicating whether or not the ButtonAutoRegister feature is enabled. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00344">344</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab12c172934cb6836e97568266d973e50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> * Mezzanine::UIManager::CheckWidgetMouseIsOver </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Searches all visable screens and layers to see if a widget was clicked. </p>
<p>This is called automatically once every frame. Should only be called on manually if you need more then one check per frame. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the widget clicked if there is one, NULL if not. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00392">392</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7dee096496bf1d4b5cf3002a40146525"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> * Mezzanine::UIManager::CreateScreen </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ScreenName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td>
          <td class="paramname"><em>WindowViewport</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an internal HUD screen. </p>
<p>Screens are the base set of renderable <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> you can use, allowing you to switch entire sets of <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a>'s on the fly if needed. For performance reasons you should always keep the number of screens you create to a minimum. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ScreenName</td><td>The name to be given to the screen. </td></tr>
    <tr><td class="paramname">Atlas</td><td>The name of a previously loaded mta file to be used with this screen. </td></tr>
    <tr><td class="paramname">WindowViewport</td><td>The viewport to create this screen in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00239">239</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8634d75235a218f1b7c77a33fb2c4273"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::DestroyScreen </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> *&#160;</td>
          <td class="paramname"><em>Screen</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes a screen and removes all trace of it from the manager. </p>
<p>Destroying a screen will also destroy all of it's layers, and everything contained in those layers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Screen</td><td>The screen to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af774da651d30b4fe1ea086899c1961ca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::DoMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The main loop calls this once per frame. </p>
<p>This is where each manager is expected to put anything that needs to be run each iteration of the main loop </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ee29e4baf6c4b9a3bfec1b2258d5cd2">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00493">493</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5dda002532786846f076ed9c685af2f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::EnableButtonAutoRegister </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables whether or not to automatically set the activation key or button for <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> buttons. </p>
<p>If true, this will cause every <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> button to have keyboard keys or mouse buttons added with AddButtonAutoRegister() to be added as activation keys or buttons immediately after they are created. <br/>
 Default: False. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>Whether or not to enable this feature. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00339">339</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a904d4d7a3957a13cf5e27e8d97dd1add"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a> * Mezzanine::UIManager::GetAtlas </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>AtlasName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a loaded Atlas being stored in this manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AtlasName</td><td>The name of the Atlas, which is usually the name of the file without the extension. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the requested Atlas, or NULL if it doesn't exist. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000079">Todo:</a></b></dt><dd>These NULL returns should probably be exceptions. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00222">222</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a20dcc620a26bc2cce1094f810aca4500"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">UIManager::CodeContainer * Mezzanine::UIManager::GetAutoRegisteredCodes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the list of codes that will be auto-registered with each <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> button. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the vector containing all the codes to be auto-registered with every <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> button. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00376">376</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac4a7e054c5a5e52d37f1ff38f5328e9e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> * Mezzanine::UIManager::GetHoveredWidget </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Widget the mouse is hovering over. </p>
<p>If the widget found during widget checks belongs to a widget, this will get that widget. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the widget, or NULL if it's not over any visable buttons. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00470">470</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9e3cd00f851c07ba4f5d8a7f1a867b19"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::UIManager::GetImplementationTypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This Allows any manager name to be sent to a stream. Primarily used for logging. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a String that contains the name. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00505">505</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa900905eb59df281fd329c3f0f11f1ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::UIManager::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00502">502</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a847efdfe7496f7bf3aeaef9991a3a631"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::UIManager::GetNumScreens </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of screens created and stored in this manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of screens this manager is storing. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00273">273</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a11a4962c5f55d915d01a5598afcff6d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> * Mezzanine::UIManager::GetScreen </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an already created screen by name. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the screen of the specified name. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00255">255</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6ac35a5f9781c460416fd6bfab65e5e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> * Mezzanine::UIManager::GetScreen </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an already created screen by index. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the screen at the specified index. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00268">268</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab34beacbbd550c2a4d730e511d65e89d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">UI::Screen</a> * Mezzanine::UIManager::GetVisibleScreenOnViewport </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td>
          <td class="paramname"><em>WindowViewport</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the currently visible screen on the provided viewport. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WindowViewport</td><td>The viewport to check for a visible screen. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the screen currently being shown on the requested viewport. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00305">305</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac4fda10f2f5af5df7ecbc089eb1ee359"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> * Mezzanine::UIManager::GetWidgetCapturingInput </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the widget that is currently capturing input. </p>
<p>A widget that is currently capturing input will prevent hotkeys from working while active. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the widget that currently capturing input, or NULL if no widget is capturing input. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00480">480</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a57b306a3fca917e2dfa1c05ca87f6262"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">UI::Widget</a> * Mezzanine::UIManager::GetWidgetFocus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current widget being controlled. </p>
<p>The widget control is used mostly for manipulating widgets while the mouse is not currently hovering over them, such as the click and drag action of scrollbars and resizing windows. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the currently controlled widget, or NULL if none are being controlled this frame. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00475">475</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a51dc53c08ac8657133279e75fbce466a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configure Items requiring other Managers. </p>
<p>If you are using the <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a> this is called when Mezzanine::World::GameInit() is called. It is expected that by the time this is called either ManagerBase::ManagerBase(World*) or ManagerBase::SetGameWorld(World*) will have been called. This is where all configuration that requires atleast one other manager on the <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a> to exist.<br/>
<br/>
 Yes we know it is spelled wrong, but are Zs cooler anyway. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a864e3cac11928a602c1db28fa2d52ee2">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00488">488</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a78c3b7a0aafc83e0b4ea55b0b0ad640c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::LoadMTA </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em> = <code>&quot;UI&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Loads a <a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a> Texture Atlas file for use with <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>'s. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the file to be loaded, not including the extension. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group where the MTA file can be found. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00216">216</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7f3ea82551d2a894545235f4a9cba549"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::UIManager::MouseIsInUISystem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks to see if the mouse is over a <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> element. </p>
<p>This should only be called on after this manager does it's main loop items for best results. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the mouse is over a visable <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> element, false if not. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00408">408</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a62fe2ec9d4dad13762aa154f65d707a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::RedrawAll </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Force</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Forces everything loaded into the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> system to be redrawn. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Force</td><td>If Force is set to true, it will redraw everything regardless of if it has changed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00384">384</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a129cd96269e23a33c38a6c6dfe149fc2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::RemoveAutoRegisterCode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a>&#160;</td>
          <td class="paramname"><em>Code</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a previously set auto-registering input code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Code</td><td>The input code to be removed from the list of auto-registering codes. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00359">359</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a10d0c53e12e365d4e48ef9daab155817"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">UIManager::GlyphIndexResult Mezzanine::UIManager::SuggestGlyphIndex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Suggests a glyph index based on the desired actual height. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Height</td><td>The desired Height of the glyph wanted in pixels. </td></tr>
    <tr><td class="paramname">Atlas</td><td>The altas to search. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a std::pair, First is a whole for the Glyph index and second is a Real for the scaling that should be provided to it. </dd></dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00413">413</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab08ca0871b87c2f2ad098bdbdb3ab386"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UIManager::UnbindHotKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>HotKey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">UI::Button</a> *&#160;</td>
          <td class="paramname"><em>BoundButton</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a previously set hotkey binding. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">HotKey</td><td>The key or button (on the input device) to activate the button. </td></tr>
    <tr><td class="paramname">BoundButton</td><td>The button currently bound to the hotkey. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="uimanager_8cpp_source.xhtml#l00321">321</a> of file <a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="uimanager_8h_source.xhtml">uimanager.h</a></li>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="uimanager_8cpp_source.xhtml">uimanager.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Jun 20 2013 20:29:53 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
