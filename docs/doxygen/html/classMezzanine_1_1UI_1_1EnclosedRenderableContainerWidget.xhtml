<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::UI::EnclosedRenderableContainerWidget Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1UI.xhtml">UI</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml">EnclosedRenderableContainerWidget</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::UI::EnclosedRenderableContainerWidget Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is an abstract class for the creation and storage of widgets to be used by other classes.  
 <a href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::UI::EnclosedRenderableContainerWidget:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget__inherit__graph.svg" width="235" height="459"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::UI::EnclosedRenderableContainerWidget:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a898cffaaaf9cb7df1c9359ca1cc890dc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a898cffaaaf9cb7df1c9359ca1cc890dc"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetAreaRenderableInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>AreaRenderableInfoContainer</b></td></tr>
<tr class="memitem:a8a7e18b22c7737eafefa14c01f71363d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8a7e18b22c7737eafefa14c01f71363d"></a>
typedef <br class="typebreak"/>
AreaRenderableInfoContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>AreaRenderableInfoIterator</b></td></tr>
<tr class="memitem:a2335c899627b29933bf98ed4cfa8e5a5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2335c899627b29933bf98ed4cfa8e5a5"></a>
typedef <br class="typebreak"/>
AreaRenderableInfoContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstAreaRenderableInfoIterator</b></td></tr>
<tr class="memitem:a0968e067c90d516a646286c4d5a9ac82"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0968e067c90d516a646286c4d5a9ac82"></a>
typedef <br class="typebreak"/>
WidgetInfoContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstWidgetInfoIterator</b></td></tr>
<tr class="memitem:a2ab925974fbe81d2e27a3cc2eb160c7e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2ab925974fbe81d2e27a3cc2eb160c7e"></a>
typedef <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">ResizingInfo</a><br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>OffsetAreaRenderableInfo</b></td></tr>
<tr class="memitem:a16ab8cadfe3d2d4c9f6e671afd026fb8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a16ab8cadfe3d2d4c9f6e671afd026fb8"></a>
typedef <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">ResizingInfo</a>&lt; <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>OffsetWidgetInfo</b></td></tr>
<tr class="memitem:acf286f566025b2033a655a6b8f67d89c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acf286f566025b2033a655a6b8f67d89c"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetWidgetInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetInfoContainer</b></td></tr>
<tr class="memitem:ad2852b1182a2c6e4f019fdeb4709d98b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad2852b1182a2c6e4f019fdeb4709d98b"></a>
typedef <br class="typebreak"/>
WidgetInfoContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetInfoIterator</b></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4e8cd1227f255c0d6a43089c49cb9cd8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a4e8cd1227f255c0d6a43089c49cb9cd8">CreateButton</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:a4e8cd1227f255c0d6a43089c49cb9cd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a button.   <a href="#a4e8cd1227f255c0d6a43089c49cb9cd8"></a><br/></td></tr>
<tr class="memitem:a8d0dbbe4fc86c65598540389909052af"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a8d0dbbe4fc86c65598540389909052af">CreateButton</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml">Glyph</a>, <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Text)</td></tr>
<tr class="memdesc:a8d0dbbe4fc86c65598540389909052af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a text button.   <a href="#a8d0dbbe4fc86c65598540389909052af"></a><br/></td></tr>
<tr class="memitem:a9a4f770b56f885f62a9f430d40cc1f9f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a9a4f770b56f885f62a9f430d40cc1f9f">CreateButton</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Text)</td></tr>
<tr class="memdesc:a9a4f770b56f885f62a9f430d40cc1f9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a text button.   <a href="#a9a4f770b56f885f62a9f430d40cc1f9f"></a><br/></td></tr>
<tr class="memitem:a442e63f3233c989af55d39b58090ba5b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Caption.xhtml">Caption</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a442e63f3233c989af55d39b58090ba5b">CreateCaption</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml">Glyph</a>, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a442e63f3233c989af55d39b58090ba5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a caption.   <a href="#a442e63f3233c989af55d39b58090ba5b"></a><br/></td></tr>
<tr class="memitem:a473efbbc03885060a609e6184753eca7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Caption.xhtml">Caption</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a473efbbc03885060a609e6184753eca7">CreateCaption</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a473efbbc03885060a609e6184753eca7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a caption.   <a href="#a473efbbc03885060a609e6184753eca7"></a><br/></td></tr>
<tr class="memitem:a63d440835f833da20652dcae48328140"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml">CheckBox</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a63d440835f833da20652dcae48328140">CreateCheckBox</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;LabelText)</td></tr>
<tr class="memdesc:a63d440835f833da20652dcae48328140"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>.   <a href="#a63d440835f833da20652dcae48328140"></a><br/></td></tr>
<tr class="memitem:ac9fb9c63f47769ee2e13a55146440981"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1DropDownList.xhtml">DropDownList</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#ac9fb9c63f47769ee2e13a55146440981">CreateDropDownList</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;ScrollStyle)</td></tr>
<tr class="memdesc:ac9fb9c63f47769ee2e13a55146440981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a drop down list.   <a href="#ac9fb9c63f47769ee2e13a55146440981"></a><br/></td></tr>
<tr class="memitem:abd6a1a3e68dfec4a700deb5b58a5925d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1ListBox.xhtml">ListBox</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#abd6a1a3e68dfec4a700deb5b58a5925d">CreateListBox</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;<a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">ScrollbarStyle</a>)</td></tr>
<tr class="memdesc:abd6a1a3e68dfec4a700deb5b58a5925d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a List Box.   <a href="#abd6a1a3e68dfec4a700deb5b58a5925d"></a><br/></td></tr>
<tr class="memitem:a021fe89aef6d5320ce9901176abd73a1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1MarkupText.xhtml">MarkupText</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a021fe89aef6d5320ce9901176abd73a1">CreateMarkupText</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml">Glyph</a>, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a021fe89aef6d5320ce9901176abd73a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a markup text.   <a href="#a021fe89aef6d5320ce9901176abd73a1"></a><br/></td></tr>
<tr class="memitem:a0fefa73467ea446c452ac1b619d9bf14"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1MarkupText.xhtml">MarkupText</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a0fefa73467ea446c452ac1b619d9bf14">CreateMarkupText</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a0fefa73467ea446c452ac1b619d9bf14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a markup text.   <a href="#a0fefa73467ea446c452ac1b619d9bf14"></a><br/></td></tr>
<tr class="memitem:a8733e1df2065dd21b444d50d35d2123d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml">PagedCellGrid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a8733e1df2065dd21b444d50d35d2123d">CreatePagedCellGrid</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;SpnRect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;SStyle, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;GlyphHeight)</td></tr>
<tr class="memdesc:a8733e1df2065dd21b444d50d35d2123d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a paged cell grid.   <a href="#a8733e1df2065dd21b444d50d35d2123d"></a><br/></td></tr>
<tr class="memitem:a4f1a5fb306a16812458f48e7c35f9732"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Rectangle.xhtml">Rectangle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a4f1a5fb306a16812458f48e7c35f9732">CreateRectangle</a> (const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:a4f1a5fb306a16812458f48e7c35f9732"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a rectangle.   <a href="#a4f1a5fb306a16812458f48e7c35f9732"></a><br/></td></tr>
<tr class="memitem:ab8424bfd555dd428c64405558c43fe5f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml">Scrollbar</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#ab8424bfd555dd428c64405558c43fe5f">CreateScrollbar</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;Style)</td></tr>
<tr class="memdesc:ab8424bfd555dd428c64405558c43fe5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>.   <a href="#ab8424bfd555dd428c64405558c43fe5f"></a><br/></td></tr>
<tr class="memitem:a859b769e9745f97bb4d56e5acc51259a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml">ScrolledCellGrid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a859b769e9745f97bb4d56e5acc51259a">CreateScrolledCellGrid</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Thickness, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;Style)</td></tr>
<tr class="memdesc:a859b769e9745f97bb4d56e5acc51259a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a scrolled cell grid.   <a href="#a859b769e9745f97bb4d56e5acc51259a"></a><br/></td></tr>
<tr class="memitem:a428494a9fd7965623faf2b224770c672"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml">Spinner</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a428494a9fd7965623faf2b224770c672">CreateSpinner</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;SStyle, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;GlyphHeight)</td></tr>
<tr class="memdesc:a428494a9fd7965623faf2b224770c672"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>.   <a href="#a428494a9fd7965623faf2b224770c672"></a><br/></td></tr>
<tr class="memitem:af271736ebf2f31d63a23dfb23583201a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1TabSet.xhtml">TabSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#af271736ebf2f31d63a23dfb23583201a">CreateTabSet</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml#ab1ec51313909e48a444cb2a658b9d442">SetRect</a>)</td></tr>
<tr class="memdesc:af271736ebf2f31d63a23dfb23583201a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a tabset.   <a href="#af271736ebf2f31d63a23dfb23583201a"></a><br/></td></tr>
<tr class="memitem:a52bbcf2c9f0223a56d44ea9e6852f48c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a52bbcf2c9f0223a56d44ea9e6852f48c">DestroyAllAreaRenderables</a> ()</td></tr>
<tr class="memdesc:a52bbcf2c9f0223a56d44ea9e6852f48c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all AreaRenderables in this widget.   <a href="#a52bbcf2c9f0223a56d44ea9e6852f48c"></a><br/></td></tr>
<tr class="memitem:a2a306535a92ec7bc68e4d13d2779fdc7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a2a306535a92ec7bc68e4d13d2779fdc7">DestroyAllWidgets</a> ()</td></tr>
<tr class="memdesc:a2a306535a92ec7bc68e4d13d2779fdc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all Widgets in this widget.   <a href="#a2a306535a92ec7bc68e4d13d2779fdc7"></a><br/></td></tr>
<tr class="memitem:ace7424cf6cb940c3a65ac03f9f012c7c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#ace7424cf6cb940c3a65ac03f9f012c7c">DestroyAreaRenderable</a> (<a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:ace7424cf6cb940c3a65ac03f9f012c7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a>.   <a href="#ace7424cf6cb940c3a65ac03f9f012c7c"></a><br/></td></tr>
<tr class="memitem:af992b205dddcc66fdaf231e2bef56a98"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#af992b205dddcc66fdaf231e2bef56a98">DestroyWidget</a> (<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:af992b205dddcc66fdaf231e2bef56a98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a widget.   <a href="#af992b205dddcc66fdaf231e2bef56a98"></a><br/></td></tr>
<tr class="memitem:a4f67fb1185e96c95b77327421feabac8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a4f67fb1185e96c95b77327421feabac8">GetAreaRenderable</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:a4f67fb1185e96c95b77327421feabac8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an already created <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by name.   <a href="#a4f67fb1185e96c95b77327421feabac8"></a><br/></td></tr>
<tr class="memitem:abe1e6402a1094e7897e7cc017c381511"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#abe1e6402a1094e7897e7cc017c381511">GetAreaRenderable</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:abe1e6402a1094e7897e7cc017c381511"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an already created <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by index.   <a href="#abe1e6402a1094e7897e7cc017c381511"></a><br/></td></tr>
<tr class="memitem:a8a7f6d343e8b1197d9acf996bd31d7f0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a8a7f6d343e8b1197d9acf996bd31d7f0">GetNumAreaRenderables</a> ()</td></tr>
<tr class="memdesc:a8a7f6d343e8b1197d9acf996bd31d7f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of widgets created and stored in this class.   <a href="#a8a7f6d343e8b1197d9acf996bd31d7f0"></a><br/></td></tr>
<tr class="memitem:aab4443b8f90e216c3e66222ca99fe341"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#aab4443b8f90e216c3e66222ca99fe341">GetNumWidgets</a> ()</td></tr>
<tr class="memdesc:aab4443b8f90e216c3e66222ca99fe341"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of widgets created and stored in this class.   <a href="#aab4443b8f90e216c3e66222ca99fe341"></a><br/></td></tr>
<tr class="memitem:ad9c5b049c26622216b8d8d3f46ef9892"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetAreaRenderableInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#ad9c5b049c26622216b8d8d3f46ef9892">GetOffsetAreaRenderableInfo</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:ad9c5b049c26622216b8d8d3f46ef9892"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the offset info struct for a <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by name.  <a href="#ad9c5b049c26622216b8d8d3f46ef9892"></a><br/></td></tr>
<tr class="memitem:a75ca06cbabdec4883388094bdbd1679a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetAreaRenderableInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a75ca06cbabdec4883388094bdbd1679a">GetOffsetAreaRenderableInfo</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a75ca06cbabdec4883388094bdbd1679a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the offset info struct for a <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by index.  <a href="#a75ca06cbabdec4883388094bdbd1679a"></a><br/></td></tr>
<tr class="memitem:acb64c005efeb8e4c2f1c19507c9900b0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetWidgetInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#acb64c005efeb8e4c2f1c19507c9900b0">GetOffsetWidgetInfo</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:acb64c005efeb8e4c2f1c19507c9900b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the OffsetWidgetInfo of an already created widget by name.  <a href="#acb64c005efeb8e4c2f1c19507c9900b0"></a><br/></td></tr>
<tr class="memitem:a2a6d95363fa4022e14859f57bdff90ec"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetWidgetInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a2a6d95363fa4022e14859f57bdff90ec">GetOffsetWidgetInfo</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a2a6d95363fa4022e14859f57bdff90ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the OffsetWidgetInfo of an already created widget by index.  <a href="#a2a6d95363fa4022e14859f57bdff90ec"></a><br/></td></tr>
<tr class="memitem:a9fe9ea0604969141ef408eace0f1ab31"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a9fe9ea0604969141ef408eace0f1ab31">GetWidget</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:a9fe9ea0604969141ef408eace0f1ab31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an already created widget by name.   <a href="#a9fe9ea0604969141ef408eace0f1ab31"></a><br/></td></tr>
<tr class="memitem:a1a3fa338210e7a54ff528c5728f824e4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a1a3fa338210e7a54ff528c5728f824e4">GetWidget</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a1a3fa338210e7a54ff528c5728f824e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an already created widget by index.   <a href="#a1a3fa338210e7a54ff528c5728f824e4"></a><br/></td></tr>
<tr class="memitem:a8a83a7303af13cae1a57b87fda5a8861"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Rectangle.xhtml">Rectangle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a8a83a7303af13cae1a57b87fda5a8861">GetWidgetBack</a> ()</td></tr>
<tr class="memdesc:a8a83a7303af13cae1a57b87fda5a8861"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the background object of this widget.  <a href="#a8a83a7303af13cae1a57b87fda5a8861"></a><br/></td></tr>
<tr class="memitem:a54a5a82b4fcf738b12856f429d6ba8cd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a54a5a82b4fcf738b12856f429d6ba8cd">SetActualPosition</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Position)</td></tr>
<tr class="memdesc:a54a5a82b4fcf738b12856f429d6ba8cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pixel position of this widget.   <a href="#a54a5a82b4fcf738b12856f429d6ba8cd"></a><br/></td></tr>
<tr class="memitem:a7b37efc3fd43817c46c46a6811d7dff1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a7b37efc3fd43817c46c46a6811d7dff1">SetActualSize</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Size)</td></tr>
<tr class="memdesc:a7b37efc3fd43817c46c46a6811d7dff1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pixel size of this widget.   <a href="#a7b37efc3fd43817c46c46a6811d7dff1"></a><br/></td></tr>
<tr class="memitem:af09b6e3ff1744f66f1c356b3819955d5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#af09b6e3ff1744f66f1c356b3819955d5">SetPosition</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Position)</td></tr>
<tr class="memdesc:af09b6e3ff1744f66f1c356b3819955d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the relative position of this widget.   <a href="#af09b6e3ff1744f66f1c356b3819955d5"></a><br/></td></tr>
<tr class="memitem:abc31941a27390b67a840ba0a63dd75af"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#abc31941a27390b67a840ba0a63dd75af">SetSize</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Size)</td></tr>
<tr class="memdesc:abc31941a27390b67a840ba0a63dd75af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the relative size of this widget.   <a href="#abc31941a27390b67a840ba0a63dd75af"></a><br/></td></tr>
<tr class="memitem:acb9f9315a1b566947e8d7be6762a9cf5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#acb9f9315a1b566947e8d7be6762a9cf5">UpdateDimensions</a> ()</td></tr>
<tr class="memdesc:acb9f9315a1b566947e8d7be6762a9cf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the dimensions of this renderable to match those of the new screen size.   <a href="#acb9f9315a1b566947e8d7be6762a9cf5"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a92028e1879a0fb3b751cf0138a4487ea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a92028e1879a0fb3b751cf0138a4487ea">EnclosedRenderableContainerWidget</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> *Parent)</td></tr>
<tr class="memdesc:a92028e1879a0fb3b751cf0138a4487ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#a92028e1879a0fb3b751cf0138a4487ea"></a><br/></td></tr>
<tr class="memitem:ad0573ec3a51ee2b7a13a89afd40dbda9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad0573ec3a51ee2b7a13a89afd40dbda9"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#ad0573ec3a51ee2b7a13a89afd40dbda9">~EnclosedRenderableContainerWidget</a> ()</td></tr>
<tr class="memdesc:ad0573ec3a51ee2b7a13a89afd40dbda9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a06f2b62092e9daacf048ab6069a861ba"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a06f2b62092e9daacf048ab6069a861ba">CalculateOffset</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;NewSize, const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;OldSize, const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;EleOffset, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a1c571649db3aa98f4e16285b5b754928">UI::ResizeableAnchor</a> &amp;Anchor)</td></tr>
<tr class="memdesc:a06f2b62092e9daacf048ab6069a861ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates a new offset for an individual element.  <a href="#a06f2b62092e9daacf048ab6069a861ba"></a><br/></td></tr>
<tr class="memitem:afa7be8174f8a86a3feac963a7af761e5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#afa7be8174f8a86a3feac963a7af761e5">CalculateSize</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;NewSize, const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;OldSize, const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;EleSize, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a0334e290e4c9f6a5468fbe11164a17b9">UI::ResizeableTether</a> &amp;Tether)</td></tr>
<tr class="memdesc:afa7be8174f8a86a3feac963a7af761e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates a new size for an individual element.  <a href="#afa7be8174f8a86a3feac963a7af761e5"></a><br/></td></tr>
<tr class="memitem:adff5e5eb05cbb147cd624e6786adce6a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#adff5e5eb05cbb147cd624e6786adce6a">CheckMouseHoverImpl</a> ()</td></tr>
<tr class="memdesc:adff5e5eb05cbb147cd624e6786adce6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Child specific mouse hover method.  <a href="#adff5e5eb05cbb147cd624e6786adce6a"></a><br/></td></tr>
<tr class="memitem:aa162a1524371fdf5e1c19615823b1ada"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#aa162a1524371fdf5e1c19615823b1ada">SetArea</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Size)</td></tr>
<tr class="memdesc:aa162a1524371fdf5e1c19615823b1ada"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal function for setting the area(size) of this widget.  <a href="#aa162a1524371fdf5e1c19615823b1ada"></a><br/></td></tr>
<tr class="memitem:a3ddbad92b60fc0e4460d943d94256f0a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#a3ddbad92b60fc0e4460d943d94256f0a">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Position)</td></tr>
<tr class="memdesc:a3ddbad92b60fc0e4460d943d94256f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal function for setting the location(position) of this widget.  <a href="#a3ddbad92b60fc0e4460d943d94256f0a"></a><br/></td></tr>
<tr class="memitem:ae3b87a069cb15ade9e86d718561ad956"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml#ae3b87a069cb15ade9e86d718561ad956">SetVisibleImpl</a> (bool visible)</td></tr>
<tr class="memdesc:ae3b87a069cb15ade9e86d718561ad956"><td class="mdescLeft">&#160;</td><td class="mdescRight">Child specific visibility method.  <a href="#ae3b87a069cb15ade9e86d718561ad956"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml">Mezzanine::UI::RenderableContainerWidget</a></td></tr>
<tr class="memitem:a2af393506bb7afc21bc495657744f09d inherit pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a2af393506bb7afc21bc495657744f09d">RenderableContainerWidget</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;name, <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> *Parent)</td></tr>
<tr class="memdesc:a2af393506bb7afc21bc495657744f09d inherit pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#a2af393506bb7afc21bc495657744f09d"></a><br/></td></tr>
<tr class="memitem:afba020bc41f2f89cfbda5321b0b4800e inherit pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afba020bc41f2f89cfbda5321b0b4800e"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#afba020bc41f2f89cfbda5321b0b4800e">~RenderableContainerWidget</a> ()</td></tr>
<tr class="memdesc:afba020bc41f2f89cfbda5321b0b4800e inherit pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a0c63b5fa1eafe85c148da03054e6f258 inherit pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a0c63b5fa1eafe85c148da03054e6f258">UpdateImpl</a> (bool Force=false)</td></tr>
<tr class="memdesc:a0c63b5fa1eafe85c148da03054e6f258 inherit pro_methods_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="mdescLeft">&#160;</td><td class="mdescRight">Child specific update method.   <a href="#a0c63b5fa1eafe85c148da03054e6f258"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1UI_1_1Widget"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1UI_1_1Widget')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Mezzanine::UI::Widget</a></td></tr>
<tr class="memitem:af01bd9dac34138590840f33f3fce1690 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af01bd9dac34138590840f33f3fce1690"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml#af01bd9dac34138590840f33f3fce1690">AddSubRenderable</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> &amp;Zorder, <a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml">Renderable</a> *ToAdd)</td></tr>
<tr class="memdesc:af01bd9dac34138590840f33f3fce1690 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a renderable as a subrenderable to this widget. <br/></td></tr>
<tr class="memitem:ac33eda50168b2ce3486da48dfe009f23 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac33eda50168b2ce3486da48dfe009f23"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml#ac33eda50168b2ce3486da48dfe009f23">ProcessCapturedInputs</a> ()</td></tr>
<tr class="memdesc:ac33eda50168b2ce3486da48dfe009f23 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes the captured inputs. This is an empty function and should be overridden if making an input capturing widget. <br/></td></tr>
<tr class="memitem:a97501e385f6b767498d37bb9a7b259a3 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a97501e385f6b767498d37bb9a7b259a3"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml#a97501e385f6b767498d37bb9a7b259a3">SubWidgetFocusUpdate</a> (bool Force=false)</td></tr>
<tr class="memdesc:a97501e385f6b767498d37bb9a7b259a3 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="mdescLeft">&#160;</td><td class="mdescRight">For use with sub-widget update/automation when the mouse isn't hovered. <br/></td></tr>
<tr class="memitem:a6bd28cb7e338dbf0b0efa4a5fdba8b85 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6bd28cb7e338dbf0b0efa4a5fdba8b85"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml#a6bd28cb7e338dbf0b0efa4a5fdba8b85">SubWidgetUpdate</a> (bool Force=false)</td></tr>
<tr class="memdesc:a6bd28cb7e338dbf0b0efa4a5fdba8b85 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="mdescLeft">&#160;</td><td class="mdescRight">For use with sub-widget update/automation. <br/></td></tr>
<tr class="memitem:ac786f3985be97a2b5792b68ad69e5f56 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac786f3985be97a2b5792b68ad69e5f56"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml#ac786f3985be97a2b5792b68ad69e5f56">Update</a> (bool Force=false)</td></tr>
<tr class="memdesc:ac786f3985be97a2b5792b68ad69e5f56 inherit pro_methods_classMezzanine_1_1UI_1_1Widget"><td class="mdescLeft">&#160;</td><td class="mdescRight">For use with widget update/automation. <br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1UI_1_1Renderable"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1UI_1_1Renderable')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml">Mezzanine::UI::Renderable</a></td></tr>
<tr class="memitem:a074a6c1e1bcb847ee240509f5afcc714 inherit pro_methods_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml#a074a6c1e1bcb847ee240509f5afcc714">Renderable</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;name, <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> *Parent)</td></tr>
<tr class="memdesc:a074a6c1e1bcb847ee240509f5afcc714 inherit pro_methods_classMezzanine_1_1UI_1_1Renderable"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#a074a6c1e1bcb847ee240509f5afcc714"></a><br/></td></tr>
<tr class="memitem:ad6035362f60bcd8583069ff902baf68d inherit pro_methods_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad6035362f60bcd8583069ff902baf68d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml#ad6035362f60bcd8583069ff902baf68d">~Renderable</a> ()</td></tr>
<tr class="memdesc:ad6035362f60bcd8583069ff902baf68d inherit pro_methods_classMezzanine_1_1UI_1_1Renderable"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a2d9f5026ce3f4e06d7dc68041d14360f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2d9f5026ce3f4e06d7dc68041d14360f"></a>
AreaRenderableInfoContainer&#160;</td><td class="memItemRight" valign="bottom"><b>AreaRenderables</b></td></tr>
<tr class="memitem:ad1f2b1238b7c67db2221152b5739dc96"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1f2b1238b7c67db2221152b5739dc96"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Rectangle.xhtml">Rectangle</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetBack</b></td></tr>
<tr class="memitem:afa5ddddeabec854fe5e9f7698f80abbc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afa5ddddeabec854fe5e9f7698f80abbc"></a>
WidgetInfoContainer&#160;</td><td class="memItemRight" valign="bottom"><b>Widgets</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1UI_1_1RenderableContainerWidget')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml">Mezzanine::UI::RenderableContainerWidget</a></td></tr>
<tr class="memitem:a8180ef96e20043b5d081c3e99c4e048f inherit pro_attribs_classMezzanine_1_1UI_1_1RenderableContainerWidget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8180ef96e20043b5d081c3e99c4e048f"></a>
<a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RenderablesAdded</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1UI_1_1Widget"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1UI_1_1Widget')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Mezzanine::UI::Widget</a></td></tr>
<tr class="memitem:afd2c29ea6220e04fa735a8a04755e3ed inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afd2c29ea6220e04fa735a8a04755e3ed"></a>
<a class="el" href="classMezzanine_1_1UI_1_1InputCaptureData.xhtml">InputCaptureData</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CaptureData</b></td></tr>
<tr class="memitem:a7e0f63e5b8e80e1b41c5e01dfd6460a7 inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7e0f63e5b8e80e1b41c5e01dfd6460a7"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Hovered</b></td></tr>
<tr class="memitem:a66480b17725124bb7194bfe06ad02234 inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66480b17725124bb7194bfe06ad02234"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>HoveredSubWidget</b></td></tr>
<tr class="memitem:ad0e41026c1bb38f5e5aa174121adc44a inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad0e41026c1bb38f5e5aa174121adc44a"></a>
ListenerContainer&#160;</td><td class="memItemRight" valign="bottom"><b>Listeners</b></td></tr>
<tr class="memitem:acbc87afcb5d6c0e5b87a87109b3c729c inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acbc87afcb5d6c0e5b87a87109b3c729c"></a>
RenderableList&#160;</td><td class="memItemRight" valign="bottom"><b>SubRenderables</b></td></tr>
<tr class="memitem:ae8b200f4b05019737de6257ce9e8bde6 inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae8b200f4b05019737de6257ce9e8bde6"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>SubWidgetFocus</b></td></tr>
<tr class="memitem:a9a8e9cc0328a0e2f6849ed56920f6d07 inherit pro_attribs_classMezzanine_1_1UI_1_1Widget"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9a8e9cc0328a0e2f6849ed56920f6d07"></a>
WidgetType&#160;</td><td class="memItemRight" valign="bottom"><b>Type</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1UI_1_1Renderable')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml">Mezzanine::UI::Renderable</a></td></tr>
<tr class="memitem:a7efc31bec1e6f1fb8d952a937fbdd385 inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7efc31bec1e6f1fb8d952a937fbdd385"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Dirty</b></td></tr>
<tr class="memitem:a08305540ee33e257d983cbbb98b5fb98 inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a08305540ee33e257d983cbbb98b5fb98"></a>
<a class="el" href="classMezzanine_1_1UIManager.xhtml">UIManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Manager</b></td></tr>
<tr class="memitem:a82c8384b0aab812fe3e499ff97e36e38 inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a82c8384b0aab812fe3e499ff97e36e38"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Name</b></td></tr>
<tr class="memitem:aababfcf3e472f26c2c61cc40d19ce04d inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aababfcf3e472f26c2c61cc40d19ce04d"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>ParentScreen</b></td></tr>
<tr class="memitem:af70d9d5e36f9d75736faaf546270d35f inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af70d9d5e36f9d75736faaf546270d35f"></a>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>ParentWidget</b></td></tr>
<tr class="memitem:ad49b8dbcba986e49a5990397425a12ca inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad49b8dbcba986e49a5990397425a12ca"></a>
<a class="el" href="namespaceMezzanine_1_1UI.xhtml#ac4c753eb6b5d66350a243acc9ce54130">UI::RenderPriority</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Priority</b></td></tr>
<tr class="memitem:a14cfd448426ca24b125f59ff5b894ead inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a14cfd448426ca24b125f59ff5b894ead"></a>
<a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RelPosition</b></td></tr>
<tr class="memitem:ae31b0ce9d9b89f2ef67c2c9aeb48590d inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae31b0ce9d9b89f2ef67c2c9aeb48590d"></a>
<a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RelSize</b></td></tr>
<tr class="memitem:a560fe45673961fc586d30dcf905b6775 inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a560fe45673961fc586d30dcf905b6775"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Visible</b></td></tr>
<tr class="memitem:a1ec7110516d27bac98f34a87043597eb inherit pro_attribs_classMezzanine_1_1UI_1_1Renderable"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1ec7110516d27bac98f34a87043597eb"></a>
<a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ZOrder</b></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a1d8b02bc8f5aa061905ec303326bd341"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1d8b02bc8f5aa061905ec303326bd341"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>RenderableFactory</b></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This is an abstract class for the creation and storage of widgets to be used by other classes. </p>

<p>Definition at line <a class="el" href="renderablecontainerwidget_8h_source.xhtml#l00381">381</a> of file <a class="el" href="renderablecontainerwidget_8h_source.xhtml">renderablecontainerwidget.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a92028e1879a0fb3b751cf0138a4487ea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::UI::EnclosedRenderableContainerWidget::EnclosedRenderableContainerWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> *&#160;</td>
          <td class="paramname"><em>Parent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the window. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the window. </td></tr>
    <tr><td class="paramname">Parent</td><td>The parent <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">Screen</a> this window belongs to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a06f2b62092e9daacf048ab6069a861ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> Mezzanine::UI::EnclosedRenderableContainerWidget::CalculateOffset </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>NewSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>OldSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>EleOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a1c571649db3aa98f4e16285b5b754928">UI::ResizeableAnchor</a> &amp;&#160;</td>
          <td class="paramname"><em>Anchor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates a new offset for an individual element. </p>

</div>
</div>
<a class="anchor" id="afa7be8174f8a86a3feac963a7af761e5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> Mezzanine::UI::EnclosedRenderableContainerWidget::CalculateSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>NewSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>OldSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>EleSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a0334e290e4c9f6a5468fbe11164a17b9">UI::ResizeableTether</a> &amp;&#160;</td>
          <td class="paramname"><em>Tether</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates a new size for an individual element. </p>

</div>
</div>
<a class="anchor" id="adff5e5eb05cbb147cd624e6786adce6a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::UI::EnclosedRenderableContainerWidget::CheckMouseHoverImpl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Child specific mouse hover method. </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aabf9472fc6f2970d664e5beec73d8db6">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#a08f8826a134ade17f07b5ae702dadc72">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<a class="anchor" id="a4e8cd1227f255c0d6a43089c49cb9cd8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateButton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a button.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created button. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the button. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the button. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a615fb3b4bb3207530cc6e721b3eabf1f">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a8d0dbbe4fc86c65598540389909052af"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateButton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Glyph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a text button.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created button. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the button. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the button. </td></tr>
    <tr><td class="paramname"><a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml" title="Class used to describe a single glyph or character available for text operations.">Glyph</a></td><td>One of the glyphs specified in your mta file. Must be valid. </td></tr>
    <tr><td class="paramname">Text</td><td><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> text you want printed on the button. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#ae88add469502f601c38414470fea168a">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a9a4f770b56f885f62a9f430d40cc1f9f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateButton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a text button.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created button. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the button. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the button. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have in relative units. This will automatically select the glyph and scale it for you. </td></tr>
    <tr><td class="paramname">Text</td><td><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> text you want printed on the button. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aac17b3306385e446d800cf5958b96eac">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a442e63f3233c989af55d39b58090ba5b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Caption.xhtml">Caption</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateCaption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Glyph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a caption.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created caption. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this caption. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the caption. </td></tr>
    <tr><td class="paramname"><a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml" title="Class used to describe a single glyph or character available for text operations.">Glyph</a></td><td>One of the glyphs specified in your mta file. Must be valid. </td></tr>
    <tr><td class="paramname">Text</td><td><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> text you want printed on the caption. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a44fe8f2e7ddd4691a50bd0dd779c74d6">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a473efbbc03885060a609e6184753eca7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Caption.xhtml">Caption</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateCaption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a caption.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created caption. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this caption. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the caption. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have in relative units. This will automatically select the glyph and scale it for you. </td></tr>
    <tr><td class="paramname">Text</td><td><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> text you want printed on the caption. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a608f4dfdd4d53839fcab51f59a3db5fa">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a63d440835f833da20652dcae48328140"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml">CheckBox</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateCheckBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>LabelText</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>.  </p>
<p>The label uses the Markup Text class, and thus it's light markup text language. You can also pass in a blank string if you don't wish to have a label, you can create a label after construction. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have. If the Rect passed in is relative, this will expect LineHeight to be relative as well. </td></tr>
    <tr><td class="paramname">LabelText</td><td>The text to display with the label. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a79a8d4959a0e5f50b207ecbcbf0006a4">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="ac9fb9c63f47769ee2e13a55146440981"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1DropDownList.xhtml">DropDownList</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateDropDownList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>ScrollStyle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a drop down list.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1DropDownList.xhtml" title="A widget that displays one selection from a list that can have it&#39;s visibility toggled.">DropDownList</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The Name for the <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The renderable rect representing the position and size of this widget. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have. If the Rect passed in is relative, this will expect LineHeight to be relative as well. </td></tr>
    <tr><td class="paramname">ScrollStyle</td><td>The style of the scrollbar you want for this List Box. See <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a> class for more information. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aaba61bf11647e0d8902c2c4ee1bdc43d">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="abd6a1a3e68dfec4a700deb5b58a5925d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1ListBox.xhtml">ListBox</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateListBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>ScrollbarStyle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a List Box.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created List Box. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the List Box. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the List Box. </td></tr>
    <tr><td class="paramname">ScrollStyle</td><td>The style of scrollbar you want to create, see <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a> documentation for more details. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a301907042500b4eaa4be18087964e3f9">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a021fe89aef6d5320ce9901176abd73a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1MarkupText.xhtml">MarkupText</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateMarkupText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Glyph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a markup text.  </p>
<p>The constructor will ignore the size portion of the Rect passed in, since Markup Texts don't have a default size. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created markup text. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this markup text. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the markup text. </td></tr>
    <tr><td class="paramname"><a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml" title="Class used to describe a single glyph or character available for text operations.">Glyph</a></td><td>One of the glyphs specified in your mta file. Must be valid. </td></tr>
    <tr><td class="paramname">Text</td><td><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> text you want printed on the markup text. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a99b9d1883b39dab54934c13be8ee19a4">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a0fefa73467ea446c452ac1b619d9bf14"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1MarkupText.xhtml">MarkupText</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateMarkupText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a markup text.  </p>
<p>The constructor will ignore the size portion of the Rect passed in, since Markup Texts don't have a default size. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created markup text. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this markup text. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the markup text. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have in relative units. This will automatically select the glyph and scale it for you. </td></tr>
    <tr><td class="paramname">Text</td><td><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> text you want printed on the markup text. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a8e64ca7958360fd568a8dfe38d04c84b">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a8733e1df2065dd21b444d50d35d2123d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml">PagedCellGrid</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreatePagedCellGrid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>SpnRect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>SStyle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>GlyphHeight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a paged cell grid.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use a spinner to navigate through pages ...">PagedCellGrid</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the widget. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use a spinner to navigate through pages ...">PagedCellGrid</a>. </td></tr>
    <tr><td class="paramname">SpnRect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </td></tr>
    <tr><td class="paramname">SStyle</td><td>The style of spinner to create. </td></tr>
    <tr><td class="paramname">GlyphHeight</td><td>The desired lineheight of the glyphs to be used with the spinner. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a0de34cc2cf320d07ed5196c799339af2">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a4f1a5fb306a16812458f48e7c35f9732"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Rectangle.xhtml">Rectangle</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateRectangle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a rectangle.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created rectangle. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the rectangle. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a09d2c6ad03a4ffdca8f080f144061d48">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="ab8424bfd555dd428c64405558c43fe5f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml">Scrollbar</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateScrollbar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>Style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </td></tr>
    <tr><td class="paramname">Style</td><td>The style of scrollbar you want to create, see <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a> documentation for more details. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a4752bf5e7de488c97d6e7618754ee5b8">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a859b769e9745f97bb4d56e5acc51259a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml">ScrolledCellGrid</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateScrolledCellGrid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Thickness</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>Style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a scrolled cell grid.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use scrollbars to navigate the cells on ...">ScrolledCellGrid</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the widget. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use scrollbars to navigate the cells on ...">ScrolledCellGrid</a>. </td></tr>
    <tr><td class="paramname">Thickness</td><td>The width of the vertical scrollbar in relative units. The same amount of actual pixels is used to determine the height of the horizontal scrollbar. </td></tr>
    <tr><td class="paramname">Style</td><td>An enum value representing how you want your scrollbar constructed. See class details for more info. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a288c5a9870770ac9685cc35e49359c23">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a428494a9fd7965623faf2b224770c672"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml">Spinner</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateSpinner </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>SStyle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>GlyphHeight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The Name for the <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </td></tr>
    <tr><td class="paramname">SStyle</td><td>The layout of buttons this widget will have. See SpinnerStyle enum or class description for more details. </td></tr>
    <tr><td class="paramname">GlyphHeight</td><td>The desired relative height of the text you want. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#ac809a3108e7cc371f2a6b454d8ce9be0">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="af271736ebf2f31d63a23dfb23583201a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1TabSet.xhtml">TabSet</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::CreateTabSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>SetRect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a tabset.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created tabset. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The Name for the <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>. </td></tr>
    <tr><td class="paramname">SetRect</td><td>The Rect representing the position and size of all the <a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml" title="Basic class for all structures that get inserted into the rendering hierarchy.">Renderable</a> Sets generated by the tabset. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aa191d8b1e1516dee975d4ec2f0bb7075">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a52bbcf2c9f0223a56d44ea9e6852f48c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::DestroyAllAreaRenderables </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys all AreaRenderables in this widget.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a3c520dfb5596527dffde61a9728a85f3">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a2a306535a92ec7bc68e4d13d2779fdc7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::DestroyAllWidgets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys all Widgets in this widget.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aa54977a7823b45e493754dd68f567e82">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="ace7424cf6cb940c3a65ac03f9f012c7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::DestroyAreaRenderable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a>.  </p>
<p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>Pointer to the <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> you want destroyed. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a1d60b9ee2b8be88493f1e0a06ebf3b4b">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="af992b205dddcc66fdaf231e2bef56a98"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::DestroyWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys a widget.  </p>
<p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>Pointer to the widget you want destroyed. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a41a3bd35012cc113fd73bce8f8880ca1">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a4f67fb1185e96c95b77327421feabac8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::GetAreaRenderable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an already created <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by name.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> of the specified name. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a0e5b049c7858f4a6eff853d255942be8">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="abe1e6402a1094e7897e7cc017c381511"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml">AreaRenderable</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::GetAreaRenderable </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an already created <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by index.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> at the specified index. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a7c9c556ab7114a2f19ce1406de547fbc">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a8a7f6d343e8b1197d9acf996bd31d7f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::UI::EnclosedRenderableContainerWidget::GetNumAreaRenderables </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of widgets created and stored in this class.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns the number of widgets this class is storing. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aaea7d9468f500b7708394fa81ea4f7a3">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="aab4443b8f90e216c3e66222ca99fe341"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::UI::EnclosedRenderableContainerWidget::GetNumWidgets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of widgets created and stored in this class.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns the number of widgets this class is storing. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a34656ff9bfe4ff066822cc2e2e7cbfc9">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="ad9c5b049c26622216b8d8d3f46ef9892"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetAreaRenderableInfo</a>&amp; Mezzanine::UI::EnclosedRenderableContainerWidget::GetOffsetAreaRenderableInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the offset info struct for a <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> to get the offset info for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to the offset info for the <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> of the specified name. </dd></dl>

</div>
</div>
<a class="anchor" id="a75ca06cbabdec4883388094bdbd1679a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetAreaRenderableInfo</a>&amp; Mezzanine::UI::EnclosedRenderableContainerWidget::GetOffsetAreaRenderableInfo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the offset info struct for a <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the requested <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> to get the offset info for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to the offset info for the <a class="el" href="classMezzanine_1_1UI_1_1AreaRenderable.xhtml" title="This class defines a renderable that covers an area, such as a rectangle or circle.">AreaRenderable</a> at the specified index. </dd></dl>

</div>
</div>
<a class="anchor" id="acb64c005efeb8e4c2f1c19507c9900b0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetWidgetInfo</a>&amp; Mezzanine::UI::EnclosedRenderableContainerWidget::GetOffsetWidgetInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the OffsetWidgetInfo of an already created widget by name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the widget to get the offset info for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to the widget of the specified name. </dd></dl>

</div>
</div>
<a class="anchor" id="a2a6d95363fa4022e14859f57bdff90ec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structMezzanine_1_1UI_1_1ResizingInfo.xhtml">OffsetWidgetInfo</a>&amp; Mezzanine::UI::EnclosedRenderableContainerWidget::GetOffsetWidgetInfo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the OffsetWidgetInfo of an already created widget by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the requested widget to get the offset info for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to the widget at the specified index. </dd></dl>

</div>
</div>
<a class="anchor" id="a9fe9ea0604969141ef408eace0f1ab31"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::GetWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an already created widget by name.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the widget of the specified name. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a53728835c62fca1986e09b7fb4d864a4">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a1a3fa338210e7a54ff528c5728f824e4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::GetWidget </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an already created widget by index.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the widget at the specified index. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a3388c399d0674d917dcb3d1a4468c338">Mezzanine::UI::RenderableContainerWidget</a>.</p>

</div>
</div>
<a class="anchor" id="a8a83a7303af13cae1a57b87fda5a8861"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1UI_1_1Rectangle.xhtml">Rectangle</a>* Mezzanine::UI::EnclosedRenderableContainerWidget::GetWidgetBack </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the background object of this widget. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the rectangle that is the background for this widget. </dd></dl>

</div>
</div>
<a class="anchor" id="a54a5a82b4fcf738b12856f429d6ba8cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetActualPosition </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the pixel position of this widget.  </p>
<p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>A vector2 representing the pixel position of this widget. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#ae72d17de2d61072859ff552b0b65abd9">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#aeb6fe2718e14516b9fd9028bc33253d0">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<a class="anchor" id="a7b37efc3fd43817c46c46a6811d7dff1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetActualSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the pixel size of this widget.  </p>
<p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Size</td><td>A vector2 representing the pixel size of this widget. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a5e4b32a203de3c206d38310976bf41ef">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#a78957c6ea4f366276246945900536396">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<a class="anchor" id="aa162a1524371fdf5e1c19615823b1ada"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetArea </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Internal function for setting the area(size) of this widget. </p>

</div>
</div>
<a class="anchor" id="a3ddbad92b60fc0e4460d943d94256f0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Internal function for setting the location(position) of this widget. </p>

</div>
</div>
<a class="anchor" id="af09b6e3ff1744f66f1c356b3819955d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetPosition </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the relative position of this widget.  </p>
<p>The position is relative to the screen size. Values range from 0.0 to 1.0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>A vector2 representing the relative position of this widget. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a842b831e89d5899b6e7c612950ed8df2">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#a77d1cc32612a0c68ff5b362cb5d31814">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<a class="anchor" id="abc31941a27390b67a840ba0a63dd75af"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the relative size of this widget.  </p>
<p>The size is relative to the screen size. Values range from 0.0 to 1.0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Size</td><td>A vector2 representing the relative size of this widget. </td></tr>
  </table>
  </dd>
</dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a7e00128a40f69b97d87753fa46099069">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#a86d321281e4c1d06717b61b5e11bf5ee">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<a class="anchor" id="ae3b87a069cb15ade9e86d718561ad956"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::SetVisibleImpl </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>visible</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Child specific visibility method. </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#aa86bfedc048b9d2c47de7db60f37ab87">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#af183a264f1796e7c2b3d491e6dca525a">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<a class="anchor" id="acb9f9315a1b566947e8d7be6762a9cf5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::UI::EnclosedRenderableContainerWidget::UpdateDimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates the dimensions of this renderable to match those of the new screen size.  </p>
<p>This function is called automatically when a viewport changes in size, and shouldn't need to be called manually.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableContainerWidget.xhtml#a7b2ec6a511ba1a82c2076ab90d402b08">Mezzanine::UI::RenderableContainerWidget</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1UI_1_1MenuWindow.xhtml#afa0ce08bc6ec9bc3bfb1a3b3889ba741">Mezzanine::UI::MenuWindow</a>, and <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml#ac079b716237ac5eec4b658eea8a5e29d">Mezzanine::UI::Window</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/UI/<a class="el" href="renderablecontainerwidget_8h_source.xhtml">renderablecontainerwidget.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed May 8 2013 23:33:50 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
