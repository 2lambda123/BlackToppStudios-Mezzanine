<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::WorldObject Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1WorldObject-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::WorldObject Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the base class from which classes that are insertable into the physical world.  
 <a href="classMezzanine_1_1WorldObject.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::WorldObject:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1WorldObject__inherit__graph.svg" width="100%" height="518"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::WorldObject:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1WorldObject__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7718ab150d1337b52715b0db1a4a4762"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7718ab150d1337b52715b0db1a4a4762"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7718ab150d1337b52715b0db1a4a4762">WorldObject</a> ()</td></tr>
<tr class="memdesc:a7718ab150d1337b52715b0db1a4a4762"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:aa44b96eb039584d0adc1805250ba1146"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa44b96eb039584d0adc1805250ba1146"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aa44b96eb039584d0adc1805250ba1146">~WorldObject</a> ()</td></tr>
<tr class="memdesc:aa44b96eb039584d0adc1805250ba1146"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a15f23b44542efcf1e4ee824ae59f0210"><td class="memItemLeft" align="right" valign="top">virtual btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a15f23b44542efcf1e4ee824ae59f0210">_GetBasePhysicsObject</a> () const </td></tr>
<tr class="memdesc:a15f23b44542efcf1e4ee824ae59f0210"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal physics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on.  <a href="#a15f23b44542efcf1e4ee824ae59f0210"></a><br/></td></tr>
<tr class="memitem:a7673104fb11f0d7ededca43ff8026562"><td class="memItemLeft" align="right" valign="top">virtual Ogre::SceneNode *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7673104fb11f0d7ededca43ff8026562">_GetGraphicsNode</a> () const </td></tr>
<tr class="memdesc:a7673104fb11f0d7ededca43ff8026562"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics node this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object uses for it's graphics transform.  <a href="#a7673104fb11f0d7ededca43ff8026562"></a><br/></td></tr>
<tr class="memitem:a5ceb1599dbe08f1039c82db959eb0d5e"><td class="memItemLeft" align="right" valign="top">virtual Ogre::Entity *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a5ceb1599dbe08f1039c82db959eb0d5e">_GetGraphicsObject</a> () const </td></tr>
<tr class="memdesc:a5ceb1599dbe08f1039c82db959eb0d5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on.  <a href="#a5ceb1599dbe08f1039c82db959eb0d5e"></a><br/></td></tr>
<tr class="memitem:ab6007bf3a962e89854ffe9c234721b64"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ab6007bf3a962e89854ffe9c234721b64">_NotifyCollisionState</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *Col, const <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml#a65c483a4ea1e7faf02539e7e0c18af7f">Physics::Collision::CollisionState</a> &amp;State)</td></tr>
<tr class="memdesc:ab6007bf3a962e89854ffe9c234721b64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object of a collision that is occuring with it.  <a href="#ab6007bf3a962e89854ffe9c234721b64"></a><br/></td></tr>
<tr class="memitem:af54c2dd470b534a51f12baae51631359"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af54c2dd470b534a51f12baae51631359">_Update</a> ()=0</td></tr>
<tr class="memdesc:af54c2dd470b534a51f12baae51631359"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object every frame.  <a href="#af54c2dd470b534a51f12baae51631359"></a><br/></td></tr>
<tr class="memitem:a73f51f4025bfbb1f86075de45d33d10a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a73f51f4025bfbb1f86075de45d33d10a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a73f51f4025bfbb1f86075de45d33d10a">AddToWorld</a> ()=0</td></tr>
<tr class="memdesc:a73f51f4025bfbb1f86075de45d33d10a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>. <br/></td></tr>
<tr class="memitem:a131f816f0c0613f088e13cdb9f1993ae"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a131f816f0c0613f088e13cdb9f1993ae">GetGraphicsSettings</a> () const </td></tr>
<tr class="memdesc:a131f816f0c0613f088e13cdb9f1993ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the graphics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a131f816f0c0613f088e13cdb9f1993ae"></a><br/></td></tr>
<tr class="memitem:ac05ca58ec141fd9f0c29d777f6e74037"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac05ca58ec141fd9f0c29d777f6e74037">GetLocation</a> () const </td></tr>
<tr class="memdesc:ac05ca58ec141fd9f0c29d777f6e74037"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the location of the object.  <a href="#ac05ca58ec141fd9f0c29d777f6e74037"></a><br/></td></tr>
<tr class="memitem:a2511f70cadc48b721257b5c31bbb39ca"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a2511f70cadc48b721257b5c31bbb39ca">GetName</a> () const </td></tr>
<tr class="memdesc:a2511f70cadc48b721257b5c31bbb39ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a2511f70cadc48b721257b5c31bbb39ca"></a><br/></td></tr>
<tr class="memitem:a0bf0008923a4f71bd58ba538ada333ff"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0bf0008923a4f71bd58ba538ada333ff">GetPhysicsSettings</a> () const </td></tr>
<tr class="memdesc:a0bf0008923a4f71bd58ba538ada333ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the physics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a0bf0008923a4f71bd58ba538ada333ff"></a><br/></td></tr>
<tr class="memitem:a696244b6d2362c36dc73f953c9678836"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a696244b6d2362c36dc73f953c9678836">GetScaling</a> () const </td></tr>
<tr class="memdesc:a696244b6d2362c36dc73f953c9678836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a696244b6d2362c36dc73f953c9678836"></a><br/></td></tr>
<tr class="memitem:a4e629227edc6a548870be3df58035824"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a4e629227edc6a548870be3df58035824">GetSounds</a> () const </td></tr>
<tr class="memdesc:a4e629227edc6a548870be3df58035824"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the set of sounds associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a4e629227edc6a548870be3df58035824"></a><br/></td></tr>
<tr class="memitem:aaa860c068e93d09175f9cc187ced17e6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aaa860c068e93d09175f9cc187ced17e6">GetType</a> () const =0</td></tr>
<tr class="memdesc:aaa860c068e93d09175f9cc187ced17e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance.  <a href="#aaa860c068e93d09175f9cc187ced17e6"></a><br/></td></tr>
<tr class="memitem:abd1e6eae70256cbcf82229c60deb51ad"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#abd1e6eae70256cbcf82229c60deb51ad">IsInWorld</a> () const </td></tr>
<tr class="memdesc:abd1e6eae70256cbcf82229c60deb51ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is currently in the world.  <a href="#abd1e6eae70256cbcf82229c60deb51ad"></a><br/></td></tr>
<tr class="memitem:a0c912e54d09574b5821eb972f51dc93b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0c912e54d09574b5821eb972f51dc93b">IsStaticOrKinematic</a> () const </td></tr>
<tr class="memdesc:a0c912e54d09574b5821eb972f51dc93b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is static or kinematic.  <a href="#a0c912e54d09574b5821eb972f51dc93b"></a><br/></td></tr>
<tr class="memitem:a67e3c05d50cc1ff631beecd37d87255a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67e3c05d50cc1ff631beecd37d87255a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a67e3c05d50cc1ff631beecd37d87255a">RemoveFromWorld</a> ()=0</td></tr>
<tr class="memdesc:a67e3c05d50cc1ff631beecd37d87255a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object from the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>. <br/></td></tr>
<tr class="memitem:ad21f34d4cec83072347da0bb79b08a66"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ad21f34d4cec83072347da0bb79b08a66">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;x, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;z)</td></tr>
<tr class="memdesc:ad21f34d4cec83072347da0bb79b08a66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#ad21f34d4cec83072347da0bb79b08a66"></a><br/></td></tr>
<tr class="memitem:a9c91e12f3db2b2637a276548e5f9ef65"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a9c91e12f3db2b2637a276548e5f9ef65">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a9c91e12f3db2b2637a276548e5f9ef65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a9c91e12f3db2b2637a276548e5f9ef65"></a><br/></td></tr>
<tr class="memitem:ae83d64ec13994fc7df6eb5da2740c9b9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ae83d64ec13994fc7df6eb5da2740c9b9">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:ae83d64ec13994fc7df6eb5da2740c9b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scale of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#ae83d64ec13994fc7df6eb5da2740c9b9"></a><br/></td></tr>
<tr class="memitem:a06ee100d2c4f3b4d2a944a497f1711f4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a06ee100d2c4f3b4d2a944a497f1711f4">SetSounds</a> (<a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *Sounds)</td></tr>
<tr class="memdesc:a06ee100d2c4f3b4d2a944a497f1711f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the sounds to be used by this object.  <a href="#a06ee100d2c4f3b4d2a944a497f1711f4"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aa25fe97841822764b791fdbb8b439803"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aa25fe97841822764b791fdbb8b439803">SerializableName</a> ()</td></tr>
<tr class="memdesc:aa25fe97841822764b791fdbb8b439803"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#aa25fe97841822764b791fdbb8b439803"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ac324e1dfdf9cd59a5abdc0d6f8d10b4e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac324e1dfdf9cd59a5abdc0d6f8d10b4e"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac324e1dfdf9cd59a5abdc0d6f8d10b4e">AttachToGraphics</a> ()</td></tr>
<tr class="memdesc:ac324e1dfdf9cd59a5abdc0d6f8d10b4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the terrain visible. <br/></td></tr>
<tr class="memitem:af13904d91d16ceb3c74afea152def276"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af13904d91d16ceb3c74afea152def276"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af13904d91d16ceb3c74afea152def276">DetachFromGraphics</a> ()</td></tr>
<tr class="memdesc:af13904d91d16ceb3c74afea152def276"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the terrain invisible. <br/></td></tr>
<tr class="memitem:adfdac35dc7396b6bc073e4e4c0af2f70"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#adfdac35dc7396b6bc073e4e4c0af2f70">GraphicsSettingsSerializableName</a> () const =0</td></tr>
<tr class="memdesc:adfdac35dc7396b6bc073e4e4c0af2f70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings.  <a href="#adfdac35dc7396b6bc073e4e4c0af2f70"></a><br/></td></tr>
<tr class="memitem:aefb4d8e679e03f55428404eb5cbe65d5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aefb4d8e679e03f55428404eb5cbe65d5">PhysicsSettingsSerializableName</a> () const =0</td></tr>
<tr class="memdesc:aefb4d8e679e03f55428404eb5cbe65d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings.  <a href="#aefb4d8e679e03f55428404eb5cbe65d5"></a><br/></td></tr>
<tr class="memitem:a568b50a3b8cd603cec9e533c4ea2a655"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a568b50a3b8cd603cec9e533c4ea2a655">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:a568b50a3b8cd603cec9e533c4ea2a655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it.  <a href="#a568b50a3b8cd603cec9e533c4ea2a655"></a><br/></td></tr>
<tr class="memitem:aab366bc161eb3bcd57cc98dd98a904bf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aab366bc161eb3bcd57cc98dd98a904bf">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:aab366bc161eb3bcd57cc98dd98a904bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#aab366bc161eb3bcd57cc98dd98a904bf"></a><br/></td></tr>
<tr class="memitem:a6cb4ea9bf57c5ffc327844a828c1e6ca"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a6cb4ea9bf57c5ffc327844a828c1e6ca">ThrowSerialError</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Fail) const </td></tr>
<tr class="memdesc:a6cb4ea9bf57c5ffc327844a828c1e6ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">A Helper function that assembles strings and throws an exception.  <a href="#a6cb4ea9bf57c5ffc327844a828c1e6ca"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:acbfef535027ce0b2b5397429f4bbca19"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acbfef535027ce0b2b5397429f4bbca19"></a>
std::set&lt; <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#acbfef535027ce0b2b5397429f4bbca19">CurrentCollisions</a></td></tr>
<tr class="memdesc:acbfef535027ce0b2b5397429f4bbca19"><td class="mdescLeft">&#160;</td><td class="mdescRight">This member stores all existing collision events referencing this actor. <br/></td></tr>
<tr class="memitem:af9682da6de09a649bf5c7cef150124f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af9682da6de09a649bf5c7cef150124f5"></a>
Ogre::SceneNode *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af9682da6de09a649bf5c7cef150124f5">GraphicsNode</a></td></tr>
<tr class="memdesc:af9682da6de09a649bf5c7cef150124f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the Ogre::SceneNode using this. <br/></td></tr>
<tr class="memitem:a050053b525931b996a4b1759e7087ecf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a050053b525931b996a4b1759e7087ecf"></a>
Ogre::Entity *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf">GraphicsObject</a></td></tr>
<tr class="memdesc:a050053b525931b996a4b1759e7087ecf"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the Ogre::Entity using this. <br/></td></tr>
<tr class="memitem:ac8bd91e343ead1b486ae8348e1580369"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac8bd91e343ead1b486ae8348e1580369"></a>
<a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac8bd91e343ead1b486ae8348e1580369">GraphicsSettings</a></td></tr>
<tr class="memdesc:ac8bd91e343ead1b486ae8348e1580369"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates graphics specific configuration for this actor. <br/></td></tr>
<tr class="memitem:a3ab67d5cc00b2d75aad716f2284a9721"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ab67d5cc00b2d75aad716f2284a9721"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a3ab67d5cc00b2d75aad716f2284a9721">Name</a></td></tr>
<tr class="memdesc:a3ab67d5cc00b2d75aad716f2284a9721"><td class="mdescLeft">&#160;</td><td class="mdescRight">The name of the terrain. <br/></td></tr>
<tr class="memitem:a49ae0e50ccc6dd17a1f02a607f3db55a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a49ae0e50ccc6dd17a1f02a607f3db55a"></a>
<a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a49ae0e50ccc6dd17a1f02a607f3db55a">ObjectSounds</a></td></tr>
<tr class="memdesc:a49ae0e50ccc6dd17a1f02a607f3db55a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a collection of sounds for use with this actor. <br/></td></tr>
<tr class="memitem:a2403ba494a9835daddfbc68b118991bc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2403ba494a9835daddfbc68b118991bc"></a>
btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a2403ba494a9835daddfbc68b118991bc">PhysicsObject</a></td></tr>
<tr class="memdesc:a2403ba494a9835daddfbc68b118991bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the btCollisionObject using this. <br/></td></tr>
<tr class="memitem:a0e9e31cc264f05d3fb2591cbf5883384"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0e9e31cc264f05d3fb2591cbf5883384"></a>
<a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0e9e31cc264f05d3fb2591cbf5883384">PhysicsSettings</a></td></tr>
<tr class="memdesc:a0e9e31cc264f05d3fb2591cbf5883384"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates physics specific configuration for this actor. <br/></td></tr>
<tr class="memitem:a82cf249f457edb1e3786c1d716961e0e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a82cf249f457edb1e3786c1d716961e0e"></a>
btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a82cf249f457edb1e3786c1d716961e0e">PhysicsShape</a></td></tr>
<tr class="memdesc:a82cf249f457edb1e3786c1d716961e0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the btCollisionShape using this. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a1cacd07efb11226da49a7c80569b18e8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1cacd07efb11226da49a7c80569b18e8"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldNode</b></td></tr>
<tr class="memitem:ad45d2e498e36f986473547343e4b149e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad45d2e498e36f986473547343e4b149e"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldObjectGraphicsSettings</b></td></tr>
<tr class="memitem:a5e0ab16f1e7b0d4d1c848b974f5d4662"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e0ab16f1e7b0d4d1c848b974f5d4662"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldObjectPhysicsSettings</b></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This is the base class from which classes that are insertable into the physical world. </p>
<p>In short a <a class="el" href="classMezzanine_1_1WorldObject.xhtml" title="This is the base class from which classes that are insertable into the physical world.">WorldObject</a> is an object that has a physical representation and may also have a graphical representation and can be added and removed from the world. In almost all occasions these objects can also collide with other objects. </p>

<p>Definition at line <a class="el" href="worldobject_8h_source.xhtml#l00087">87</a> of file <a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a>.</p>
</div><h2>Member Function Documentation</h2>
<a class="anchor" id="a15f23b44542efcf1e4ee824ae59f0210"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual btCollisionObject* Mezzanine::WorldObject::_GetBasePhysicsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal physics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal Bullet object. </dd></dl>

</div>
</div>
<a class="anchor" id="a7673104fb11f0d7ededca43ff8026562"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Ogre::SceneNode* Mezzanine::WorldObject::_GetGraphicsNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal graphics node this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object uses for it's graphics transform. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal graphics node. </dd></dl>

</div>
</div>
<a class="anchor" id="a5ceb1599dbe08f1039c82db959eb0d5e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Ogre::Entity* Mezzanine::WorldObject::_GetGraphicsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal graphics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal graphics object. </dd></dl>

</div>
</div>
<a class="anchor" id="ab6007bf3a962e89854ffe9c234721b64"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::_NotifyCollisionState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *&#160;</td>
          <td class="paramname"><em>Col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml#a65c483a4ea1e7faf02539e7e0c18af7f">Physics::Collision::CollisionState</a> &amp;&#160;</td>
          <td class="paramname"><em>State</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Notifies this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object of a collision that is occuring with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Col</td><td>A pointer to the collision pertaining to this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </td></tr>
    <tr><td class="paramname">State</td><td>The state of the collision pertaining to this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#ae16ff5f76d51df1b520e00cdd8f9c9d8">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="af54c2dd470b534a51f12baae51631359"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::_Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object every frame. </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a7fc5a425dd92c4db7fa5655fecc0e6ae">Mezzanine::ActorSoft</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a8f5a36a6981f1249dbabab318531afd0">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ab0b3159f1b4f4d65430aba657414e0eb">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a02de58a629752e1eccacae19b1d8c3a5">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="a131f816f0c0613f088e13cdb9f1993ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a>* Mezzanine::WorldObject::GetGraphicsSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the graphics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the graphics settings class in use by this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>

</div>
</div>
<a class="anchor" id="ac05ca58ec141fd9f0c29d777f6e74037"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::WorldObject::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the location of the object. </p>
<p>This function will retrieve the location of the object within the world. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Mezzanine::Vector3</a> containing the location. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ade42648baa0f893d54b3bc5dcdfa9300">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a3ba8e458ec064a7d8367114d74f73a74">Mezzanine::ActorSoft</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a37d04f8e6d6e8451348ee60fd083968b">Mezzanine::AreaEffect</a>.</p>

</div>
</div>
<a class="anchor" id="a2511f70cadc48b721257b5c31bbb39ca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a>&amp; Mezzanine::WorldObject::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a38f1da6bfef6666be6f5a0c3d12bbed6">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ac0773b9b1389d4f079eb250aa992f74c">Mezzanine::ActorSoft</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aedf3f0747694f989de033f046f0c35bb">Mezzanine::AreaEffect</a>.</p>

</div>
</div>
<a class="anchor" id="a0bf0008923a4f71bd58ba538ada333ff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a>* Mezzanine::WorldObject::GetPhysicsSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the physics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the physics settings class in use by this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a682b4375884a70f52365dd4f99ea504f">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="a696244b6d2362c36dc73f953c9678836"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::WorldObject::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the scaling being applied on all axes of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#af186dbff98c7a1884736072345384a67">Mezzanine::NonStaticWorldObject</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#adc4af3aa8a43d2e08d716990153fb89d">Mezzanine::AreaEffect</a>.</p>

</div>
</div>
<a class="anchor" id="a4e629227edc6a548870be3df58035824"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a>* Mezzanine::WorldObject::GetSounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the set of sounds associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to a soundset containing all the sounds this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object uses. </dd></dl>

</div>
</div>
<a class="anchor" id="aaa860c068e93d09175f9cc187ced17e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::WorldObject::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1FieldOfForce.xhtml#a00498253ab8ed66173575823663e3d36">Mezzanine::FieldOfForce</a>, <a class="el" href="classMezzanine_1_1GravityWell.xhtml#ad77289ff7c1e4ca07189e1861999dc60">Mezzanine::GravityWell</a>, <a class="el" href="classMezzanine_1_1GravityField.xhtml#a78bc15828d4ed8c8a96edbe897f95849">Mezzanine::GravityField</a>, <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a7fb8c4ead304ce7aa1b1b9b08596163a">Mezzanine::ActorSoft</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a60a0390056b5d9089df30941f4175abe">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a83f7356d743f1b59ea58aac6d7570901">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a3e23c27e3ab6624a1238c0f09319e163">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="adfdac35dc7396b6bc073e4e4c0af2f70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::WorldObject::GraphicsSettingsSerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing name of the serialized graphics settings. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a641a2f221c0a3fba0f0ffc646d634b31">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a636a0dbf78907d565d4cabd994442637">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aa90447eec1f94787ff1acc61c7d3ca2a">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a4c22291f3a692a9ca6c97b24823d7f61">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="abd1e6eae70256cbcf82229c60deb51ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::WorldObject::IsInWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not this object is currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a bool indicating if this object has been added to the world. </dd></dl>

</div>
</div>
<a class="anchor" id="a0c912e54d09574b5821eb972f51dc93b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::WorldObject::IsStaticOrKinematic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is static or kinematic. </p>
<p>Checks of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is static or kinematic, returns true if it is either. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is static or kinematic. </dd></dl>

</div>
</div>
<a class="anchor" id="aefb4d8e679e03f55428404eb5cbe65d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::WorldObject::PhysicsSettingsSerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing name of the serialized graphics settings. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a1e1decda1e208587eeafa90e3f185c01">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a7a18ac81a996e2d68057223ebbc7959c">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a1b0fd7b609d3cf874e5bea821a03b385">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a9e79fcc0169d17726e8859822d66c8d0">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="a568b50a3b8cd603cec9e533c4ea2a655"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> containing the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>A precondition of using this is that all of the actors intended for use must already be Deserialized. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a058d16109e1fc14fe2de5845d3a013a4">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#aa3364c5b8991eab2431ee97de6b3aca9">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a0a6fa7fba41362c44ac666a15678f3fb">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a190b62b59be0534146c6f362644344ac">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="aab366bc161eb3bcd57cc98dd98a904bf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CurrentRoot</td><td>The point in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> hierarchy that all this vectorw should be appended to. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a83c13a87ff50a69eaa528e1096de5f54">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a83ac934e5ca5ae180199a5c57c13030c">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a9fae7ccb8bcfd0fa1288860fa11dae0f">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a197b2dae183a3ec9f164daf37772c0f0">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="aa25fe97841822764b791fdbb8b439803"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::WorldObject::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "Point2PointConstraint" </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#af4c06a15f82e81402209398ce88a8a22">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a118602e772c93d72493dba70b4572008">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#afd9768dd8d41039970823abd04ae45ab">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#ad5b3e4df0fbce51bfcc89c9e2fff9947">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="ad21f34d4cec83072347da0bb79b08a66"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<p>Calling this function prior to adding it to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> will have no effect. <br/>
 In most situations you won't want to use this function, and instead produce movement through physics functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Location on the X vector. </td></tr>
    <tr><td class="paramname">y</td><td>Location on the Y vector. </td></tr>
    <tr><td class="paramname">z</td><td>Location on the Z vector. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9c91e12f3db2b2637a276548e5f9ef65"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<p>Calling this function prior to adding it to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> will have no effect. <br/>
 In most situations you won't want to use this function, and instead produce movement through physics functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the location. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a6caec63791a9143d7f6a0a58fbc1a44e">Mezzanine::NonStaticWorldObject</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a4dd22757bc627242de169e31a1717139">Mezzanine::AreaEffect</a>.</p>

</div>
</div>
<a class="anchor" id="ae83d64ec13994fc7df6eb5da2740c9b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::SetScaling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the scale of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </p>
<p>This function will alter the scaling/size of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object with the given vector3. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Scale</td><td>The vector3 by which to apply the scale. Will scale each axis' accordingly. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#afa55be7243c103062ad07acabbabbbfb">Mezzanine::NonStaticWorldObject</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ae0448d98c3689ae407734bbcd85a08cb">Mezzanine::AreaEffect</a>.</p>

</div>
</div>
<a class="anchor" id="a06ee100d2c4f3b4d2a944a497f1711f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::SetSounds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *&#160;</td>
          <td class="paramname"><em>Sounds</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the sounds to be used by this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Sounds</td><td>The soundset to be assigned to this object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6cb4ea9bf57c5ffc327844a828c1e6ca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::ThrowSerialError </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Fail</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A Helper function that assembles strings and throws an exception. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Fail</td><td>The item that failed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a2bc3dc969770bb2fa0ab053b86fa8217">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#af326bf63fe6da247ef8cbc9043a9f2fe">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ac91e12e3a457552c0b0b9097dd8902fc">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a56aecddc99f3401da65decec696a4f11">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Mar 30 2013 10:40:52 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
