<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Resource::MemoryDataStream Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml">Resource</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml">MemoryDataStream</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Resource_1_1MemoryDataStream-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Resource::MemoryDataStream Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This represents a stream to a buffer in memory.  
 <a href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="datastream_8h_source.xhtml">datastream.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Resource::MemoryDataStream:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Resource_1_1MemoryDataStream__inherit__graph.svg" width="152" height="150"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Resource::MemoryDataStream:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Resource_1_1MemoryDataStream__coll__graph.svg" width="174" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a34a16a7e6be93233073c9af87fd26a00"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a34a16a7e6be93233073c9af87fd26a00">MemoryDataStream</a> (const size_t &amp;BufferSize, bool FreeOnClose=true, bool ReadOnly=false)</td></tr>
<tr class="memdesc:a34a16a7e6be93233073c9af87fd26a00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer creation constructor.  <a href="#a34a16a7e6be93233073c9af87fd26a00">More...</a><br/></td></tr>
<tr class="separator:a34a16a7e6be93233073c9af87fd26a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a395645ef567a4d807bc835f4fa96206a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a395645ef567a4d807bc835f4fa96206a">MemoryDataStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, const size_t &amp;BufferSize, bool FreeOnClose=true, bool ReadOnly=false)</td></tr>
<tr class="memdesc:a395645ef567a4d807bc835f4fa96206a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Named buffer creation constructor.  <a href="#a395645ef567a4d807bc835f4fa96206a">More...</a><br/></td></tr>
<tr class="separator:a395645ef567a4d807bc835f4fa96206a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018900010dcbc7ebca89ec6c00157fd6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a018900010dcbc7ebca89ec6c00157fd6">MemoryDataStream</a> (void *Buffer, const size_t &amp;BufferSize, bool FreeOnClose=false, bool ReadOnly=false)</td></tr>
<tr class="memdesc:a018900010dcbc7ebca89ec6c00157fd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-made buffer constructor.  <a href="#a018900010dcbc7ebca89ec6c00157fd6">More...</a><br/></td></tr>
<tr class="separator:a018900010dcbc7ebca89ec6c00157fd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55987263974a0ceeceeda7ddcc52ed1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a55987263974a0ceeceeda7ddcc52ed1d">MemoryDataStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, void *Buffer, const size_t &amp;BufferSize, bool FreeOnClose=false, bool ReadOnly=false)</td></tr>
<tr class="memdesc:a55987263974a0ceeceeda7ddcc52ed1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Named pre-made buffer constructor.  <a href="#a55987263974a0ceeceeda7ddcc52ed1d">More...</a><br/></td></tr>
<tr class="separator:a55987263974a0ceeceeda7ddcc52ed1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadcb282b8e6c80f12331c388c001fb49"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aadcb282b8e6c80f12331c388c001fb49"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#aadcb282b8e6c80f12331c388c001fb49">~MemoryDataStream</a> ()</td></tr>
<tr class="memdesc:aadcb282b8e6c80f12331c388c001fb49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aadcb282b8e6c80f12331c388c001fb49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78b5d296a5c483cd9a1b15e3c5b0ef28"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a78b5d296a5c483cd9a1b15e3c5b0ef28">Close</a> ()</td></tr>
<tr class="memdesc:a78b5d296a5c483cd9a1b15e3c5b0ef28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the stream to the resource.  <a href="#a78b5d296a5c483cd9a1b15e3c5b0ef28">More...</a><br/></td></tr>
<tr class="separator:a78b5d296a5c483cd9a1b15e3c5b0ef28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42397450c2f66c07e21bc4aed30c323f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a42397450c2f66c07e21bc4aed30c323f">EoF</a> () const </td></tr>
<tr class="memdesc:a42397450c2f66c07e21bc4aed30c323f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the current position is at the end of the file/stream.  <a href="#a42397450c2f66c07e21bc4aed30c323f">More...</a><br/></td></tr>
<tr class="separator:a42397450c2f66c07e21bc4aed30c323f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10bc659bb3deb8ace7f4fa11b26567f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a10bc659bb3deb8ace7f4fa11b26567f6">GetBufferEnd</a> () const </td></tr>
<tr class="memdesc:a10bc659bb3deb8ace7f4fa11b26567f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the end of the memory buffer used by this stream.  <a href="#a10bc659bb3deb8ace7f4fa11b26567f6">More...</a><br/></td></tr>
<tr class="separator:a10bc659bb3deb8ace7f4fa11b26567f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e18cd84d11385321f1cf9dd03dc6519"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a1e18cd84d11385321f1cf9dd03dc6519">GetBufferPosition</a> () const </td></tr>
<tr class="memdesc:a1e18cd84d11385321f1cf9dd03dc6519"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the current position in the memory buffer used by this stream.  <a href="#a1e18cd84d11385321f1cf9dd03dc6519">More...</a><br/></td></tr>
<tr class="separator:a1e18cd84d11385321f1cf9dd03dc6519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fde0e9b62586a1380bab2a227dd756a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a3fde0e9b62586a1380bab2a227dd756a">GetBufferStart</a> () const </td></tr>
<tr class="memdesc:a3fde0e9b62586a1380bab2a227dd756a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the start of the memory buffer used by this stream.  <a href="#a3fde0e9b62586a1380bab2a227dd756a">More...</a><br/></td></tr>
<tr class="separator:a3fde0e9b62586a1380bab2a227dd756a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b054bb40739588b40b6b04e92c31621"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a3b054bb40739588b40b6b04e92c31621">Read</a> (void *Buffer, const size_t &amp;Count)</td></tr>
<tr class="memdesc:a3b054bb40739588b40b6b04e92c31621"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads data from the stream, copying to a buffer.  <a href="#a3b054bb40739588b40b6b04e92c31621">More...</a><br/></td></tr>
<tr class="separator:a3b054bb40739588b40b6b04e92c31621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fbc3100795c4d2eb58eb929a999f011"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a7fbc3100795c4d2eb58eb929a999f011">ReadLine</a> (<a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, size_t MaxCount, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Delim=&quot;\n&quot;)</td></tr>
<tr class="memdesc:a7fbc3100795c4d2eb58eb929a999f011"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single line from a string.  <a href="#a7fbc3100795c4d2eb58eb929a999f011">More...</a><br/></td></tr>
<tr class="separator:a7fbc3100795c4d2eb58eb929a999f011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af93bbd902e5960e046d566f5061064b7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#af93bbd902e5960e046d566f5061064b7">Seek</a> (const size_t &amp;Position)</td></tr>
<tr class="memdesc:af93bbd902e5960e046d566f5061064b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current position in the stream.  <a href="#af93bbd902e5960e046d566f5061064b7">More...</a><br/></td></tr>
<tr class="separator:af93bbd902e5960e046d566f5061064b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e6dbb4c89ff2512dbffa69852a06fda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a4e6dbb4c89ff2512dbffa69852a06fda">SetFreeOnClose</a> (bool FreeOnClose)</td></tr>
<tr class="memdesc:a4e6dbb4c89ff2512dbffa69852a06fda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not you want this stream to free the memory buffer when it closes.  <a href="#a4e6dbb4c89ff2512dbffa69852a06fda">More...</a><br/></td></tr>
<tr class="separator:a4e6dbb4c89ff2512dbffa69852a06fda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1864addc676c5832e08704bd8341859f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a1864addc676c5832e08704bd8341859f">Skip</a> (const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> &amp;Count)</td></tr>
<tr class="memdesc:a1864addc676c5832e08704bd8341859f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the position in the stream.  <a href="#a1864addc676c5832e08704bd8341859f">More...</a><br/></td></tr>
<tr class="separator:a1864addc676c5832e08704bd8341859f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6dedcd3c5301e1631917664efabe3cb"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#af6dedcd3c5301e1631917664efabe3cb">SkipLine</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Delim=&quot;\n&quot;)</td></tr>
<tr class="memdesc:af6dedcd3c5301e1631917664efabe3cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the current position to the start of the next line.  <a href="#af6dedcd3c5301e1631917664efabe3cb">More...</a><br/></td></tr>
<tr class="separator:af6dedcd3c5301e1631917664efabe3cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac15b613b78cd970e01d3592c7f2efc9"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#aac15b613b78cd970e01d3592c7f2efc9">Tell</a> ()</td></tr>
<tr class="memdesc:aac15b613b78cd970e01d3592c7f2efc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the offset of the current position from the start position.  <a href="#aac15b613b78cd970e01d3592c7f2efc9">More...</a><br/></td></tr>
<tr class="separator:aac15b613b78cd970e01d3592c7f2efc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c1e161caf74c74d7d6f9c2d0d5718b1"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a5c1e161caf74c74d7d6f9c2d0d5718b1">Write</a> (const void *Buffer, const size_t &amp;Count)</td></tr>
<tr class="memdesc:a5c1e161caf74c74d7d6f9c2d0d5718b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes data from the stream, copying from the provided buffer.  <a href="#a5c1e161caf74c74d7d6f9c2d0d5718b1">More...</a><br/></td></tr>
<tr class="separator:a5c1e161caf74c74d7d6f9c2d0d5718b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Resource_1_1DataStream')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Mezzanine::Resource::DataStream</a></td></tr>
<tr class="memitem:a5d69345b9e91455ce5bcc3e56e33f0f2 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a5d69345b9e91455ce5bcc3e56e33f0f2">DataStream</a> (const <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> &amp;Mode=DS_Read)</td></tr>
<tr class="memdesc:a5d69345b9e91455ce5bcc3e56e33f0f2 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#a5d69345b9e91455ce5bcc3e56e33f0f2">More...</a><br/></td></tr>
<tr class="separator:a5d69345b9e91455ce5bcc3e56e33f0f2 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3efd57c5ec4a24ae0f03469c7aae3f40 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a3efd57c5ec4a24ae0f03469c7aae3f40">DataStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, const <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> &amp;Mode=DS_Read)</td></tr>
<tr class="memdesc:a3efd57c5ec4a24ae0f03469c7aae3f40 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Named constructor.  <a href="#a3efd57c5ec4a24ae0f03469c7aae3f40">More...</a><br/></td></tr>
<tr class="separator:a3efd57c5ec4a24ae0f03469c7aae3f40 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa07b258113f048729ae8e285d9ea8c inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aafa07b258113f048729ae8e285d9ea8c"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aafa07b258113f048729ae8e285d9ea8c">~DataStream</a> ()</td></tr>
<tr class="memdesc:aafa07b258113f048729ae8e285d9ea8c inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aafa07b258113f048729ae8e285d9ea8c inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8896048db87b3ee57d7e62e72e828b76 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a8896048db87b3ee57d7e62e72e828b76">GetAccessMode</a> () const </td></tr>
<tr class="memdesc:a8896048db87b3ee57d7e62e72e828b76 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set access mode for this data stream.  <a href="#a8896048db87b3ee57d7e62e72e828b76">More...</a><br/></td></tr>
<tr class="separator:a8896048db87b3ee57d7e62e72e828b76 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62a1623251773ab3a237a548ffb67d6a inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a62a1623251773ab3a237a548ffb67d6a">GetAsString</a> ()</td></tr>
<tr class="memdesc:a62a1623251773ab3a237a548ffb67d6a inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the contents of the stream as a string.  <a href="#a62a1623251773ab3a237a548ffb67d6a">More...</a><br/></td></tr>
<tr class="separator:a62a1623251773ab3a237a548ffb67d6a inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a164d641a57fd2dcea7e012d381fedc1f inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a164d641a57fd2dcea7e012d381fedc1f">GetLine</a> (bool Trim=true)</td></tr>
<tr class="memdesc:a164d641a57fd2dcea7e012d381fedc1f inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the contents of the current line in the stream.  <a href="#a164d641a57fd2dcea7e012d381fedc1f">More...</a><br/></td></tr>
<tr class="separator:a164d641a57fd2dcea7e012d381fedc1f inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1b962945968bf5076b7cf0b09c83f9c inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#ac1b962945968bf5076b7cf0b09c83f9c">GetName</a> () const </td></tr>
<tr class="memdesc:ac1b962945968bf5076b7cf0b09c83f9c inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this resource.  <a href="#ac1b962945968bf5076b7cf0b09c83f9c">More...</a><br/></td></tr>
<tr class="separator:ac1b962945968bf5076b7cf0b09c83f9c inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2f840e59423e73557b1c8781ac4ad22 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aa2f840e59423e73557b1c8781ac4ad22">GetSize</a> () const </td></tr>
<tr class="memdesc:aa2f840e59423e73557b1c8781ac4ad22 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the stream.  <a href="#aa2f840e59423e73557b1c8781ac4ad22">More...</a><br/></td></tr>
<tr class="separator:aa2f840e59423e73557b1c8781ac4ad22 inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf7a1451e8f097a2294887cf6979940e inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aaf7a1451e8f097a2294887cf6979940e">IsReadable</a> () const </td></tr>
<tr class="memdesc:aaf7a1451e8f097a2294887cf6979940e inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether this stream can be read.  <a href="#aaf7a1451e8f097a2294887cf6979940e">More...</a><br/></td></tr>
<tr class="separator:aaf7a1451e8f097a2294887cf6979940e inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa01c6819a0cc70e1a7f2988c9381993b inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aa01c6819a0cc70e1a7f2988c9381993b">IsWriteable</a> () const </td></tr>
<tr class="memdesc:aa01c6819a0cc70e1a7f2988c9381993b inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether this stream can be written to.  <a href="#aa01c6819a0cc70e1a7f2988c9381993b">More...</a><br/></td></tr>
<tr class="separator:aa01c6819a0cc70e1a7f2988c9381993b inherit pub_methods_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a4bb72ac6ff5f54abfc5bcf675374927f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4bb72ac6ff5f54abfc5bcf675374927f"></a>
<a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>BufferEnd</b></td></tr>
<tr class="separator:a4bb72ac6ff5f54abfc5bcf675374927f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7631501e3e159b8113fc00fb29142d2f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7631501e3e159b8113fc00fb29142d2f"></a>
<a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>BufferPos</b></td></tr>
<tr class="separator:a7631501e3e159b8113fc00fb29142d2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac73aa94fe15d6c2846a935b06688a3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaac73aa94fe15d6c2846a935b06688a3"></a>
<a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>BufferStart</b></td></tr>
<tr class="separator:aaac73aa94fe15d6c2846a935b06688a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ebe10faf8b63b5ebf4e4632f64f5d18"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0ebe10faf8b63b5ebf4e4632f64f5d18"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FreeBuffer</b></td></tr>
<tr class="separator:a0ebe10faf8b63b5ebf4e4632f64f5d18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Resource_1_1DataStream')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Mezzanine::Resource::DataStream</a></td></tr>
<tr class="memitem:a1331a3a41cc51912619443af35b0a4f6 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1331a3a41cc51912619443af35b0a4f6"></a>
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a1331a3a41cc51912619443af35b0a4f6">Access</a></td></tr>
<tr class="memdesc:a1331a3a41cc51912619443af35b0a4f6 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of access this stream has to the resource. <br/></td></tr>
<tr class="separator:a1331a3a41cc51912619443af35b0a4f6 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c8f09b002ce06283df8f1f1791fef07 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c8f09b002ce06283df8f1f1791fef07"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a4c8f09b002ce06283df8f1f1791fef07">ResourceName</a></td></tr>
<tr class="memdesc:a4c8f09b002ce06283df8f1f1791fef07 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the resource. If this is a stream to a file, this should be the filename. <br/></td></tr>
<tr class="separator:a4c8f09b002ce06283df8f1f1791fef07 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d92c94764fb8d3cdd1c7e4575625a51 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d92c94764fb8d3cdd1c7e4575625a51"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a3d92c94764fb8d3cdd1c7e4575625a51">Size</a></td></tr>
<tr class="memdesc:a3d92c94764fb8d3cdd1c7e4575625a51 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the stream. <br/></td></tr>
<tr class="separator:a3d92c94764fb8d3cdd1c7e4575625a51 inherit pro_attribs_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1Resource_1_1DataStream"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1Resource_1_1DataStream')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Mezzanine::Resource::DataStream</a></td></tr>
<tr class="memitem:afe2916e4ed8c06130d032d99c5a532f2 inherit pub_types_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> { <b>DS_Read</b> = 1, 
<b>DS_Write</b> = 2
 }</td></tr>
<tr class="memdesc:afe2916e4ed8c06130d032d99c5a532f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum describes the type of access to the resource. <br/></td></tr>
<tr class="separator:afe2916e4ed8c06130d032d99c5a532f2 inherit pub_types_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac88ac21234a2b0b34e03ec4246d356c inherit pub_types_classMezzanine_1_1Resource_1_1DataStream"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356c">StreamFlags</a> { <b>SF_None</b> = 0, 
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356cad012c5a3ee64eae0312983dc8d33aa99">SF_CreateOnFail</a> = 1, 
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356caa8a0fd61e54eeb1fe009e28f61a791c7">SF_Binary</a> = 2, 
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356ca1a0a24a169dd2b57cbaaa7b908c9285c">SF_Truncate</a> = 4
 }</td></tr>
<tr class="memdesc:aac88ac21234a2b0b34e03ec4246d356c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum describes the flags that control certain behaviors of a stream.  <a href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356c">More...</a><br/></td></tr>
<tr class="separator:aac88ac21234a2b0b34e03ec4246d356c inherit pub_types_classMezzanine_1_1Resource_1_1DataStream"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This represents a stream to a buffer in memory. </p>

<p>Definition at line <a class="el" href="datastream_8h_source.xhtml#l00168">168</a> of file <a class="el" href="datastream_8h_source.xhtml">datastream.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a34a16a7e6be93233073c9af87fd26a00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Resource::MemoryDataStream::MemoryDataStream </td>
          <td>(</td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>BufferSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FreeOnClose</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ReadOnly</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Buffer creation constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">BufferSize</td><td>The size of the buffer to be created. </td></tr>
    <tr><td class="paramname">FreeOnClose</td><td>If true this will delete the memory buffer when the stream is closed. </td></tr>
    <tr><td class="paramname">ReadOnly</td><td>If true, writing operations on this stream will be prohibited. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00232">232</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a395645ef567a4d807bc835f4fa96206a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Resource::MemoryDataStream::MemoryDataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>BufferSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FreeOnClose</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ReadOnly</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Named buffer creation constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the stream. </td></tr>
    <tr><td class="paramname">BufferSize</td><td>The size of the buffer to be created. </td></tr>
    <tr><td class="paramname">FreeOnClose</td><td>If true this will delete the memory buffer when the stream is closed. </td></tr>
    <tr><td class="paramname">ReadOnly</td><td>If true, writing operations on this stream will be prohibited. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00245">245</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a018900010dcbc7ebca89ec6c00157fd6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Resource::MemoryDataStream::MemoryDataStream </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>BufferSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FreeOnClose</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ReadOnly</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pre-made buffer constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>The premade buffer to stream from. </td></tr>
    <tr><td class="paramname">BufferSize</td><td>The size of the buffer to stream to/from. </td></tr>
    <tr><td class="paramname">FreeOnClose</td><td>If true this will delete the memory buffer when the stream is closed. </td></tr>
    <tr><td class="paramname">ReadOnly</td><td>If true, writing operations on this stream will be prohibited. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a55987263974a0ceeceeda7ddcc52ed1d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Resource::MemoryDataStream::MemoryDataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>BufferSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FreeOnClose</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ReadOnly</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Named pre-made buffer constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the stream. </td></tr>
    <tr><td class="paramname">Buffer</td><td>The premade buffer to stream from. </td></tr>
    <tr><td class="paramname">BufferSize</td><td>The size of the buffer to stream to/from. </td></tr>
    <tr><td class="paramname">FreeOnClose</td><td>If true this will delete the memory buffer when the stream is closed. </td></tr>
    <tr><td class="paramname">ReadOnly</td><td>If true, writing operations on this stream will be prohibited. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00270">270</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a78b5d296a5c483cd9a1b15e3c5b0ef28"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Resource::MemoryDataStream::Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Closes the stream to the resource. </p>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aff1a3ceed4d6db62361544440c1bac32">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00414">414</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a42397450c2f66c07e21bc4aed30c323f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Resource::MemoryDataStream::EoF </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not the current position is at the end of the file/stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the current position has reached the end of the stream, false otherwise. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a606ec8602a93ddda483be1454f7e98a4">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00409">409</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a10bc659bb3deb8ace7f4fa11b26567f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> * Mezzanine::Resource::MemoryDataStream::GetBufferEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the end of the memory buffer used by this stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the end of the memory buffer. </dd></dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00300">300</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1e18cd84d11385321f1cf9dd03dc6519"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> * Mezzanine::Resource::MemoryDataStream::GetBufferPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the current position in the memory buffer used by this stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the current position in the memory buffer. </dd></dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00295">295</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3fde0e9b62586a1380bab2a227dd756a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#aa5f38583d9025e05fa33d6e32e97b457">UInt8</a> * Mezzanine::Resource::MemoryDataStream::GetBufferStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the start of the memory buffer used by this stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the start of the memory buffer. </dd></dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00290">290</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3b054bb40739588b40b6b04e92c31621"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Mezzanine::Resource::MemoryDataStream::Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>Count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads data from the stream, copying to a buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>The buffer to place data from the stream. </td></tr>
    <tr><td class="paramname">Count</td><td>The number of bytes to read from the stream. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes read. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#ad9b597f7d4561a7425b96bb497e6dce2">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00354">354</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7fbc3100795c4d2eb58eb929a999f011"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Mezzanine::Resource::MemoryDataStream::ReadLine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>MaxCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Delim</em> = <code>&quot;\n&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a single line from a string. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function should only be used if a file was opened in binary mode. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>Pointer to the buffer to copy to. </td></tr>
    <tr><td class="paramname">MaxCount</td><td>The maximum number of bytes to read. Usually you want this to be your buffer size. </td></tr>
    <tr><td class="paramname">Delim</td><td>The character that marks the end of a line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes actually read, not including the Delimiter. </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aa8458683984478f605fa4dd6c3f214e1">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00313">313</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af93bbd902e5960e046d566f5061064b7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Resource::MemoryDataStream::Seek </td>
          <td>(</td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the current position in the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>The position in the stream to be set as current. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a93e869b3f6bb6f8cad75522f01d68e78">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00396">396</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4e6dbb4c89ff2512dbffa69852a06fda"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Resource::MemoryDataStream::SetFreeOnClose </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FreeOnClose</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets whether or not you want this stream to free the memory buffer when it closes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">True</td><td>if you want this stream to free the buffer when it closes, false if you want it preserved. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00305">305</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1864addc676c5832e08704bd8341859f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Resource::MemoryDataStream::Skip </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> &amp;&#160;</td>
          <td class="paramname"><em>Count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Advances the position in the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Count</td><td>The number of bytes to skip/advance in the stream from the current position. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a5ba58755ae72eae04678c42e5e2c22b9">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00387">387</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af6dedcd3c5301e1631917664efabe3cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Mezzanine::Resource::MemoryDataStream::SkipLine </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Delim</em> = <code>&quot;\n&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Moves the current position to the start of the next line. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function should only be used if a file was opened in binary mode. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Delim</td><td>The character that marks the end of a line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes skipped. </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a8b55a5a1fc3ade2eeb5966a9563ec3ec">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00340">340</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aac15b613b78cd970e01d3592c7f2efc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Mezzanine::Resource::MemoryDataStream::Tell </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the offset of the current position from the start position. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes the current position is from the beginning of the stream. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a0fa4e7d3297ffead34f4aed868dcb633">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00404">404</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5c1e161caf74c74d7d6f9c2d0d5718b1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Mezzanine::Resource::MemoryDataStream::Write </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>Count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes data from the stream, copying from the provided buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>The buffer of data to be written. </td></tr>
    <tr><td class="paramname">Count</td><td>The number of bytes to write from the buffer to the stream. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes written. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aafdbe4aeb8e8743d514fbd1075a30859">Mezzanine::Resource::DataStream</a>.</p>

<p>Definition at line <a class="el" href="datastream_8cpp_source.xhtml#l00370">370</a> of file <a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Resource/<a class="el" href="datastream_8h_source.xhtml">datastream.h</a></li>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Resource/<a class="el" href="datastream_8cpp_source.xhtml">datastream.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 23:09:57 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
