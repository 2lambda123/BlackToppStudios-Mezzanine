<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/sqeaky/Code/Mezzanine/Mezzanine/src/audiomanager.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_282391f6f4177160a7bfc5213c65158e.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_b044052e4980a71349e081a68f99b09b.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">audiomanager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _audiomanager_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _audiomanager_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;audiomanager.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;Audio/sound.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;Audio/listener.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;Audio/soundset.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="musicplayer_8h.xhtml" title="The interface for the Musicplayer class.">Audio/musicplayer.h</a>&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resourcemanager_8h.xhtml" title="The defintion of the Resource Manager.">resourcemanager.h</a>&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;entresol.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;stringtool.h&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &lt;cAudio.h&gt;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">template</span>&lt;&gt; AudioManager* Singleton&lt;AudioManager&gt;::SingletonPtr = 0;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManagerInternalData.xhtml">   57</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classMezzanine_1_1AudioManagerInternalData.xhtml">AudioManagerInternalData</a></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="classMezzanine_1_1AudioManagerInternalData.xhtml">AudioManagerInternalData</a>(<a class="code" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>* Man) : AudioMan(Man), OutputFrequency(-1), EAXEffectSlots(4) {  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            ~<a class="code" href="classMezzanine_1_1AudioManagerInternalData.xhtml">AudioManagerInternalData</a>() {  }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <a class="code" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>* AudioMan;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> InitializedDevice;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465" title="A datatype use to represent any integer close to.">Integer</a> OutputFrequency;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465" title="A datatype use to represent any integer close to.">Integer</a> EAXEffectSlots;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    };</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a30da8ac656fdacf5c420f03304f4e109">   69</a></span>&#160;    <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a30da8ac656fdacf5c420f03304f4e109" title="Class Constructor.">AudioManager::AudioManager</a>(<span class="keywordtype">bool</span> DefaultSettings)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        : AmbientVolume(1.0),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;          DialogVolume(1.0),</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;          EffectVolume(1.0),</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;          MusicVolume(1.0),</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;          MasterVolume(1.0),</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;          MuteStandby(0.0),</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          Muted(false)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        AMID = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1AudioManagerInternalData.xhtml">AudioManagerInternalData</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        cAudioMan = cAudio::createAudioManager(DefaultSettings);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">//cAudioMan-&gt;getAvailableDevices();</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        Listener = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1Listener.xhtml" title="This is the listener class used for 3D sound.">Audio::Listener</a>(cAudioMan-&gt;getListener());</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        MusicPlayer = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml" title="This is a convenience class for the playing of music in a game.">Audio::MusicPlayer</a>();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9" title="This is a weighting used by the main loop to decide what order the managers should be called in...">Priority</a> = 55;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        this-&gt;AutoGenFiles = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aae7123844195a0ab13a0a827a3909741">   87</a></span>&#160;    <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a30da8ac656fdacf5c420f03304f4e109" title="Class Constructor.">AudioManager::AudioManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        : AmbientVolume(1.0),</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;          DialogVolume(1.0),</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          EffectVolume(1.0),</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;          MusicVolume(1.0),</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;          MasterVolume(1.0),</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;          MuteStandby(0.0),</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          Muted(false)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        AMID = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1AudioManagerInternalData.xhtml">AudioManagerInternalData</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        cAudioMan = cAudio::createAudioManager(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        MusicPlayer = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml" title="This is a convenience class for the playing of music in a game.">Audio::MusicPlayer</a>();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9" title="This is a weighting used by the main loop to decide what order the managers should be called in...">Priority</a> = 55;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> CurrAttrib;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> PathPreset;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// Get whether or not to autogen the directory path and settings file.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AutoGenNode = XMLNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AutoCreateSettings&quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span>(!AutoGenNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            CurrAttrib = AutoGenNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Auto&quot;</span>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                AutoGenPath = AutoGenFiles = StringTools::ConvertToBool( CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>() );</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment">// Get preset path to default to if a path is not provided.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> PathNode = XMLNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;SettingsPath&quot;</span>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span>(!PathNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            CurrAttrib = PathNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Path&quot;</span>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                PathPreset = CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">if</span>(!PathPreset.empty())</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a31002ee8b05d8876500a726448a0dd2a" title="Sets the path to be assumed when saving/loading settings to files.">SetSettingsFilePath</a>(PathPreset);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">// Get the files to be loaded, and load them.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> FilesNode = XMLNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;SettingsFiles&quot;</span>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span>(!FilesNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">for</span>( <a class="code" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml" title="Child node iterator (a bidirectional iterator over a collection of Node)">XML::NodeIterator</a> SetFileIt = FilesNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac0ec690c89564f34967b5563fc335ffa" title="Get a Child node iterator that references the first child Node.">begin</a>() ; SetFileIt != FilesNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#aabffeb501cfdd732dc2ce6b1bda6c56f" title="Get a Child node iterator that references one past the last child Node.">end</a>() ; ++SetFileIt )</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> FileName, FilePath, FileGroup;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="comment">// Get the filename to load</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                CurrAttrib = (*SetFileIt).GetAttribute(<span class="stringliteral">&quot;FileName&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    FileName = CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="comment">// Get the path</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                CurrAttrib = (*SetFileIt).GetAttribute(<span class="stringliteral">&quot;Path&quot;</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                    FilePath = CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    CurrAttrib = (*SetFileIt).GetAttribute(<span class="stringliteral">&quot;Group&quot;</span>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                        FileGroup = CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="keywordflow">if</span>(FilePath.empty())</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    <span class="keywordflow">if</span>(FileGroup.empty()) <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a3777e9716ae4c2a7188e30f5f39f79f2" title="Loads settings from a settings file.">LoadSettings</a>(FileName);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    <span class="keywordflow">else</span> <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a4e3953d05fb5446539fa5e56dfb8f2b6" title="Loads settings from a settings file.">LoadSettingsFromGroup</a>(FileName,FileGroup);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">else</span> <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a3777e9716ae4c2a7188e30f5f39f79f2" title="Loads settings from a settings file.">LoadSettings</a>(FileName,FilePath);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ad9bd9af3c7c1e2dba1127aa4642c0ec7" title="Initializes the Device.">InitializeDevice</a>(<a class="code" href="classMezzanine_1_1AudioManager.xhtml#aaf0f4e44c56f9dc82005c12e766ca5ef" title="Gets the name of the default device.">GetDefaultDeviceName</a>());</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        Listener = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1Listener.xhtml" title="This is the listener class used for 3D sound.">Audio::Listener</a>(cAudioMan-&gt;getListener());</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aed11c120ed062fa13a0881099859a957">  158</a></span>&#160;    <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aed11c120ed062fa13a0881099859a957" title="Class Destructor.">AudioManager::~AudioManager</a>()</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">if</span>(AutoGenFiles)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#acb701d81b590606477f739a0d7c6d0e0" title="Saves all settings that need saving.">SaveAllSettings</a>();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aa9b51e38b4a9b1a1b1efce10fc10f0ee" title="Deletes all stored sounds.">DestroyAllSounds</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        cAudio::destroyAudioManager(cAudioMan);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">delete</span> AMID;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> AudioManager::GetObjectRootNodeName()<span class="keyword"> const</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultAudioManagerSettings&quot;</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">void</span> AudioManager::AppendCurrentSettings(XML::Node&amp; SettingsRootNode)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">// Create the Group node to be returned</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        XML::Node CurrentSettings = SettingsRootNode.AppendChild(<span class="stringliteral">&quot;Current&quot;</span>);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// Create and initialize the device settings</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        XML::Node DeviceSettingsNode = CurrentSettings.AppendChild(<span class="stringliteral">&quot;DeviceSettings&quot;</span>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        DeviceSettingsNode.AppendAttribute(<span class="stringliteral">&quot;DeviceName&quot;</span>).SetValue( AMID-&gt;InitializedDevice );</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        DeviceSettingsNode.AppendAttribute(<span class="stringliteral">&quot;OutputFrequency&quot;</span>).SetValue( StringTools::ConvertToString(AMID-&gt;OutputFrequency) );</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        DeviceSettingsNode.AppendAttribute(<span class="stringliteral">&quot;EAXEffectSlots&quot;</span>).SetValue( StringTools::ConvertToString(AMID-&gt;EAXEffectSlots) );</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="comment">// Create and initialize the volume settings</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        XML::Node VolumeSettingsNode = CurrentSettings.AppendChild(<span class="stringliteral">&quot;Volume&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        VolumeSettingsNode.AppendAttribute(<span class="stringliteral">&quot;Ambient&quot;</span>).SetValue( StringTools::ConvertToString(this-&gt;<a class="code" href="classMezzanine_1_1AudioManager.xhtml#acb9f1413ab2260c181ded3ddca71d0dd" title="Gets the currently set Ambient volume.">GetAmbientVolume</a>()) );</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        VolumeSettingsNode.AppendAttribute(<span class="stringliteral">&quot;Dialog&quot;</span>).SetValue( StringTools::ConvertToString(this-&gt;<a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8eb5c6da62ca7bafb1e990746a0f9397" title="Gets the currently set Dialog volume.">GetDialogVolume</a>()) );</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        VolumeSettingsNode.AppendAttribute(<span class="stringliteral">&quot;Effects&quot;</span>).SetValue( StringTools::ConvertToString(this-&gt;<a class="code" href="classMezzanine_1_1AudioManager.xhtml#a06657b2cecce3b0953dc74bcafcff672" title="Gets the currently set Effect volume.">GetEffectVolume</a>()) );</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        VolumeSettingsNode.AppendAttribute(<span class="stringliteral">&quot;Music&quot;</span>).SetValue( StringTools::ConvertToString(this-&gt;<a class="code" href="classMezzanine_1_1AudioManager.xhtml#a0cfcb626b2023911aaa7dee25f49a596" title="Gets the currently set Music volume.">GetMusicVolume</a>()) );</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        VolumeSettingsNode.AppendAttribute(<span class="stringliteral">&quot;Master&quot;</span>).SetValue( StringTools::ConvertToString(this-&gt;<a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8ff9ae76e2aa05b3f49346b2dd5542e0" title="Gets the currently set Master volume.">GetMasterVolume</a>()) );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="comment">// Create and initialize the mute setting</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        XML::Node MuteSettingNode = CurrentSettings.AppendChild(<span class="stringliteral">&quot;Mute&quot;</span>);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        MuteSettingNode.AppendAttribute(<span class="stringliteral">&quot;Muted&quot;</span>).SetValue( StringTools::ConvertToString(this-&gt;<a class="code" href="classMezzanine_1_1AudioManager.xhtml#abd9029e2783691428d1d6031560ee743" title="Gets whether or not the Audio subsystem is muted.">IsMuted</a>()) );</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a48ad7f946649a3971e52a3d9bf3aba20">  194</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a48ad7f946649a3971e52a3d9bf3aba20">AudioManager::ApplySettingGroupImpl</a>(<a class="code" href="classMezzanine_1_1ObjectSettingGroup.xhtml" title="A class that store&#39;s a collection of SettingSets that can be applied together.">ObjectSettingGroup</a>* Group)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">for</span>( ObjectSettingSetContainer::SubSetIterator SubSetIt = Group-&gt;<a class="code" href="classMezzanine_1_1ObjectSettingSetContainer.xhtml#a8843cfb23e0b6478d472eeb44aff6d54" title="Gets an iterator to the first subset of settings in this set.">SubSetBegin</a>() ; SubSetIt != Group-&gt;<a class="code" href="classMezzanine_1_1ObjectSettingSetContainer.xhtml#a1d95451fdc156733b3649deb505fa763" title="Gets an iterator to one passed the last subset of settings in this set.">SubSetEnd</a>() ; ++SubSetIt )</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> CurrSettingValue;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span>( <span class="stringliteral">&quot;DeviceSettings&quot;</span> == (*SubSetIt)-&gt;GetName() )</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <span class="comment">// Setup the data to populate</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> DeviceName(<span class="stringliteral">&quot;Default&quot;</span>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465" title="A datatype use to represent any integer close to.">Integer</a> OutputFreq = -1;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465" title="A datatype use to represent any integer close to.">Integer</a> EAXSlots = 4;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="comment">// Get the values</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;DeviceName&quot;</span>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    DeviceName = CurrSettingValue;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;OutputFrequency&quot;</span>);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    OutputFreq = StringTools::ConvertToInteger(CurrSettingValue);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;EAXEffectSlots&quot;</span>);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    EAXSlots = StringTools::ConvertToInteger(CurrSettingValue);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="keywordflow">if</span>( <span class="stringliteral">&quot;Default&quot;</span> == DeviceName )</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    DeviceName = <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aaf0f4e44c56f9dc82005c12e766ca5ef" title="Gets the name of the default device.">GetDefaultDeviceName</a>();</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="keywordflow">if</span>( !<a class="code" href="classMezzanine_1_1AudioManager.xhtml#a59da30072591ac6a037e586ad2f180e3" title="Checks to see if the named device is available.">DeviceNameValid</a>(DeviceName) )</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                        DeviceName = <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aaf0f4e44c56f9dc82005c12e766ca5ef" title="Gets the name of the default device.">GetDefaultDeviceName</a>();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="comment">// Check if everything is initialized and set the settings appropriately</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordflow">if</span>(!<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a>)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ad9bd9af3c7c1e2dba1127aa4642c0ec7" title="Initializes the Device.">InitializeDevice</a>(DeviceName,OutputFreq,EAXSlots);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                }<span class="keywordflow">else</span>{<span class="comment"></span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">                    /// @todo May want to make some other data member so that people can accurately get what is set now, instead of what will be set.</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"></span>                    <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a96f894e20225d43643091c3731acc35d" title="Runtime event and message logging.">Log</a>(<span class="stringliteral">&quot;WARNING: Attempting to apply new device settings after the AudioManager has been initialized.  &quot;</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                                  <span class="stringliteral">&quot;These Settings will be applied the next time settings are loaded during manager construction if current settings are saved.&quot;</span>);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    AMID-&gt;InitializedDevice = DeviceName;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    AMID-&gt;OutputFrequency = OutputFreq;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    AMID-&gt;EAXEffectSlots = EAXSlots;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;Volume&quot;</span> == (*SubSetIt)-&gt;GetName() )</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="comment">// Setup the data to populate</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> AmbientVol = -1.0;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> DialogVol = -1.0;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> EffectVol = -1.0;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> MusicVol = -1.0;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> MasterVol = -1.0;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="comment">// Get the values</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;Ambient&quot;</span>);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                    AmbientVol = StringTools::ConvertToReal(CurrSettingValue);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;Dialog&quot;</span>);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                    DialogVol = StringTools::ConvertToReal(CurrSettingValue);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;Effects&quot;</span>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    EffectVol = StringTools::ConvertToReal(CurrSettingValue);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;Music&quot;</span>);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    MusicVol = StringTools::ConvertToReal(CurrSettingValue);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;Master&quot;</span>);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    MasterVol = StringTools::ConvertToReal(CurrSettingValue);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="comment">// Set the values</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">if</span>( 0.0 &lt;= AmbientVol ) <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a57a2ac96d43af13df8f11112515c3b96" title="Sets the volume for all stored Ambient sounds.">SetAmbientVolume</a>(AmbientVol);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="keywordflow">if</span>( 0.0 &lt;= DialogVol ) <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab69018e84430a5dc4facb23341e3aeb3" title="Sets the volume for all stored Dialog sounds.">SetDialogVolume</a>(DialogVol);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <span class="keywordflow">if</span>( 0.0 &lt;= EffectVol ) <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a390953c8eecd4446854b1e4c1c431f5a" title="Sets the volume for all stored Effect sounds.">SetEffectVolume</a>(EffectVol);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">if</span>( 0.0 &lt;= MusicVol ) <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8df0f5fb1e426a59cfafee4f54201db7" title="Sets the volume for all stored Music sounds.">SetMusicVolume</a>(MusicVol);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                <span class="keywordflow">if</span>( 0.0 &lt;= MasterVol ) <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae3120d9f9877113fbe019f63a451f155" title="Sets the volume for all stored sounds.">SetMasterVolume</a>(MasterVol);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;Mute&quot;</span> == (*SubSetIt)-&gt;GetName() )</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="comment">// Setup the data to populate</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordtype">bool</span> MuteState = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="comment">// Get the values</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                CurrSettingValue = (*SubSetIt)-&gt;GetSettingValue(<span class="stringliteral">&quot;Muted&quot;</span>);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="keywordflow">if</span>(!CurrSettingValue.empty())</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    MuteState = StringTools::ConvertToBool(CurrSettingValue,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="comment">// Set the values</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a2df3cdf8b7fcfe844847f6181d788e5c" title="Sets whether or not to mute all Audio.">Mute</a>(MuteState);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aadb6ab0fd58253567da61c8b3432b104">  283</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aadb6ab0fd58253567da61c8b3432b104" title="Creates an ambient sound instance from a file that can be used to play sounds.">AudioManager::CreateAmbientSound</a>(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; SoundName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; FileName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Group)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* pSound = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>(SoundName,FileName,Group,<a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295ead2a032a407e097b7bb7d5a385653aad0" title="Environmental sounds. Bird&#39;s chirping, water washing against rocks, etc.">Audio::ST_Ambient</a>);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        Sounds.insert(std::pair&lt;String,Audio::Sound*&gt;(SoundName,pSound));</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        AmbientSounds.push_back(pSound);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">return</span> pSound;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ada9827e181e8c8cfc31d290ccb9f6c46">  291</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ada9827e181e8c8cfc31d290ccb9f6c46" title="Creates an dialog sound instance from a file that can be used to play sounds.">AudioManager::CreateDialogSound</a>(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; SoundName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; FileName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Group)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* pSound = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>(SoundName,FileName,Group,<a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295eae976bb4e3c6ed427af5bfa77a579d2c5" title="Character sounds and speech.">Audio::ST_Dialog</a>);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        Sounds.insert(std::pair&lt;String,Audio::Sound*&gt;(SoundName,pSound));</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        DialogSounds.push_back(pSound);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">return</span> pSound;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab2573d44cfe6e0f8e3d1f0dc794c36a5">  299</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab2573d44cfe6e0f8e3d1f0dc794c36a5" title="Creates an effect sound instance from a file that can be used to play sounds.">AudioManager::CreateEffectSound</a>(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; SoundName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; FileName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Group)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* pSound = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>(SoundName,FileName,Group,<a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295ea93feb4ba046a6f320ad48bf064efb939" title="Various effects such as objects colliding, explosions, guns firing, etc.">Audio::ST_Effect</a>);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        Sounds.insert(std::pair&lt;String,Audio::Sound*&gt;(SoundName,pSound));</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        EffectSounds.push_back(pSound);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">return</span> pSound;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a157de9927fb561655b74267d9c375034">  307</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a157de9927fb561655b74267d9c375034" title="Creates an music sound instance from a file that can be used to play sounds.">AudioManager::CreateMusicSound</a>(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; SoundName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; FileName, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Group)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* pSound = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>(SoundName,FileName,Group,<a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295ea8b58a4bf5a48652cdb9108e0227adc70" title="Self explanitory. The game SoundTrack.">Audio::ST_Music</a>);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        Sounds.insert(std::pair&lt;String,Audio::Sound*&gt;(SoundName,pSound));</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        MusicSounds.push_back(pSound);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">return</span> pSound;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab65a0838326b7087488052e1c0868078">  315</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab65a0838326b7087488052e1c0868078" title="Gets a sound by it&#39;s name.">AudioManager::GetSoundByName</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SoundName)<span class="keyword"> const</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        std::map&lt;String,Audio::Sound*&gt;::const_iterator SoundIt = Sounds.find(SoundName);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">if</span>(SoundIt != Sounds.end()) <span class="keywordflow">return</span> (*SoundIt).second;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a6cd0e2faa6913722551a68b9a536c7dd">  322</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a6cd0e2faa6913722551a68b9a536c7dd" title="Deletes a Sound.">AudioManager::DestroySound</a>(<a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">for</span>( std::map&lt;String,Audio::Sound*&gt;::iterator It = Sounds.begin() ; It != Sounds.end() ; ++It )</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">if</span>(ToBeDestroyed == (*It).second)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                <span class="keyword">delete</span> (*It).second;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                Sounds.erase(It);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aa9b51e38b4a9b1a1b1efce10fc10f0ee">  335</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aa9b51e38b4a9b1a1b1efce10fc10f0ee" title="Deletes all stored sounds.">AudioManager::DestroyAllSounds</a>()</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">for</span>( std::map&lt;String,Audio::Sound*&gt;::iterator It = Sounds.begin() ; It != Sounds.end() ; ++It )</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        {</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keyword">delete</span> (*It).second;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        Sounds.clear();</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        cAudioMan-&gt;releaseAllSources();</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ac4a92b861868203186e7f238bd2f816c">  345</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml" title="This is a vector that stores sounds.">Audio::SoundSet</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ac4a92b861868203186e7f238bd2f816c" title="Creates a sound set.">AudioManager::CreateSoundSet</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SoundSetName)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <a class="code" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml" title="This is a vector that stores sounds.">Audio::SoundSet</a>* Set = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml" title="This is a vector that stores sounds.">Audio::SoundSet</a>();</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        this-&gt;SoundSets[SoundSetName] = Set;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">return</span> Set;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a30d640929214f4dc721da0fa6374743d">  352</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml" title="This is a vector that stores sounds.">Audio::SoundSet</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a30d640929214f4dc721da0fa6374743d" title="Gets an existing sound set.">AudioManager::GetSoundSet</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SoundSetName)<span class="keyword"> const</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        std::map&lt; String, Audio::SoundSet* &gt;::const_iterator SS = this-&gt;SoundSets.find(SoundSetName);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">if</span>(SS != SoundSets.end()) <span class="keywordflow">return</span> (*SS).second;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8db9deed28afb7b07017cb6fd99b624a">  359</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8db9deed28afb7b07017cb6fd99b624a" title="Add&#39;s a sound to the defined set.">AudioManager::AddSoundToSoundSet</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SoundSetName, <a class="code" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Audio::Sound</a>* SoundInst)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <a class="code" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml" title="This is a vector that stores sounds.">Audio::SoundSet</a>* Set = this-&gt;SoundSets[SoundSetName];</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        Set-&gt;push_back(SoundInst);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a57a2ac96d43af13df8f11112515c3b96">  365</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a57a2ac96d43af13df8f11112515c3b96" title="Sets the volume for all stored Ambient sounds.">AudioManager::SetAmbientVolume</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Ambient)</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        AmbientVolume = Ambient;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Audio::Sound*&gt;::iterator it = AmbientSounds.begin() ; it != AmbientSounds.end() ; it++ )</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        {</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            (*it)-&gt;UpdateVolume();</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#acb9f1413ab2260c181ded3ddca71d0dd">  374</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#acb9f1413ab2260c181ded3ddca71d0dd" title="Gets the currently set Ambient volume.">AudioManager::GetAmbientVolume</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">return</span> AmbientVolume;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div>
<div class="line"><a name="l00379"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab69018e84430a5dc4facb23341e3aeb3">  379</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab69018e84430a5dc4facb23341e3aeb3" title="Sets the volume for all stored Dialog sounds.">AudioManager::SetDialogVolume</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Dialog)</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    {</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        DialogVolume = Dialog;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Audio::Sound*&gt;::iterator it = DialogSounds.begin() ; it != DialogSounds.end() ; it++ )</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        {</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            (*it)-&gt;UpdateVolume();</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        }</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    }</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8eb5c6da62ca7bafb1e990746a0f9397">  388</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8eb5c6da62ca7bafb1e990746a0f9397" title="Gets the currently set Dialog volume.">AudioManager::GetDialogVolume</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">return</span> DialogVolume;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    }</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a390953c8eecd4446854b1e4c1c431f5a">  393</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a390953c8eecd4446854b1e4c1c431f5a" title="Sets the volume for all stored Effect sounds.">AudioManager::SetEffectVolume</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Effect)</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    {</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        EffectVolume = Effect;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Audio::Sound*&gt;::iterator it = EffectSounds.begin() ; it != EffectSounds.end() ; it++ )</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        {</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            (*it)-&gt;UpdateVolume();</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a06657b2cecce3b0953dc74bcafcff672">  402</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a06657b2cecce3b0953dc74bcafcff672" title="Gets the currently set Effect volume.">AudioManager::GetEffectVolume</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">return</span> EffectVolume;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div>
<div class="line"><a name="l00407"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8df0f5fb1e426a59cfafee4f54201db7">  407</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8df0f5fb1e426a59cfafee4f54201db7" title="Sets the volume for all stored Music sounds.">AudioManager::SetMusicVolume</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Music)</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    {</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        MusicVolume = Music;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Audio::Sound*&gt;::iterator it = MusicSounds.begin() ; it != MusicSounds.end() ; it++ )</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            (*it)-&gt;UpdateVolume();</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a0cfcb626b2023911aaa7dee25f49a596">  416</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a0cfcb626b2023911aaa7dee25f49a596" title="Gets the currently set Music volume.">AudioManager::GetMusicVolume</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">return</span> MusicVolume;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div>
<div class="line"><a name="l00421"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae3120d9f9877113fbe019f63a451f155">  421</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae3120d9f9877113fbe019f63a451f155" title="Sets the volume for all stored sounds.">AudioManager::SetMasterVolume</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Master)</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        MasterVolume = Master;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a1171a0dece85578907c6bbf82da56936" title="Calls on all sounds stored in this manager to update their volume after a settings change...">UpdateAllVolumes</a>();</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8ff9ae76e2aa05b3f49346b2dd5542e0">  427</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a8ff9ae76e2aa05b3f49346b2dd5542e0" title="Gets the currently set Master volume.">AudioManager::GetMasterVolume</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keywordflow">return</span> MasterVolume;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a2df3cdf8b7fcfe844847f6181d788e5c">  432</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a2df3cdf8b7fcfe844847f6181d788e5c" title="Sets whether or not to mute all Audio.">AudioManager::Mute</a>(<span class="keywordtype">bool</span> Enable)</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordflow">if</span>(Enable == Muted)</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="keywordflow">if</span>(Enable)</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            MuteStandby = MasterVolume;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            MasterVolume = 0;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            MasterVolume = MuteStandby;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            MuteStandby = 0;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        Muted = Enable;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a1171a0dece85578907c6bbf82da56936" title="Calls on all sounds stored in this manager to update their volume after a settings change...">UpdateAllVolumes</a>();</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#abd9029e2783691428d1d6031560ee743">  448</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#abd9029e2783691428d1d6031560ee743" title="Gets whether or not the Audio subsystem is muted.">AudioManager::IsMuted</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keywordflow">return</span> Muted;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    }</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div>
<div class="line"><a name="l00453"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a1171a0dece85578907c6bbf82da56936">  453</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a1171a0dece85578907c6bbf82da56936" title="Calls on all sounds stored in this manager to update their volume after a settings change...">AudioManager::UpdateAllVolumes</a>()</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keywordflow">for</span>( std::map&lt;String,Audio::Sound*&gt;::iterator it = Sounds.begin() ; it != Sounds.end() ; it++ )</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        {</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            (*it).second-&gt;UpdateVolume();</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    }</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00461"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a753f4954528c5845d5fcb97e938594ed">  461</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a753f4954528c5845d5fcb97e938594ed" title="Gets the name of an available device.">AudioManager::GetAvailableDeviceNameByIndex</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a>&amp; Index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> Device(cAudioMan-&gt;getAvailableDeviceName(Index));</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">return</span> Device;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aaf0f4e44c56f9dc82005c12e766ca5ef">  467</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aaf0f4e44c56f9dc82005c12e766ca5ef" title="Gets the name of the default device.">AudioManager::GetDefaultDeviceName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> Device(cAudioMan-&gt;getDefaultDeviceName());</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keywordflow">if</span>(0==Device.length())</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <span class="keywordflow">if</span>(cAudioMan-&gt;getAvailableDeviceCount())</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            {</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                Device = cAudioMan-&gt;getAvailableDeviceName(0);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a07f3be084a22d754e1aeec37740f5f54" title="When used a instance of InternalException is thrown. Thrown when an unknown internal error occurred...">Exception::INTERNAL_EXCEPTION</a>,<span class="stringliteral">&quot;No Available sound devices.&quot;</span>);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            }</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keywordflow">return</span> Device;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae340f137877d14d965e4f47463f2a84a">  482</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae340f137877d14d965e4f47463f2a84a" title="Gets the number of available devices.">AudioManager::GetAvailableDeviceCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">return</span> cAudioMan-&gt;getAvailableDeviceCount();</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    }</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div>
<div class="line"><a name="l00487"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a59da30072591ac6a037e586ad2f180e3">  487</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a59da30072591ac6a037e586ad2f180e3" title="Checks to see if the named device is available.">AudioManager::DeviceNameValid</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; DeviceName)<span class="keyword"> const</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> Dev = 0 ; Dev &lt; <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae340f137877d14d965e4f47463f2a84a" title="Gets the number of available devices.">GetAvailableDeviceCount</a>() ; Dev++ )</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">if</span>( DeviceName == <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a753f4954528c5845d5fcb97e938594ed" title="Gets the name of an available device.">GetAvailableDeviceNameByIndex</a>(Dev) )</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        }</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a28287efea5943984f96a9ddfd1a2e2a9">  497</a></span>&#160;    std::stringstream* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a28287efea5943984f96a9ddfd1a2e2a9" title="This gets the logs that the audio subystem creates.">AudioManager::GetLogs</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">return</span> 0; <span class="comment">//cAudioManager-&gt;GetLogs();</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a4452ecf4eabfae18e0f6651e35530579">  502</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a4452ecf4eabfae18e0f6651e35530579" title="This empties logs that the audio subystem creates.">AudioManager::ClearLogs</a>()</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="comment">//cAudioManager-&gt;ClearLogs();</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    }</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ad9bd9af3c7c1e2dba1127aa4642c0ec7">  507</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ad9bd9af3c7c1e2dba1127aa4642c0ec7" title="Initializes the Device.">AudioManager::InitializeDevice</a>(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a> &amp;DeviceName, <span class="keywordtype">int</span> OutputFrequency, <span class="keywordtype">int</span> EAXEffectSlots)</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    {</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        cAudioMan-&gt;initialize(DeviceName.c_str(), OutputFrequency, EAXEffectSlots);</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        AMID-&gt;InitializedDevice = DeviceName;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        AMID-&gt;OutputFrequency = OutputFrequency;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        AMID-&gt;EAXEffectSlots = EAXEffectSlots;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    }</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div>
<div class="line"><a name="l00516"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae24f6ec9247699ed1fae96846c4dfcae">  516</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1Listener.xhtml" title="This is the listener class used for 3D sound.">Audio::Listener</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ae24f6ec9247699ed1fae96846c4dfcae" title="Retrieve&#39;s the listener for this sound manager.">AudioManager::GetListener</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <span class="keywordflow">return</span> Listener;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a083c78deb0a783850c0f5a036cafb1b3">  521</a></span>&#160;    <a class="code" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml" title="This is a convenience class for the playing of music in a game.">Audio::MusicPlayer</a>* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a083c78deb0a783850c0f5a036cafb1b3" title="Gets the Music Player for this sound manager.">AudioManager::GetMusicPlayer</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keywordflow">return</span> MusicPlayer;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    }</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div>
<div class="line"><a name="l00526"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab90e81d0e2bac51ad3552c627cde9336">  526</a></span>&#160;    cAudio::IAudioManager* <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ab90e81d0e2bac51ad3552c627cde9336" title="Gets the internal cAudioManager this manager is based on.">AudioManager::GetcAudioManager</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="keywordflow">return</span> cAudioMan;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    }</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a24f1464e3de9d95e3c50c276f9e176e6">  531</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a24f1464e3de9d95e3c50c276f9e176e6" title="Configure Items requiring other Managers. ">AudioManager::Initialize</a>()</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    {</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <span class="keywordflow">if</span>(!<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a>)</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <a class="code" href="classMezzanine_1_1AudioManager.xhtml#ad9bd9af3c7c1e2dba1127aa4642c0ec7" title="Initializes the Device.">InitializeDevice</a>(<a class="code" href="classMezzanine_1_1AudioManager.xhtml#aaf0f4e44c56f9dc82005c12e766ca5ef" title="Gets the name of the default device.">GetDefaultDeviceName</a>(),-1,4);</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="keywordflow">if</span>(AutoGenFiles)</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#acb701d81b590606477f739a0d7c6d0e0" title="Saves all settings that need saving.">SaveAllSettings</a>();</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    }</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div>
<div class="line"><a name="l00540"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aefcdc7d3276500cf627f2c2e33b483f3">  540</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aefcdc7d3276500cf627f2c2e33b483f3" title="The main loop calls this once per frame. ">AudioManager::DoMainLoopItems</a>()</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        { MusicPlayer-&gt;<a class="code" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml#ae03bceb937bf8d30ada98d5b56b189e9" title="Called on by the AudioManager to perform all music player responsibilities.">Update</a>(); }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#aa27e023f182fa01e5eaadf93b8124656">  543</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#aa27e023f182fa01e5eaadf93b8124656" title="This returns the type of this manager. ">AudioManager::GetInterfaceType</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> ManagerBase::AudioManager; }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div>
<div class="line"><a name="l00546"></a><span class="lineno"><a class="code" href="classMezzanine_1_1AudioManager.xhtml#a6294d35b8acdd84e7d1c81e99d05c894">  546</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1AudioManager.xhtml#a6294d35b8acdd84e7d1c81e99d05c894" title="This Allows any manager name to be sent to a stream. Primarily used for logging. ">AudioManager::GetImplementationTypeName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultAudioManager&quot;</span>; }</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment"></span>    <span class="comment">// DefaultAudioManagerFactory Methods</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div>
<div class="line"><a name="l00552"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a3fb62ad5146dfaf992cbd0cf3c3349eb">  552</a></span>&#160;    <a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a3fb62ad5146dfaf992cbd0cf3c3349eb" title="Class constructor.">DefaultAudioManagerFactory::DefaultAudioManagerFactory</a>()</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    {</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div>
<div class="line"><a name="l00556"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a5f4f00cfaca219f2ee1df095cd70a249">  556</a></span>&#160;    <a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a5f4f00cfaca219f2ee1df095cd70a249" title="Class destructor.">DefaultAudioManagerFactory::~DefaultAudioManagerFactory</a>()</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00560"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#aea651a4510edfaae4344c11bd14ab7af">  560</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#aea651a4510edfaae4344c11bd14ab7af" title="Gets the name of the Manager that is created by this factory. ">DefaultAudioManagerFactory::GetManagerTypeName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultAudioManager&quot;</span>;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div>
<div class="line"><a name="l00565"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a083a7548bd1d6d6b06952829604d174a">  565</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* <a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a083a7548bd1d6d6b06952829604d174a" title="Creates a manager of the type represented by this factory. ">DefaultAudioManagerFactory::CreateManager</a>(<a class="code" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28" title="This is a datatype mostly used for describing settings or parameters that can&#39;t be declared in advanc...">NameValuePairList</a>&amp; Params)</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    {</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9" title="Checks to see if the singleton pointer is valid.">AudioManager::SingletonValid</a>())</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">            /// @todo Add something to log a warning that the manager exists and was requested to be constructed when we have a logging manager set up.</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment"></span>            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">AudioManager::GetSingletonPtr</a>();</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            <span class="keywordflow">if</span>(Params.empty()) <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>();</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            {</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                <span class="keywordtype">bool</span> DefaultSettings = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                <span class="keywordflow">for</span>( NameValuePairList::iterator ParIt = Params.begin() ; ParIt != Params.end() ; ++ParIt )</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                {</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> Lower = (*ParIt).first;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                    StringTools::ToLowerCase(Lower);</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                    <span class="keywordflow">if</span>( <span class="stringliteral">&quot;defaultsettings&quot;</span> == Lower )</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                    {</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                        DefaultSettings = StringTools::ConvertToBool( (*ParIt).second );</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                    }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                }</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>(DefaultSettings);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            }</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        }</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    }</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div>
<div class="line"><a name="l00590"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a4dd9d443d94e468643119e2fb1893ea2">  590</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* <a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a083a7548bd1d6d6b06952829604d174a" title="Creates a manager of the type represented by this factory. ">DefaultAudioManagerFactory::CreateManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    {</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9" title="Checks to see if the singleton pointer is valid.">AudioManager::SingletonValid</a>())</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="comment">            /// @todo Add something to log a warning that the manager exists and was requested to be constructed when we have a logging manager set up.</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="comment"></span>            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">AudioManager::GetSingletonPtr</a>();</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        }<span class="keywordflow">else</span> <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>(XMLNode);</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    }</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div>
<div class="line"><a name="l00599"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a8426ea33bdd6d72143c62a69a165f0f7">  599</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1DefaultAudioManagerFactory.xhtml#a8426ea33bdd6d72143c62a69a165f0f7" title="Destroys a Manager created by this factory. ">DefaultAudioManagerFactory::DestroyManager</a>(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    {</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        <span class="keyword">delete</span> ToBeDestroyed;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    }</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 23:09:52 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
