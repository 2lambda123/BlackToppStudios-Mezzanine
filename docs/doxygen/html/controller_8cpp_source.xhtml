<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Input/controller.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_282391f6f4177160a7bfc5213c65158e.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_b044052e4980a71349e081a68f99b09b.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4358ccd54f293adf03e83e7f75aaa22b.xhtml">Input</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">controller.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _inputcontroller_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _inputcontroller_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;Input/controller.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;exception.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;SDL.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">namespace </span>Input</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#ab89c88de8aeb640daf2c81c00be934f3">   55</a></span>&#160;        <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#ab89c88de8aeb640daf2c81c00be934f3" title="Class constructor.">Controller::Controller</a>(<span class="keywordtype">void</span>* InternalControl, <span class="keywordtype">int</span> Count)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            SDL_Joystick* InternalController = (SDL_Joystick*)InternalControl;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Axes.resize( SDL_JoystickNumAxes(InternalController) );</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            Trackballs.resize( SDL_JoystickNumBalls(InternalController) );</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            Buttons.resize( SDL_JoystickNumButtons(InternalController) );</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            Hats.resize( SDL_JoystickNumHats(InternalController) );</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            memset( &amp;Axes[0],0,<span class="keyword">sizeof</span>(Axes[0]) * Axes.size() );</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            memset( &amp;Trackballs[0],0,<span class="keyword">sizeof</span>(Trackballs[0]) * Trackballs.size() );</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            memset( &amp;Buttons[0],<a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61a9e41cf2e735f5b4ef46fc69f43fcb6ea">Input::BUTTON_UP</a>,<span class="keyword">sizeof</span>(Buttons[0]) * Buttons.size() );</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            memset( &amp;Hats[0],Input::CONTROLLERHAT_CENTERED,<span class="keyword">sizeof</span>(Hats[0]) * Hats.size() );</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            Index = Count; <span class="comment">//SDL_JoystickIndex(InternalController);</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            DeviceName = SDL_JoystickName(InternalController);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="comment">//DeviceName = &quot;DefaultName&quot;;</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a97297bbb8eee74d42e6ff3e5571cf914">   71</a></span>&#160;        <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a97297bbb8eee74d42e6ff3e5571cf914" title="Class destructor.">Controller::~Controller</a>()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a0df99db4681e1b13e44f0658872e791f">   75</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a0df99db4681e1b13e44f0658872e791f">Controller::UpdateImpl</a>(std::vector&lt;MetaCode&gt;&amp; Codes)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> X = 0 ; X &lt; Codes.size() ; ++X )</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <a class="code" href="classMezzanine_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>&amp; CurrCode = Codes[X];</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span>(CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &gt;= <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aa1ef942fa5e0b13e9994a17fb4103044d" title="This is the lowest Controller axis value, all jpystick values will be larger of equal to this...">Input::CONTROLLERAXIS_FIRST</a> &amp;&amp; CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &lt;= <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aa7c295a1b1e4ffdc951c80c01316a7cbd" title="The Last Controller axis event, all joystick axis event will be lower or equal to this...">Input::CONTROLLERAXIS_LAST</a>)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    Axes.at( CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() - <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aa1ef942fa5e0b13e9994a17fb4103044d" title="This is the lowest Controller axis value, all jpystick values will be larger of equal to this...">Input::CONTROLLERAXIS_FIRST</a> ) = CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>(CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &gt;= Input::CONTROLLERBALL_FIRST &amp;&amp; CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &lt;= Input::CONTROLLERBALL_LAST)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    <span class="keywordflow">if</span>( Input::CONTROLLERBALL_1_HORIZONTAL == CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() ){</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        Trackballs.at(0).X = CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    }<span class="keywordflow">else</span> <span class="keywordflow">if</span>( Input::CONTROLLERBALL_1_VERTICAL == CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() ){</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                        Trackballs.at(0).Y = CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    }<span class="keywordflow">else</span> <span class="keywordflow">if</span>( Input::CONTROLLERBALL_2_HORIZONTAL == CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() ){</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        Trackballs.at(1).X = CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    }<span class="keywordflow">else</span> <span class="keywordflow">if</span>( Input::CONTROLLERBALL_2_VERTICAL == CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() ){</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                        Trackballs.at(1).Y = CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>(CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &gt;= <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aad763344eb07323c097021c02bb505855" title="This is the lowest Controller button value, all joystickbutton values will be larger of equal to this...">Input::CONTROLLERBUTTON_FIRST</a> &amp;&amp; CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &lt;= <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aace1ec667fe76346d7d8251f088c08765" title="The Last Controller button event, all Controller button event will be lower or equal to this...">Input::CONTROLLERBUTTON_LAST</a>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    TransitioningIndexes.push_back( CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() - <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aad763344eb07323c097021c02bb505855" title="This is the lowest Controller button value, all joystickbutton values will be larger of equal to this...">Input::CONTROLLERBUTTON_FIRST</a> );</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    Buttons.at( CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() - <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aad763344eb07323c097021c02bb505855" title="This is the lowest Controller button value, all joystickbutton values will be larger of equal to this...">Input::CONTROLLERBUTTON_FIRST</a> ) = static_cast&lt;Input::ButtonState&gt;(CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>());</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>(CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &gt;= Input::CONTROLLERHAT_FIRST &amp;&amp; CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() &lt;= Input::CONTROLLERHAT_LAST)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    Hats.at( CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a66a498d1b720a4a94a60f9e6813fd066" title="This Returns the Inputcode.">GetCode</a>() - Input::CONTROLLERHAT_FIRST ) = static_cast&lt;Input::HatState&gt;(CurrCode.<a class="code" href="classMezzanine_1_1MetaCode.xhtml#a650c4ae1fb698233516d978dd83dfca7" title="This Returns the MetaValue.">GetMetaValue</a>());</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span>        <span class="comment">// Query Methods</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a51f7e8a949c5f729ac9678e0c70bbbd4">  111</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a51f7e8a949c5f729ac9678e0c70bbbd4" title="Gets the device index of this controller.">Controller::GetDeviceIndex</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">return</span> Index;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aeebef8dd6ea2e919cfd869c6dd8b32e1">  116</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aeebef8dd6ea2e919cfd869c6dd8b32e1" title="Gets the name of this device.">Controller::GetDeviceName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">return</span> DeviceName;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a64126857a6151f9af609e64f0016f304">  121</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a64126857a6151f9af609e64f0016f304" title="Gets the number of Axes on this device.">Controller::GetNumAxes</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">return</span> Axes.size();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a86ae7ec8f8ba14d92b7d71a8cefb68e4">  126</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a86ae7ec8f8ba14d92b7d71a8cefb68e4" title="Gets the number of Trackballs on this device.">Controller::GetNumTrackballs</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">return</span> Trackballs.size();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2f6c5fc214a2b468f39bb1ac9b5873ba">  131</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2f6c5fc214a2b468f39bb1ac9b5873ba" title="Gets the number of Hats on this device.">Controller::GetNumHats</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">return</span> Hats.size();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aff8bbe318c4085e07bbaa9ae939d05e7">  136</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aff8bbe318c4085e07bbaa9ae939d05e7" title="Gets whether a specific hat is pressed in a specific direction.">Controller::IsHatPushedInDirection</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Hat, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146" title="An optional listing of the possible states a hat on a controller can take.">Input::HatState</a>&amp; WhichWay)<span class="keyword"> const</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146" title="An optional listing of the possible states a hat on a controller can take.">Input::HatState</a> State = <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#af828af1d9afb3f2cd8c5934e867068b0" title="Gets the current state of the requested hat.">GetHatState</a>(Hat);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">return</span> State == WhichWay;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2ef834ac5656321ff0bb558c315dafca">  142</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6" title="An 16-bit integer.">Int16</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2ef834ac5656321ff0bb558c315dafca" title="This Gets the value of the given joystick axis.">Controller::GetAxis</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">return</span> Axes.at( Axis - 1 );</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a9f9ddd12da96a3d319852edb932b9475">  147</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a9f9ddd12da96a3d319852edb932b9475" title="Gets the delta movement on the requested trackball.">Controller::GetTrackballDelta</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Trackball)<span class="keyword"> const</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">return</span> Trackballs.at( Trackball - 1 );</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#adefba16bf0df458049584c9f734bdb8d">  152</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#adefba16bf0df458049584c9f734bdb8d" title="Gets the delta movement on the X axis on the requested trackball.">Controller::GetTrackballDeltaX</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Trackball)<span class="keyword"> const</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a9f9ddd12da96a3d319852edb932b9475" title="Gets the delta movement on the requested trackball.">GetTrackballDelta</a>(Trackball).<a class="code" href="classMezzanine_1_1Vector2.xhtml#a204bb23ce90f944f342fe86203f539d1" title="Coordinate on the X vector.">X</a>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a92f1fa93d7a95bb62a48197f887b99c7">  157</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a92f1fa93d7a95bb62a48197f887b99c7" title="Gets the delta movement on the Y axis on the requested trackball.">Controller::GetTrackballDeltaY</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Trackball)<span class="keyword"> const</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a9f9ddd12da96a3d319852edb932b9475" title="Gets the delta movement on the requested trackball.">GetTrackballDelta</a>(Trackball).<a class="code" href="classMezzanine_1_1Vector2.xhtml#aa189e2585580d3f82b29584844fad0ad" title="Coordinate on the Y vector.">Y</a>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#af828af1d9afb3f2cd8c5934e867068b0">  162</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146" title="An optional listing of the possible states a hat on a controller can take.">Input::HatState</a>&amp; <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#af828af1d9afb3f2cd8c5934e867068b0" title="Gets the current state of the requested hat.">Controller::GetHatState</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Hat)<span class="keyword"> const</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">return</span> Hats.at( Hat - 1 );</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a0235bccc9f9662be1b30f9fc99a99953">  167</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6" title="An 16-bit integer.">Int16</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2ef834ac5656321ff0bb558c315dafca" title="This Gets the value of the given joystick axis.">Controller::GetAxis</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">return</span> Axes.at( Axis - <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aa1ef942fa5e0b13e9994a17fb4103044d" title="This is the lowest Controller axis value, all jpystick values will be larger of equal to this...">Input::CONTROLLERAXIS_FIRST</a> );</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a8816289618e2f42eb19d2d6299867e5a">  172</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a9f9ddd12da96a3d319852edb932b9475" title="Gets the delta movement on the requested trackball.">Controller::GetTrackballDelta</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; Trackball)<span class="keyword"> const</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">if</span>( Input::CONTROLLERBALL_1_HORIZONTAL == Trackball ){</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="keywordflow">return</span> Trackballs.at(0).X;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span>( Input::CONTROLLERBALL_1_VERTICAL == Trackball ){</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="keywordflow">return</span> Trackballs.at(0).Y;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span>( Input::CONTROLLERBALL_2_HORIZONTAL == Trackball ){</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">return</span> Trackballs.at(1).X;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span>( Input::CONTROLLERBALL_2_VERTICAL == Trackball ){</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="keywordflow">return</span> Trackballs.at(1).Y;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a14311376b409dd4861e4bf0f1d640ea5" title="When used a instance of InvalidParametersException is thrown. Thrown when parameters are checked at r...">Exception::INVALID_PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Invalid Trackball parameter.&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aac65d35498228be7de475a93c01ddeed">  187</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61" title="An Optional listing of value that can be used in a metacode to represent the information of a button ...">Input::ButtonState</a>&amp; <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aac65d35498228be7de475a93c01ddeed">Controller::GetButtonState</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Button)<span class="keyword"> const</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">return</span> Buttons.at( Button - 1 );</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#a6749d473a0129055c839e8436fe1aaca">  192</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61" title="An Optional listing of value that can be used in a metacode to represent the information of a button ...">Input::ButtonState</a>&amp; <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#aac65d35498228be7de475a93c01ddeed">Controller::GetButtonState</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; Button)<span class="keyword"> const</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">return</span> Buttons.at( Button - <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721aad763344eb07323c097021c02bb505855" title="This is the lowest Controller button value, all joystickbutton values will be larger of equal to this...">Input::CONTROLLERBUTTON_FIRST</a> );</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#ab7d763913f2b9f4d2f3f6158020370b1">  197</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146" title="An optional listing of the possible states a hat on a controller can take.">Input::HatState</a>&amp; <a class="code" href="classMezzanine_1_1Input_1_1Controller.xhtml#af828af1d9afb3f2cd8c5934e867068b0" title="Gets the current state of the requested hat.">Controller::GetHatState</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; Hat)<span class="keyword"> const</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">return</span> Hats.at( Hat - Input::CONTROLLERHAT_FIRST );</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"></span>        <span class="comment">// Configuration Methods</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"></span>        <span class="comment">// Utility Methods</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }<span class="comment">//Input</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 22:24:19 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
