<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Input::Controller Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Input.xhtml">Input</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml">Controller</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Input_1_1Controller-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Input::Controller Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class represents a controller input device, such as a gamepad or joystick.  
 <a href="classMezzanine_1_1Input_1_1Controller.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="controller_8h_source.xhtml">controller.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Input::Controller:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Input_1_1Controller__inherit__graph.svg" width="190" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Input::Controller:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Input_1_1Controller__coll__graph.svg" width="100%" height="515"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab89c88de8aeb640daf2c81c00be934f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#ab89c88de8aeb640daf2c81c00be934f3">Controller</a> (void *InternalControl, int Count)</td></tr>
<tr class="memdesc:ab89c88de8aeb640daf2c81c00be934f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#ab89c88de8aeb640daf2c81c00be934f3"></a><br/></td></tr>
<tr class="memitem:a97297bbb8eee74d42e6ff3e5571cf914"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a97297bbb8eee74d42e6ff3e5571cf914"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a97297bbb8eee74d42e6ff3e5571cf914">~Controller</a> ()</td></tr>
<tr class="memdesc:a97297bbb8eee74d42e6ff3e5571cf914"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a2ef834ac5656321ff0bb558c315dafca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6">Int16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2ef834ac5656321ff0bb558c315dafca">GetAxis</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Axis) const </td></tr>
<tr class="memdesc:a2ef834ac5656321ff0bb558c315dafca"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Gets the value of the given joystick axis.  <a href="#a2ef834ac5656321ff0bb558c315dafca"></a><br/></td></tr>
<tr class="memitem:a0235bccc9f9662be1b30f9fc99a99953"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6">Int16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a0235bccc9f9662be1b30f9fc99a99953">GetAxis</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Axis) const </td></tr>
<tr class="memdesc:a0235bccc9f9662be1b30f9fc99a99953"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Gets the value of the given joystick axis.  <a href="#a0235bccc9f9662be1b30f9fc99a99953"></a><br/></td></tr>
<tr class="memitem:af520ed2cfab91d3dc3b52b7f08964161"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#af520ed2cfab91d3dc3b52b7f08964161">GetButtonState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:af520ed2cfab91d3dc3b52b7f08964161"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the state of the requested button.   <a href="#af520ed2cfab91d3dc3b52b7f08964161"></a><br/></td></tr>
<tr class="memitem:af78d593f03164dc919b64355aef3700a"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#af78d593f03164dc919b64355aef3700a">GetButtonState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:af78d593f03164dc919b64355aef3700a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the state of the requested button.   <a href="#af78d593f03164dc919b64355aef3700a"></a><br/></td></tr>
<tr class="memitem:a51f7e8a949c5f729ac9678e0c70bbbd4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a51f7e8a949c5f729ac9678e0c70bbbd4">GetDeviceIndex</a> () const </td></tr>
<tr class="memdesc:a51f7e8a949c5f729ac9678e0c70bbbd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the device index of this controller.  <a href="#a51f7e8a949c5f729ac9678e0c70bbbd4"></a><br/></td></tr>
<tr class="memitem:a4a445c1c6342d4325a60e1e6586bdff4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a4a445c1c6342d4325a60e1e6586bdff4">GetDeviceName</a> () const </td></tr>
<tr class="memdesc:a4a445c1c6342d4325a60e1e6586bdff4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this device.  <a href="#a4a445c1c6342d4325a60e1e6586bdff4"></a><br/></td></tr>
<tr class="memitem:ae8f3d2aab783c4895f2548d8754a045c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#ae8f3d2aab783c4895f2548d8754a045c">GetHatState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Hat) const </td></tr>
<tr class="memdesc:ae8f3d2aab783c4895f2548d8754a045c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current state of the requested hat.  <a href="#ae8f3d2aab783c4895f2548d8754a045c"></a><br/></td></tr>
<tr class="memitem:af6bbde5d50f67724b37ae850217939a6"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#af6bbde5d50f67724b37ae850217939a6">GetHatState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Hat) const </td></tr>
<tr class="memdesc:af6bbde5d50f67724b37ae850217939a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current state of the requested hat.  <a href="#af6bbde5d50f67724b37ae850217939a6"></a><br/></td></tr>
<tr class="memitem:a64126857a6151f9af609e64f0016f304"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a64126857a6151f9af609e64f0016f304">GetNumAxes</a> () const </td></tr>
<tr class="memdesc:a64126857a6151f9af609e64f0016f304"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of Axes on this device.  <a href="#a64126857a6151f9af609e64f0016f304"></a><br/></td></tr>
<tr class="memitem:a2f6c5fc214a2b468f39bb1ac9b5873ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a2f6c5fc214a2b468f39bb1ac9b5873ba">GetNumHats</a> () const </td></tr>
<tr class="memdesc:a2f6c5fc214a2b468f39bb1ac9b5873ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of Hats on this device.  <a href="#a2f6c5fc214a2b468f39bb1ac9b5873ba"></a><br/></td></tr>
<tr class="memitem:a86ae7ec8f8ba14d92b7d71a8cefb68e4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a86ae7ec8f8ba14d92b7d71a8cefb68e4">GetNumTrackballs</a> () const </td></tr>
<tr class="memdesc:a86ae7ec8f8ba14d92b7d71a8cefb68e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of Trackballs on this device.  <a href="#a86ae7ec8f8ba14d92b7d71a8cefb68e4"></a><br/></td></tr>
<tr class="memitem:a9f9ddd12da96a3d319852edb932b9475"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a9f9ddd12da96a3d319852edb932b9475">GetTrackballDelta</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Trackball) const </td></tr>
<tr class="memdesc:a9f9ddd12da96a3d319852edb932b9475"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the delta movement on the requested trackball.  <a href="#a9f9ddd12da96a3d319852edb932b9475"></a><br/></td></tr>
<tr class="memitem:a8816289618e2f42eb19d2d6299867e5a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a8816289618e2f42eb19d2d6299867e5a">GetTrackballDelta</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Trackball) const </td></tr>
<tr class="memdesc:a8816289618e2f42eb19d2d6299867e5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the delta movement on the requested trackball.  <a href="#a8816289618e2f42eb19d2d6299867e5a"></a><br/></td></tr>
<tr class="memitem:adefba16bf0df458049584c9f734bdb8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#adefba16bf0df458049584c9f734bdb8d">GetTrackballDeltaX</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Trackball) const </td></tr>
<tr class="memdesc:adefba16bf0df458049584c9f734bdb8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the delta movement on the X axis on the requested trackball.  <a href="#adefba16bf0df458049584c9f734bdb8d"></a><br/></td></tr>
<tr class="memitem:a92f1fa93d7a95bb62a48197f887b99c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a92f1fa93d7a95bb62a48197f887b99c7">GetTrackballDeltaY</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Trackball) const </td></tr>
<tr class="memdesc:a92f1fa93d7a95bb62a48197f887b99c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the delta movement on the Y axis on the requested trackball.  <a href="#a92f1fa93d7a95bb62a48197f887b99c7"></a><br/></td></tr>
<tr class="memitem:aff8bbe318c4085e07bbaa9ae939d05e7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#aff8bbe318c4085e07bbaa9ae939d05e7">IsHatPushedInDirection</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Hat, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a> &amp;WhichWay) const </td></tr>
<tr class="memdesc:aff8bbe318c4085e07bbaa9ae939d05e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether a specific hat is pressed in a specific direction.  <a href="#aff8bbe318c4085e07bbaa9ae939d05e7"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d4723b175746531847007864df7a5d1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a9d4723b175746531847007864df7a5d1">Device</a> ()</td></tr>
<tr class="memdesc:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:ab0277e72b883c5479d8edcf98b0a406a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab0277e72b883c5479d8edcf98b0a406a"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ab0277e72b883c5479d8edcf98b0a406a">~Device</a> ()</td></tr>
<tr class="memdesc:ab0277e72b883c5479d8edcf98b0a406a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a0656cd5b70729ded22a4a71fff996598 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a0656cd5b70729ded22a4a71fff996598">_Update</a> (std::vector&lt; <a class="el" href="classMezzanine_1_1MetaCode.xhtml">MetaCode</a> &gt; &amp;Codes)</td></tr>
<tr class="memdesc:a0656cd5b70729ded22a4a71fff996598 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates this device with the newest data.  <a href="#a0656cd5b70729ded22a4a71fff996598"></a><br/></td></tr>
<tr class="memitem:ac0c68ecb03ccbfea547a8d9fa3f290b6 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ac0c68ecb03ccbfea547a8d9fa3f290b6">CheckButtonState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;State) const </td></tr>
<tr class="memdesc:ac0c68ecb03ccbfea547a8d9fa3f290b6 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a button on this device is a specific state.  <a href="#ac0c68ecb03ccbfea547a8d9fa3f290b6"></a><br/></td></tr>
<tr class="memitem:a3fdaacf2f0da28707f92ad5fe998e941 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a3fdaacf2f0da28707f92ad5fe998e941">CheckButtonState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;State) const </td></tr>
<tr class="memdesc:a3fdaacf2f0da28707f92ad5fe998e941 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a button on this device is a specific state.  <a href="#a3fdaacf2f0da28707f92ad5fe998e941"></a><br/></td></tr>
<tr class="memitem:a49bab894fc0efe8ecd3792699dd17464 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a49bab894fc0efe8ecd3792699dd17464">GetNumButtons</a> () const </td></tr>
<tr class="memdesc:a49bab894fc0efe8ecd3792699dd17464 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of buttons on this device.  <a href="#a49bab894fc0efe8ecd3792699dd17464"></a><br/></td></tr>
<tr class="memitem:a4b77cf9fe8ebf9a78396662b3294c50a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a4b77cf9fe8ebf9a78396662b3294c50a">IsButtonLifting</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a4b77cf9fe8ebf9a78396662b3294c50a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted this frame.  <a href="#a4b77cf9fe8ebf9a78396662b3294c50a"></a><br/></td></tr>
<tr class="memitem:ad398a5e4e66e8c01dd00ad6c11d33d58 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ad398a5e4e66e8c01dd00ad6c11d33d58">IsButtonLifting</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:ad398a5e4e66e8c01dd00ad6c11d33d58 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted this frame.  <a href="#ad398a5e4e66e8c01dd00ad6c11d33d58"></a><br/></td></tr>
<tr class="memitem:a1a4fbbfc35c26d42c558ead08f56548a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a1a4fbbfc35c26d42c558ead08f56548a">IsButtonPressed</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a1a4fbbfc35c26d42c558ead08f56548a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button is pressed down.  <a href="#a1a4fbbfc35c26d42c558ead08f56548a"></a><br/></td></tr>
<tr class="memitem:aaf7114603e6f41145a679abf9bf52727 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#aaf7114603e6f41145a679abf9bf52727">IsButtonPressed</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:aaf7114603e6f41145a679abf9bf52727 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button is pressed down.  <a href="#aaf7114603e6f41145a679abf9bf52727"></a><br/></td></tr>
<tr class="memitem:a6095b30b515a7dc5192c2658a1bb59bd inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a6095b30b515a7dc5192c2658a1bb59bd">IsButtonPressing</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a6095b30b515a7dc5192c2658a1bb59bd inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was pressed this frame.  <a href="#a6095b30b515a7dc5192c2658a1bb59bd"></a><br/></td></tr>
<tr class="memitem:a2a86ab4232a0bf2d331751342ba99446 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a2a86ab4232a0bf2d331751342ba99446">IsButtonPressing</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:a2a86ab4232a0bf2d331751342ba99446 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was pressed this frame.  <a href="#a2a86ab4232a0bf2d331751342ba99446"></a><br/></td></tr>
<tr class="memitem:a4971ecec6152e885d29b1877c7c4adb7 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a4971ecec6152e885d29b1877c7c4adb7">IsButtonTransitioning</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a4971ecec6152e885d29b1877c7c4adb7 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted or pressed this frame.  <a href="#a4971ecec6152e885d29b1877c7c4adb7"></a><br/></td></tr>
<tr class="memitem:a77f100cb8894fcd0847cc8906af4ef0e inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a77f100cb8894fcd0847cc8906af4ef0e">IsButtonTransitioning</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;Button) const </td></tr>
<tr class="memdesc:a77f100cb8894fcd0847cc8906af4ef0e inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted or pressed this frame.  <a href="#a77f100cb8894fcd0847cc8906af4ef0e"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a78917bda38ef9fb5e5546a59fb72d920"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a78917bda38ef9fb5e5546a59fb72d920">UpdateImpl</a> (std::vector&lt; <a class="el" href="classMezzanine_1_1MetaCode.xhtml">MetaCode</a> &gt; &amp;Codes)</td></tr>
<tr class="memdesc:a78917bda38ef9fb5e5546a59fb72d920"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a78917bda38ef9fb5e5546a59fb72d920"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:ae31c5c750d8d3da37f415a35eed7e41f inherit pro_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ae31c5c750d8d3da37f415a35eed7e41f">UpdateButtonTransitions</a> ()</td></tr>
<tr class="memdesc:ae31c5c750d8d3da37f415a35eed7e41f inherit pro_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates transitioning buttons.  <a href="#ae31c5c750d8d3da37f415a35eed7e41f"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a31a5f4f861effead580dbe2b89a4ddea"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a31a5f4f861effead580dbe2b89a4ddea"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6">Int16</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Axes</b></td></tr>
<tr class="memitem:ab719a04d691e0e177e4365c7985d0b89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab719a04d691e0e177e4365c7985d0b89"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>DeviceName</b></td></tr>
<tr class="memitem:aef84a227a37fc8e2630e910868c601ce"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aef84a227a37fc8e2630e910868c601ce"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Hats</b></td></tr>
<tr class="memitem:a4dfeeae194b6df3282986b71e738ec6f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4dfeeae194b6df3282986b71e738ec6f"></a>
<a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Index</b></td></tr>
<tr class="memitem:a3840390b553b8e245d9d421f645ac3fa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3840390b553b8e245d9d421f645ac3fa"></a>
std::vector&lt; <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Trackballs</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:a8050caaa3fc14b635218609e59945a2a inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8050caaa3fc14b635218609e59945a2a"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Buttons</b></td></tr>
<tr class="memitem:aaf42bfd5d0fe7f0f15c718c8b38d7b96 inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf42bfd5d0fe7f0f15c718c8b38d7b96"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TransitioningIndexes</b></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This class represents a controller input device, such as a gamepad or joystick. </p>

<p>Definition at line <a class="el" href="controller_8h_source.xhtml#l00057">57</a> of file <a class="el" href="controller_8h_source.xhtml">controller.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab89c88de8aeb640daf2c81c00be934f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Input::Controller::Controller </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>InternalControl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">InternalControl</td><td>A pointer to the internal struct of this controller. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>A void pointer is necessary because SDL forward declares it's own struct already and this won't compile with two forward declares. </dd></dl>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a2ef834ac5656321ff0bb558c315dafca"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6">Int16</a> Mezzanine::Input::Controller::GetAxis </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Axis</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This Gets the value of the given joystick axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Axis</td><td>The axis that you want. This value is expected to be 1-20. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An integer with the Value of the joystick axis. </dd></dl>

</div>
</div>
<a class="anchor" id="a0235bccc9f9662be1b30f9fc99a99953"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adb602bffcbc8f1b381b2f529e9e364f6">Int16</a> Mezzanine::Input::Controller::GetAxis </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Axis</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This Gets the value of the given joystick axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Axis</td><td>An InputCode representing the axis that you want. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An integer with the Value of the joystick axis. </dd></dl>

</div>
</div>
<a class="anchor" id="af520ed2cfab91d3dc3b52b7f08964161"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a>&amp; Mezzanine::Input::Controller::GetButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the state of the requested button.  </p>
<p><dl class="section remark"><dt>Remarks</dt><dd>This function accepts a button number, and as such expects a number from 1 to 20. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the actual state of the requested button. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#af94403d922185ad028489c6ea957f55f">Mezzanine::Input::Device</a>.</p>

</div>
</div>
<a class="anchor" id="af78d593f03164dc919b64355aef3700a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a>&amp; Mezzanine::Input::Controller::GetButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the state of the requested button.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns the actual state of the requested button. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a239504b35f52758477ef549342f74d8d">Mezzanine::Input::Device</a>.</p>

</div>
</div>
<a class="anchor" id="a51f7e8a949c5f729ac9678e0c70bbbd4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Mezzanine::Input::Controller::GetDeviceIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the device index of this controller. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt16 representing the device index for this controller. </dd></dl>

</div>
</div>
<a class="anchor" id="a4a445c1c6342d4325a60e1e6586bdff4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&amp; Mezzanine::Input::Controller::GetDeviceName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the name of this device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const string reference containing the name of this device. </dd></dl>

</div>
</div>
<a class="anchor" id="ae8f3d2aab783c4895f2548d8754a045c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a>&amp; Mezzanine::Input::Controller::GetHatState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Hat</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current state of the requested hat. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Hat</td><td>The hat to query. This value is expected to be 1-6. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a HatState representing the current state of the specified hat. </dd></dl>

</div>
</div>
<a class="anchor" id="af6bbde5d50f67724b37ae850217939a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a>&amp; Mezzanine::Input::Controller::GetHatState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Hat</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current state of the requested hat. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Hat</td><td>An InputCode representing the hat to query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a HatState representing the current state of the specified hat. </dd></dl>

</div>
</div>
<a class="anchor" id="a64126857a6151f9af609e64f0016f304"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Mezzanine::Input::Controller::GetNumAxes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of Axes on this device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt16 representing the number of Axes present on this controller. </dd></dl>

</div>
</div>
<a class="anchor" id="a2f6c5fc214a2b468f39bb1ac9b5873ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Mezzanine::Input::Controller::GetNumHats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of Hats on this device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt16 representing the number of Hats present on this controller. </dd></dl>

</div>
</div>
<a class="anchor" id="a86ae7ec8f8ba14d92b7d71a8cefb68e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Mezzanine::Input::Controller::GetNumTrackballs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of Trackballs on this device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt16 representing the number of Trackballs present on this controller. </dd></dl>

</div>
</div>
<a class="anchor" id="a9f9ddd12da96a3d319852edb932b9475"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> Mezzanine::Input::Controller::GetTrackballDelta </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Trackball</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the delta movement on the requested trackball. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trackball</td><td>The trackball to query. This value is expected to be at least 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector2 representing the delta movement for the specified trackball. </dd></dl>

</div>
</div>
<a class="anchor" id="a8816289618e2f42eb19d2d6299867e5a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Controller::GetTrackballDelta </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Trackball</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the delta movement on the requested trackball. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trackball</td><td>An InputCode representing the trackball to query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector2 representing the delta movement for the specified trackball. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">A</td><td><a class="el" href="classMezzanine_1_1InvalidParametersException.xhtml">InvalidParametersException</a> is thrown if anything other than a controllerball value from the <a class="el" href="namespaceMezzanine_1_1Input.xhtml">Input</a> enum is passed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adefba16bf0df458049584c9f734bdb8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Controller::GetTrackballDeltaX </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Trackball</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the delta movement on the X axis on the requested trackball. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trackball</td><td>The trackball to query. This value is expected to be at least 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the delta movement on the X axis for the specified trackball. </dd></dl>

</div>
</div>
<a class="anchor" id="a92f1fa93d7a95bb62a48197f887b99c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Controller::GetTrackballDeltaY </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Trackball</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the delta movement on the Y axis on the requested trackball. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trackball</td><td>The trackball to query. This value is expected to be at least 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the delta movement on the Y axis for the specified trackball. </dd></dl>

</div>
</div>
<a class="anchor" id="aff8bbe318c4085e07bbaa9ae939d05e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::Controller::IsHatPushedInDirection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Hat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a963d4fd508047b20204234d537e0e146">Input::HatState</a> &amp;&#160;</td>
          <td class="paramname"><em>WhichWay</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether a specific hat is pressed in a specific direction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichWay</td><td>The hat direction to check for. This value is expected to be 1-6. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the specified hat is pressed in the requested direction. </dd></dl>

</div>
</div>
<a class="anchor" id="a78917bda38ef9fb5e5546a59fb72d920"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Input::Controller::UpdateImpl </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classMezzanine_1_1MetaCode.xhtml">MetaCode</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Codes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a737c5cfc38efdb62a586bb62641135f0">Mezzanine::Input::Device</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Projects/MezzanineCurrent/Mezzanine/Mezzanine/src/Input/<a class="el" href="controller_8h_source.xhtml">controller.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 10 2013 23:44:06 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
