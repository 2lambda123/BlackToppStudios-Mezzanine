<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Testing::UnitTestGroup Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><b>Testing</b></li><li class="navelem"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml">UnitTestGroup</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Testing_1_1UnitTestGroup-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Testing::UnitTestGroup Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A single group of tests, suitable for being all the tests of a small subsystem or single class.  
 <a href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="testdata_8h_source.xhtml">testdata.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Testing::UnitTestGroup:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Testing_1_1UnitTestGroup__inherit__graph.svg" width="336" height="211"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Testing::UnitTestGroup:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Testing_1_1UnitTestGroup__coll__graph.svg" width="148" height="230"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a21c85d6b1047078b17ff6fcb284c632e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a21c85d6b1047078b17ff6fcb284c632e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#a21c85d6b1047078b17ff6fcb284c632e">UnitTestGroup</a> ()</td></tr>
<tr class="memdesc:a21c85d6b1047078b17ff6fcb284c632e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. <br/></td></tr>
<tr class="memitem:aa827e780458030ccf806a87f49e980b9"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#aa827e780458030ccf806a87f49e980b9">AddSuccessFromBool</a> (<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">Mezzanine::String</a> TestName, bool Condition)</td></tr>
<tr class="memdesc:aa827e780458030ccf806a87f49e980b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a Bool to an added test.  <a href="#aa827e780458030ccf806a87f49e980b9"></a><br/></td></tr>
<tr class="memitem:a0cf093431b1c9c4d07674ebc44fa72e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#a0cf093431b1c9c4d07674ebc44fa72e0">AddTestResult</a> (TestData FreshMeat, OverWriteResults Behavior=OverWriteIfLessSuccessful)</td></tr>
<tr class="memdesc:a0cf093431b1c9c4d07674ebc44fa72e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Its expected that tests will be inserted using this.  <a href="#a0cf093431b1c9c4d07674ebc44fa72e0"></a><br/></td></tr>
<tr class="memitem:a6ed19fb6698772f707ee9f744ea1f733"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#a6ed19fb6698772f707ee9f744ea1f733">AddTestResult</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">Mezzanine::String</a> Fresh, TestResult Meat, OverWriteResults Behavior=OverWriteIfLessSuccessful)</td></tr>
<tr class="memdesc:a6ed19fb6698772f707ee9f744ea1f733"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a test results without having to to construct a TestData first.  <a href="#a6ed19fb6698772f707ee9f744ea1f733"></a><br/></td></tr>
<tr class="memitem:a402bb76e733ac4c216ab2dff5720a47c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#a402bb76e733ac4c216ab2dff5720a47c">DisplayResults</a> (std::ostream &amp;Output=std::cout, bool Summary=true, bool FullOutput=true, bool HeaderOutput=true)</td></tr>
<tr class="memdesc:a402bb76e733ac4c216ab2dff5720a47c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the results or save them to a file.  <a href="#a402bb76e733ac4c216ab2dff5720a47c"></a><br/></td></tr>
<tr class="memitem:a73a62e409f8c5c74aa5c5fe6d33a52a5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">Mezzanine::String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#a73a62e409f8c5c74aa5c5fe6d33a52a5">Name</a> ()</td></tr>
<tr class="memdesc:a73a62e409f8c5c74aa5c5fe6d33a52a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Name of this <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml" title="A single group of tests, suitable for being all the tests of a small subsystem or single class...">UnitTestGroup</a>.  <a href="#a73a62e409f8c5c74aa5c5fe6d33a52a5"></a><br/></td></tr>
<tr class="memitem:aeae1bde782b5964c33e34bd3dfa3a779"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aeae1bde782b5964c33e34bd3dfa3a779"></a>
const <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml">UnitTestGroup</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#aeae1bde782b5964c33e34bd3dfa3a779">operator+=</a> (const <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml">UnitTestGroup</a> &amp;rhs)</td></tr>
<tr class="memdesc:aeae1bde782b5964c33e34bd3dfa3a779"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add all the items in another <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml" title="A single group of tests, suitable for being all the tests of a small subsystem or single class...">UnitTestGroup</a> to this one  rhs The item on the right hand side. <br/></td></tr>
<tr class="memitem:ab661466f291b7823c5459a5625122b1f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#ab661466f291b7823c5459a5625122b1f">RunTests</a> (bool RunAutomaticTests, bool RunInteractiveTests)</td></tr>
<tr class="memdesc:ab661466f291b7823c5459a5625122b1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is expected to run all the tests that meet the criteria passed in.  <a href="#ab661466f291b7823c5459a5625122b1f"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a9b9093d229e99eb2c593a882fb20f199"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9b9093d229e99eb2c593a882fb20f199"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml#a9b9093d229e99eb2c593a882fb20f199">LongestNameLength</a></td></tr>
<tr class="memdesc:a9b9093d229e99eb2c593a882fb20f199"><td class="mdescLeft">&#160;</td><td class="mdescRight">Some basic variable for tracking simple statistics. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_attribs_classstd_1_1map"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classstd_1_1map')"><img src="closed.png" alt="-"/>&nbsp;Public Attributes inherited from <a class="el" href="classstd_1_1map.xhtml">std::map< K, T ></a></td></tr>
<tr class="memitem:ac69fe575e214b796b8d9457b0c22469a inherit pub_attribs_classstd_1_1map"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac69fe575e214b796b8d9457b0c22469a"></a>
T&#160;</td><td class="memItemRight" valign="bottom"><b>elements</b></td></tr>
<tr class="memdesc:ac69fe575e214b796b8d9457b0c22469a inherit pub_attribs_classstd_1_1map"><td class="mdescLeft">&#160;</td><td class="mdescRight">STL member. <br/></td></tr>
<tr class="memitem:a8dc2b3ed44acf51fb2bd3eb30b237269 inherit pub_attribs_classstd_1_1map"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8dc2b3ed44acf51fb2bd3eb30b237269"></a>
K&#160;</td><td class="memItemRight" valign="bottom"><b>keys</b></td></tr>
<tr class="memdesc:a8dc2b3ed44acf51fb2bd3eb30b237269 inherit pub_attribs_classstd_1_1map"><td class="mdescLeft">&#160;</td><td class="mdescRight">STL member. <br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>A single group of tests, suitable for being all the tests of a small subsystem or single class. </p>

<p>Definition at line <a class="el" href="testdata_8h_source.xhtml#l00078">78</a> of file <a class="el" href="testdata_8h_source.xhtml">testdata.h</a>.</p>
</div><h2>Member Function Documentation</h2>
<a class="anchor" id="aa827e780458030ccf806a87f49e980b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Testing::UnitTestGroup::AddSuccessFromBool </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">Mezzanine::String</a>&#160;</td>
          <td class="paramname"><em>TestName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Condition</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a Bool to an added test. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TestName</td><td>The name of the Test </td></tr>
    <tr><td class="paramname">Condition</td><td>if false converted to Failed and if true converted Success </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0cf093431b1c9c4d07674ebc44fa72e0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Testing::UnitTestGroup::AddTestResult </td>
          <td>(</td>
          <td class="paramtype">TestData&#160;</td>
          <td class="paramname"><em>FreshMeat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">OverWriteResults&#160;</td>
          <td class="paramname"><em>Behavior</em> = <code>OverWriteIfLessSuccessful</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Its expected that tests will be inserted using this. </p>
<p>This will automate tracking of the most and least successful tests </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FreshMeat</td><td>The New test results and name </td></tr>
    <tr><td class="paramname">Behavior</td><td>An OverWriteResults that defines the overwirte behavior of this function, defaults to OverWriteIfLessSuccessful </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6ed19fb6698772f707ee9f744ea1f733"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Testing::UnitTestGroup::AddTestResult </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">Mezzanine::String</a>&#160;</td>
          <td class="paramname"><em>Fresh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TestResult&#160;</td>
          <td class="paramname"><em>Meat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">OverWriteResults&#160;</td>
          <td class="paramname"><em>Behavior</em> = <code>OverWriteIfLessSuccessful</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a test results without having to to construct a TestData first. </p>
<p>It is expected that every member of a class in <a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a> will be tested and its full name, include scoping operators, namespace, class and function name will here (include argnames if required). Functions outside of classes should use their namespace, functionname and arguments if required as the testname. Example TestNames (The Fresh parameter) "Mezzanine::Vector2::Vector2(Real,Real)" //Test of the <a class="el" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> Constructor that accepts 2 reals "Mezzanine::Vector2::operator+" //Test of only operator+ on <a class="el" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> "operator&lt;&lt;(ostream,Vector2)" //Test of streaming operator for vector2 in root namespace </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Fresh</td><td>The name of the Test </td></tr>
    <tr><td class="paramname">Meat</td><td>The actual TestResult </td></tr>
    <tr><td class="paramname">Behavior</td><td>An OverWriteResults that defines the overwirte behavior of this function, defaults to OverWriteIfLessSuccessful </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a402bb76e733ac4c216ab2dff5720a47c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Testing::UnitTestGroup::DisplayResults </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>Output</em> = <code>std::cout</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Summary</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FullOutput</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>HeaderOutput</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print the results or save them to a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Output</td><td>the stream to send the results to. </td></tr>
    <tr><td class="paramname">Summary</td><td>Print Statistics at the end, not needed when sending results between processes. Defaults to true/enabled. </td></tr>
    <tr><td class="paramname">FullOutput</td><td>Sometimes the user does not want to see each test results and just wants a little blurb. Defaults to true/enabled. </td></tr>
    <tr><td class="paramname">HeaderOutput</td><td>makes the output a little more understandif it is short or needs to be copied into a spreadsheet. Defaults to true/enabled. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a73a62e409f8c5c74aa5c5fe6d33a52a5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">Mezzanine::String</a> Mezzanine::Testing::UnitTestGroup::Name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get Name of this <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml" title="A single group of tests, suitable for being all the tests of a small subsystem or single class...">UnitTestGroup</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The string that must be type at the command line to run this testgroup, should be all lowercase. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>One of two methods that must be implmented on a <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml" title="A single group of tests, suitable for being all the tests of a small subsystem or single class...">UnitTestGroup</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classvector3tests.xhtml#a85abfef77bdf7696272ea653191d80fd">vector3tests</a>, <a class="el" href="classboilerplatetests.xhtml#aed9b3172277e3a7ef3a1caf1401978c3">boilerplatetests</a>, and <a class="el" href="classlua51tests.xhtml#a494a2971acb176fc28d87c3d57ec7a8a">lua51tests</a>.</p>

<p>Definition at line <a class="el" href="testdata_8h_source.xhtml#l00102">102</a> of file <a class="el" href="testdata_8h_source.xhtml">testdata.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab661466f291b7823c5459a5625122b1f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Testing::UnitTestGroup::RunTests </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>RunAutomaticTests</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>RunInteractiveTests</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is expected to run all the tests that meet the criteria passed in. </p>
<p>All test results should be inserted using AddTestResult to allow the returning of results. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">RunAutomaticTests</td><td>True if the automatic tests should be run false if they should </td></tr>
    <tr><td class="paramname">RunInteractiveTests</td><td>True if the interactive tests should run false otherwise/.RunInteractiveTests </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>One of two methods that must be implmented on a <a class="el" href="classMezzanine_1_1Testing_1_1UnitTestGroup.xhtml" title="A single group of tests, suitable for being all the tests of a small subsystem or single class...">UnitTestGroup</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classvector3tests.xhtml#aadc0e058476fa7d267342c8f50957eea">vector3tests</a>, <a class="el" href="classboilerplatetests.xhtml#af040a6b8044fea8a6ab0347e0886d2d9">boilerplatetests</a>, and <a class="el" href="classlua51tests.xhtml#a25e03fd78f84410d5f84fdd63c0faf05">lua51tests</a>.</p>

<p>Definition at line <a class="el" href="testdata_8h_source.xhtml#l00096">96</a> of file <a class="el" href="testdata_8h_source.xhtml">testdata.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/UnitTests/src/<a class="el" href="testdata_8h_source.xhtml">testdata.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed May 8 2013 23:33:50 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
