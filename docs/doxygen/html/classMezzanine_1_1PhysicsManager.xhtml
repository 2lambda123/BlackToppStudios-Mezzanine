<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::PhysicsManager Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml">PhysicsManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1PhysicsManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::PhysicsManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is simply a place for storing all the <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Related functions.  
 <a href="classMezzanine_1_1PhysicsManager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::PhysicsManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1PhysicsManager__inherit__graph.svg" width="344" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::PhysicsManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1PhysicsManager__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a776e9bd99369c83297958207fa0a2eb3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a776e9bd99369c83297958207fa0a2eb3"></a>
typedef std::map&lt; <a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> * &gt;<br class="typebreak"/>
::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a776e9bd99369c83297958207fa0a2eb3">CollisionIterator</a></td></tr>
<tr class="memdesc:a776e9bd99369c83297958207fa0a2eb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to make working with the Collisions easier. <br/></td></tr>
<tr class="separator:a776e9bd99369c83297958207fa0a2eb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d20258bf091f49c4e698ded69642de0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d20258bf091f49c4e698ded69642de0"></a>
typedef std::map&lt; <a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> * &gt;<br class="typebreak"/>
::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a3d20258bf091f49c4e698ded69642de0">ConstCollisionIterator</a></td></tr>
<tr class="memdesc:a3d20258bf091f49c4e698ded69642de0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to make working with the Collisions easier, and avoid the risk of accidentally changing them. <br/></td></tr>
<tr class="separator:a3d20258bf091f49c4e698ded69642de0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ab23a9aa27c4e3cb58d902a149d3c6de2 inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab23a9aa27c4e3cb58d902a149d3c6de2"></a>
typedef bool(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> )()</td></tr>
<tr class="memdesc:ab23a9aa27c4e3cb58d902a149d3c6de2 inherit pub_types_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This makes working with Callback function pointer a bit easier. <br/></td></tr>
<tr class="separator:ab23a9aa27c4e3cb58d902a149d3c6de2 inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> { <br/>
&#160;&#160;<b>ActorManager</b> = 1, 
<b>AudioManager</b>, 
<b>CameraManager</b>, 
<b>CollisionShapeManager</b>, 
<br/>
&#160;&#160;<b>EventManager</b>, 
<b>GraphicsManager</b>, 
<b>InputManager</b>, 
<b>LogManager</b>, 
<br/>
&#160;&#160;<b>MeshManager</b>, 
<b>NetworkManager</b>, 
<b>PagingManager</b>, 
<b>PhysicsManager</b>, 
<br/>
&#160;&#160;<b>ResourceManager</b>, 
<b>SceneManager</b>, 
<b>ScriptingManager</b>, 
<b>TerrainManager</b>, 
<br/>
&#160;&#160;<b>TimerManager</b>, 
<b>UIManager</b>, 
<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6caa58e48b5e043dfdaf6e2cd17b79a3194">UserCreated</a> = 512
<br/>
 }</td></tr>
<tr class="separator:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af734a8d307507e261995a838a0ad0dfb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#af734a8d307507e261995a838a0ad0dfb">PhysicsManager</a> ()</td></tr>
<tr class="memdesc:af734a8d307507e261995a838a0ad0dfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple Constructor.  <a href="#af734a8d307507e261995a838a0ad0dfb">More...</a><br/></td></tr>
<tr class="separator:af734a8d307507e261995a838a0ad0dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45f36a4feb384c5497fcf903729f86ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a45f36a4feb384c5497fcf903729f86ee">PhysicsManager</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode)</td></tr>
<tr class="memdesc:a45f36a4feb384c5497fcf903729f86ee"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor.  <a href="#a45f36a4feb384c5497fcf903729f86ee">More...</a><br/></td></tr>
<tr class="separator:a45f36a4feb384c5497fcf903729f86ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe5d7e0c4ce3eac834478862cef73b1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a0fe5d7e0c4ce3eac834478862cef73b1">PhysicsManager</a> (const <a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> &amp;Info)</td></tr>
<tr class="memdesc:a0fe5d7e0c4ce3eac834478862cef73b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple Constructor.  <a href="#a0fe5d7e0c4ce3eac834478862cef73b1">More...</a><br/></td></tr>
<tr class="separator:a0fe5d7e0c4ce3eac834478862cef73b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d265da29c5a4030a3f6ad97f5027709"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a1d265da29c5a4030a3f6ad97f5027709">~PhysicsManager</a> ()</td></tr>
<tr class="memdesc:a1d265da29c5a4030a3f6ad97f5027709"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconstructor.  <a href="#a1d265da29c5a4030a3f6ad97f5027709">More...</a><br/></td></tr>
<tr class="separator:a1d265da29c5a4030a3f6ad97f5027709"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62c7bb223d2712a4f1806216429015a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a62c7bb223d2712a4f1806216429015a9">AddAreaEffect</a> (<a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> *AE)</td></tr>
<tr class="memdesc:a62c7bb223d2712a4f1806216429015a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an area effect to the world.  <a href="#a62c7bb223d2712a4f1806216429015a9">More...</a><br/></td></tr>
<tr class="separator:a62c7bb223d2712a4f1806216429015a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f1656e4df845f30f5e3b639cd0a03dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a6f1656e4df845f30f5e3b639cd0a03dd">AddConstraint</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *Con, bool DisableCollisions=false)</td></tr>
<tr class="memdesc:a6f1656e4df845f30f5e3b639cd0a03dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the world.  <a href="#a6f1656e4df845f30f5e3b639cd0a03dd">More...</a><br/></td></tr>
<tr class="separator:a6f1656e4df845f30f5e3b639cd0a03dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dfbe87e03c09b1fcce946c9b9271fa6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a4dfbe87e03c09b1fcce946c9b9271fa6">AddWorldTrigger</a> (<a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *Trig)</td></tr>
<tr class="memdesc:a4dfbe87e03c09b1fcce946c9b9271fa6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a trigger to the world.  <a href="#a4dfbe87e03c09b1fcce946c9b9271fa6">More...</a><br/></td></tr>
<tr class="separator:a4dfbe87e03c09b1fcce946c9b9271fa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7dd5afd48cb25dc72807f7a5a0efc0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a776e9bd99369c83297958207fa0a2eb3">CollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ae7dd5afd48cb25dc72807f7a5a0efc0b">BeginCollision</a> ()</td></tr>
<tr class="memdesc:ae7dd5afd48cb25dc72807f7a5a0efc0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an CollisionIterator to the first Collision.  <a href="#ae7dd5afd48cb25dc72807f7a5a0efc0b">More...</a><br/></td></tr>
<tr class="separator:ae7dd5afd48cb25dc72807f7a5a0efc0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05c8da294e6556d1e07bffc954005a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a3d20258bf091f49c4e698ded69642de0">ConstCollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ac05c8da294e6556d1e07bffc954005a6">BeginCollision</a> () const </td></tr>
<tr class="memdesc:ac05c8da294e6556d1e07bffc954005a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstCollisionIterator to the first Collision.  <a href="#ac05c8da294e6556d1e07bffc954005a6">More...</a><br/></td></tr>
<tr class="separator:ac05c8da294e6556d1e07bffc954005a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82fc7833487bbc792a671b032cfd7a6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a82fc7833487bbc792a671b032cfd7a6b">ClearPhysicsMetaData</a> ()</td></tr>
<tr class="memdesc:a82fc7833487bbc792a671b032cfd7a6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all data relating to actors and other simulation objects from the physics world.  <a href="#a82fc7833487bbc792a671b032cfd7a6b">More...</a><br/></td></tr>
<tr class="separator:a82fc7833487bbc792a671b032cfd7a6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717a3bbf093c82909bc4af70641c7c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1717a3bbf093c82909bc4af70641c7c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ad1717a3bbf093c82909bc4af70641c7c">DestroyAllAreaEffects</a> ()</td></tr>
<tr class="memdesc:ad1717a3bbf093c82909bc4af70641c7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all area effects currently in the manager. <br/></td></tr>
<tr class="separator:ad1717a3bbf093c82909bc4af70641c7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a34856cf8da8448c5f148100163a995"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8a34856cf8da8448c5f148100163a995"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a8a34856cf8da8448c5f148100163a995">DestroyAllCollisions</a> ()</td></tr>
<tr class="memdesc:a8a34856cf8da8448c5f148100163a995"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all collisions currently being stored and processed in the manager. <br/></td></tr>
<tr class="separator:a8a34856cf8da8448c5f148100163a995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f127a13daa6fc9bbd3bf0e0237239fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a8f127a13daa6fc9bbd3bf0e0237239fe">DestroyAllConstraints</a> ()</td></tr>
<tr class="memdesc:a8f127a13daa6fc9bbd3bf0e0237239fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all constraints currently in the manager.  <a href="#a8f127a13daa6fc9bbd3bf0e0237239fe">More...</a><br/></td></tr>
<tr class="separator:a8f127a13daa6fc9bbd3bf0e0237239fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91386ac53ea08838f8e733459a2f3b74"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a91386ac53ea08838f8e733459a2f3b74"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a91386ac53ea08838f8e733459a2f3b74">DestroyAllWorldTriggers</a> ()</td></tr>
<tr class="memdesc:a91386ac53ea08838f8e733459a2f3b74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all triggers currently in the manager. <br/></td></tr>
<tr class="separator:a91386ac53ea08838f8e733459a2f3b74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fffb77acb0644d31ea78de4e823c0a0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a9fffb77acb0644d31ea78de4e823c0a0">DoMainLoopItems</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;TimeElapsed)</td></tr>
<tr class="memdesc:a9fffb77acb0644d31ea78de4e823c0a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">This does all the work reuired for the main loop to process physics.  <a href="#a9fffb77acb0644d31ea78de4e823c0a0">More...</a><br/></td></tr>
<tr class="separator:a9fffb77acb0644d31ea78de4e823c0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21df393f2356a20151fce997577e3d76"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a21df393f2356a20151fce997577e3d76">DoMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a21df393f2356a20151fce997577e3d76"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main loop calls this once per frame.  <a href="#a21df393f2356a20151fce997577e3d76">More...</a><br/></td></tr>
<tr class="separator:a21df393f2356a20151fce997577e3d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cf5887ebd7e0f21ee639478ccd5ca65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a776e9bd99369c83297958207fa0a2eb3">CollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a4cf5887ebd7e0f21ee639478ccd5ca65">EndCollision</a> ()</td></tr>
<tr class="memdesc:a4cf5887ebd7e0f21ee639478ccd5ca65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a CollisionIterator to one past the last Collision.  <a href="#a4cf5887ebd7e0f21ee639478ccd5ca65">More...</a><br/></td></tr>
<tr class="separator:a4cf5887ebd7e0f21ee639478ccd5ca65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae308444076255406bc67399fb8fca24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a3d20258bf091f49c4e698ded69642de0">ConstCollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#aae308444076255406bc67399fb8fca24">EndCollision</a> () const </td></tr>
<tr class="memdesc:aae308444076255406bc67399fb8fca24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstCollisionIterator to one past the last Collision.  <a href="#aae308444076255406bc67399fb8fca24">More...</a><br/></td></tr>
<tr class="separator:aae308444076255406bc67399fb8fca24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820856e1a0bad25203b86d6e53391f13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a820856e1a0bad25203b86d6e53391f13">GetAreaEffect</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:a820856e1a0bad25203b86d6e53391f13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Area Effect by name.  <a href="#a820856e1a0bad25203b86d6e53391f13">More...</a><br/></td></tr>
<tr class="separator:a820856e1a0bad25203b86d6e53391f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a648b109c3e2cf4436f492f5fce455878"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a648b109c3e2cf4436f492f5fce455878">GetAreaEffect</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a648b109c3e2cf4436f492f5fce455878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Area Effect by index.  <a href="#a648b109c3e2cf4436f492f5fce455878">More...</a><br/></td></tr>
<tr class="separator:a648b109c3e2cf4436f492f5fce455878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c812920be92ffa885442578049676c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a02c812920be92ffa885442578049676c">GetCollision</a> (<a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a> *Pair)</td></tr>
<tr class="memdesc:a02c812920be92ffa885442578049676c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a Collision by object pair.  <a href="#a02c812920be92ffa885442578049676c">More...</a><br/></td></tr>
<tr class="separator:a02c812920be92ffa885442578049676c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae48146e5f11180121fd79fc3deab9885"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ae48146e5f11180121fd79fc3deab9885">GetConstraint</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:ae48146e5f11180121fd79fc3deab9885"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a constraint by index.  <a href="#ae48146e5f11180121fd79fc3deab9885">More...</a><br/></td></tr>
<tr class="separator:ae48146e5f11180121fd79fc3deab9885"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dc5dbf00d4a6567561ea6fbf63da49d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a3dc5dbf00d4a6567561ea6fbf63da49d">GetDebugPhysicsRendering</a> ()</td></tr>
<tr class="memdesc:a3dc5dbf00d4a6567561ea6fbf63da49d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing currently enabled?  <a href="#a3dc5dbf00d4a6567561ea6fbf63da49d">More...</a><br/></td></tr>
<tr class="separator:a3dc5dbf00d4a6567561ea6fbf63da49d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e47cd46c50c979026a801caac1020c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a04e47cd46c50c979026a801caac1020c">GetDebugPhysicsWireCount</a> ()</td></tr>
<tr class="memdesc:a04e47cd46c50c979026a801caac1020c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets how many WireFrames are being drawn.  <a href="#a04e47cd46c50c979026a801caac1020c">More...</a><br/></td></tr>
<tr class="separator:a04e47cd46c50c979026a801caac1020c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaad40d1888caa36c158dc6e94d63c068"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#aaad40d1888caa36c158dc6e94d63c068">GetGravity</a> ()</td></tr>
<tr class="memdesc:aaad40d1888caa36c158dc6e94d63c068"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the gravity.  <a href="#aaad40d1888caa36c158dc6e94d63c068">More...</a><br/></td></tr>
<tr class="separator:aaad40d1888caa36c158dc6e94d63c068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f6f3844b404a8bd18ad0ca6e39c59d2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a8f6f3844b404a8bd18ad0ca6e39c59d2">GetImplementationTypeName</a> () const </td></tr>
<tr class="memdesc:a8f6f3844b404a8bd18ad0ca6e39c59d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#a8f6f3844b404a8bd18ad0ca6e39c59d2">More...</a><br/></td></tr>
<tr class="separator:a8f6f3844b404a8bd18ad0ca6e39c59d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bf6a9703851581ce5d03fa205063eaa"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a6bf6a9703851581ce5d03fa205063eaa">GetInterfaceType</a> () const </td></tr>
<tr class="memdesc:a6bf6a9703851581ce5d03fa205063eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#a6bf6a9703851581ce5d03fa205063eaa">More...</a><br/></td></tr>
<tr class="separator:a6bf6a9703851581ce5d03fa205063eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29d29a586387400426857fc2897b91dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a29d29a586387400426857fc2897b91dc">GetNumAreaEffects</a> ()</td></tr>
<tr class="memdesc:a29d29a586387400426857fc2897b91dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of Area Effects currently in the world.  <a href="#a29d29a586387400426857fc2897b91dc">More...</a><br/></td></tr>
<tr class="separator:a29d29a586387400426857fc2897b91dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acadfd5d67fdc193a81ad726a2b41c748"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#acadfd5d67fdc193a81ad726a2b41c748">GetNumCollisions</a> ()</td></tr>
<tr class="memdesc:acadfd5d67fdc193a81ad726a2b41c748"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of Collisions currently in the world.  <a href="#acadfd5d67fdc193a81ad726a2b41c748">More...</a><br/></td></tr>
<tr class="separator:acadfd5d67fdc193a81ad726a2b41c748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c29c81cb88d3a347433130614237eec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a7c29c81cb88d3a347433130614237eec">GetNumConstraints</a> ()</td></tr>
<tr class="memdesc:a7c29c81cb88d3a347433130614237eec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of constraints currently in the world.  <a href="#a7c29c81cb88d3a347433130614237eec">More...</a><br/></td></tr>
<tr class="separator:a7c29c81cb88d3a347433130614237eec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43aa5298c72eba68b017838e902bc19b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a43aa5298c72eba68b017838e902bc19b">GetNumWorldTriggers</a> ()</td></tr>
<tr class="memdesc:a43aa5298c72eba68b017838e902bc19b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of triggers currently in the world.  <a href="#a43aa5298c72eba68b017838e902bc19b">More...</a><br/></td></tr>
<tr class="separator:a43aa5298c72eba68b017838e902bc19b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8ba569b66769515c8efa8eba2131c14"><td class="memItemLeft" align="right" valign="top">btSoftRigidDynamicsWorld *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ae8ba569b66769515c8efa8eba2131c14">GetPhysicsWorldPointer</a> ()</td></tr>
<tr class="memdesc:ae8ba569b66769515c8efa8eba2131c14"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns a pointer to the bullet physics world. This is for internal use only.  <a href="#ae8ba569b66769515c8efa8eba2131c14">More...</a><br/></td></tr>
<tr class="separator:ae8ba569b66769515c8efa8eba2131c14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1fdbb815c43718c1c0e68b29a3e9915"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#aa1fdbb815c43718c1c0e68b29a3e9915">GetSoftGravity</a> ()</td></tr>
<tr class="memdesc:aa1fdbb815c43718c1c0e68b29a3e9915"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the soft body gravity.  <a href="#aa1fdbb815c43718c1c0e68b29a3e9915">More...</a><br/></td></tr>
<tr class="separator:aa1fdbb815c43718c1c0e68b29a3e9915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adecd547ebb51380ae23fcbb889ed544c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#adecd547ebb51380ae23fcbb889ed544c">GetWorldTrigger</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:adecd547ebb51380ae23fcbb889ed544c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a trigger by name.  <a href="#adecd547ebb51380ae23fcbb889ed544c">More...</a><br/></td></tr>
<tr class="separator:adecd547ebb51380ae23fcbb889ed544c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9995e10453b675587423134c82d5cbe0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a9995e10453b675587423134c82d5cbe0">GetWorldTrigger</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a9995e10453b675587423134c82d5cbe0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a trigger by index.  <a href="#a9995e10453b675587423134c82d5cbe0">More...</a><br/></td></tr>
<tr class="separator:a9995e10453b675587423134c82d5cbe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab09c912dc48b7082bd07a536167bc3d3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ab09c912dc48b7082bd07a536167bc3d3">Initialize</a> ()</td></tr>
<tr class="memdesc:ab09c912dc48b7082bd07a536167bc3d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure Items requiring other Managers.  <a href="#ab09c912dc48b7082bd07a536167bc3d3">More...</a><br/></td></tr>
<tr class="separator:ab09c912dc48b7082bd07a536167bc3d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83b7f0be56d405ecbc51fe770e1f93b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a83b7f0be56d405ecbc51fe770e1f93b6">PauseSimulation</a> (bool Pause)</td></tr>
<tr class="memdesc:a83b7f0be56d405ecbc51fe770e1f93b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pauses the simulation, preventing the physics world from taking action.  <a href="#a83b7f0be56d405ecbc51fe770e1f93b6">More...</a><br/></td></tr>
<tr class="separator:a83b7f0be56d405ecbc51fe770e1f93b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb424692ede644ccef8327aae1ea9674"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#afb424692ede644ccef8327aae1ea9674">RemoveAreaEffect</a> (<a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> *AE)</td></tr>
<tr class="memdesc:afb424692ede644ccef8327aae1ea9674"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes an area effect from the world.  <a href="#afb424692ede644ccef8327aae1ea9674">More...</a><br/></td></tr>
<tr class="separator:afb424692ede644ccef8327aae1ea9674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c03c8434a3016b6f4867e8000d9246c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a2c03c8434a3016b6f4867e8000d9246c">RemoveCollision</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *Col)</td></tr>
<tr class="memdesc:a2c03c8434a3016b6f4867e8000d9246c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes an existing collision from the world.  <a href="#a2c03c8434a3016b6f4867e8000d9246c">More...</a><br/></td></tr>
<tr class="separator:a2c03c8434a3016b6f4867e8000d9246c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade3423f416ddeeafcde5e89d6edcd221"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ade3423f416ddeeafcde5e89d6edcd221">RemoveCollisionsContainingObject</a> (<a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *Object)</td></tr>
<tr class="memdesc:ade3423f416ddeeafcde5e89d6edcd221"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all stored collisions that involve the specified Object.  <a href="#ade3423f416ddeeafcde5e89d6edcd221">More...</a><br/></td></tr>
<tr class="separator:ade3423f416ddeeafcde5e89d6edcd221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abea04afff872c0181fed7843b041c66c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#abea04afff872c0181fed7843b041c66c">RemoveConstraint</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *Con)</td></tr>
<tr class="memdesc:abea04afff872c0181fed7843b041c66c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a constraint from the world.  <a href="#abea04afff872c0181fed7843b041c66c">More...</a><br/></td></tr>
<tr class="separator:abea04afff872c0181fed7843b041c66c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3d96f132ab95690c520348f986140b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ab3d96f132ab95690c520348f986140b8">RemoveWorldTrigger</a> (<a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *Trig)</td></tr>
<tr class="memdesc:ab3d96f132ab95690c520348f986140b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a trigger from the world.  <a href="#ab3d96f132ab95690c520348f986140b8">More...</a><br/></td></tr>
<tr class="separator:ab3d96f132ab95690c520348f986140b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4333ad1d8382ead2401e2870603ae89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#aa4333ad1d8382ead2401e2870603ae89">ResetPhysicsWorld</a> (<a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> *Info=0)</td></tr>
<tr class="memdesc:aa4333ad1d8382ead2401e2870603ae89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets all the internal physics structures in this manager.  <a href="#aa4333ad1d8382ead2401e2870603ae89">More...</a><br/></td></tr>
<tr class="separator:aa4333ad1d8382ead2401e2870603ae89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1104ad21c6c779bb93147163d066f7e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ac1104ad21c6c779bb93147163d066f7e">SetDebugPhysicsRendering</a> (int ToBeEnabled)</td></tr>
<tr class="memdesc:ac1104ad21c6c779bb93147163d066f7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables and Disables <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing.  <a href="#ac1104ad21c6c779bb93147163d066f7e">More...</a><br/></td></tr>
<tr class="separator:ac1104ad21c6c779bb93147163d066f7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a2fd072c1035b744ce4c22265219d8b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a7a2fd072c1035b744ce4c22265219d8b">SetDebugPhysicsWireCount</a> (<a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> WireFrameCount_)</td></tr>
<tr class="memdesc:a7a2fd072c1035b744ce4c22265219d8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">How many Wireframes do you want drawn from previous events.  <a href="#a7a2fd072c1035b744ce4c22265219d8b">More...</a><br/></td></tr>
<tr class="separator:a7a2fd072c1035b744ce4c22265219d8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a565b338b5930571713ff72de45c95485"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a565b338b5930571713ff72de45c95485">SetGravity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;pgrav)</td></tr>
<tr class="memdesc:a565b338b5930571713ff72de45c95485"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity.  <a href="#a565b338b5930571713ff72de45c95485">More...</a><br/></td></tr>
<tr class="separator:a565b338b5930571713ff72de45c95485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63f9fe303e30542249d263773ae9dc08"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a63f9fe303e30542249d263773ae9dc08">SetIndividualGravity</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *Actor, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;igrav)</td></tr>
<tr class="memdesc:a63f9fe303e30542249d263773ae9dc08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity to be applied to a single object.  <a href="#a63f9fe303e30542249d263773ae9dc08">More...</a><br/></td></tr>
<tr class="separator:a63f9fe303e30542249d263773ae9dc08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbe6ef0e6554702a005c152079bb40c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#acbe6ef0e6554702a005c152079bb40c0">SetSimulationSubstepModifier</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Modifier)</td></tr>
<tr class="memdesc:acbe6ef0e6554702a005c152079bb40c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the modifier to be used when stepping the physics simulation.  <a href="#acbe6ef0e6554702a005c152079bb40c0">More...</a><br/></td></tr>
<tr class="separator:acbe6ef0e6554702a005c152079bb40c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f73d5ea910fc68120d33ee8c491d88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ab7f73d5ea910fc68120d33ee8c491d88">SetSoftGravity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;sgrav)</td></tr>
<tr class="memdesc:ab7f73d5ea910fc68120d33ee8c491d88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity for soft bodies.  <a href="#ab7f73d5ea910fc68120d33ee8c491d88">More...</a><br/></td></tr>
<tr class="separator:ab7f73d5ea910fc68120d33ee8c491d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2124e18b9fd28d1dc3c0da54224154b2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a2124e18b9fd28d1dc3c0da54224154b2">SimulationIsPaused</a> ()</td></tr>
<tr class="memdesc:a2124e18b9fd28d1dc3c0da54224154b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets Whether or not the simulation is currently paused.  <a href="#a2124e18b9fd28d1dc3c0da54224154b2">More...</a><br/></td></tr>
<tr class="separator:a2124e18b9fd28d1dc3c0da54224154b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconstructor.  <a href="#a04cb832dc79f4559cc5b2f57cabfa70d">More...</a><br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff151003c2370c857dadb67148faffc inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acff151003c2370c857dadb67148faffc"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acff151003c2370c857dadb67148faffc">ErasePostMainLoopItems</a> ()</td></tr>
<tr class="memdesc:acff151003c2370c857dadb67148faffc inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This simply calls <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ec52058f4c8a3f1c5fb20230b4fc301" title="This assigns a function to be the callback function to run prior to the main loop.">SetPostMainLoopItems()</a> passing it 0. <br/></td></tr>
<tr class="separator:acff151003c2370c857dadb67148faffc inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f1b8b02c34ccfd72040a7183fc3cba1 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1f1b8b02c34ccfd72040a7183fc3cba1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a1f1b8b02c34ccfd72040a7183fc3cba1">ErasePreMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a1f1b8b02c34ccfd72040a7183fc3cba1 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This simply calls <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a84dd669c15e9db08c9efbc84c4fa3b0b" title="This assigns a function to be the callback function to run prior to the main loop.">SetPreMainLoopItems()</a> passing it 0. <br/></td></tr>
<tr class="separator:a1f1b8b02c34ccfd72040a7183fc3cba1 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02a9788d7a83de123083ce3bfdcef4b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa02a9788d7a83de123083ce3bfdcef4b">GetPostMainLoopItems</a> () const </td></tr>
<tr class="memdesc:aa02a9788d7a83de123083ce3bfdcef4b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the Callback that would be called before the main loop items.  <a href="#aa02a9788d7a83de123083ce3bfdcef4b">More...</a><br/></td></tr>
<tr class="separator:aa02a9788d7a83de123083ce3bfdcef4b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1ede605b127aeb1a96e226284c318ce inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#af1ede605b127aeb1a96e226284c318ce">GetPreMainLoopItems</a> () const </td></tr>
<tr class="memdesc:af1ede605b127aeb1a96e226284c318ce inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the Callback that would be called before the main loop items.  <a href="#af1ede605b127aeb1a96e226284c318ce">More...</a><br/></td></tr>
<tr class="separator:af1ede605b127aeb1a96e226284c318ce inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acb88dc379867430e76d328028862f0 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9acb88dc379867430e76d328028862f0">GetPriority</a> ()</td></tr>
<tr class="memdesc:a9acb88dc379867430e76d328028862f0 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the Priority of this manager.  <a href="#a9acb88dc379867430e76d328028862f0">More...</a><br/></td></tr>
<tr class="separator:a9acb88dc379867430e76d328028862f0 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade516a30e6d24b4ffd1accf1b1efd948 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ade516a30e6d24b4ffd1accf1b1efd948">IsInitialized</a> ()</td></tr>
<tr class="memdesc:ade516a30e6d24b4ffd1accf1b1efd948 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#ade516a30e6d24b4ffd1accf1b1efd948">More...</a><br/></td></tr>
<tr class="separator:ade516a30e6d24b4ffd1accf1b1efd948 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a1bfb2a137c6013a8a5e5fae4c4bb85 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a2a1bfb2a137c6013a8a5e5fae4c4bb85">PostMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a2a1bfb2a137c6013a8a5e5fae4c4bb85 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This runs any callback that is required after the mainloop items are run.  <a href="#a2a1bfb2a137c6013a8a5e5fae4c4bb85">More...</a><br/></td></tr>
<tr class="separator:a2a1bfb2a137c6013a8a5e5fae4c4bb85 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e0f19b5472eab47fbcd986656838070 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9e0f19b5472eab47fbcd986656838070">PreMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a9e0f19b5472eab47fbcd986656838070 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This runs any callback that is required before the mainloop items are run.  <a href="#a9e0f19b5472eab47fbcd986656838070">More...</a><br/></td></tr>
<tr class="separator:a9e0f19b5472eab47fbcd986656838070 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec52058f4c8a3f1c5fb20230b4fc301 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ec52058f4c8a3f1c5fb20230b4fc301">SetPostMainLoopItems</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> PostMainCallback)</td></tr>
<tr class="memdesc:a4ec52058f4c8a3f1c5fb20230b4fc301 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This assigns a function to be the callback function to run prior to the main loop.  <a href="#a4ec52058f4c8a3f1c5fb20230b4fc301">More...</a><br/></td></tr>
<tr class="separator:a4ec52058f4c8a3f1c5fb20230b4fc301 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84dd669c15e9db08c9efbc84c4fa3b0b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a84dd669c15e9db08c9efbc84c4fa3b0b">SetPreMainLoopItems</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> PreMainCallback)</td></tr>
<tr class="memdesc:a84dd669c15e9db08c9efbc84c4fa3b0b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This assigns a function to be the callback function to run prior to the main loop.  <a href="#a84dd669c15e9db08c9efbc84c4fa3b0b">More...</a><br/></td></tr>
<tr class="separator:a84dd669c15e9db08c9efbc84c4fa3b0b inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71cd03e0a60427a1ee22637a3cc1b3e inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac71cd03e0a60427a1ee22637a3cc1b3e">SetPriority</a> (short int Priority_)</td></tr>
<tr class="memdesc:ac71cd03e0a60427a1ee22637a3cc1b3e inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the Priority of this manager.  <a href="#ac71cd03e0a60427a1ee22637a3cc1b3e">More...</a><br/></td></tr>
<tr class="separator:ac71cd03e0a60427a1ee22637a3cc1b3e inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; PhysicsManager &gt;</a></td></tr>
<tr class="memitem:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7174af94e201bdaeab717cdbcbb2e565"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a7174af94e201bdaeab717cdbcbb2e565">Singleton</a> ()</td></tr>
<tr class="memdesc:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e45fc3969b0fae3d095676cc515da1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a5e45fc3969b0fae3d095676cc515da1d">~Singleton</a> ()</td></tr>
<tr class="memdesc:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aa4a13416efe17e957deb2cf4dcce3a60"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa4a13416efe17e957deb2cf4dcce3a60"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>CollisionDispatcher</b></td></tr>
<tr class="separator:aa4a13416efe17e957deb2cf4dcce3a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6e93778e4b8cead1d8fc57ed386a012a inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6e93778e4b8cead1d8fc57ed386a012a">GetTypeNameAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:a6e93778e4b8cead1d8fc57ed386a012a inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#a6e93778e4b8cead1d8fc57ed386a012a">More...</a><br/></td></tr>
<tr class="separator:a6e93778e4b8cead1d8fc57ed386a012a inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5388364067d067e43136ab948af5451b inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a5388364067d067e43136ab948af5451b">GetTypeNameFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:a5388364067d067e43136ab948af5451b inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#a5388364067d067e43136ab948af5451b">More...</a><br/></td></tr>
<tr class="separator:a5388364067d067e43136ab948af5451b inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; PhysicsManager &gt;</a></td></tr>
<tr class="memitem:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml">PhysicsManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67">GetSingletonPtr</a> ()</td></tr>
<tr class="memdesc:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetches a pointer to the singleton.  <a href="#a78fc425584913f0b2c615ec440871a67">More...</a><br/></td></tr>
<tr class="separator:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9">SingletonValid</a> ()</td></tr>
<tr class="memdesc:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the singleton pointer is valid.  <a href="#a554165fe3e4b594b678d64215fd7a6f9">More...</a><br/></td></tr>
<tr class="separator:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab27f3f7458b9a6f2a08974d096125ed5 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab27f3f7458b9a6f2a08974d096125ed5">PostMainLoop</a></td></tr>
<tr class="memdesc:ab27f3f7458b9a6f2a08974d096125ed5 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a function pointer to the function that should be called after running Main Loop Items.  <a href="#ab27f3f7458b9a6f2a08974d096125ed5">More...</a><br/></td></tr>
<tr class="separator:ab27f3f7458b9a6f2a08974d096125ed5 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1652110258237bc313a02757229d0f47 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a1652110258237bc313a02757229d0f47">PreMainLoop</a></td></tr>
<tr class="memdesc:a1652110258237bc313a02757229d0f47 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a function pointer to the function that should be called before running Main Loop Items.  <a href="#a1652110258237bc313a02757229d0f47">More...</a><br/></td></tr>
<tr class="separator:a1652110258237bc313a02757229d0f47 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96fb02bf2f4e8b4afe70dedd0d8c6ac9 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9">Priority</a></td></tr>
<tr class="memdesc:a96fb02bf2f4e8b4afe70dedd0d8c6ac9 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a weighting used by the main loop to decide what order the managers should be called in.  <a href="#a96fb02bf2f4e8b4afe70dedd0d8c6ac9">More...</a><br/></td></tr>
<tr class="separator:a96fb02bf2f4e8b4afe70dedd0d8c6ac9 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the world.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_attribs_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; PhysicsManager &gt;</a></td></tr>
<tr class="memitem:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0db9959ccd7daa1345f4567aa0b0655d"></a>
static <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml">PhysicsManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>SingletonPtr</b></td></tr>
<tr class="separator:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is simply a place for storing all the <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Related functions. </p>
<p>This is a place for storing items related to Debug physics drawing, Adding constraints, screwing with gravity and doing other physics Related features. </p>

<p>Definition at line <a class="el" href="physicsmanager_8h_source.xhtml#l00144">144</a> of file <a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af734a8d307507e261995a838a0ad0dfb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::PhysicsManager::PhysicsManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Simple Constructor. </p>
<p>This constructor will assign some sane default values and will create a physics world that can be used immediately </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00423">423</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a45f36a4feb384c5497fcf903729f86ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::PhysicsManager::PhysicsManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">XMLNode</td><td>The node of the xml document to construct from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00433">433</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0fe5d7e0c4ce3eac834478862cef73b1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::PhysicsManager::PhysicsManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>Info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Simple Constructor. </p>
<p>This constructor will assign some sane default values and will create a physics world that can be used immediately </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Info</td><td>The construction info class with all the settings you wish the world to have. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00498">498</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1d265da29c5a4030a3f6ad97f5027709"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::PhysicsManager::~PhysicsManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deconstructor. </p>
<p>This deletes all those crazy pointers that Bullet, the physics subsystem need. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00506">506</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a62c7bb223d2712a4f1806216429015a9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::AddAreaEffect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> *&#160;</td>
          <td class="paramname"><em>AE</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds an area effect to the world. </p>
<p>Adds an area effect to the world so that it can/will take effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AE</td><td>The area effect to be added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00767">767</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6f1656e4df845f30f5e3b639cd0a03dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::AddConstraint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *&#160;</td>
          <td class="paramname"><em>Con</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>DisableCollisions</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a constraint to the world. </p>
<p>Adds the constraint to the world so that it can/will take effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Con</td><td>The constraint to be added. </td></tr>
    <tr><td class="paramname">DisableCollisions</td><td>Sets whether or not the linked bodies collide with each other. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00728">728</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4dfbe87e03c09b1fcce946c9b9271fa6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::AddWorldTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td>
          <td class="paramname"><em>Trig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a trigger to the world. </p>
<p>Adds a trigger to the world so that it can/will take effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trig</td><td>The trigger to be added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00818">818</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae7dd5afd48cb25dc72807f7a5a0efc0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a776e9bd99369c83297958207fa0a2eb3">PhysicsManager::CollisionIterator</a> Mezzanine::PhysicsManager::BeginCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get an CollisionIterator to the first Collision. </p>
<dl class="section return"><dt>Returns</dt><dd>An CollisionIterator to the first Collision. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00923">923</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac05c8da294e6556d1e07bffc954005a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a3d20258bf091f49c4e698ded69642de0">PhysicsManager::ConstCollisionIterator</a> Mezzanine::PhysicsManager::BeginCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a ConstCollisionIterator to the first Collision. </p>
<dl class="section return"><dt>Returns</dt><dd>A ConstCollisionIterator to the first Collision. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00933">933</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a82fc7833487bbc792a671b032cfd7a6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::ClearPhysicsMetaData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears all data relating to actors and other simulation objects from the physics world. </p>
<p>This is best used with simulation cleanup. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01016">1016</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8f127a13daa6fc9bbd3bf0e0237239fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::DestroyAllConstraints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys all constraints currently in the manager. </p>
<p>In practice it is cleaner to remove constraints from the world before removing any constrained actors. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00757">757</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9fffb77acb0644d31ea78de4e823c0a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::DoMainLoopItems </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>TimeElapsed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This does all the work reuired for the main loop to process physics. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TimeElapsed</td><td>This is a real that represents the amount of time we need to simulate </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01046">1046</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a21df393f2356a20151fce997577e3d76"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::DoMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The main loop calls this once per frame. </p>
<p>This is where each manager is expected to put anything that needs to be run each iteration of the main loop </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ee29e4baf6c4b9a3bfec1b2258d5cd2">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01170">1170</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4cf5887ebd7e0f21ee639478ccd5ca65"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a776e9bd99369c83297958207fa0a2eb3">PhysicsManager::CollisionIterator</a> Mezzanine::PhysicsManager::EndCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a CollisionIterator to one past the last Collision. </p>
<dl class="section return"><dt>Returns</dt><dd>A CollisionIterator to one past the last Collision. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00928">928</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aae308444076255406bc67399fb8fca24"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a3d20258bf091f49c4e698ded69642de0">PhysicsManager::ConstCollisionIterator</a> Mezzanine::PhysicsManager::EndCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a ConstCollisionIterator to one past the last Collision. </p>
<dl class="section return"><dt>Returns</dt><dd>A ConstCollisionIterator to one past the last Collision. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00938">938</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a820856e1a0bad25203b86d6e53391f13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> * Mezzanine::PhysicsManager::GetAreaEffect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an Area Effect by name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the area effect to find. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the named area effect, or NULL if it doesn't exist. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00773">773</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a648b109c3e2cf4436f492f5fce455878"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> * Mezzanine::PhysicsManager::GetAreaEffect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an Area Effect by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the area effect you want. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the area effect at the specified index. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00785">785</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a02c812920be92ffa885442578049676c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> * Mezzanine::PhysicsManager::GetCollision </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a> *&#160;</td>
          <td class="paramname"><em>Pair</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a Collision by object pair. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pair</td><td>A pair of objects. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the Collision if a collision for the provided pair exists, NULL otherwise. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00864">864</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae48146e5f11180121fd79fc3deab9885"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> * Mezzanine::PhysicsManager::GetConstraint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a constraint by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the constraint you want. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the specified constraint. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00734">734</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3dc5dbf00d4a6567561ea6fbf63da49d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::PhysicsManager::GetDebugPhysicsRendering </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing currently enabled? </p>
<p>lets you check if <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing is enabled or not. </p>
<dl class="section return"><dt>Returns</dt><dd>1 for it is on, and 0 for it is not. The may be other options later for selectively cnacking certain features </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00960">960</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a04e47cd46c50c979026a801caac1020c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::PhysicsManager::GetDebugPhysicsWireCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets how many WireFrames are being drawn. </p>
<p>This will tell you how many frames worth of previous in game events are being drawn. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns either 2 or the last amount passed into Entresol::SetDebugPhysicsWireCount . </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00984">984</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaad40d1888caa36c158dc6e94d63c068"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::PhysicsManager::GetGravity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the gravity. </p>
<p>Gets the currently set world gravity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set world gravity. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00702">702</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8f6f3844b404a8bd18ad0ca6e39c59d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::PhysicsManager::GetImplementationTypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This Allows any manager name to be sent to a stream. Primarily used for logging. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a String that contains the name. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01178">1178</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6bf6a9703851581ce5d03fa205063eaa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::PhysicsManager::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01175">1175</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a29d29a586387400426857fc2897b91dc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::PhysicsManager::GetNumAreaEffects </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of Area Effects currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of Area Effects in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00790">790</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acadfd5d67fdc193a81ad726a2b41c748"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::PhysicsManager::GetNumCollisions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of Collisions currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of Collisions in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00871">871</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7c29c81cb88d3a347433130614237eec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::PhysicsManager::GetNumConstraints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of constraints currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of constraints in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00739">739</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a43aa5298c72eba68b017838e902bc19b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::PhysicsManager::GetNumWorldTriggers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of triggers currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of triggers in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00840">840</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae8ba569b66769515c8efa8eba2131c14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">btSoftRigidDynamicsWorld * Mezzanine::PhysicsManager::GetPhysicsWorldPointer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This returns a pointer to the bullet physics world. This is for internal use only. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01158">1158</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa1fdbb815c43718c1c0e68b29a3e9915"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::PhysicsManager::GetSoftGravity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the soft body gravity. </p>
<p>Gets the currently set soft body world gravity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set soft body world gravity. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00713">713</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adecd547ebb51380ae23fcbb889ed544c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> * Mezzanine::PhysicsManager::GetWorldTrigger </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a trigger by name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the trigger to find. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the named trigger, or NULL if it doesn't exist. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00823">823</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9995e10453b675587423134c82d5cbe0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> * Mezzanine::PhysicsManager::GetWorldTrigger </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a trigger by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the trigger you want. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the trigger at the specified index. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00835">835</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab09c912dc48b7082bd07a536167bc3d3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configure Items requiring other Managers. </p>
<p>If you are using the <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a> this is called when Mezzanine::World::GameInit() is called. It is expected that by the time this is called either ManagerBase::ManagerBase(World*) or ManagerBase::SetGameWorld(World*) will have been called. This is where all configuration that requires atleast one other manager on the <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a> to exist.<br/>
<br/>
 Yes we know it is spelled wrong, but are Zs cooler anyway. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a864e3cac11928a602c1db28fa2d52ee2">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01165">1165</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a83b7f0be56d405ecbc51fe770e1f93b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::PauseSimulation </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Pause</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pauses the simulation, preventing the physics world from taking action. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pause</td><td>Wether or not to pause the simulation. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00687">687</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afb424692ede644ccef8327aae1ea9674"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::RemoveAreaEffect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a> *&#160;</td>
          <td class="paramname"><em>AE</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes an area effect from the world. </p>
<p>Removes an area effect from the world so that it will have no effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AE</td><td>The area effect to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00795">795</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2c03c8434a3016b6f4867e8000d9246c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::RemoveCollision </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *&#160;</td>
          <td class="paramname"><em>Col</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes an existing collision from the world. </p>
<dl class="section remark"><dt>Remarks</dt><dd>In general it's not a great idea to call on this manually, but there are some situations where you would. Mostly this function exists to facilitate removal of objects from the world before the simulation ends. In such cases you have to clean up traces of the collision. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Col</td><td>The collision to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00876">876</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ade3423f416ddeeafcde5e89d6edcd221"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::RemoveCollisionsContainingObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *&#160;</td>
          <td class="paramname"><em>Object</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all stored collisions that involve the specified Object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Object</td><td>The Object which will have all of it's collisions removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00890">890</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abea04afff872c0181fed7843b041c66c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::RemoveConstraint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *&#160;</td>
          <td class="paramname"><em>Con</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a constraint from the world. </p>
<p>Removes a constraint from the world so that it will have no effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Con</td><td>The constraint to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00744">744</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab3d96f132ab95690c520348f986140b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::RemoveWorldTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td>
          <td class="paramname"><em>Trig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a trigger from the world. </p>
<p>Removes a trigger from the world so that it will have no effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trig</td><td>The trigger to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00845">845</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa4333ad1d8382ead2401e2870603ae89"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::ResetPhysicsWorld </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> *&#160;</td>
          <td class="paramname"><em>Info</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets all the internal physics structures in this manager. </p>
<dl class="section warning"><dt>Warning</dt><dd>This should only be called while the world is emtpy and objects have be unloaded from it. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Info</td><td>If you want to change the configuration of the world when restarting, you can optionally provide a new set of parameters to build the world with. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00992">992</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac1104ad21c6c779bb93147163d066f7e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::SetDebugPhysicsRendering </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ToBeEnabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables and Disables <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing. </p>
<p>Enables and Disables <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing using default wireframes. This will force renderings that match the physics subsytem pixel for pixel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeEnabled</td><td>1 to turn it on, 0 to turn it off. There may be other options in the future, to enable fine tuned control </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00944">944</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7a2fd072c1035b744ce4c22265219d8b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::SetDebugPhysicsWireCount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td>
          <td class="paramname"><em>WireFrameCount_</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>How many Wireframes do you want drawn from previous events. </p>
<p>Each frame of the action gets its own wire frame, and how many of those back did you want to see? To see a minimal amount set this to 2, as the first wireframe is commonly entirely inside the the rendered 3d mesh. You can use <a class="el" href="classMezzanine_1_1Entresol.xhtml#ad009b4ed29febd443616060ca32ad573" title="Retrieves the amount of milliseconds we would like each iteration of the Main Loop to be...">Entresol::GetTargetFrameTime()</a> In conjunction with this to specify an amout of seconds worth of wireframes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WireFrameCount_</td><td>This is a whole number that is the amount of wire frames you wan to see. Don't forget to be mindful of the framerate, <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> amount more than just a few seconds worth can be cumbersome. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00973">973</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a565b338b5930571713ff72de45c95485"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::SetGravity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>pgrav</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the gravity. </p>
<p>Sets the strength and direction of gravity within the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pgrav</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the strength and direction of gravity. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00697">697</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a63f9fe303e30542249d263773ae9dc08"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::SetIndividualGravity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td>
          <td class="paramname"><em>Actor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>igrav</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the gravity to be applied to a single object. </p>
<p>This function does not change the global gravity, only how gravity behaves for this specific object. Note: This function only works on <a class="el" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>'s. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Actor</td><td>The actor whos gravity is to be changed. </td></tr>
    <tr><td class="paramname">igrav</td><td>The value of the gravity to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00719">719</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acbe6ef0e6554702a005c152079bb40c0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::SetSimulationSubstepModifier </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Modifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the modifier to be used when stepping the physics simulation. </p>
<dl class="section remark"><dt>Remarks</dt><dd>For the most part, the simulation tick is determined by your target framerate set on <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a>. However there are some occasions when you will want to have it tick more often, in particular with sensative simulation setups involving many constraints, or small objects, or fast moving objects, or any combination of those. In order to make your simulation more stable you have to tick in smaller intervals, making it less likely for the engine to miss something or become unstable. When you pass in a modifier it'll ensure it ticks faster by that amount. For example, if you pass in 2 to this as the modifier, the physics simulation will take 2 smaller steps (the time being based on the target framerate) instead of one big one during the course of one frame. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Modifier</td><td>The amount of substeps per frame to perform. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01041">1041</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab7f73d5ea910fc68120d33ee8c491d88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::PhysicsManager::SetSoftGravity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>sgrav</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the gravity for soft bodies. </p>
<p>Gravity for soft bodies is stored separately from rigid bodies. So if you plan to use soft bodies in your game/simulation you need to call this function otherwise they won't fall. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sgrav</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the strength and direction of gravity. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00708">708</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2124e18b9fd28d1dc3c0da54224154b2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::PhysicsManager::SimulationIsPaused </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets Whether or not the simulation is currently paused. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the simulation is paused. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00692">692</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a></li>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 22:24:23 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
