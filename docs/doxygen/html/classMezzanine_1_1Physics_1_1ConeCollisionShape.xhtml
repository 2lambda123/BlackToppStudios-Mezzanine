<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Physics::ConeCollisionShape Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml">Physics</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml">ConeCollisionShape</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classMezzanine_1_1Physics_1_1ConeCollisionShape-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Physics::ConeCollisionShape Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A cone physics shape.  
 <a href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="collisionshape_8h_source.xhtml">collisionshape.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Physics::ConeCollisionShape:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1ConeCollisionShape__inherit__graph.svg" width="174" height="243"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Physics::ConeCollisionShape:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1ConeCollisionShape__coll__graph.svg" width="174" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae57e3a3c6f03df0036e79dbe4b51dfa0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#ae57e3a3c6f03df0036e79dbe4b51dfa0">ConeCollisionShape</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Radius, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Height, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;UpAxis)</td></tr>
<tr class="memdesc:ae57e3a3c6f03df0036e79dbe4b51dfa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor.  <a href="#ae57e3a3c6f03df0036e79dbe4b51dfa0"></a><br/></td></tr>
<tr class="memitem:adb935fb2b84afb5388fb140fa9c6b374"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#adb935fb2b84afb5388fb140fa9c6b374">ConeCollisionShape</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Radius, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Height, <a class="el" href="namespaceMezzanine.xhtml#ab41a00a8c6a47b576dc987ec34e16ba1">StandardAxis</a> UpAxis)</td></tr>
<tr class="memdesc:adb935fb2b84afb5388fb140fa9c6b374"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor.  <a href="#adb935fb2b84afb5388fb140fa9c6b374"></a><br/></td></tr>
<tr class="memitem:a70684cdd78f31fe98499f89bdb267572"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a70684cdd78f31fe98499f89bdb267572">ConeCollisionShape</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, btConeShape *BulletShape)</td></tr>
<tr class="memdesc:a70684cdd78f31fe98499f89bdb267572"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal Constructor.  <a href="#a70684cdd78f31fe98499f89bdb267572"></a><br/></td></tr>
<tr class="memitem:a532b0a6fe2a71cbb5dd94f5f2718b081"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a532b0a6fe2a71cbb5dd94f5f2718b081">ConeCollisionShape</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> OneNode)</td></tr>
<tr class="memdesc:a532b0a6fe2a71cbb5dd94f5f2718b081"><td class="mdescLeft">&#160;</td><td class="mdescRight">DeSerializing Constructor.   <a href="#a532b0a6fe2a71cbb5dd94f5f2718b081"></a><br/></td></tr>
<tr class="memitem:a1d94a6e143df2eab8985b8e472053784"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1d94a6e143df2eab8985b8e472053784"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a1d94a6e143df2eab8985b8e472053784">~ConeCollisionShape</a> ()</td></tr>
<tr class="memdesc:a1d94a6e143df2eab8985b8e472053784"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="memitem:a8b29b5b28cfbcd0e121919ca666ce829"><td class="memItemLeft" align="right" valign="top">virtual btConeShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a8b29b5b28cfbcd0e121919ca666ce829">GetBulletConeShape</a> () const </td></tr>
<tr class="memdesc:a8b29b5b28cfbcd0e121919ca666ce829"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.   <a href="#a8b29b5b28cfbcd0e121919ca666ce829"></a><br/></td></tr>
<tr class="memitem:abb23807787347758cfa41b58a73e8103"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#abb23807787347758cfa41b58a73e8103">GetCleanHeight</a> () const </td></tr>
<tr class="memdesc:abb23807787347758cfa41b58a73e8103"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the height of the cone, as originally passed in.  <a href="#abb23807787347758cfa41b58a73e8103"></a><br/></td></tr>
<tr class="memitem:a76c7e8766427d045a985bbe389ea83ed"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a76c7e8766427d045a985bbe389ea83ed">GetCleanRadius</a> () const </td></tr>
<tr class="memdesc:a76c7e8766427d045a985bbe389ea83ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the radius of the cone, as originally passed in.  <a href="#a76c7e8766427d045a985bbe389ea83ed"></a><br/></td></tr>
<tr class="memitem:af8662032c4dc7cdd5fbe6586e4ec19ac"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#af8662032c4dc7cdd5fbe6586e4ec19ac">GetHeight</a> () const </td></tr>
<tr class="memdesc:af8662032c4dc7cdd5fbe6586e4ec19ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the height of the cone, as used for collision checking.  <a href="#af8662032c4dc7cdd5fbe6586e4ec19ac"></a><br/></td></tr>
<tr class="memitem:a7e02ea3ea912d556fdd9a13825eca708"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a7e02ea3ea912d556fdd9a13825eca708">GetHeightScaling</a> () const </td></tr>
<tr class="memdesc:a7e02ea3ea912d556fdd9a13825eca708"><td class="mdescLeft">&#160;</td><td class="mdescRight">Which axis is up defines which axis is used to scale height.  <a href="#a7e02ea3ea912d556fdd9a13825eca708"></a><br/></td></tr>
<tr class="memitem:a0639f397cc18371bffa63caf0552f3d9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a0639f397cc18371bffa63caf0552f3d9">GetRadius</a> () const </td></tr>
<tr class="memdesc:a0639f397cc18371bffa63caf0552f3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the radius of the cone, as used for collision checking.  <a href="#a0639f397cc18371bffa63caf0552f3d9"></a><br/></td></tr>
<tr class="memitem:a9a05fbaa612b5ca62a5057ce18870b60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a9a05fbaa612b5ca62a5057ce18870b60">GetRadiusScaling</a> () const </td></tr>
<tr class="memdesc:a9a05fbaa612b5ca62a5057ce18870b60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Which axis is up defines which 2 axis are used to scale the radius.  <a href="#a9a05fbaa612b5ca62a5057ce18870b60"></a><br/></td></tr>
<tr class="memitem:a26d5349744b14b1a9a907572798fa548"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">CollisionShape::ShapeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a26d5349744b14b1a9a907572798fa548">GetType</a> () const </td></tr>
<tr class="memdesc:a26d5349744b14b1a9a907572798fa548"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> shape this is.   <a href="#a26d5349744b14b1a9a907572798fa548"></a><br/></td></tr>
<tr class="memitem:a7eaf770a682571590c38392d9d85e41f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a7eaf770a682571590c38392d9d85e41f">GetUpAxis</a> () const </td></tr>
<tr class="memdesc:a7eaf770a682571590c38392d9d85e41f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets which axis this cone is oriented along.  <a href="#a7eaf770a682571590c38392d9d85e41f"></a><br/></td></tr>
<tr class="memitem:a8b0266cae2b4ef41d6928e4e5947ab96"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ab41a00a8c6a47b576dc987ec34e16ba1">StandardAxis</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a8b0266cae2b4ef41d6928e4e5947ab96">GetUpStandardAxis</a> () const </td></tr>
<tr class="memdesc:a8b0266cae2b4ef41d6928e4e5947ab96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets which axis this cone is oriented along.  <a href="#a8b0266cae2b4ef41d6928e4e5947ab96"></a><br/></td></tr>
<tr class="memitem:a8f098c0ad5c41a4e3fac9485469db54d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a8f098c0ad5c41a4e3fac9485469db54d">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:a8f098c0ad5c41a4e3fac9485469db54d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.   <a href="#a8f098c0ad5c41a4e3fac9485469db54d"></a><br/></td></tr>
<tr class="memitem:ab0704a69eceb8fdc85f8383965011a28"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#ab0704a69eceb8fdc85f8383965011a28">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:ab0704a69eceb8fdc85f8383965011a28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.   <a href="#ab0704a69eceb8fdc85f8383965011a28"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml">Mezzanine::Physics::PrimitiveCollisionShape</a></td></tr>
<tr class="memitem:a4007535dff3ca954296ae7331fab27a3 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4007535dff3ca954296ae7331fab27a3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#a4007535dff3ca954296ae7331fab27a3">PrimitiveCollisionShape</a> ()</td></tr>
<tr class="memdesc:a4007535dff3ca954296ae7331fab27a3 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="memitem:adf0a7eb2c3565d13d7fd6ccf7e0fb76c inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adf0a7eb2c3565d13d7fd6ccf7e0fb76c"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#adf0a7eb2c3565d13d7fd6ccf7e0fb76c">~PrimitiveCollisionShape</a> ()</td></tr>
<tr class="memdesc:adf0a7eb2c3565d13d7fd6ccf7e0fb76c inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="memitem:a629191926852cd1b083c59551bd563d2 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top">virtual btConvexInternalShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#a629191926852cd1b083c59551bd563d2">GetBulletConvexShape</a> () const </td></tr>
<tr class="memdesc:a629191926852cd1b083c59551bd563d2 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.   <a href="#a629191926852cd1b083c59551bd563d2"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:af31b30eb28351edb4a8596a540f2701a inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af31b30eb28351edb4a8596a540f2701a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#af31b30eb28351edb4a8596a540f2701a">CollisionShape</a> ()</td></tr>
<tr class="memdesc:af31b30eb28351edb4a8596a540f2701a inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="memitem:ac56b54307601d6942a09ad1dc31119c4 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac56b54307601d6942a09ad1dc31119c4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#ac56b54307601d6942a09ad1dc31119c4">~CollisionShape</a> ()</td></tr>
<tr class="memdesc:ac56b54307601d6942a09ad1dc31119c4 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="memitem:a04f6b94d98efc92f36a4d205021f6fdf inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a04f6b94d98efc92f36a4d205021f6fdf">GetBulletShape</a> () const </td></tr>
<tr class="memdesc:a04f6b94d98efc92f36a4d205021f6fdf inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.  <a href="#a04f6b94d98efc92f36a4d205021f6fdf"></a><br/></td></tr>
<tr class="memitem:ae81ee3be2ed7f6c77fe0995e209cab41 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#ae81ee3be2ed7f6c77fe0995e209cab41">GetMargin</a> () const </td></tr>
<tr class="memdesc:ae81ee3be2ed7f6c77fe0995e209cab41 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the amount of padding currently being applied to the collision shape.  <a href="#ae81ee3be2ed7f6c77fe0995e209cab41"></a><br/></td></tr>
<tr class="memitem:aba132ec6cd2442ed9ba38d43feb929cb inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba132ec6cd2442ed9ba38d43feb929cb">GetName</a> () const </td></tr>
<tr class="memdesc:aba132ec6cd2442ed9ba38d43feb929cb inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this shape.  <a href="#aba132ec6cd2442ed9ba38d43feb929cb"></a><br/></td></tr>
<tr class="memitem:a77ce070209f77d03846530b373e74cd0 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a77ce070209f77d03846530b373e74cd0">GetScaling</a> () const </td></tr>
<tr class="memdesc:a77ce070209f77d03846530b373e74cd0 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the collision shape.  <a href="#a77ce070209f77d03846530b373e74cd0"></a><br/></td></tr>
<tr class="memitem:a2977ea4fae19019820d97f356a168438 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a2977ea4fae19019820d97f356a168438">SetMargin</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Margin)</td></tr>
<tr class="memdesc:a2977ea4fae19019820d97f356a168438 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the padding that will be applied when checking for collisions.  <a href="#a2977ea4fae19019820d97f356a168438"></a><br/></td></tr>
<tr class="memitem:ac090dd20918247ab3e4c425a38d0c6c8 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#ac090dd20918247ab3e4c425a38d0c6c8">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scaling)</td></tr>
<tr class="memdesc:ac090dd20918247ab3e4c425a38d0c6c8 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the collision shape on each of it's axes.  <a href="#ac090dd20918247ab3e4c425a38d0c6c8"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a5ea69a60b06a5c0156b75352a9c9993a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#a5ea69a60b06a5c0156b75352a9c9993a">SerializableName</a> ()</td></tr>
<tr class="memdesc:a5ea69a60b06a5c0156b75352a9c9993a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#a5ea69a60b06a5c0156b75352a9c9993a"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad3d206b5e18b2d63e41a9f2cd05754f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#ad3d206b5e18b2d63e41a9f2cd05754f0">Construct</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Radius, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Height, <a class="el" href="namespaceMezzanine.xhtml#ab41a00a8c6a47b576dc987ec34e16ba1">StandardAxis</a> UpAxis)</td></tr>
<tr class="memdesc:ad3d206b5e18b2d63e41a9f2cd05754f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performe shared contructor work.  <a href="#ad3d206b5e18b2d63e41a9f2cd05754f0"></a><br/></td></tr>
<tr class="memitem:ab4bb9ac4559f4f13b5e51f966da5a354"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1ConeCollisionShape.xhtml#ab4bb9ac4559f4f13b5e51f966da5a354">GetAxisMathBS</a> () const </td></tr>
<tr class="memdesc:ab4bb9ac4559f4f13b5e51f966da5a354"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simulate some messed up the physics library does.  <a href="#ab4bb9ac4559f4f13b5e51f966da5a354"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml">Mezzanine::Physics::PrimitiveCollisionShape</a></td></tr>
<tr class="memitem:ac56593dcbf3e03f2f34c2c2d68273094 inherit pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac56593dcbf3e03f2f34c2c2d68273094"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#ac56593dcbf3e03f2f34c2c2d68273094">SetPointers</a> (btConvexInternalShape *Shape)</td></tr>
<tr class="memdesc:ac56593dcbf3e03f2f34c2c2d68273094 inherit pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the internal pointers on the base classes. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&nbsp;Public Types inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:a985a918f81fe43d088cc1e39bbffc8ea inherit pub_types_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">ShapeType</a> { <br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa1ecbe5f3eedc791e64fb1fd52c747e53">ST_Box</a> = 0, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa0b1be0d16df9fc1a3709469f35cc022e">ST_Capsule</a> = 1, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa07402c83f66065747779321aec2f89e7">ST_Compound</a> = 2, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaaac2762c16caf507b8a8fa37ba51e5310">ST_Cone</a> = 3, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaac3036bd9f4a0bde962866fe11213faab">ST_ConvexHull</a> = 4, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaad1c7d8e9c1385ea1fd17705780965fee">ST_Cylinder</a> = 5, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaaa6cf2f8bb4a12adcbe9de5a9b3106d16">ST_MultiSphere</a> = 6, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa40d090efe55e06dceef14a4e1ba26382">ST_Sphere</a> = 7, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa210028bc131008a47b1a274af9f1c7d5">ST_DynamicTriMesh</a> = 8, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa7debb12831ab57829daec577b200fe69">ST_Heightfield</a> = 9, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaae6931fabfa9c1f426b826945ab29ae15">ST_Plane</a> = 10, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa0fc3e066b38a7bb0ac442c8b2faaf90b">ST_ActorSoft</a> = 11, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaab3ea202442832fcac695b82df402ca77">ST_StaticTriMesh</a> = 12
<br/>
 }</td></tr>
<tr class="memdesc:a985a918f81fe43d088cc1e39bbffc8ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum describes what kind of shape you are currently working with.  <a href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">More...</a><br/></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:aba6f8980ca61955ab79817d23a6271c7 inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aba6f8980ca61955ab79817d23a6271c7"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a></td></tr>
<tr class="memdesc:aba6f8980ca61955ab79817d23a6271c7 inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Storage for the name of this class instance. <br/></td></tr>
<tr class="memitem:a9dbfdf105878227d9e648dcf44d7456a inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9dbfdf105878227d9e648dcf44d7456a"></a>
btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a9dbfdf105878227d9e648dcf44d7456a">ShapeBase</a></td></tr>
<tr class="memdesc:a9dbfdf105878227d9e648dcf44d7456a inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">A pointer to the bullet collision this uses. <br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>A cone physics shape. </p>
<p>Keep in mind when building a cone shape, the provided radius is for the base of the cone, but the pivot point of the shape is still at it's center and not it's base. Like Capsules and Cylinders, Cones can be aligned to any of the 3 linear axes(X, Y, or Z). </p>

<p>Definition at line <a class="el" href="conecollisionshape_8h_source.xhtml#l00059">59</a> of file <a class="el" href="conecollisionshape_8h_source.xhtml">conecollisionshape.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ae57e3a3c6f03df0036e79dbe4b51dfa0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::ConeCollisionShape::ConeCollisionShape </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>UpAxis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this Shape. </td></tr>
    <tr><td class="paramname">Radius</td><td>The radius of the base of the Cone. </td></tr>
    <tr><td class="paramname">Height</td><td>The height of the Cone. </td></tr>
    <tr><td class="paramname">UpAxis</td><td>Which axis the Cone is to be oriented along. Typical usage is for a capsule to be oriented on the Y axis(0,1,0), which would make it stand upright. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adb935fb2b84afb5388fb140fa9c6b374"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::ConeCollisionShape::ConeCollisionShape </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab41a00a8c6a47b576dc987ec34e16ba1">StandardAxis</a>&#160;</td>
          <td class="paramname"><em>UpAxis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this Shape. </td></tr>
    <tr><td class="paramname">Radius</td><td>The radius of the base of the Cone. </td></tr>
    <tr><td class="paramname">Height</td><td>The height of the Cone. </td></tr>
    <tr><td class="paramname">UpAxis</td><td>Which axis the Cone is to be oriented along. Uses StandardAxis enum, Axis_Y to make a vertical capsule </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a70684cdd78f31fe98499f89bdb267572"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::ConeCollisionShape::ConeCollisionShape </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">btConeShape *&#160;</td>
          <td class="paramname"><em>BulletShape</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Internal Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this Shape. </td></tr>
    <tr><td class="paramname">BulletShape</td><td>The internal shape this shape is based on. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a532b0a6fe2a71cbb5dd94f5f2718b081"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::ConeCollisionShape::ConeCollisionShape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a>&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>DeSerializing Constructor.  </p>
<p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>The node to use for constructing this shape </td></tr>
  </table>
  </dd>
</dl>
 </p>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="ad3d206b5e18b2d63e41a9f2cd05754f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::ConeCollisionShape::Construct </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab41a00a8c6a47b576dc987ec34e16ba1">StandardAxis</a>&#160;</td>
          <td class="paramname"><em>UpAxis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performe shared contructor work. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this Shape. </td></tr>
    <tr><td class="paramname">Radius</td><td>The radius of the base of the Cone. </td></tr>
    <tr><td class="paramname">Height</td><td>The height of the Cone. </td></tr>
    <tr><td class="paramname">UpAxis</td><td>Which axis the Cone is to be oriented along. Uses StandardAxis enum, Axis_Y to make a vertical capsule </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab4bb9ac4559f4f13b5e51f966da5a354"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::ConeCollisionShape::GetAxisMathBS </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Simulate some messed up the physics library does. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing some StandarAxis based on what needs to go where. </dd></dl>

</div>
</div>
<a class="anchor" id="a8b29b5b28cfbcd0e121919ca666ce829"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual btConeShape* Mezzanine::Physics::ConeCollisionShape::GetBulletConeShape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal shape pointer this collision shape is based on.  </p>

</div>
</div>
<a class="anchor" id="abb23807787347758cfa41b58a73e8103"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::ConeCollisionShape::GetCleanHeight </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the height of the cone, as originally passed in. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing height of the cone. </dd></dl>

</div>
</div>
<a class="anchor" id="a76c7e8766427d045a985bbe389ea83ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::ConeCollisionShape::GetCleanRadius </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the radius of the cone, as originally passed in. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the radius at the base of the cone. </dd></dl>

</div>
</div>
<a class="anchor" id="af8662032c4dc7cdd5fbe6586e4ec19ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::ConeCollisionShape::GetHeight </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the height of the cone, as used for collision checking. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing height of the cone. </dd></dl>

</div>
</div>
<a class="anchor" id="a7e02ea3ea912d556fdd9a13825eca708"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::ConeCollisionShape::GetHeightScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Which axis is up defines which axis is used to scale height. </p>
<dl class="section return"><dt>Returns</dt><dd>A value that represent the scaling that only the height undergoes. </dd></dl>

</div>
</div>
<a class="anchor" id="a0639f397cc18371bffa63caf0552f3d9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::ConeCollisionShape::GetRadius </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the radius of the cone, as used for collision checking. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real representing the radius at the base of the cone. </dd></dl>

</div>
</div>
<a class="anchor" id="a9a05fbaa612b5ca62a5057ce18870b60"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::ConeCollisionShape::GetRadiusScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Which axis is up defines which 2 axis are used to scale the radius. </p>
<dl class="section return"><dt>Returns</dt><dd>A value that represent the scaling that only the radius undergoes. </dd></dl>

</div>
</div>
<a class="anchor" id="a26d5349744b14b1a9a907572798fa548"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">CollisionShape::ShapeType</a> Mezzanine::Physics::ConeCollisionShape::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> shape this is.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns an enum value indicating the type of collision shape this is. </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#abc26d5eb06e08c8821b72bc481a1a2fd">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<a class="anchor" id="a7eaf770a682571590c38392d9d85e41f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::ConeCollisionShape::GetUpAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets which axis this cone is oriented along. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing which local axis is oriented along the world up axis. </dd></dl>

</div>
</div>
<a class="anchor" id="a8b0266cae2b4ef41d6928e4e5947ab96"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ab41a00a8c6a47b576dc987ec34e16ba1">StandardAxis</a> Mezzanine::Physics::ConeCollisionShape::GetUpStandardAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets which axis this cone is oriented along. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a StandardAxis representing which local axis is oriented along the world up axis. </dd></dl>

</div>
</div>
<a class="anchor" id="a8f098c0ad5c41a4e3fac9485469db54d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::ConeCollisionShape::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal shape pointer this collision shape is based on.  </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#ad5b9a5578832aa5b80fc263048740e1c">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<a class="anchor" id="ab0704a69eceb8fdc85f8383965011a28"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::ConeCollisionShape::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal shape pointer this collision shape is based on.  </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#ad6989b397157984d2beffc3c71124d26">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<a class="anchor" id="a5ea69a60b06a5c0156b75352a9c9993a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Physics::ConeCollisionShape::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "ConeCollisionShape" </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#aa9264be1a7a95ec01949be6d002f95e4">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="conecollisionshape_8h_source.xhtml">conecollisionshape.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Mar 30 2013 00:13:20 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
