<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Physics::MultiSphereCollisionShape Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml">Physics</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml">MultiSphereCollisionShape</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Physics::MultiSphereCollisionShape Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A physics shape comprised of multiple sphere's placed in local space.  
 <a href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="collisionshape_8h_source.xhtml">collisionshape.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Physics::MultiSphereCollisionShape:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape__inherit__graph.svg" width="192" height="243"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Physics::MultiSphereCollisionShape:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape__coll__graph.svg" width="192" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4104f22910c6922bab51ffb78aa2aeb8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a4104f22910c6922bab51ffb78aa2aeb8">MultiSphereCollisionShape</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, const std::vector&lt; <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &gt; &amp;Locations, const std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &gt; &amp;Radii)</td></tr>
<tr class="memdesc:a4104f22910c6922bab51ffb78aa2aeb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor.  <a href="#a4104f22910c6922bab51ffb78aa2aeb8">More...</a><br/></td></tr>
<tr class="separator:a4104f22910c6922bab51ffb78aa2aeb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45d5d52250d435aad3800e33a00b1f4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a45d5d52250d435aad3800e33a00b1f4a">MultiSphereCollisionShape</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, btMultiSphereShape *BulletShape)</td></tr>
<tr class="memdesc:a45d5d52250d435aad3800e33a00b1f4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal Constructor.  <a href="#a45d5d52250d435aad3800e33a00b1f4a">More...</a><br/></td></tr>
<tr class="separator:a45d5d52250d435aad3800e33a00b1f4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57cd1a113c95c49b12eeb8b12821cd6f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a57cd1a113c95c49b12eeb8b12821cd6f">MultiSphereCollisionShape</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> OneNode)</td></tr>
<tr class="memdesc:a57cd1a113c95c49b12eeb8b12821cd6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">DeSerializing Constructor.  <a href="#a57cd1a113c95c49b12eeb8b12821cd6f">More...</a><br/></td></tr>
<tr class="separator:a57cd1a113c95c49b12eeb8b12821cd6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3102460cfdff54884baaae6c5ff7cd6d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3102460cfdff54884baaae6c5ff7cd6d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a3102460cfdff54884baaae6c5ff7cd6d">~MultiSphereCollisionShape</a> ()</td></tr>
<tr class="memdesc:a3102460cfdff54884baaae6c5ff7cd6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="separator:a3102460cfdff54884baaae6c5ff7cd6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7b04207e751443b543d8428d875fe8e"><td class="memItemLeft" align="right" valign="top">virtual btMultiSphereShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#ad7b04207e751443b543d8428d875fe8e">GetMultiSphereShape</a> () const </td></tr>
<tr class="memdesc:ad7b04207e751443b543d8428d875fe8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.  <a href="#ad7b04207e751443b543d8428d875fe8e">More...</a><br/></td></tr>
<tr class="separator:ad7b04207e751443b543d8428d875fe8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af79907c9eb8f875e6ca321e6f6440d52"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#af79907c9eb8f875e6ca321e6f6440d52">GetNumSpheres</a> () const </td></tr>
<tr class="memdesc:af79907c9eb8f875e6ca321e6f6440d52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of spheres contained within this shape.  <a href="#af79907c9eb8f875e6ca321e6f6440d52">More...</a><br/></td></tr>
<tr class="separator:af79907c9eb8f875e6ca321e6f6440d52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6129505b06b165f9cda4f9aa6955d37e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a6129505b06b165f9cda4f9aa6955d37e">GetSphereLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const </td></tr>
<tr class="memdesc:a6129505b06b165f9cda4f9aa6955d37e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the location(in local space) of the sphere at the specified index.  <a href="#a6129505b06b165f9cda4f9aa6955d37e">More...</a><br/></td></tr>
<tr class="separator:a6129505b06b165f9cda4f9aa6955d37e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a140f21f94c868897f9f2c9cdc6b209c7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a140f21f94c868897f9f2c9cdc6b209c7">GetSphereRadius</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const </td></tr>
<tr class="memdesc:a140f21f94c868897f9f2c9cdc6b209c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the radius of the sphere at the specified index.  <a href="#a140f21f94c868897f9f2c9cdc6b209c7">More...</a><br/></td></tr>
<tr class="separator:a140f21f94c868897f9f2c9cdc6b209c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77928cf61775dfd233a4eaa2d231a2b8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">CollisionShape::ShapeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a77928cf61775dfd233a4eaa2d231a2b8">GetType</a> () const </td></tr>
<tr class="memdesc:a77928cf61775dfd233a4eaa2d231a2b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> shape this is.  <a href="#a77928cf61775dfd233a4eaa2d231a2b8">More...</a><br/></td></tr>
<tr class="separator:a77928cf61775dfd233a4eaa2d231a2b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa971efc08c073e4f5fa758683ab52a60"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#aa971efc08c073e4f5fa758683ab52a60">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:aa971efc08c073e4f5fa758683ab52a60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.  <a href="#aa971efc08c073e4f5fa758683ab52a60">More...</a><br/></td></tr>
<tr class="separator:aa971efc08c073e4f5fa758683ab52a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14402d1365a6a7a993d0941adfd3f68b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a14402d1365a6a7a993d0941adfd3f68b">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:a14402d1365a6a7a993d0941adfd3f68b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.  <a href="#a14402d1365a6a7a993d0941adfd3f68b">More...</a><br/></td></tr>
<tr class="separator:a14402d1365a6a7a993d0941adfd3f68b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml">Mezzanine::Physics::PrimitiveCollisionShape</a></td></tr>
<tr class="memitem:a4007535dff3ca954296ae7331fab27a3 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4007535dff3ca954296ae7331fab27a3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#a4007535dff3ca954296ae7331fab27a3">PrimitiveCollisionShape</a> ()</td></tr>
<tr class="memdesc:a4007535dff3ca954296ae7331fab27a3 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="separator:a4007535dff3ca954296ae7331fab27a3 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf0a7eb2c3565d13d7fd6ccf7e0fb76c inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adf0a7eb2c3565d13d7fd6ccf7e0fb76c"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#adf0a7eb2c3565d13d7fd6ccf7e0fb76c">~PrimitiveCollisionShape</a> ()</td></tr>
<tr class="memdesc:adf0a7eb2c3565d13d7fd6ccf7e0fb76c inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="separator:adf0a7eb2c3565d13d7fd6ccf7e0fb76c inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a629191926852cd1b083c59551bd563d2 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top">virtual btConvexInternalShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#a629191926852cd1b083c59551bd563d2">GetBulletConvexShape</a> () const </td></tr>
<tr class="memdesc:a629191926852cd1b083c59551bd563d2 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.  <a href="#a629191926852cd1b083c59551bd563d2">More...</a><br/></td></tr>
<tr class="separator:a629191926852cd1b083c59551bd563d2 inherit pub_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:af31b30eb28351edb4a8596a540f2701a inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af31b30eb28351edb4a8596a540f2701a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#af31b30eb28351edb4a8596a540f2701a">CollisionShape</a> ()</td></tr>
<tr class="memdesc:af31b30eb28351edb4a8596a540f2701a inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="separator:af31b30eb28351edb4a8596a540f2701a inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac56b54307601d6942a09ad1dc31119c4 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac56b54307601d6942a09ad1dc31119c4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#ac56b54307601d6942a09ad1dc31119c4">~CollisionShape</a> ()</td></tr>
<tr class="memdesc:ac56b54307601d6942a09ad1dc31119c4 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="separator:ac56b54307601d6942a09ad1dc31119c4 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04f6b94d98efc92f36a4d205021f6fdf inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a04f6b94d98efc92f36a4d205021f6fdf">GetBulletShape</a> () const </td></tr>
<tr class="memdesc:a04f6b94d98efc92f36a4d205021f6fdf inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal shape pointer this collision shape is based on.  <a href="#a04f6b94d98efc92f36a4d205021f6fdf">More...</a><br/></td></tr>
<tr class="separator:a04f6b94d98efc92f36a4d205021f6fdf inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81ee3be2ed7f6c77fe0995e209cab41 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#ae81ee3be2ed7f6c77fe0995e209cab41">GetMargin</a> () const </td></tr>
<tr class="memdesc:ae81ee3be2ed7f6c77fe0995e209cab41 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the amount of padding currently being applied to the collision shape.  <a href="#ae81ee3be2ed7f6c77fe0995e209cab41">More...</a><br/></td></tr>
<tr class="separator:ae81ee3be2ed7f6c77fe0995e209cab41 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba132ec6cd2442ed9ba38d43feb929cb inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba132ec6cd2442ed9ba38d43feb929cb">GetName</a> () const </td></tr>
<tr class="memdesc:aba132ec6cd2442ed9ba38d43feb929cb inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this shape.  <a href="#aba132ec6cd2442ed9ba38d43feb929cb">More...</a><br/></td></tr>
<tr class="separator:aba132ec6cd2442ed9ba38d43feb929cb inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77ce070209f77d03846530b373e74cd0 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a77ce070209f77d03846530b373e74cd0">GetScaling</a> () const </td></tr>
<tr class="memdesc:a77ce070209f77d03846530b373e74cd0 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the collision shape.  <a href="#a77ce070209f77d03846530b373e74cd0">More...</a><br/></td></tr>
<tr class="separator:a77ce070209f77d03846530b373e74cd0 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2977ea4fae19019820d97f356a168438 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a2977ea4fae19019820d97f356a168438">SetMargin</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Margin)</td></tr>
<tr class="memdesc:a2977ea4fae19019820d97f356a168438 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the padding that will be applied when checking for collisions.  <a href="#a2977ea4fae19019820d97f356a168438">More...</a><br/></td></tr>
<tr class="separator:a2977ea4fae19019820d97f356a168438 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac090dd20918247ab3e4c425a38d0c6c8 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#ac090dd20918247ab3e4c425a38d0c6c8">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scaling)</td></tr>
<tr class="memdesc:ac090dd20918247ab3e4c425a38d0c6c8 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the collision shape on each of it's axes.  <a href="#ac090dd20918247ab3e4c425a38d0c6c8">More...</a><br/></td></tr>
<tr class="separator:ac090dd20918247ab3e4c425a38d0c6c8 inherit pub_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a5f69d1ae041a7573900ff1f98778ee9c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a5f69d1ae041a7573900ff1f98778ee9c">SerializableName</a> ()</td></tr>
<tr class="memdesc:a5f69d1ae041a7573900ff1f98778ee9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#a5f69d1ae041a7573900ff1f98778ee9c">More...</a><br/></td></tr>
<tr class="separator:a5f69d1ae041a7573900ff1f98778ee9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml">Mezzanine::Physics::PrimitiveCollisionShape</a></td></tr>
<tr class="memitem:aa9264be1a7a95ec01949be6d002f95e4 inherit pub_static_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#aa9264be1a7a95ec01949be6d002f95e4">SerializableName</a> ()</td></tr>
<tr class="memdesc:aa9264be1a7a95ec01949be6d002f95e4 inherit pub_static_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#aa9264be1a7a95ec01949be6d002f95e4">More...</a><br/></td></tr>
<tr class="separator:aa9264be1a7a95ec01949be6d002f95e4 inherit pub_static_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:a4297e806c25daeabf7aea75862894776 inherit pub_static_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a4297e806c25daeabf7aea75862894776">SerializableName</a> ()</td></tr>
<tr class="memdesc:a4297e806c25daeabf7aea75862894776 inherit pub_static_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#a4297e806c25daeabf7aea75862894776">More...</a><br/></td></tr>
<tr class="separator:a4297e806c25daeabf7aea75862894776 inherit pub_static_methods_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:accfbec1c7f533d791fff97ab546e6bfa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#accfbec1c7f533d791fff97ab546e6bfa">Construct</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, const std::vector&lt; <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &gt; &amp;Locations, const std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &gt; &amp;Radii)</td></tr>
<tr class="memdesc:accfbec1c7f533d791fff97ab546e6bfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a btMultiSphereShape* from two vectors to help unify constructor logic.  <a href="#accfbec1c7f533d791fff97ab546e6bfa">More...</a><br/></td></tr>
<tr class="separator:accfbec1c7f533d791fff97ab546e6bfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37b6266bfc7bf39d0364b7cd3c7ea034"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1MultiSphereCollisionShape.xhtml#a37b6266bfc7bf39d0364b7cd3c7ea034">Construct</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a>, btMultiSphereShape *BulletShape)</td></tr>
<tr class="memdesc:a37b6266bfc7bf39d0364b7cd3c7ea034"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the shape when the bullet is already prepared.  <a href="#a37b6266bfc7bf39d0364b7cd3c7ea034">More...</a><br/></td></tr>
<tr class="separator:a37b6266bfc7bf39d0364b7cd3c7ea034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml">Mezzanine::Physics::PrimitiveCollisionShape</a></td></tr>
<tr class="memitem:ac56593dcbf3e03f2f34c2c2d68273094 inherit pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac56593dcbf3e03f2f34c2c2d68273094"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#ac56593dcbf3e03f2f34c2c2d68273094">SetPointers</a> (btConvexInternalShape *Shape)</td></tr>
<tr class="memdesc:ac56593dcbf3e03f2f34c2c2d68273094 inherit pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the internal pointers on the base classes. <br/></td></tr>
<tr class="separator:ac56593dcbf3e03f2f34c2c2d68273094 inherit pro_methods_classMezzanine_1_1Physics_1_1PrimitiveCollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:a985a918f81fe43d088cc1e39bbffc8ea inherit pub_types_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">ShapeType</a> { <br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa1ecbe5f3eedc791e64fb1fd52c747e53">ST_Box</a> =0, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa0b1be0d16df9fc1a3709469f35cc022e">ST_Capsule</a> =1, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa07402c83f66065747779321aec2f89e7">ST_Compound</a> =2, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaaac2762c16caf507b8a8fa37ba51e5310">ST_Cone</a> =3, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaac3036bd9f4a0bde962866fe11213faab">ST_ConvexHull</a> =4, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaad1c7d8e9c1385ea1fd17705780965fee">ST_Cylinder</a> =5, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaaa6cf2f8bb4a12adcbe9de5a9b3106d16">ST_MultiSphere</a> =6, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa40d090efe55e06dceef14a4e1ba26382">ST_Sphere</a> =7, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa210028bc131008a47b1a274af9f1c7d5">ST_DynamicTriMesh</a> =8, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa7debb12831ab57829daec577b200fe69">ST_Heightfield</a> =9, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaae6931fabfa9c1f426b826945ab29ae15">ST_Plane</a> =10, 
<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaa0fc3e066b38a7bb0ac442c8b2faaf90b">ST_ActorSoft</a> =11, 
<br/>
&#160;&#160;<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8eaab3ea202442832fcac695b82df402ca77">ST_StaticTriMesh</a> =12
<br/>
 }</td></tr>
<tr class="memdesc:a985a918f81fe43d088cc1e39bbffc8ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum describes what kind of shape you are currently working with.  <a href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">More...</a><br/></td></tr>
<tr class="separator:a985a918f81fe43d088cc1e39bbffc8ea inherit pub_types_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Mezzanine::Physics::CollisionShape</a></td></tr>
<tr class="memitem:aba6f8980ca61955ab79817d23a6271c7 inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aba6f8980ca61955ab79817d23a6271c7"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#aba6f8980ca61955ab79817d23a6271c7">Name</a></td></tr>
<tr class="memdesc:aba6f8980ca61955ab79817d23a6271c7 inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">Storage for the name of this class instance. <br/></td></tr>
<tr class="separator:aba6f8980ca61955ab79817d23a6271c7 inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dbfdf105878227d9e648dcf44d7456a inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9dbfdf105878227d9e648dcf44d7456a"></a>
btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a9dbfdf105878227d9e648dcf44d7456a">ShapeBase</a></td></tr>
<tr class="memdesc:a9dbfdf105878227d9e648dcf44d7456a inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="mdescLeft">&#160;</td><td class="mdescRight">A pointer to the bullet collision this uses. <br/></td></tr>
<tr class="separator:a9dbfdf105878227d9e648dcf44d7456a inherit pro_attribs_classMezzanine_1_1Physics_1_1CollisionShape"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A physics shape comprised of multiple sphere's placed in local space. </p>
<p>It's important to note that this shape isn't just a bunch of placed sphere's, but a convex hull comprised of all the provided sphere's. You can make a capsule shape with two sphere's, one above the other(internally this is how it works). </p>

<p>Definition at line <a class="el" href="multispherecollisionshape_8h_source.xhtml#l00059">59</a> of file <a class="el" href="multispherecollisionshape_8h_source.xhtml">multispherecollisionshape.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4104f22910c6922bab51ffb78aa2aeb8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::MultiSphereCollisionShape::MultiSphereCollisionShape </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Locations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Radii</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this Shape. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a45d5d52250d435aad3800e33a00b1f4a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::MultiSphereCollisionShape::MultiSphereCollisionShape </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">btMultiSphereShape *&#160;</td>
          <td class="paramname"><em>BulletShape</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Internal Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this Shape. </td></tr>
    <tr><td class="paramname">BulletShape</td><td>The internal shape this shape is based on. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a57cd1a113c95c49b12eeb8b12821cd6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::MultiSphereCollisionShape::MultiSphereCollisionShape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a>&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>DeSerializing Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>The node to use for constructing this shape </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="accfbec1c7f533d791fff97ab546e6bfa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::MultiSphereCollisionShape::Construct </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Locations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Radii</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a btMultiSphereShape* from two vectors to help unify constructor logic. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this name </td></tr>
    <tr><td class="paramname">Locations</td><td>An std::vector containing all the locations, this must have the same amount of locations as there are radii </td></tr>
    <tr><td class="paramname">Radii</td><td>An std::vector containing all the Radiuses, this must have the same amount of radii as there are locations </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">An</td><td>out of bounds exception if the there are differing amounts of radii and locations. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a37b6266bfc7bf39d0364b7cd3c7ea034"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::MultiSphereCollisionShape::Construct </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">btMultiSphereShape *&#160;</td>
          <td class="paramname"><em>BulletShape</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs the shape when the bullet is already prepared. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">BulletShape</td><td>The bullet shape to use </td></tr>
    <tr><td class="paramname">Name</td><td>The name of this name </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad7b04207e751443b543d8428d875fe8e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual btMultiSphereShape* Mezzanine::Physics::MultiSphereCollisionShape::GetMultiSphereShape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal shape pointer this collision shape is based on. </p>

</div>
</div>
<a class="anchor" id="af79907c9eb8f875e6ca321e6f6440d52"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Physics::MultiSphereCollisionShape::GetNumSpheres </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of spheres contained within this shape. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Whole representing the number of spheres in this shape. </dd></dl>

</div>
</div>
<a class="anchor" id="a6129505b06b165f9cda4f9aa6955d37e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::MultiSphereCollisionShape::GetSphereLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the location(in local space) of the sphere at the specified index. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the location of the specified sphere. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the desired sphere. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a140f21f94c868897f9f2c9cdc6b209c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::MultiSphereCollisionShape::GetSphereRadius </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the radius of the sphere at the specified index. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the radius of the specified sphere. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the desired sphere. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a77928cf61775dfd233a4eaa2d231a2b8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml#a985a918f81fe43d088cc1e39bbffc8ea">CollisionShape::ShapeType</a> Mezzanine::Physics::MultiSphereCollisionShape::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> shape this is. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an enum value indicating the type of collision shape this is. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#abc26d5eb06e08c8821b72bc481a1a2fd">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<a class="anchor" id="aa971efc08c073e4f5fa758683ab52a60"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::MultiSphereCollisionShape::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal shape pointer this collision shape is based on. </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#ad5b9a5578832aa5b80fc263048740e1c">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<a class="anchor" id="a14402d1365a6a7a993d0941adfd3f68b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Physics::MultiSphereCollisionShape::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal shape pointer this collision shape is based on. </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1PrimitiveCollisionShape.xhtml#ad6989b397157984d2beffc3c71124d26">Mezzanine::Physics::PrimitiveCollisionShape</a>.</p>

</div>
</div>
<a class="anchor" id="a5f69d1ae041a7573900ff1f98778ee9c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Physics::MultiSphereCollisionShape::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "MultiSphereCollisionShape" </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="multispherecollisionshape_8h_source.xhtml">multispherecollisionshape.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 19:04:47 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
