<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::ManagerBase Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1ManagerBase-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::ManagerBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the base class from which all the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Managers inherit.  
 <a href="classMezzanine_1_1ManagerBase.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::ManagerBase:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ManagerBase__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::ManagerBase:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ManagerBase__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab23a9aa27c4e3cb58d902a149d3c6de2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab23a9aa27c4e3cb58d902a149d3c6de2"></a>
typedef bool(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> )()</td></tr>
<tr class="memdesc:ab23a9aa27c4e3cb58d902a149d3c6de2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This makes working with Callback function pointer a bit easier. <br/></td></tr>
<tr class="separator:ab23a9aa27c4e3cb58d902a149d3c6de2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6f3e238f66cbc68dfec11e4160aa6c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> { <br/>
&#160;&#160;<b>ActorManager</b> = 1, 
<b>AudioManager</b>, 
<b>CameraManager</b>, 
<b>CollisionShapeManager</b>, 
<br/>
&#160;&#160;<b>EventManager</b>, 
<b>GraphicsManager</b>, 
<b>InputManager</b>, 
<b>LogManager</b>, 
<br/>
&#160;&#160;<b>MeshManager</b>, 
<b>NetworkManager</b>, 
<b>PagingManager</b>, 
<b>PhysicsManager</b>, 
<br/>
&#160;&#160;<b>ResourceManager</b>, 
<b>SceneManager</b>, 
<b>ScriptingManager</b>, 
<b>SoundScapeManager</b>, 
<br/>
&#160;&#160;<b>TerrainManager</b>, 
<b>TimerManager</b>, 
<b>UIManager</b>, 
<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6caa58e48b5e043dfdaf6e2cd17b79a3194">UserCreated</a> = 512
<br/>
 }</td></tr>
<tr class="separator:a9a6f3e238f66cbc68dfec11e4160aa6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconstructor.  <a href="#a04cb832dc79f4559cc5b2f57cabfa70d">More...</a><br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ee29e4baf6c4b9a3bfec1b2258d5cd2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ee29e4baf6c4b9a3bfec1b2258d5cd2">DoMainLoopItems</a> ()=0</td></tr>
<tr class="memdesc:a4ee29e4baf6c4b9a3bfec1b2258d5cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main loop calls this once per frame.  <a href="#a4ee29e4baf6c4b9a3bfec1b2258d5cd2">More...</a><br/></td></tr>
<tr class="separator:a4ee29e4baf6c4b9a3bfec1b2258d5cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff151003c2370c857dadb67148faffc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acff151003c2370c857dadb67148faffc"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acff151003c2370c857dadb67148faffc">ErasePostMainLoopItems</a> ()</td></tr>
<tr class="memdesc:acff151003c2370c857dadb67148faffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This simply calls <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ec52058f4c8a3f1c5fb20230b4fc301" title="This assigns a function to be the callback function to run prior to the main loop.">SetPostMainLoopItems()</a> passing it 0. <br/></td></tr>
<tr class="separator:acff151003c2370c857dadb67148faffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f1b8b02c34ccfd72040a7183fc3cba1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1f1b8b02c34ccfd72040a7183fc3cba1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a1f1b8b02c34ccfd72040a7183fc3cba1">ErasePreMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a1f1b8b02c34ccfd72040a7183fc3cba1"><td class="mdescLeft">&#160;</td><td class="mdescRight">This simply calls <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a84dd669c15e9db08c9efbc84c4fa3b0b" title="This assigns a function to be the callback function to run prior to the main loop.">SetPreMainLoopItems()</a> passing it 0. <br/></td></tr>
<tr class="separator:a1f1b8b02c34ccfd72040a7183fc3cba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac41d60f674e75d3d16b5544f4feb199c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">GetImplementationTypeName</a> () const =0</td></tr>
<tr class="memdesc:ac41d60f674e75d3d16b5544f4feb199c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#ac41d60f674e75d3d16b5544f4feb199c">More...</a><br/></td></tr>
<tr class="separator:ac41d60f674e75d3d16b5544f4feb199c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a388aa37ed71b8667785b789c137aa8c6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">GetInterfaceType</a> () const =0</td></tr>
<tr class="memdesc:a388aa37ed71b8667785b789c137aa8c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#a388aa37ed71b8667785b789c137aa8c6">More...</a><br/></td></tr>
<tr class="separator:a388aa37ed71b8667785b789c137aa8c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02a9788d7a83de123083ce3bfdcef4b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa02a9788d7a83de123083ce3bfdcef4b">GetPostMainLoopItems</a> () const </td></tr>
<tr class="memdesc:aa02a9788d7a83de123083ce3bfdcef4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the Callback that would be called before the main loop items.  <a href="#aa02a9788d7a83de123083ce3bfdcef4b">More...</a><br/></td></tr>
<tr class="separator:aa02a9788d7a83de123083ce3bfdcef4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1ede605b127aeb1a96e226284c318ce"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#af1ede605b127aeb1a96e226284c318ce">GetPreMainLoopItems</a> () const </td></tr>
<tr class="memdesc:af1ede605b127aeb1a96e226284c318ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the Callback that would be called before the main loop items.  <a href="#af1ede605b127aeb1a96e226284c318ce">More...</a><br/></td></tr>
<tr class="separator:af1ede605b127aeb1a96e226284c318ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acb88dc379867430e76d328028862f0"><td class="memItemLeft" align="right" valign="top">virtual short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9acb88dc379867430e76d328028862f0">GetPriority</a> ()</td></tr>
<tr class="memdesc:a9acb88dc379867430e76d328028862f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the Priority of this manager.  <a href="#a9acb88dc379867430e76d328028862f0">More...</a><br/></td></tr>
<tr class="separator:a9acb88dc379867430e76d328028862f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a864e3cac11928a602c1db28fa2d52ee2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a864e3cac11928a602c1db28fa2d52ee2">Initialize</a> ()=0</td></tr>
<tr class="memdesc:a864e3cac11928a602c1db28fa2d52ee2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure Items requiring other Managers.  <a href="#a864e3cac11928a602c1db28fa2d52ee2">More...</a><br/></td></tr>
<tr class="separator:a864e3cac11928a602c1db28fa2d52ee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade516a30e6d24b4ffd1accf1b1efd948"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ade516a30e6d24b4ffd1accf1b1efd948">IsInitialized</a> ()</td></tr>
<tr class="memdesc:ade516a30e6d24b4ffd1accf1b1efd948"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#ade516a30e6d24b4ffd1accf1b1efd948">More...</a><br/></td></tr>
<tr class="separator:ade516a30e6d24b4ffd1accf1b1efd948"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a1bfb2a137c6013a8a5e5fae4c4bb85"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a2a1bfb2a137c6013a8a5e5fae4c4bb85">PostMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a2a1bfb2a137c6013a8a5e5fae4c4bb85"><td class="mdescLeft">&#160;</td><td class="mdescRight">This runs any callback that is required after the mainloop items are run.  <a href="#a2a1bfb2a137c6013a8a5e5fae4c4bb85">More...</a><br/></td></tr>
<tr class="separator:a2a1bfb2a137c6013a8a5e5fae4c4bb85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e0f19b5472eab47fbcd986656838070"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9e0f19b5472eab47fbcd986656838070">PreMainLoopItems</a> ()</td></tr>
<tr class="memdesc:a9e0f19b5472eab47fbcd986656838070"><td class="mdescLeft">&#160;</td><td class="mdescRight">This runs any callback that is required before the mainloop items are run.  <a href="#a9e0f19b5472eab47fbcd986656838070">More...</a><br/></td></tr>
<tr class="separator:a9e0f19b5472eab47fbcd986656838070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec52058f4c8a3f1c5fb20230b4fc301"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a4ec52058f4c8a3f1c5fb20230b4fc301">SetPostMainLoopItems</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> PostMainCallback)</td></tr>
<tr class="memdesc:a4ec52058f4c8a3f1c5fb20230b4fc301"><td class="mdescLeft">&#160;</td><td class="mdescRight">This assigns a function to be the callback function to run prior to the main loop.  <a href="#a4ec52058f4c8a3f1c5fb20230b4fc301">More...</a><br/></td></tr>
<tr class="separator:a4ec52058f4c8a3f1c5fb20230b4fc301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84dd669c15e9db08c9efbc84c4fa3b0b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a84dd669c15e9db08c9efbc84c4fa3b0b">SetPreMainLoopItems</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> PreMainCallback)</td></tr>
<tr class="memdesc:a84dd669c15e9db08c9efbc84c4fa3b0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This assigns a function to be the callback function to run prior to the main loop.  <a href="#a84dd669c15e9db08c9efbc84c4fa3b0b">More...</a><br/></td></tr>
<tr class="separator:a84dd669c15e9db08c9efbc84c4fa3b0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71cd03e0a60427a1ee22637a3cc1b3e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac71cd03e0a60427a1ee22637a3cc1b3e">SetPriority</a> (short int Priority_)</td></tr>
<tr class="memdesc:ac71cd03e0a60427a1ee22637a3cc1b3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the Priority of this manager.  <a href="#ac71cd03e0a60427a1ee22637a3cc1b3e">More...</a><br/></td></tr>
<tr class="separator:ac71cd03e0a60427a1ee22637a3cc1b3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6e93778e4b8cead1d8fc57ed386a012a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6e93778e4b8cead1d8fc57ed386a012a">GetTypeNameAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:a6e93778e4b8cead1d8fc57ed386a012a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#a6e93778e4b8cead1d8fc57ed386a012a">More...</a><br/></td></tr>
<tr class="separator:a6e93778e4b8cead1d8fc57ed386a012a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5388364067d067e43136ab948af5451b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a5388364067d067e43136ab948af5451b">GetTypeNameFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:a5388364067d067e43136ab948af5451b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#a5388364067d067e43136ab948af5451b">More...</a><br/></td></tr>
<tr class="separator:a5388364067d067e43136ab948af5451b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab27f3f7458b9a6f2a08974d096125ed5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab27f3f7458b9a6f2a08974d096125ed5">PostMainLoop</a></td></tr>
<tr class="memdesc:ab27f3f7458b9a6f2a08974d096125ed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a function pointer to the function that should be called after running Main Loop Items.  <a href="#ab27f3f7458b9a6f2a08974d096125ed5">More...</a><br/></td></tr>
<tr class="separator:ab27f3f7458b9a6f2a08974d096125ed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1652110258237bc313a02757229d0f47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a1652110258237bc313a02757229d0f47">PreMainLoop</a></td></tr>
<tr class="memdesc:a1652110258237bc313a02757229d0f47"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a function pointer to the function that should be called before running Main Loop Items.  <a href="#a1652110258237bc313a02757229d0f47">More...</a><br/></td></tr>
<tr class="separator:a1652110258237bc313a02757229d0f47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96fb02bf2f4e8b4afe70dedd0d8c6ac9"><td class="memItemLeft" align="right" valign="top">short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9">Priority</a></td></tr>
<tr class="memdesc:a96fb02bf2f4e8b4afe70dedd0d8c6ac9"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a weighting used by the main loop to decide what order the managers should be called in.  <a href="#a96fb02bf2f4e8b4afe70dedd0d8c6ac9">More...</a><br/></td></tr>
<tr class="separator:a96fb02bf2f4e8b4afe70dedd0d8c6ac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the world.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is the base class from which all the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Managers inherit. </p>
<p>This creates a base set of functions that Managers are all expected to implement. </p>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00057">57</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a9a6f3e238f66cbc68dfec11e4160aa6c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">Mezzanine::ManagerBase::ManagerType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a9a6f3e238f66cbc68dfec11e4160aa6caa58e48b5e043dfdaf6e2cd17b79a3194"></a>UserCreated</em>&nbsp;</td><td class="fielddoc">
<p>This, and values above it, is what User created managers that do not derive from any other managers are expected to use to prevent confusion with game internals. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00065">65</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a04cb832dc79f4559cc5b2f57cabfa70d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ManagerBase::~ManagerBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deconstructor. </p>
<p>This is actuall </p>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4ee29e4baf6c4b9a3bfec1b2258d5cd2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ManagerBase::DoMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The main loop calls this once per frame. </p>
<p>This is where each manager is expected to put anything that needs to be run each iteration of the main loop </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1SceneManager.xhtml#ae75aa9deb4bbc8ee1f979e240070309f">Mezzanine::SceneManager</a>, <a class="el" href="classMezzanine_1_1EventManager.xhtml#a69d44403974ed8d974846e929eb8adda">Mezzanine::EventManager</a>, <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a21df393f2356a20151fce997577e3d76">Mezzanine::PhysicsManager</a>, <a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a57b72306ed2bfaa198ff47d43c4013fa">Mezzanine::ResourceManager</a>, <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml#ac055cf940fd8fce522625de6b977dd2a">Mezzanine::CollisionShapeManager</a>, <a class="el" href="classMezzanine_1_1UIManager.xhtml#af774da651d30b4fe1ea086899c1961ca">Mezzanine::UIManager</a>, <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml#ae940c81cd1401fda34abc6fd53ede45a">Mezzanine::GraphicsManager</a>, <a class="el" href="classMezzanine_1_1MeshManager.xhtml#acfbea42e8aeb36d48522ad027f1e8764">Mezzanine::MeshManager</a>, <a class="el" href="classMezzanine_1_1ActorManager.xhtml#a8b1907afd4804047c03ff4bb51c89caa">Mezzanine::ActorManager</a>, <a class="el" href="classMezzanine_1_1CameraManager.xhtml#a91db1fdfe96f32d06f689d37b91140cb">Mezzanine::CameraManager</a>, <a class="el" href="classMezzanine_1_1TerrainManager.xhtml#a442a1e72a38fe959b15a7f5eeff455fc">Mezzanine::TerrainManager</a>, <a class="el" href="classMezzanine_1_1InputManager.xhtml#ab8c57a32ff87dca1a5f7d002dbb75b0f">Mezzanine::InputManager</a>, <a class="el" href="classMezzanine_1_1TimerManager.xhtml#a6ac7544b79fb023e4596e350a5586f85">Mezzanine::TimerManager</a>, and <a class="el" href="classMezzanine_1_1Scripting_1_1iScriptingManager.xhtml#a5f2450e8b3d57b9f9fe7a9345c2d0f8c">Mezzanine::Scripting::iScriptingManager</a>.</p>

</div>
</div>
<a class="anchor" id="ac41d60f674e75d3d16b5544f4feb199c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ManagerBase::GetImplementationTypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This Allows any manager name to be sent to a stream. Primarily used for logging. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a String that contains the name. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1SceneManager.xhtml#aec34f3aea886f6be93db2ba906716739">Mezzanine::SceneManager</a>, <a class="el" href="classMezzanine_1_1EventManager.xhtml#a7dd874939af03aec6fa24a728438b52b">Mezzanine::EventManager</a>, <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a8f6f3844b404a8bd18ad0ca6e39c59d2">Mezzanine::PhysicsManager</a>, <a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a59b6f7e33e89aface3733ad44ef9e57e">Mezzanine::ResourceManager</a>, <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml#aff4c82d52ea85b3443f89f66c005a408">Mezzanine::CollisionShapeManager</a>, <a class="el" href="classMezzanine_1_1UIManager.xhtml#a9e3cd00f851c07ba4f5d8a7f1a867b19">Mezzanine::UIManager</a>, <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml#a81d49be246549398a5bc9dc4305ab0e8">Mezzanine::GraphicsManager</a>, <a class="el" href="classMezzanine_1_1MeshManager.xhtml#a74c362856cd1bd958a386d53b7a8120b">Mezzanine::MeshManager</a>, <a class="el" href="classMezzanine_1_1ActorManager.xhtml#ab7af48b21ac3abd5363aec10393b268c">Mezzanine::ActorManager</a>, <a class="el" href="classMezzanine_1_1CameraManager.xhtml#aab3cd003726ac1667fdeda3c8774d038">Mezzanine::CameraManager</a>, <a class="el" href="classMezzanine_1_1TerrainManager.xhtml#a9f8c6215c456dc138c5e0a0353e3b253">Mezzanine::TerrainManager</a>, <a class="el" href="classMezzanine_1_1InputManager.xhtml#ad375ce0cffbd1db8e0e43f132cdbb3fd">Mezzanine::InputManager</a>, <a class="el" href="classMezzanine_1_1TimerManager.xhtml#a61a34b6a8d33d10aaee3c00e27d7225f">Mezzanine::TimerManager</a>, and <a class="el" href="classMezzanine_1_1Scripting_1_1iScriptingManager.xhtml#ae81fba6b343d1c4bf6dbedbfdec3026b">Mezzanine::Scripting::iScriptingManager</a>.</p>

</div>
</div>
<a class="anchor" id="a388aa37ed71b8667785b789c137aa8c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> Mezzanine::ManagerBase::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a562ed8915f3f4b9a57efbf220c86eabd">Mezzanine::Audio::AudioManager</a>, <a class="el" href="classMezzanine_1_1SceneManager.xhtml#ade619016f63ff532be7cc8f736665bfc">Mezzanine::SceneManager</a>, <a class="el" href="classMezzanine_1_1EventManager.xhtml#a8b42b4b0896ba3f6040f5e6237e5a21b">Mezzanine::EventManager</a>, <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#a6bf6a9703851581ce5d03fa205063eaa">Mezzanine::PhysicsManager</a>, <a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml#aecc50f1b17b7895f453f43f38cf3efbb">Mezzanine::Audio::SoundScapeManager</a>, <a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a9ae2b2182d03c3e21de785d79c357a7d">Mezzanine::ResourceManager</a>, <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml#a19b9f8373967d03e2adb8ad9f059f334">Mezzanine::CollisionShapeManager</a>, <a class="el" href="classMezzanine_1_1UIManager.xhtml#aa900905eb59df281fd329c3f0f11f1ef">Mezzanine::UIManager</a>, <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml#ad859384b3c5c9e2bde4e5e27bda07d94">Mezzanine::GraphicsManager</a>, <a class="el" href="classMezzanine_1_1MeshManager.xhtml#aeca3930c7034c8930487ac453c3fe1d4">Mezzanine::MeshManager</a>, <a class="el" href="classMezzanine_1_1ActorManager.xhtml#ae118a3f023985b35c1da32210c0b4ea2">Mezzanine::ActorManager</a>, <a class="el" href="classMezzanine_1_1CameraManager.xhtml#a1dea0322519c7c68eff04add58b37d22">Mezzanine::CameraManager</a>, <a class="el" href="classMezzanine_1_1TerrainManager.xhtml#a4aab467023364ecc87b6ecab4dfebcc8">Mezzanine::TerrainManager</a>, <a class="el" href="classMezzanine_1_1InputManager.xhtml#ad54a95adf1b4aee661f87140a8293338">Mezzanine::InputManager</a>, <a class="el" href="classMezzanine_1_1TimerManager.xhtml#a51074abe07d68e6f679535b084c01fb1">Mezzanine::TimerManager</a>, and <a class="el" href="classMezzanine_1_1Scripting_1_1iScriptingManager.xhtml#a53694af4d1dfc06bd5d3f0054b24e784">Mezzanine::Scripting::iScriptingManager</a>.</p>

</div>
</div>
<a class="anchor" id="a70b61244d5182ad40dd056b2664a6aa7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ManagerBase::GetInterfaceTypeAsString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a string of the interface type of this manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the interface name of this manager. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa02a9788d7a83de123083ce3bfdcef4b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">ManagerBase::Callback</a> Mezzanine::ManagerBase::GetPostMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the Callback that would be called before the main loop items. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2" title="This makes working with Callback function pointer a bit easier.">ManagerBase::Callback</a> which is a p ointer to the callback function that will be called after the main loop items </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af1ede605b127aeb1a96e226284c318ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">ManagerBase::Callback</a> Mezzanine::ManagerBase::GetPreMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the Callback that would be called before the main loop items. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2" title="This makes working with Callback function pointer a bit easier.">ManagerBase::Callback</a> which is a pointer to the callback function that will be called before the main loop items </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9acb88dc379867430e76d328028862f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">short int Mezzanine::ManagerBase::GetPriority </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This gets the Priority of this manager. </p>
<p>This has no Set counterpart to allow the changing of a manager's priority. This is expected to be set by the manager, or expose a safe method to change it at that level. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a short int that represents the priority of the manager. Lower is executed first. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00257">257</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6e93778e4b8cead1d8fc57ed386a012a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ManagerBase::GetTypeNameAsString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;&#160;</td>
          <td class="paramname"><em>ManagerType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the string form of the type of manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of the requested type of manager. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00106">106</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5388364067d067e43136ab948af5451b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::ManagerBase::GetTypeNameFromString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ManagerName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of manager requested from a string. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function does not try to compare the full string for the sake of speed. Instead it'll check the first couple letters for a potential match. This function is also not case sensative. Providing the string "ac" will return an <a class="el" href="classMezzanine_1_1ActorManager.xhtml" title="A manager responsible for the storage and management of all actors in use.">ActorManager</a> value, for example. Additionally if it does not find a match it will throw an exception. So be careful about what you put into this. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a ManagerTypeName cooresponding to the string provided. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a864e3cac11928a602c1db28fa2d52ee2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ManagerBase::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configure Items requiring other Managers. </p>
<p>If you are using the <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a> this is called when Mezzanine::World::GameInit() is called. It is expected that by the time this is called either ManagerBase::ManagerBase(World*) or ManagerBase::SetGameWorld(World*) will have been called. This is where all configuration that requires atleast one other manager on the <a class="el" href="classMezzanine_1_1World.xhtml">Mezzanine::World</a> to exist.<br/>
<br/>
 Yes we know it is spelled wrong, but are Zs cooler anyway. </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1SceneManager.xhtml#a8a3b5cb55a06669d0fe64510c1b1a854">Mezzanine::SceneManager</a>, <a class="el" href="classMezzanine_1_1EventManager.xhtml#a2bf1969aadd0fb5a3da284423e44b081">Mezzanine::EventManager</a>, <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml#ab09c912dc48b7082bd07a536167bc3d3">Mezzanine::PhysicsManager</a>, <a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a4b4e77984e21e3eaa1c47772d2e9c6f4">Mezzanine::ResourceManager</a>, <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml#a15ddc7bb06cf1cf32cd4e641d3b7b34f">Mezzanine::CollisionShapeManager</a>, <a class="el" href="classMezzanine_1_1UIManager.xhtml#a51dc53c08ac8657133279e75fbce466a">Mezzanine::UIManager</a>, <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml#a4f76a6a37be800b1fc13195aa11cfd7a">Mezzanine::GraphicsManager</a>, <a class="el" href="classMezzanine_1_1MeshManager.xhtml#ac03c91bea88144bcfa420411bc85f0c7">Mezzanine::MeshManager</a>, <a class="el" href="classMezzanine_1_1ActorManager.xhtml#a3b5b383066473d09243d13ad702c4868">Mezzanine::ActorManager</a>, <a class="el" href="classMezzanine_1_1CameraManager.xhtml#a4b7f0d25f77306bca4b5c885e35363cc">Mezzanine::CameraManager</a>, <a class="el" href="classMezzanine_1_1TerrainManager.xhtml#abe9550c9c6565bbd0610dcaa20eedc0c">Mezzanine::TerrainManager</a>, <a class="el" href="classMezzanine_1_1InputManager.xhtml#a5fb8864bd711e1057ac1beb2aa2e2599">Mezzanine::InputManager</a>, <a class="el" href="classMezzanine_1_1TimerManager.xhtml#ac670fd396b7fb2b7f8d7c67bb95582ba">Mezzanine::TimerManager</a>, and <a class="el" href="classMezzanine_1_1Scripting_1_1iScriptingManager.xhtml#a14afbe51160461a761300ecb64b740dd">Mezzanine::Scripting::iScriptingManager</a>.</p>

</div>
</div>
<a class="anchor" id="ade516a30e6d24b4ffd1accf1b1efd948"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ManagerBase::IsInitialized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not this manager has been initialized. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this manager has been initialized, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2a1bfb2a137c6013a8a5e5fae4c4bb85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ManagerBase::PostMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This runs any callback that is required after the mainloop items are run. </p>
<p>This will return whatever the callback returns, which is true to end the main loop after this frame, or true to continue it. If no callback is set this simply returns true, as to not interupt the mainloop. <br/>
 This is a great Function to override in Manager classes where the complexity of callbacks is not required. This would make coding items that need to be performed at specific times easier. If you do that, it would be a good idea to call this version of the function, just in case a callback is set. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a false to end the main loop, or a true if the main loop should continue. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml#a73d12091631749914d4a1025c45d68b4">Mezzanine::GraphicsManager</a>.</p>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9e0f19b5472eab47fbcd986656838070"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ManagerBase::PreMainLoopItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This runs any callback that is required before the mainloop items are run. </p>
<p>This will return whatever the callback returns, which is true to end the main loop after this frame, or true to continue it. If no callback is set this simply returns true, as to not interupt the mainloop. <br/>
 This is a great Function to override in Manager classes where the complexity of callbacks is not required. This would make coding items that need to be performed at specific times easier. If you do that, it would be a good idea to call this version of the function, just in case a callback is set. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a false to end the main loop, or a true if the main loop should continue. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4ec52058f4c8a3f1c5fb20230b4fc301"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ManagerBase::SetPostMainLoopItems </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">ManagerBase::Callback</a>&#160;</td>
          <td class="paramname"><em>PostMainCallback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This assigns a function to be the callback function to run prior to the main loop. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PostMainCallback</td><td>This is a pointer to a function that returns a bool and accepts no arguments, this is in the form of a <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2" title="This makes working with Callback function pointer a bit easier.">ManagerBase::Callback</a>. If SetPosMainLoopItems is passed 0, NULL or a null pointer, the callback will be forgetten and will not attempt to be called. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a84dd669c15e9db08c9efbc84c4fa3b0b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ManagerBase::SetPreMainLoopItems </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">ManagerBase::Callback</a>&#160;</td>
          <td class="paramname"><em>PreMainCallback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This assigns a function to be the callback function to run prior to the main loop. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PreMainCallback</td><td>This is a pointer to a function that returns a bool and accepts no arguments, this is in the form of a <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2" title="This makes working with Callback function pointer a bit easier.">ManagerBase::Callback</a>. If SetPreMainLoopItems is passed 0, NULL or a null pointer, the callback will be forgetten and will not attempt to be called. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac71cd03e0a60427a1ee22637a3cc1b3e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ManagerBase::SetPriority </td>
          <td>(</td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>Priority_</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This gets the Priority of this manager. </p>
<p>This has no Set counterpart to allow the changing of a manager's priority. This is expected to be set by the manager, or expose a safe method to change it at that level. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a short int that represents the priority of the manager. Lower is executed first. </dd></dl>

<p>Definition at line <a class="el" href="managerbase_8cpp_source.xhtml#l00262">262</a> of file <a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ada3bad0fe77ff2fa7404eea7a5c16264"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ManagerBase::Initialized</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Simple bool indicating whether or not this manager has been initialized. </p>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00219">219</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab27f3f7458b9a6f2a08974d096125ed5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> Mezzanine::ManagerBase::PostMainLoop</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is a function pointer to the function that should be called after running Main Loop Items. </p>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00210">210</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1652110258237bc313a02757229d0f47"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab23a9aa27c4e3cb58d902a149d3c6de2">Callback</a> Mezzanine::ManagerBase::PreMainLoop</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is a function pointer to the function that should be called before running Main Loop Items. </p>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00206">206</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>

</div>
</div>
<a class="anchor" id="a96fb02bf2f4e8b4afe70dedd0d8c6ac9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">short int Mezzanine::ManagerBase::Priority</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is a weighting used by the main loop to decide what order the managers should be called in. </p>
<p>A lower number gets called earlier in the Main loop. By default rendering the graphics occurs at priority 0. </p>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00215">215</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae619b4bd732d7345e0ef59ecde6d03cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a>* Mezzanine::ManagerBase::TheEntresol</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The actual pointer to the world. </p>

<p>Definition at line <a class="el" href="managerbase_8h_source.xhtml#l00202">202</a> of file <a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="managerbase_8h_source.xhtml">managerbase.h</a></li>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="managerbase_8cpp_source.xhtml">managerbase.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Jun 20 2013 21:56:58 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
