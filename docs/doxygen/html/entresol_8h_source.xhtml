<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/sqeaky/Code/Mezzanine/Mezzanine/src/entresol.h Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_282391f6f4177160a7bfc5213c65158e.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_b044052e4980a71349e081a68f99b09b.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">entresol.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _entresol_h</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _entresol_h</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span><span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> @mainpage Mezzanine</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> The Mezzanine Engine isn&#39;t really an engine. It is glue holding other code and libraries together. It is a series of other open source libraries (sometimes</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> less user friendly, and almost always more sophistciated) that are held together in a single, hopefully, unchanging API. Others have attempted</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> to do things like this before. Usually simple mistakes are made along the way that have huge negative impacts later in the design. A common mistake</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> code is to copy and paste from open source projects with no plans for maintainability. This means that those projects get all the features and bugs</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> from when they copied, without updates, new features and bugfixes since they started integrating the code. We too have copy and pasted, however we are</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> keeping it up to date, and have a plan for upgrading each component we have brought in.</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> This is no simple way to guarantee access to the most up to date libraries, this means there will meaningful work on integration. Many linux distributions try</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> to keep the most up to date shared libraries around, but what about when they don&#39;t ship what you need, ship something broken or an older library. What about</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> Windows and Mac OS X which make no attempt to keep these kinds of software up to date. What if you do manage to get and stay up to date, then you still have to</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> work on a confusing compiler and linker options, Code::Blocks or Visual Studio aren&#39;t going to set that up for you. The Mezzanine Engine project depends on a dozen</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> or more libaries, so would your project if it had high performance 3d graphics, easy to use 3d physics integrated with the graphics and 3d positional audio ready</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> to run on Windows, Linux and Mac OS X. We are figuring it out once, getting it right ( if we aren&#39;t, tell us and we will fix it ), so it doesn&#39;t need to be done again</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> and again, for each game made.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> This is still in heavy development and is not in usable condition for all systems. Currently the synchronization of 3d graphics and physics works great. But,</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> some of the more advanced features of both physics and graphics to do not yet work. There are a number of other features that are in varied states of development.</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> If we do our jobs right this will save time and effort making, updating and porting games between a variety of platforms. If you link only</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> against this library, not a single line of your standard compliant C++ code should need to change between platforms. At this early stage we are proving the</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> concept with &quot;Catch!&quot; our first sample game. It Currently runs on Linux, Windows and Mac OS X with an Identical</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> codebase. When we are done with &quot;Catch!&quot; We want it to have one codebase (with no messy \#IFDEFs in game code for compatibility), and downloadable in the Iphone</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> app store, in the Android Marketplace, on the PS3, Wii, downloadable on Steam, and in a variety of linux repositories.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> @section expectations What can I expect here</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> This is the Doxygen API documentation for the Mezzanine Engine. This is a document for programmers to use as reference. With just a few clicks this should allow</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> a technically oriented person find</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> If you want to know more about doxygen please see: http://www.stack.nl/~dimitri/doxygen/</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> To get the latest news on development or more information that isn&#39;t technical checkout: http://www.blacktoppstudios.com</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> Here we will detail the engine structure and different classes and datatypes, but some of these need an update.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> @section enginestructure Engine Structure</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">  The engine is laid out in a variety of classes. Some classes are focal points for functionality and internally unify a number of components to do what they do, these</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">  managers sometimes conceal a large amount of complexity. Managers generally have a very rigid in the structure of the engine and these are generally managed by the</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">  world and are rarely manaully created. This is where are the logic that says how something is done exists, for example &quot;how does something get drawn on the screen?&quot;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">  or &quot;how do you detect if to objects are colliding?&quot;. In general there is only one of each manager and it inherits from the @ref Mezzanine::Singleton class.</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">  Other classes are more similar to data, things like the @ref Mezzanine::Vector3 and the @ref Mezzanine::Quaternion. You can create these things whenever you like and generally have good</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">  support for integrating into a variety of system. In these classes there is a good deal of math and conversion routines. These are commonly passed around by more</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">  sophisticated classes for a variety of reasons.</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">  There are some classes that are somewhere between data and singular large-scale aggregration of functionality in managers. The functionality is carefully controlled</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">  and most commonly created, deleted and otherwised managed through managers. Many of these classes like the @ref Mezzanine::Light or @ref Mezzanine::ActorRigid are present inside the game</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">  simulation as well as having a presence as</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">  some utility classes Other class that really are just convient places to put functions, things like the @ref Mezzanine::ActorRigidDeSerializer and the @ref Mezzanine::StringTool are good</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">  examples of these logical grouping of functions. Finally, there are few</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">  @subsection managers Managers</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">   A manager is simply a logical grouping of functionality. A number of them exist covering all the major functionality that a game using the the Mezzanine engine would</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">   need in most situations.</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">   All Managers inherit from ManagerBase. They all support the basic callback and priority functionality because of this.</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">   @subsubsection managerlist A list of Managers in the Mezzanine</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    - @ref Mezzanine::ActorManager - Store and allows retrieval of Actors, when an actor is in this it is part of the game simulaiton</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    - @ref Mezzanine::AudioManager - Play, stop and otherwise work with sound and music.</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    - @ref Mezzanine::CameraManager - Add/remove Multiple camera&#39;s from the world</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    - @ref Mezzanine::CollisionShapeManager - Store/create/delete shapes that can be used for physics and collision detection</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">    - @ref Mezzanine::EventManager - Get messages and events from the operating system (and user, but that will change)</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">    - @ref Mezzanine::GraphicsManager - Adjust Resolution, refresh rate, color depth and thing like that.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">    - @ref Mezzanine::MeshManager - Manage Meshes that can be rendered to the the screen.</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">    - @ref Mezzanine::NetworkManager - Manages the transmission and retreival of network traffic.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    - @ref Mezzanine::PhysicsManager - Control settings that have to do with the physics simulation.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    - @ref Mezzanine::ResourceManager - Loads Files and locate them in an efficient way.</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">    - @ref Mezzanine::SceneManager - Control Lighting, skyboxes, particle effects etc...</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    - @ref Mezzanine::TimerManager - Create and delete a variety of timers.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    - @ref Mezzanine::TerrainManager - Work with terrain components like height maps.</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    - @ref Mezzanine::UIManager - Create and manage buttons, scrollbars and other widgets.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    @subsubsection The World, A manager of managers</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">        A thorough description needs to go here</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">  @subpage mainloop1 &quot;Main Loop Flow&quot;</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">  @ref Mezzanine::World &quot;World - It integrates everything&quot;</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">  @ref Mezzanine::EventManager &quot;Events - Handling messages, event and interupts from the outisde&quot;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">  @subpage actorcontainer1 &quot;Actor Container - Keeping track of our in game objects&quot;</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"> @section Types Data Types</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">  @subsection CompoundTypes Compound Data Type</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">   @ref Mezzanine::ColourValue</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">   @ref Mezzanine::MetaCode &quot;Mezzanine::MetaCode - A unit of user input&quot;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">   @ref Mezzanine::Plane</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">   @ref Mezzanine::Quaternion</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">   @ref Mezzanine::Ray</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">   @ref Mezzanine::Transform</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">   @ref Mezzanine::Vector2</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">   @ref Mezzanine::Vector3</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">   @ref Mezzanine::Vector3WActor</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">  @subsection SimpleDataTypes Simple Data Types</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">   @ref Mezzanine::Character</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">   @ref Mezzanine::Integer</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">   @ref Mezzanine::Real</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">   @ref Mezzanine::String</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">   @ref Mezzanine::Whole</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">   @par There are also a variety of enumerations. Aspect Ratio...</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">   @todo Fill out the Simple Data Types with all the enumerations.</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> @section Sophisticated Sophisticated Systems</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">  @ref Mezzanine::ActorBase &quot;Actors - Items in the world&quot;</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">  @ref Mezzanine::EventBase</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">  @ref Mezzanine::GraphicsManager</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">  @ref XMLManual</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">  @ref LuaManual</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">  @ref Serialization</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"> @section Licensing Licensing Information</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">  @ref GPLLicense &quot;Mezzanine GNU Public License 3&quot;</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">  @ref OriginalpugixmlLicense &quot;XML MIT License&quot;</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> @page GPLLicense Mezzanine GNU Public License 3</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">  Here is a simple summary of the license terms. It is included at the top of every</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">  source and header file in the engine:</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">  \n \n</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">  @verbatim</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">  Â© Copyright 2010 - 2011 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">   This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">   The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">   We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">  @endverbatim</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">  \n \n</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">  Here is the contents of gpl.txt that comes in the docs/ folder of with every</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">  complete repository of the engine:</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">  \n \n</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">  @verbinclude gpl.txt</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">//And now for actual source code!</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#include &quot;stringtool.h&quot;</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#include &quot;crossplatform.h&quot;</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#include &quot;eventbase.h&quot;</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#include &quot;exception.h&quot;</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="enumerations_8h.xhtml" title="Any global enumerations shared between multiple classes is to be declared here.">enumerations.h</a>&quot;</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="datatypes_8h.xhtml" title="All the definitions for datatypes as well as some basic conversion functions are defined here...">datatypes.h</a>&quot;</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">#include &quot;vector3.h&quot;</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#include &quot;managerbase.h&quot;</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">#include &quot;singleton.h&quot;</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">class </span>ActorBase;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keyword">class </span>ActorManager;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">class </span>ActorContainerBase;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">class </span>AudioManager;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">class </span>EventManager;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">class </span>CameraManager;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">class </span>PhysicsManager;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">class </span>GameWindow;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">class </span>GraphicsManager;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">class </span>InputManager;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">class </span>ResourceManager;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">class </span>TimerManager;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">class </span>UIManager;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">class </span>MeshManager;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">class </span>CollisionShapeManager;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">class </span>PhysicsConstructionInfo;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">class </span>NetworkManager;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">class </span>SceneManager;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keyword">class </span>ManagerFactory;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">//Other forward declarations</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">//forward Declarations so that we do not need #include &quot;SDL.h&quot;</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">class </span>SDL_Surface;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">//forward Declarations so that we do not need #include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">namespace </span>Ogre</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;{</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">class </span>Root;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">class </span><a class="code" href="namespaceMezzanine_1_1Graphics.xhtml#a6938522e19376f3d97db95b6dc9efa0a" title="Used primarily by the graphics manager class during initialization.">RenderSystem</a>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">class </span>RenderWindow;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">class </span>ResourceGroupManager;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">class </span>SceneManager;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keyword">class </span>Camera;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">class </span>Viewport;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keyword">class </span>ParticleFXPlugin;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keyword">class </span>CgPlugin;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">/// @namespace Mezzanine</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">/// @brief The bulk of the engine components go in this namspace</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">/// @details This is where imporant classes like World, GraphicsManager, and</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">/// The eventmanager reside. For more detailed usage information please refer</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">/// to individual class documentation or the @ref index main page.</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">///////////////////////////////////////</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment"></span><span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">    /// @class Entresol</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">    /// @headerfile entresol.h</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">    /// @brief This is the main entry point for the entire library.</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">    /// @details The entresol coordinates and integrates all the underlying subsystems,</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">    /// Currently Ogre3d is used for 3d Graphics, Bullet is used for physics, and</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">    /// SDL is used for user input and window management. Games will need a</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">    /// container for all the playing pieces. It makes sense to tie all of this</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">    /// functionality into one core object.</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">    ///////////////////////////////////////</span></div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml">  311</a></span>&#160;<span class="comment"></span>    <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a> : <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml" title="This is a convenient base class intended to be used with classes that need to be singletons.">Singleton</a>&lt;Entresol&gt;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keyword">typedef</span> std::map&lt;String,ManagerFactory*&gt; ManagerFactoryMap;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <span class="keyword">typedef</span> ManagerFactoryMap::iterator ManagerFactoryIterator;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keyword">typedef</span> ManagerFactoryMap::const_iterator ConstManagerFactoryIterator;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="comment">//friend class PhysicsManager;</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="comment">//Used by the constructors</span><span class="comment"></span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">            /// @brief This is called by most of the constructors so that the is one unified place to have all the settings made.</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">            /// @param PhysicsInfo All the info needed to initialize the physics subsystem.</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">            /// @param SceneType This is the type of Scene Manager to be created.</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">            /// @param EngineDataPath The directory where engine specific data (as opposed to game/application data) reside, and it include the plugins file and potentially othe low level resources.</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">            /// @param LogFileName This is the place that log messages get sent to. This is relative to the working directory of the application/game.</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">            /// @param ManagerToBeAdded This is a vector of manager pointers that will be used instead of creating the default ones</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> Construct( <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a>&amp; PhysicsInfo,</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                            <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SceneType,</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                            <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; EngineDataPath,</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                            <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; LogFileName,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                            <span class="keyword">const</span> std::vector &lt;ManagerBase*&gt;&amp; ManagerToBeAdded );</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">            /// @brief Used to intialize from XML</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">            /// @param EngineDataPath The directory where engine specific data (as opposed to game/application data) reside, and it include the plugins file and potentially othe low level resources.</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">            /// @param ArchType Should This be looking for raw or zip or whatever kind of files.</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">            /// @param InitializerFile The Mezzanine MXI file to use to initialize the engine.</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> ConstructFromXML(  <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; EngineDataPath,</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b" title="Used to indicate what kind of resources the Entrosol should look for.">ArchiveType</a> ArchType,</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; InitializerFile );</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="keywordtype">void</span> SanityChecks();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="keywordtype">void</span> OneTimeMainLoopInit();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordtype">bool</span> VerifyManagerInitializations();</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">            /// @brief Used to track Ogre specific details for the statically linked Particle plugin</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment"></span>            Ogre::ParticleFXPlugin* SubSystemParticleFXPlugin;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">            /// @brief Used to track Ogre specific details for the statically linked CG plugin</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment"></span>            Ogre::CgPlugin* SubSystemCgPlugin;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="comment">//Settings for Engine Functionality</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> TargetFrameLength;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> FrameTime;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="comment">//Used to break the mainloop</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keywordtype">bool</span> ManualLoopBreak;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">            /// @brief This is a map containing all the registered manager factories.</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment"></span>            ManagerFactoryMap ManagerFactories;<span class="comment"></span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">            /// @brief This is a listing of the priority and the Manager, and a pointer to the manager.</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"></span>            std::list&lt; ManagerBase* &gt; ManagerList;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="comment">// A pointer to the function that actually commits log messages.</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            void (*LogCommitFunc)();</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment"></span>        <span class="comment">// Creation and Deletion methods</span><span class="comment"></span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">            /// @brief Initializer file constructor.</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">            /// @details This function expects an &quot;.mxi&quot; (Mezzanine XML Initializer) file.</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">            /// If the file provided is not one of this type this function will throw an exception. @n @n</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">            /// When initializing factories in the XML file this constructor does not initialize any additional manager factories, so if they are called this will throw an exception.</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">            /// @param EngineDataPath The directory where engine specific data resides. This is where it will search for the specified initializer file.</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">            /// @param ArchType The type of archive at the path provided.</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">            /// @param InitializerFile The file that describes how to initialize Mezzanine.</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; EngineDataPath, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b" title="Used to indicate what kind of resources the Entrosol should look for.">ArchiveType</a> ArchType, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; InitializerFile = <span class="stringliteral">&quot;Mezzanine.mxi&quot;</span>);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">            /// @brief Factory and initializer file constructor.</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">            /// @details This function expects an &quot;.mxi&quot; (Mezzanine XML Initializer) file.</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">            /// If the file provided is not one of this type this function will throw an exception. @n @n</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">            /// Also default factories are already added and thus do not need to be included in the Factory vector.</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">            /// @param CustomFactories A vector containing the additional factories to be registered before initializing the engine.</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">            /// @param EngineDataPath The directory where engine specific data resides. This is where it will search for the specified initializer file.</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">            /// @param ArchType The type of archive at the path provided.</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">            /// @param InitializerFile The file that describes how to initialize Mezzanine.</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a>(std::vector&lt;ManagerFactory*&gt;&amp; CustomFactories, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; EngineDataPath, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b" title="Used to indicate what kind of resources the Entrosol should look for.">ArchiveType</a> ArchType, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; InitializerFile = <span class="stringliteral">&quot;Mezzanine.mxi&quot;</span>);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">            /// @brief Descriptive constructor With Manager Pointers</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">            /// @details This constructor allows for an easier way to define the boundaries for items moving about inside the world.</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">            /// @param PhysicsInfo All the info needed to initialize the physics subsystem.</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">            /// @param SceneType A cue to the scenemanager as to how rendering should occur.</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">            /// @param EngineDataPath The directory where engine specific data (as opposed to game/application data) reside, and it include the plugins file and potentially other low level resources.</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">            /// @param LogFileName This is the place that log messages get sent to.</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a>(  <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a>&amp; PhysicsInfo,</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SceneType,</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; EngineDataPath,</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; LogFileName = <span class="stringliteral">&quot;Mezzanine.log&quot;</span> );</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">            /// @brief Descriptive constructor</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">            /// @details This constructor allows for an easier way to define the boundaries for items moving about inside the world.</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">            /// This constructor provides no default arguments, but allows for maximum customization. In addition to everything the other</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">            /// constructors this one can accept a vector of pointers to managers. They will be add</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">            /// @param PhysicsInfo All the info needed to initialize the physics subsystem.</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">            /// @param PluginsFileName The filename of the plugins file to be loaded. This is relative to the EngineDataPath.</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">            /// @param EngineDataPath The directory where engine specific data (as opposed to game/application data) reside, and it include the plugins file and potentially othe low level resources.</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">            /// @param LogFileName This is the place that log messages get sent to.</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">            /// @param SceneType A cue to the scenemanager as to how rendering should occur.</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">            /// @param ManagerToBeAdded This is a vector of manager pointers that will be used instead of creating new ones.</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a>(  <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a>&amp; PhysicsInfo,</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; SceneType,</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; EngineDataPath,</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; LogFileName,</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                       <span class="keyword">const</span> std::vector &lt;ManagerBase*&gt;&amp; ManagerToBeAdded);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">            /// @brief Default constructor</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">            /// @details This simply performs the same work as the descriptive constructor with some sane, but small, limits. It will give you a world which expands for 100 units from the Origin, and only allows 10 Actors</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">            /// @warning Do not make a new world if one already exists. This can only cause problems</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a>();</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">            /// @brief Deconstructor</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">            /// @details This Tears down all the items created by the world, and safely frees any graphical resources, we will also delete any Objects passed into the</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">            /// world by pointer. We will not delete any pointers we pass out (like from the Events from the Event manager)</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment"></span>            ~<a class="code" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a>();</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment"></span>        <span class="comment">// Utility</span><span class="comment"></span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment"></span><span class="comment"></span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">            /// @brief Pauses all animations, particles, and object movement throughout the world.</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">            /// @param Pause Pauses the world if true, unpauses if false.</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> PauseWorld(<span class="keywordtype">bool</span> Pause);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment"></span>        <span class="comment">// Logging</span><span class="comment"></span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment"></span><span class="comment"></span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">            /// @brief Used to indicate the frequency of logging.</span></div>
<div class="line"><a name="l00444"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">  444</a></span>&#160;<span class="comment"></span>            <span class="keyword">enum</span> <a class="code" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264" title="Used to indicate the frequency of logging.">LoggingFrequency</a></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            {</div>
<div class="line"><a name="l00446"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a6bc527e961e4bde5c17eca0ac07cab7b">  446</a></span>&#160;                LogNever = 0,               <span class="comment">///&lt; Never log</span></div>
<div class="line"><a name="l00447"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a10965bf83c466474c47a1a8e17b31a06">  447</a></span>&#160;<span class="comment"></span>                LogOncePerFrame = 1,        <span class="comment">///&lt; The Default, log each and every frame</span></div>
<div class="line"><a name="l00448"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a8896aa8f099eae3f8fb9835ffb29fc54">  448</a></span>&#160;<span class="comment"></span>                LogOncePerXFrames = 2,      <span class="comment">///&lt; Log once per every Xth frame, X is the FrequencyCounter Value passed in with this</span></div>
<div class="line"><a name="l00449"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a9db31202f65617e64500625046ebda88">  449</a></span>&#160;<span class="comment"></span>                LogOncePerXSeconds = 3      <span class="comment">///&lt; Log once per every Xth second, X is the FrequencyCounter Value passed in with this</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"></span>            };</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">            /// @brief Set how often log message should be commited to disk (or network, or whatever).</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">            /// @param HowOften The actual setting for how often.</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">            /// @param FrequencyCounter For settings that use X this is X, this defaults to 5</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">            /// @details By default this is set to LogOncePerFrame. \n \n</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">            /// There are a series of functions internally that represent each of the LoggingFrequency values. When</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">            /// You pass in one of these values you are setting which of these functions will be called. This way the</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">            /// only cost that is guaranteed to be incurred is the dereferencing of a function pointer (constant time).</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">            /// Additionally the members of the enum are sorted by the amount of time they are expected to take to run,</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">            /// of course your performance will vary, the best way to know how it will perform is to test.</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> SetLoggingFrequency(LoggingFrequency HowOften, <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> FrequencyCounter = 5);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">            /// @brief Returns the frequency of logging commits</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">            /// @return A Entresol::LoggingFrequency containing the requested information.</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment"></span>            LoggingFrequency GetLoggingFrequency();</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">            /// @brief Forces the log to commit to disk (or whereever)</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">            /// @details Any outstanding log messages or entries into the logstream will be written in chronological order to</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">            /// to the appropriate place.</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> CommitLog();</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">            /// @brief Runtime event and message logging.</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">            /// @param Message This is what will be streamed to the log</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">            /// @details This also gathers any outstanding Log messages from any subsystem. Currently the Graphics subsystem (Ogre3d) and the sound subsystem (cAudio) are the</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">            /// Only ones to produce meaningul log messages.</span></div>
<div class="line"><a name="l00476"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#a96f894e20225d43643091c3731acc35d">  476</a></span>&#160;<span class="comment"></span>            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keywordtype">void</span> Log(<span class="keyword">const</span> T&amp; Message)</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                { this-&gt;LogString(StringTools::ConvertToString(Message)); }</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">            /// @brief Force any outstanding logs to be commited to logs</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> Log();</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">            /// @brief This is another way to put data in the log.</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">            /// @details The contents of this will be commited to the log as per the logging frequency.</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">            /// Because the entry of this data into the actual log file(or whatever destination) is delayed, do not use this for data that is likely</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">            /// to be required to debug something the frame something crashes. However, for other kinds of debugging data and creating in game logs</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">            /// and gameworld recreations.</span></div>
<div class="line"><a name="l00487"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Entresol.xhtml#ae11d3d584419c09ce38aa1c4b646cf86">  487</a></span>&#160;<span class="comment"></span>            std::stringstream <a class="code" href="classMezzanine_1_1Entresol.xhtml#ae11d3d584419c09ce38aa1c4b646cf86" title="This is another way to put data in the log.">LogStream</a>;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">            /// @brief Log String directly with no conversion</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">            /// @param message The string to log</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> LogString(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; message);</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment"></span>        <span class="comment">// Timing system methods</span><span class="comment"></span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">            /// @brief Retrieves the amount of milliseconds we would like each iteration of the Main Loop to be</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">            /// @details In practice harI&#39;ve done some more testing, started out digging through the code to see if there was anything wrong, there seemed to be random extra words inside our code that the compiler didn&#39;t mind that shouldn&#39;t be there.  like there was a &quot; Schedule : &quot; right after a line where a pointer was initialized.  I only found such occurrences in gamebase.cpp though, removed them and did two tests.  First test I was just randomly clicking and then I inadvertently threw the metal sphere down into the abyss, the sphere was really close to the camera when this happened, about to go over.  Second time I ran the game trying to click stuff, I simply couldn&#39;t click anything.  I even tried zooming in on the robots, although I can only get so close to them before I have to tamper with the camera, which I haven&#39;t done yet, but there were no results with the Robots.  The third time I was successfully able to stop two spheres and move them around the platform quite smoothly.  These spheres were slightly further away from the camera compared to the first run.  I stopped the wooden sphere and the second metal sphere.  I included a screen shot and a copy of my log for the third run.  The spheres in the screenshot are both in a rest position.dware performance or timing concerns can cause this goal to be unnaitanable or trivially easy. The main loop with actually</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">            /// pause execution until this amount of time is reach is main loop iteration, However, the mainloop will always skip waiting if hardware is overburdened.</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">            /// @return This returns a Whole with the current Value</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment"></span>            <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> GetTargetFrameTime();</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">            /// @brief This sets a new Target Time</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">            /// @details This sets a new time for each frame. Each iteration of the game loop will take around this long to run, but rarely exactly this long. Setting this value</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">            /// Higher can results in power savings (battery life), but setting it too High can cause choppiness. Settings this value higher can result in smoother gameplay, but</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">            /// set it too high, and system resources could becom completely taxed and power will be wasted.</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">            /// @param NewTargetTime The new length of time, in milliseconds.</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">            /// @warning Setting vary low or very High values could cause unknown errors, This is on our todo list of issues to fix.</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> SetTargetFrameTime(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a>&amp; NewTargetTime);</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">            /// @brief This sets a new Target Frame Rate</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment">            /// @details This sets a new time for each frame. This divides 1000 by the NewFrameRate, drops and floating point amount and uses that amount in an call to</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">            /// Entresol::SetTargetFrameTime. For example a target frame rate of 40 with cause each frame to take 25 milliseconds, and a Framerate of 70 would take 14 ms</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment">            /// @param NewFrameRate The new desired frame rate.</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">            /// @warning Setting vary low or very High values could cause unknown errors, This is on our todo list of issues to fix.</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> SetTargetFrameRate(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a>&amp; NewFrameRate);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">            /// @brief Gets the amount of time since the last time Rendering began.</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">            /// @details This returns, in milliseconds the amount of time since the frame started (since the last rendering began)</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">            /// @return This returns a whole number which can be used to aid in the timimg of various algorithms.</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment"></span>            <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> GetFrameTime();</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">            /// @brief Sets the amount of time since the last time Rendering began.</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">            /// @param FrameTime_ This is the amount of time in milliseconds.</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">            /// @details This sets, in milliseconds the amount of time since the frame started (since the last rendering began). Don&#39;t set this carelessely can screw up a lot of</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">            /// stuff, for the most part this should be by the rendering manager during the rendering process.</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> SetFrameTime(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a>&amp; FrameTime_);</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment"></span>        <span class="comment">// Initialization</span><span class="comment"></span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">            /// @brief This initializes all the managers currently in the world.</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">            /// @param CallMainLoop Should the main loop be called.</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> EngineInit(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; CallMainLoop = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment"></span>        <span class="comment">// Main Loop</span><span class="comment"></span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">            /// @brief This Function house the main loop</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">            /// @details By default this is called from the function World.GameInit() this is were the bulk of the simulation is ran from, see @ref mainloop1</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> MainLoop();</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">            /// @brief This commits the log stream to the log</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment">            /// @details This is called automatically at the end of each main loop iteration. You only need to call it if you are using your own main loop.</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DoMainLoopLogging();</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">            /// @brief This makes the main loop end after it&#39;s current iteration.</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">            /// @details If called while not in the main loop, it will simply cause the next call to the main loop to do a single iteration and then exit.</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> BreakMainLoop();</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment"></span>        <span class="comment">// Factory Management</span><span class="comment"></span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">            /// @brief Adds/registers a manager factory with this world, allowing it to be constructed through this API.</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">            /// @param ToBeAdded The manager factory to be added.</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> AddManagerFactory(<a class="code" href="classMezzanine_1_1ManagerFactory.xhtml" title="This is a base class for factories that construct the managers the engine uses.">ManagerFactory</a>* ToBeAdded);</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">            /// @brief Removes a manager factory from this world.</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">            /// @param ToBeRemoved A pointer to the manager factory that is to be removed.</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveManagerFactory(<a class="code" href="classMezzanine_1_1ManagerFactory.xhtml" title="This is a base class for factories that construct the managers the engine uses.">ManagerFactory</a>* ToBeRemoved);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">            /// @brief Removes a manager factory from this world.</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">            /// @param ImplName The name of the manager implementation created by the factory to be removed.</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveManagerFactory(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; ImplName);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">            /// @brief Removes and destroys a manager factory in this world.</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">            /// @param ToBeRemoved A pointer to the manager factory that is to be removed and destroyed.</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyManagerFactory(<a class="code" href="classMezzanine_1_1ManagerFactory.xhtml" title="This is a base class for factories that construct the managers the engine uses.">ManagerFactory</a>* ToBeRemoved);</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">            /// @brief Removes and destroys a manager factory in this world.</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">            /// @param ImplName The name of the manager implementation created by the factory to be removed and destroyed.</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyManagerFactory(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; ImplName);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment">            /// @brief Destroys all manager factories in this world.</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment">            /// @warning The destruction of manager factories should only be done after the corresponding managers have been destroyed, otherwise this will cause an exception.</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyAllManagerFactories();</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">            /// @brief Adds all the default manager factories provided by the engine to the world.</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> AddAllEngineDefaultManagerFactories();</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment"></span>        <span class="comment">// Upper Management</span><span class="comment"></span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">            /// @brief Creates a new manager.</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">            /// @param ManagerImplName The name of the manager implementation to create.</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">            /// @param Params A list of name-value pairs for the params that are to be used when creating the manager.</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">            /// @param AddToWorld Whether or not to add the created manager to the world after creation.</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">            /// @return Returns a pointer to the created manager.</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* CreateManager(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; ManagerImplName, <a class="code" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28" title="This is a datatype mostly used for describing settings or parameters that can&#39;t be declared in advanc...">NameValuePairList</a>&amp; Params, <span class="keywordtype">bool</span> AddToWorld = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">            /// @brief Creates a new manager.</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">            /// @param ManagerImplName The name of the manager implementation to create.</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment">            /// @param XMLNode An XML node containing all construction and initialization info for the manager to be created.</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="comment">            /// @param AddToWorld Whether or not to add the created manager to the world after creation.</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="comment">            /// @return Returns a pointer to the created manager.</span></div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* CreateManager(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; ManagerImplName, <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode, <span class="keywordtype">bool</span> AddToWorld = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">            /// @brief Destroys a manager.</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">            /// @param ToBeDestroyed The manager to be destroyed.</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyManager(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ToBeDestroyed);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment">            /// @brief Destroys all managers currently in the world.</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">            /// @warning Do not call this in anything that is run during the main loop.  If you do you will have a bad time.</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyAllManagers();</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">            /// @brief This adds a manager, in the correct order, to the list that the world calls on</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">            /// @details Internally the world had a list of managers that is sorted by the ManagerBase::Priority. Everytime a manager is added,</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">            /// the list is searched for the sorted point to insert the manager at.</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">            /// @param ManagerToAdd The pointer to the manager to be added</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> AddManager(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ManagerToAdd);</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">            /// @brief This removes a manager by finding the matching pointer.</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">            /// @details Currently this just iterates through the list looking for the matching pointer, at some future point</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">            /// this could replaced with more sophisticated algorithm, but for now assume this operates in linear time.</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment">            /// @param ManagerToRemove A pointer to the manager to be removed</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveManager(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ManagerToRemove);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="comment">            /// @brief This removes a manager of a specific type from the list</span></div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">            /// @details This starts at the beginning (should be the lowest priority)of the list and iterates through looking for a matching type, at some future point</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">            /// this could replaced with more sophisticated algorithm, but for now assume this operates in linear time.</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">            /// @param ManagersToRemoveType The ManagerBase::ManagerTypeName of the manager to remove.</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">            /// @param WhichOne If not removing the first/only manager of the given type, which one by count are you erasing.</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveManager(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a>&amp; ManagersToRemoveType, <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> WhichOne);</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">            /// @brief This is will find the manager of a given type</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">            /// @details Specifically this will iterate from lowest priority to highest priority, and return a pointer to the first Manager</span></div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment">            /// with a matching type found. If you specify WhichOne, it will the Nth+1 in the list matching the type (kind of like array subscript).</span></div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">            /// @param ManagersToRemoveType</span></div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="comment">            /// @param WhichOne If not getting the first/only manager of the given type, get one.</span></div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">            /// @return This returns a pointer to a ManagerBase, or a NULL pointer if no matching manager exists</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* GetManager(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a>&amp; ManagersToRemoveType, <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> WhichOne=0);</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment">            /// @brief Changes a Manager&#39;s time of execution.</span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment">            /// @details Searches through the Manager list and removes any previous entries to the changing manager, and add a new entry in the correct location.</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment">            /// @param ManagerToChange A pointer to the manager that needs to be changed</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">            /// @param Priority_ the new desire priority/execution order of the Manager</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> UpdateManagerOrder(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ManagerToChange, <span class="keywordtype">short</span> <span class="keywordtype">int</span> Priority_);</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment">            /// @brief This forces the list of managers to be resorted.</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="comment">            /// @details This should only need to be called if the Priority attribute of a manager in the list has changed. This sorts the list of managers</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> UpdateManagerOrder();</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">            /// @brief This gets the ActorManager from the manager list.</span></div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple ActorManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">            /// @return This returns a pointer to a ActorManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ActorManager.xhtml" title="A manager responsible for the storage and management of all actors in use.">ActorManager</a>* GetActorManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">            /// @brief This gets the AudioManager from the manager list.</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple AudioManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment">            /// @return This returns a pointer to a AudioManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>* GetAudioManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="comment">            /// @brief This gets the CameraManager from the manager list.</span></div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple CameraManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="comment">            /// @return This returns a pointer to a CameraManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>* GetCameraManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">            /// @brief This gets the CollisionShapeManager from the manager list.</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple CollisionShapeManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment">            /// @return This returns a pointer to a CollisionShapeManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a>* GetCollisionShapeManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment">            /// @brief This gets the EventManager from the manager list.</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple EventManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">            /// @return This returns a pointer to a EventManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1EventManager.xhtml" title="This is a container for Events and facilitates the transfer of data.">EventManager</a>* GetEventManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">            /// @brief This gets the GraphicsManager from the manager list.</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple GraphicsManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="comment">            /// @return This returns a pointer to a GraphicsManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1GraphicsManager.xhtml" title="This is intended to store basic graphics setting for the user.">GraphicsManager</a>* GetGraphicsManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="comment">            /// @brief This gets the InputManager from the manager list.</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple InputManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="comment">            /// @return This returns a pointer to a InputManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1InputManager.xhtml" title="This is the manager responsible for the handling of input devices and events.">InputManager</a>* GetInputManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="comment">            /// @brief This gets the MeshManager from the manager list.</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple MeshManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment">            /// @return This returns a pointer to a MeshManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1MeshManager.xhtml" title="This manager handles the storage, generation, and query of of Graphics Meshes.">MeshManager</a>* GetMeshManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="preprocessor">#ifdef MEZZNETWORK</span></div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="preprocessor"></span><span class="comment">            /// @brief This gets the NetworkManager from the manager list.</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment"></span><span class="comment">            /// @param WhichOne If you have multiple NetworkManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment"></span><span class="comment">            /// @return This returns a pointer to a NetworkManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment"></span>            NetworkManager* GetNetworkManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="preprocessor"></span><span class="comment">            /// @brief This gets the PhysicsManager from the manager list.</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment"></span><span class="comment">            /// @param WhichOne If you have multiple PhysicsManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment"></span><span class="comment">            /// @return This returns a pointer to a PhysicsManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1PhysicsManager.xhtml" title="This is simply a place for storing all the Physics Related functions.">PhysicsManager</a>* GetPhysicsManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment">            /// @brief This gets the SceneManager from the manager list.</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple SceneManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="comment">            /// @return This returns a pointer to a SceneManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>* GetSceneManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="comment">            /// @brief This gets the ResourceManager from the manager list. These are responsible for reading and writing files on the disk.</span></div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple ResourceManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment">            /// @return This returns a pointer to a ResourceManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ResourceManager.xhtml" title="This is the manager responsible for the loading and unloading of files.">ResourceManager</a>* GetResourceManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="comment">            /// @brief This gets the TimerManager from the manager list.</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple TimerManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment">            /// @return This returns a pointer to a TimerManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1TimerManager.xhtml" title="A manager responsible for the updating of all timers in use by this engine.">TimerManager</a>* GetTimerManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment">            /// @brief This gets the UIManager from the manager list.</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">            /// @param WhichOne If you have multiple UIManagers this will choose which one to return.</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">            /// @return This returns a pointer to a UIManager, or a NULL pointer if no matching manager exists.</span></div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a>* GetUIManager(<span class="keyword">const</span> <span class="keywordtype">short</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;WhichOne=0);</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    };<span class="comment">//Entresol</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed May 8 2013 23:33:48 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
