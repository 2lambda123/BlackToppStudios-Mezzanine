<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Audio::Sound Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Audio.xhtml">Audio</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml">Sound</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1Audio_1_1Sound-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Audio::Sound Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is an instance of a sound that can be played and manipulated.  
 <a href="classMezzanine_1_1Audio_1_1Sound.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="sound_8h_source.xhtml">sound.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Audio::Sound:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Audio_1_1Sound__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad0739c73fe497ad407642da5597a7599"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ad0739c73fe497ad407642da5597a7599">Sound</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;SoundName, <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;FileName, <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Group, <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295e">Audio::SoundType</a> SType)</td></tr>
<tr class="memdesc:ad0739c73fe497ad407642da5597a7599"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#ad0739c73fe497ad407642da5597a7599">More...</a><br/></td></tr>
<tr class="separator:ad0739c73fe497ad407642da5597a7599"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aed211bc488b29b38fef7c54c4a7952"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a2aed211bc488b29b38fef7c54c4a7952">~Sound</a> ()</td></tr>
<tr class="memdesc:a2aed211bc488b29b38fef7c54c4a7952"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor.  <a href="#a2aed211bc488b29b38fef7c54c4a7952">More...</a><br/></td></tr>
<tr class="separator:a2aed211bc488b29b38fef7c54c4a7952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59858396263b2f14fa937ff7c10011d7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a59858396263b2f14fa937ff7c10011d7">GetBaseVolume</a> () const </td></tr>
<tr class="memdesc:a59858396263b2f14fa937ff7c10011d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current volume of the sound source.  <a href="#a59858396263b2f14fa937ff7c10011d7">More...</a><br/></td></tr>
<tr class="separator:a59858396263b2f14fa937ff7c10011d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6a79c5326a7a36b39f86604b62ccf98"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ac6a79c5326a7a36b39f86604b62ccf98">GetCompressedAudioSize</a> () const </td></tr>
<tr class="memdesc:ac6a79c5326a7a36b39f86604b62ccf98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the original compressed size of the sound.  <a href="#ac6a79c5326a7a36b39f86604b62ccf98">More...</a><br/></td></tr>
<tr class="separator:ac6a79c5326a7a36b39f86604b62ccf98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abba56b18b9bb7b65cc712b4093e87ab5"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#abba56b18b9bb7b65cc712b4093e87ab5">GetCurrentAudioPosition</a> () const </td></tr>
<tr class="memdesc:abba56b18b9bb7b65cc712b4093e87ab5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current position in the audio stream in bytes.  <a href="#abba56b18b9bb7b65cc712b4093e87ab5">More...</a><br/></td></tr>
<tr class="separator:abba56b18b9bb7b65cc712b4093e87ab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5ddf0b36c1ca5222a12dd64fa38e0ae"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ad5ddf0b36c1ca5222a12dd64fa38e0ae">GetCurrentAudioTime</a> () const </td></tr>
<tr class="memdesc:ad5ddf0b36c1ca5222a12dd64fa38e0ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current position in the audio stream in seconds.  <a href="#ad5ddf0b36c1ca5222a12dd64fa38e0ae">More...</a><br/></td></tr>
<tr class="separator:ad5ddf0b36c1ca5222a12dd64fa38e0ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad96c91677296147e532a84b53b39b6ee"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ad96c91677296147e532a84b53b39b6ee">GetCurrentCompressedAudioPosition</a> () const </td></tr>
<tr class="memdesc:ad96c91677296147e532a84b53b39b6ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current position in the original audio stream in bytes.  <a href="#ad96c91677296147e532a84b53b39b6ee">More...</a><br/></td></tr>
<tr class="separator:ad96c91677296147e532a84b53b39b6ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a1152854f359c18e225511407489512"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a5a1152854f359c18e225511407489512">GetDirection</a> () const </td></tr>
<tr class="memdesc:a5a1152854f359c18e225511407489512"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the objects direction.  <a href="#a5a1152854f359c18e225511407489512">More...</a><br/></td></tr>
<tr class="separator:a5a1152854f359c18e225511407489512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f6d586e0359db750b6976e360842a57"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a3f6d586e0359db750b6976e360842a57">GetDopplerStrength</a> () const </td></tr>
<tr class="memdesc:a3f6d586e0359db750b6976e360842a57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Doppler Strength of the sound.  <a href="#a3f6d586e0359db750b6976e360842a57">More...</a><br/></td></tr>
<tr class="separator:a3f6d586e0359db750b6976e360842a57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a472e29b7a9d1f86c92a2a7ba5413ffaf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a472e29b7a9d1f86c92a2a7ba5413ffaf">GetDopplerVelocity</a> () const </td></tr>
<tr class="memdesc:a472e29b7a9d1f86c92a2a7ba5413ffaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the doppler velocity vector.  <a href="#a472e29b7a9d1f86c92a2a7ba5413ffaf">More...</a><br/></td></tr>
<tr class="separator:a472e29b7a9d1f86c92a2a7ba5413ffaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2408f6fd02420ee3916306539542f78d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a2408f6fd02420ee3916306539542f78d">GetInnerConeAngle</a> () const </td></tr>
<tr class="memdesc:a2408f6fd02420ee3916306539542f78d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the inner cone angle of the sound source.  <a href="#a2408f6fd02420ee3916306539542f78d">More...</a><br/></td></tr>
<tr class="separator:a2408f6fd02420ee3916306539542f78d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcf417a8d48223bd828fa58eb0cb8861"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#adcf417a8d48223bd828fa58eb0cb8861">GetMaxDistance</a> () const </td></tr>
<tr class="memdesc:adcf417a8d48223bd828fa58eb0cb8861"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the distance at which sound attenuation will stop.  <a href="#adcf417a8d48223bd828fa58eb0cb8861">More...</a><br/></td></tr>
<tr class="separator:adcf417a8d48223bd828fa58eb0cb8861"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86d99fee746dab624364f7f1104d08e8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a86d99fee746dab624364f7f1104d08e8">GetMaxVolume</a> () const </td></tr>
<tr class="memdesc:a86d99fee746dab624364f7f1104d08e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Maximum volume of the sound source.  <a href="#a86d99fee746dab624364f7f1104d08e8">More...</a><br/></td></tr>
<tr class="separator:a86d99fee746dab624364f7f1104d08e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1907806223280339d63a484f9dc920b6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a1907806223280339d63a484f9dc920b6">GetMinDistance</a> () const </td></tr>
<tr class="memdesc:a1907806223280339d63a484f9dc920b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the distance at which sound attenuation will start.  <a href="#a1907806223280339d63a484f9dc920b6">More...</a><br/></td></tr>
<tr class="separator:a1907806223280339d63a484f9dc920b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e62fe64d44d5c707f92c143a786b181"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a3e62fe64d44d5c707f92c143a786b181">GetMinVolume</a> () const </td></tr>
<tr class="memdesc:a3e62fe64d44d5c707f92c143a786b181"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the minimum volume of the sound source.  <a href="#a3e62fe64d44d5c707f92c143a786b181">More...</a><br/></td></tr>
<tr class="separator:a3e62fe64d44d5c707f92c143a786b181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42cf89caec563b8fe86ef65234f2badf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a42cf89caec563b8fe86ef65234f2badf">GetName</a> () const </td></tr>
<tr class="memdesc:a42cf89caec563b8fe86ef65234f2badf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this sound.  <a href="#a42cf89caec563b8fe86ef65234f2badf">More...</a><br/></td></tr>
<tr class="separator:a42cf89caec563b8fe86ef65234f2badf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dd34a98907ed664b1cb94992925d518"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a9dd34a98907ed664b1cb94992925d518">GetOuterConeAngle</a> () const </td></tr>
<tr class="memdesc:a9dd34a98907ed664b1cb94992925d518"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the outer cone angle of the sound source.  <a href="#a9dd34a98907ed664b1cb94992925d518">More...</a><br/></td></tr>
<tr class="separator:a9dd34a98907ed664b1cb94992925d518"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9257d5e2a6233fda79a19a170f3f5533"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a9257d5e2a6233fda79a19a170f3f5533">GetOuterConeVolume</a> () const </td></tr>
<tr class="memdesc:a9257d5e2a6233fda79a19a170f3f5533"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the outer cone volume of the sound source.  <a href="#a9257d5e2a6233fda79a19a170f3f5533">More...</a><br/></td></tr>
<tr class="separator:a9257d5e2a6233fda79a19a170f3f5533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95876ef2df75b0f780c06b6abd0e134f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a95876ef2df75b0f780c06b6abd0e134f">GetPitch</a> () const </td></tr>
<tr class="memdesc:a95876ef2df75b0f780c06b6abd0e134f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the pitch of the sound source.  <a href="#a95876ef2df75b0f780c06b6abd0e134f">More...</a><br/></td></tr>
<tr class="separator:a95876ef2df75b0f780c06b6abd0e134f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4712b50c270c34446d238855b4a73f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a9d4712b50c270c34446d238855b4a73f">GetPosition</a> () const </td></tr>
<tr class="memdesc:a9d4712b50c270c34446d238855b4a73f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the objects position.  <a href="#a9d4712b50c270c34446d238855b4a73f">More...</a><br/></td></tr>
<tr class="separator:a9d4712b50c270c34446d238855b4a73f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89751ce8cd36d57b6214c89b7d6a878c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a89751ce8cd36d57b6214c89b7d6a878c">GetRolloffFactor</a> () const </td></tr>
<tr class="memdesc:a89751ce8cd36d57b6214c89b7d6a878c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Rolloff factor of the sound source.  <a href="#a89751ce8cd36d57b6214c89b7d6a878c">More...</a><br/></td></tr>
<tr class="separator:a89751ce8cd36d57b6214c89b7d6a878c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd8808de9c5b5e6b6f150d0d40455dc0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#afd8808de9c5b5e6b6f150d0d40455dc0">GetStrength</a> () const </td></tr>
<tr class="memdesc:afd8808de9c5b5e6b6f150d0d40455dc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Strength of the sound source.  <a href="#afd8808de9c5b5e6b6f150d0d40455dc0">More...</a><br/></td></tr>
<tr class="separator:afd8808de9c5b5e6b6f150d0d40455dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25ea84a94dc52a85adee4a407fb5147a"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a25ea84a94dc52a85adee4a407fb5147a">GetTotalAudioSize</a> () const </td></tr>
<tr class="memdesc:a25ea84a94dc52a85adee4a407fb5147a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the total size of the sound in memory.  <a href="#a25ea84a94dc52a85adee4a407fb5147a">More...</a><br/></td></tr>
<tr class="separator:a25ea84a94dc52a85adee4a407fb5147a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae467acd6b7fc2aa594de666bec4e6dab"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ae467acd6b7fc2aa594de666bec4e6dab">GetTotalAudioTime</a> () const </td></tr>
<tr class="memdesc:ae467acd6b7fc2aa594de666bec4e6dab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the total size of the sound in seconds.  <a href="#ae467acd6b7fc2aa594de666bec4e6dab">More...</a><br/></td></tr>
<tr class="separator:ae467acd6b7fc2aa594de666bec4e6dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afab6416b8ec5570568c2c1ebdc5cc398"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295e">Audio::SoundType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#afab6416b8ec5570568c2c1ebdc5cc398">GetType</a> () const </td></tr>
<tr class="memdesc:afab6416b8ec5570568c2c1ebdc5cc398"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the sound type of this sound.  <a href="#afab6416b8ec5570568c2c1ebdc5cc398">More...</a><br/></td></tr>
<tr class="separator:afab6416b8ec5570568c2c1ebdc5cc398"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac612c81165beadf27da635095bd82bb2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ac612c81165beadf27da635095bd82bb2">GetVelocity</a> () const </td></tr>
<tr class="memdesc:ac612c81165beadf27da635095bd82bb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the objects velocity.  <a href="#ac612c81165beadf27da635095bd82bb2">More...</a><br/></td></tr>
<tr class="separator:ac612c81165beadf27da635095bd82bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6fe43760b1957e2193a6ff7516d47af"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ac6fe43760b1957e2193a6ff7516d47af">GetVolume</a> () const </td></tr>
<tr class="memdesc:ac6fe43760b1957e2193a6ff7516d47af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current volume of the sound source after all volume settings are applied.  <a href="#ac6fe43760b1957e2193a6ff7516d47af">More...</a><br/></td></tr>
<tr class="separator:ac6fe43760b1957e2193a6ff7516d47af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae77074cbaae126241c6547afdeb131c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#aae77074cbaae126241c6547afdeb131c">IsLooping</a> () const </td></tr>
<tr class="memdesc:aae77074cbaae126241c6547afdeb131c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the sound is currently set to loop.  <a href="#aae77074cbaae126241c6547afdeb131c">More...</a><br/></td></tr>
<tr class="separator:aae77074cbaae126241c6547afdeb131c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac51d8a20e3ce5453416ef21162be2a87"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ac51d8a20e3ce5453416ef21162be2a87">IsPaused</a> () const </td></tr>
<tr class="memdesc:ac51d8a20e3ce5453416ef21162be2a87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the sound is currently paused.  <a href="#ac51d8a20e3ce5453416ef21162be2a87">More...</a><br/></td></tr>
<tr class="separator:ac51d8a20e3ce5453416ef21162be2a87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a625331bf3d995a129529a780a97f086b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a625331bf3d995a129529a780a97f086b">IsPlaying</a> () const </td></tr>
<tr class="memdesc:a625331bf3d995a129529a780a97f086b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the sound is currently playing.  <a href="#a625331bf3d995a129529a780a97f086b">More...</a><br/></td></tr>
<tr class="separator:a625331bf3d995a129529a780a97f086b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9174378c97699bb32812984cd74b51ee"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a9174378c97699bb32812984cd74b51ee">IsStopped</a> () const </td></tr>
<tr class="memdesc:a9174378c97699bb32812984cd74b51ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the sound is currently stopped.  <a href="#a9174378c97699bb32812984cd74b51ee">More...</a><br/></td></tr>
<tr class="separator:a9174378c97699bb32812984cd74b51ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8747ddd906e7e0f65ba4ac1aa748525"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ae8747ddd906e7e0f65ba4ac1aa748525">Loop</a> (bool ToLoop)</td></tr>
<tr class="memdesc:ae8747ddd906e7e0f65ba4ac1aa748525"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether this sound should loop.  <a href="#ae8747ddd906e7e0f65ba4ac1aa748525">More...</a><br/></td></tr>
<tr class="separator:ae8747ddd906e7e0f65ba4ac1aa748525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a593eae500e9a29c622c8e94df2e86baa"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a593eae500e9a29c622c8e94df2e86baa">Move</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Position)</td></tr>
<tr class="memdesc:a593eae500e9a29c622c8e94df2e86baa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the sound source.  <a href="#a593eae500e9a29c622c8e94df2e86baa">More...</a><br/></td></tr>
<tr class="separator:a593eae500e9a29c622c8e94df2e86baa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dd1ce1638240021be219774236bd837"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a2dd1ce1638240021be219774236bd837">Pause</a> ()</td></tr>
<tr class="separator:a2dd1ce1638240021be219774236bd837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cdf4ec1159b6c26a1abebcdd8255e80"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a3cdf4ec1159b6c26a1abebcdd8255e80">Play</a> ()</td></tr>
<tr class="memdesc:a3cdf4ec1159b6c26a1abebcdd8255e80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plays the sound.  <a href="#a3cdf4ec1159b6c26a1abebcdd8255e80">More...</a><br/></td></tr>
<tr class="separator:a3cdf4ec1159b6c26a1abebcdd8255e80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f549b02f28454d79d5f8bb35bebf679"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a5f549b02f28454d79d5f8bb35bebf679">Play2d</a> (bool <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ae8747ddd906e7e0f65ba4ac1aa748525">Loop</a>=false)</td></tr>
<tr class="memdesc:a5f549b02f28454d79d5f8bb35bebf679"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plays the sound in 2D mode.  <a href="#a5f549b02f28454d79d5f8bb35bebf679">More...</a><br/></td></tr>
<tr class="separator:a5f549b02f28454d79d5f8bb35bebf679"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e30d7724149dae882cd5767a05bb754"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a5e30d7724149dae882cd5767a05bb754">Play3d</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Position, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> SoundStrength=1.0, bool <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ae8747ddd906e7e0f65ba4ac1aa748525">Loop</a>=false)</td></tr>
<tr class="memdesc:a5e30d7724149dae882cd5767a05bb754"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plays the sound in 3D mode.  <a href="#a5e30d7724149dae882cd5767a05bb754">More...</a><br/></td></tr>
<tr class="separator:a5e30d7724149dae882cd5767a05bb754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a345874faf8a50fdd9f689f231d4da310"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a345874faf8a50fdd9f689f231d4da310">Seek</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Seconds, bool Relative=true)</td></tr>
<tr class="memdesc:a345874faf8a50fdd9f689f231d4da310"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows you to go to a specific point in the sound.  <a href="#a345874faf8a50fdd9f689f231d4da310">More...</a><br/></td></tr>
<tr class="separator:a345874faf8a50fdd9f689f231d4da310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90f305991e5ca0a5edab80a63161b6aa"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a90f305991e5ca0a5edab80a63161b6aa">SetBaseVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Base)</td></tr>
<tr class="memdesc:a90f305991e5ca0a5edab80a63161b6aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current volume of the sound source before effects and other volume settings.  <a href="#a90f305991e5ca0a5edab80a63161b6aa">More...</a><br/></td></tr>
<tr class="separator:a90f305991e5ca0a5edab80a63161b6aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1ce22cea03635eccdc50a7c685137c5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ab1ce22cea03635eccdc50a7c685137c5">SetDirection</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Direction)</td></tr>
<tr class="memdesc:ab1ce22cea03635eccdc50a7c685137c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the direction the sound source is facing.  <a href="#ab1ce22cea03635eccdc50a7c685137c5">More...</a><br/></td></tr>
<tr class="separator:ab1ce22cea03635eccdc50a7c685137c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e3cf13e3ca46410356872ee23f2d526"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a1e3cf13e3ca46410356872ee23f2d526">SetDopplerStrength</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;DopStr)</td></tr>
<tr class="memdesc:a1e3cf13e3ca46410356872ee23f2d526"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the doppler strength, which impacts the doppler effect.  <a href="#a1e3cf13e3ca46410356872ee23f2d526">More...</a><br/></td></tr>
<tr class="separator:a1e3cf13e3ca46410356872ee23f2d526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa14440b5281f08d50be12aa7c90a97d2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#aa14440b5281f08d50be12aa7c90a97d2">SetDopplerVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Velocity)</td></tr>
<tr class="memdesc:aa14440b5281f08d50be12aa7c90a97d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the doppler velocity vector.  <a href="#aa14440b5281f08d50be12aa7c90a97d2">More...</a><br/></td></tr>
<tr class="separator:aa14440b5281f08d50be12aa7c90a97d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23599ad48da5e5d2dbc2a194c12d2cda"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a23599ad48da5e5d2dbc2a194c12d2cda">SetInnerConeAngle</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;InnerAngle)</td></tr>
<tr class="memdesc:a23599ad48da5e5d2dbc2a194c12d2cda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the inner cone angle of the sound source if you want the sound to be projected as a cone.  <a href="#a23599ad48da5e5d2dbc2a194c12d2cda">More...</a><br/></td></tr>
<tr class="separator:a23599ad48da5e5d2dbc2a194c12d2cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77de9e890d539b951b915437f160b4c6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a77de9e890d539b951b915437f160b4c6">SetMaxDistance</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MaxDistance)</td></tr>
<tr class="memdesc:a77de9e890d539b951b915437f160b4c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the distance from the sound source where attenuation will stop.  <a href="#a77de9e890d539b951b915437f160b4c6">More...</a><br/></td></tr>
<tr class="separator:a77de9e890d539b951b915437f160b4c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a938e5d0ab3367e9f2191b75b9f2829cd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a938e5d0ab3367e9f2191b75b9f2829cd">SetMaxVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MaxVolume)</td></tr>
<tr class="memdesc:a938e5d0ab3367e9f2191b75b9f2829cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the maximum volume the sound source can achieve.  <a href="#a938e5d0ab3367e9f2191b75b9f2829cd">More...</a><br/></td></tr>
<tr class="separator:a938e5d0ab3367e9f2191b75b9f2829cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac06e4db9ebd1e0f04ee1727539a1ff5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#aac06e4db9ebd1e0f04ee1727539a1ff5">SetMinDistance</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MinDistance)</td></tr>
<tr class="memdesc:aac06e4db9ebd1e0f04ee1727539a1ff5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the distance from the sound source where attenuation will start.  <a href="#aac06e4db9ebd1e0f04ee1727539a1ff5">More...</a><br/></td></tr>
<tr class="separator:aac06e4db9ebd1e0f04ee1727539a1ff5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa56d27a3dcbf2b6e8a4b3b1141ad766"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#aaa56d27a3dcbf2b6e8a4b3b1141ad766">SetMinVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MinVolume)</td></tr>
<tr class="memdesc:aaa56d27a3dcbf2b6e8a4b3b1141ad766"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the minimum volume the sound source can achieve.  <a href="#aaa56d27a3dcbf2b6e8a4b3b1141ad766">More...</a><br/></td></tr>
<tr class="separator:aaa56d27a3dcbf2b6e8a4b3b1141ad766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d851625bb64c7f4a77eef305464a7f7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a9d851625bb64c7f4a77eef305464a7f7">SetOuterConeAngle</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;OuterAngle)</td></tr>
<tr class="memdesc:a9d851625bb64c7f4a77eef305464a7f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the outer cone angle of the sound source if you want the sound to be projected as a cone.  <a href="#a9d851625bb64c7f4a77eef305464a7f7">More...</a><br/></td></tr>
<tr class="separator:a9d851625bb64c7f4a77eef305464a7f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99b53a8dcb610bb0df055ba0cd118fa"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ae99b53a8dcb610bb0df055ba0cd118fa">SetOuterConeVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;OuterVolume)</td></tr>
<tr class="memdesc:ae99b53a8dcb610bb0df055ba0cd118fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets how much the volume is scaled in the outer cone.  <a href="#ae99b53a8dcb610bb0df055ba0cd118fa">More...</a><br/></td></tr>
<tr class="separator:ae99b53a8dcb610bb0df055ba0cd118fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c73f4cfc446e8760c5770c1e9b2c860"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a5c73f4cfc446e8760c5770c1e9b2c860">SetPitch</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Pitch)</td></tr>
<tr class="memdesc:a5c73f4cfc446e8760c5770c1e9b2c860"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pitch of the sound source.  <a href="#a5c73f4cfc446e8760c5770c1e9b2c860">More...</a><br/></td></tr>
<tr class="separator:a5c73f4cfc446e8760c5770c1e9b2c860"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4ae4db3fdf4d60391f049ff58a20668"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ad4ae4db3fdf4d60391f049ff58a20668">SetPosition</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Position)</td></tr>
<tr class="memdesc:ad4ae4db3fdf4d60391f049ff58a20668"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the position of the sound source.  <a href="#ad4ae4db3fdf4d60391f049ff58a20668">More...</a><br/></td></tr>
<tr class="separator:ad4ae4db3fdf4d60391f049ff58a20668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bb39c27ee5916b92cb09a6c3ba80db5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a4bb39c27ee5916b92cb09a6c3ba80db5">SetRolloffFactor</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Rolloff)</td></tr>
<tr class="memdesc:a4bb39c27ee5916b92cb09a6c3ba80db5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Rolloff factor used to attenuate the sound over a distance.  <a href="#a4bb39c27ee5916b92cb09a6c3ba80db5">More...</a><br/></td></tr>
<tr class="separator:a4bb39c27ee5916b92cb09a6c3ba80db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a473e3e46141c95b3ace664d2174240d2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a473e3e46141c95b3ace664d2174240d2">SetStrength</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;SoundStrength)</td></tr>
<tr class="memdesc:a473e3e46141c95b3ace664d2174240d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the strength of the sound source.  <a href="#a473e3e46141c95b3ace664d2174240d2">More...</a><br/></td></tr>
<tr class="separator:a473e3e46141c95b3ace664d2174240d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c987846b4e33b70266afea6e350a7fd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a1c987846b4e33b70266afea6e350a7fd">SetVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Velocity)</td></tr>
<tr class="memdesc:a1c987846b4e33b70266afea6e350a7fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the velocity of the sound source.  <a href="#a1c987846b4e33b70266afea6e350a7fd">More...</a><br/></td></tr>
<tr class="separator:a1c987846b4e33b70266afea6e350a7fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c1d618d573b6176056c9255d06872b5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a7c1d618d573b6176056c9255d06872b5">Stop</a> ()</td></tr>
<tr class="separator:a7c1d618d573b6176056c9255d06872b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4d3ddd9aed1bdd3b9c4592f776d29ca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab4d3ddd9aed1bdd3b9c4592f776d29ca"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ab4d3ddd9aed1bdd3b9c4592f776d29ca">UpdateVolume</a> ()</td></tr>
<tr class="memdesc:ab4d3ddd9aed1bdd3b9c4592f776d29ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates all volume settings and applies them to this sound. <br/></td></tr>
<tr class="separator:ab4d3ddd9aed1bdd3b9c4592f776d29ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4cc742a744facfc9f408f0deb28d7a0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a4cc742a744facfc9f408f0deb28d7a0d">Sound</a> ()</td></tr>
<tr class="memdesc:a4cc742a744facfc9f408f0deb28d7a0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. Internal use only.  <a href="#a4cc742a744facfc9f408f0deb28d7a0d">More...</a><br/></td></tr>
<tr class="separator:a4cc742a744facfc9f408f0deb28d7a0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a534ecdd7cf8780f68377be655c37b6c0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a534ecdd7cf8780f68377be655c37b6c0">GetTypeVolume</a> () const </td></tr>
<tr class="memdesc:a534ecdd7cf8780f68377be655c37b6c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the volume of this sound type.  <a href="#a534ecdd7cf8780f68377be655c37b6c0">More...</a><br/></td></tr>
<tr class="separator:a534ecdd7cf8780f68377be655c37b6c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a3d27bbeb707f97a580a8d36cc35c5eb4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d27bbeb707f97a580a8d36cc35c5eb4"></a>
<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><b>BaseVolume</b></td></tr>
<tr class="separator:a3d27bbeb707f97a580a8d36cc35c5eb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecb0453668c1d92d54ef4c47ba7c6540"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aecb0453668c1d92d54ef4c47ba7c6540"></a>
<a class="el" href="classMezzanine_1_1AudioManager.xhtml">AudioManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Manager</b></td></tr>
<tr class="separator:aecb0453668c1d92d54ef4c47ba7c6540"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a0d4528da5fa1480249898a8a7da8e5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3a0d4528da5fa1480249898a8a7da8e5"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Name</b></td></tr>
<tr class="separator:a3a0d4528da5fa1480249898a8a7da8e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6c4aab1ddcfa7bf30f39be54b88e396"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af6c4aab1ddcfa7bf30f39be54b88e396"></a>
cAudio::IAudioSource *&#160;</td><td class="memItemRight" valign="bottom"><b>SoundSource</b></td></tr>
<tr class="separator:af6c4aab1ddcfa7bf30f39be54b88e396"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27edd668c4ee13605dc927d5c9e7fd9c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a27edd668c4ee13605dc927d5c9e7fd9c"></a>
<a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295e">Audio::SoundType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Type</b></td></tr>
<tr class="separator:a27edd668c4ee13605dc927d5c9e7fd9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a855eb87a3040bbe6743224a587639604"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a855eb87a3040bbe6743224a587639604"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Mezzanine::AudioManager</b></td></tr>
<tr class="separator:a855eb87a3040bbe6743224a587639604"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is an instance of a sound that can be played and manipulated. </p>
<p>This is a an instance of a sound that can be played, have effects applied to it, paused, stopped, triggered and other such crazyness. </p>

<p>Definition at line <a class="el" href="sound_8h_source.xhtml#l00063">63</a> of file <a class="el" href="sound_8h_source.xhtml">sound.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4cc742a744facfc9f408f0deb28d7a0d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Audio::Sound::Sound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class Constructor. Internal use only. </p>

</div>
</div>
<a class="anchor" id="ad0739c73fe497ad407642da5597a7599"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Audio::Sound::Sound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>SoundName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295e">Audio::SoundType</a>&#160;</td>
          <td class="paramname"><em>SType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">SoundName</td><td>The name of the <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml" title="This is an instance of a sound that can be played and manipulated.">Sound</a> instance. </td></tr>
    <tr><td class="paramname">FileName</td><td>The name of the file. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group in which the file resides. </td></tr>
    <tr><td class="paramname">SType</td><td>The type of sound that this instance is. See enum <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295e" title="Used by the sound class to determine what type of sound it is.">Audio::SoundType</a> for more info. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>this fails to create the exception but succeeds in loading from the disk, this will throw <a class="el" href="classMezzanine_1_1InternalException.xhtml">InternalException</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00054">54</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2aed211bc488b29b38fef7c54c4a7952"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Audio::Sound::~Sound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class destructor. </p>
<p>The class destructor. </p>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a59858396263b2f14fa937ff7c10011d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetBaseVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current volume of the sound source. </p>
<p>This function will get the current volume of the sound source before effects and other volume settings are applied. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the source volume before attenuation and other effects. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00149">149</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac6a79c5326a7a36b39f86604b62ccf98"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::Audio::Sound::GetCompressedAudioSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the original compressed size of the sound. </p>
<p>This function will return the compressed size of the sound. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real that is the original compressed size. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abba56b18b9bb7b65cc712b4093e87ab5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::Audio::Sound::GetCurrentAudioPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current position in the audio stream in bytes. </p>
<p>This function will get the current position of the sound in the audio stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the current position in the audio stream in bytes. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00204">204</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad5ddf0b36c1ca5222a12dd64fa38e0ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetCurrentAudioTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current position in the audio stream in seconds. </p>
<p>This function will get the current position of the sound in the audio stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the current position in the audio stream in seconds. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00199">199</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad96c91677296147e532a84b53b39b6ee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::Audio::Sound::GetCurrentCompressedAudioPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current position in the original audio stream in bytes. </p>
<p>This function will get the current position of the sound in the original audio stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the current position in the original audio stream in bytes. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00209">209</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5a1152854f359c18e225511407489512"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Audio::Sound::GetDirection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the objects direction. </p>
<p>Gets the objects current direction. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the objects current direction. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00266">266</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3f6d586e0359db750b6976e360842a57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetDopplerStrength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Doppler Strength of the sound. </p>
<p>This function will get the doppler strength, which enhances or diminishes the doppler effect. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the doppler strength. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00347">347</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a472e29b7a9d1f86c92a2a7ba5413ffaf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Audio::Sound::GetDopplerVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the doppler velocity vector. </p>
<p>This function will get the override for the doppler velocity vector. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the override for the doppler velocity vector. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00357">357</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2408f6fd02420ee3916306539542f78d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetInnerConeAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the inner cone angle of the sound source. </p>
<p>This function will get the inner cone angle of the sound source. See <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a23599ad48da5e5d2dbc2a194c12d2cda" title="Sets the inner cone angle of the sound source if you want the sound to be projected as a cone...">SetInnerConeAngle()</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the angle of the inner sound cone of the source. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00317">317</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adcf417a8d48223bd828fa58eb0cb8861"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetMaxDistance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the distance at which sound attenuation will stop. </p>
<p>This function will get the distance at which sound attenuation will stop. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the distance from the source where attenuation will stop. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00307">307</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a86d99fee746dab624364f7f1104d08e8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetMaxVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Maximum volume of the sound source. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the maximum volume that the source can achieve. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00174">174</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1907806223280339d63a484f9dc920b6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetMinDistance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the distance at which sound attenuation will start. </p>
<p>This function will get the distance at which sound attenuation will start. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the distance from the source where attenuation will start. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00297">297</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3e62fe64d44d5c707f92c143a786b181"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetMinVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the minimum volume of the sound source. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the minimum volume that the source can be attenuated to. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a42cf89caec563b8fe86ef65234f2badf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::Sound::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this sound. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of this sound. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00214">214</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9dd34a98907ed664b1cb94992925d518"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetOuterConeAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the outer cone angle of the sound source. </p>
<p>This function will get the outer cone angle of the sound source. See <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#a9d851625bb64c7f4a77eef305464a7f7" title="Sets the outer cone angle of the sound source if you want the sound to be projected as a cone...">SetOuterConeAngle()</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the angle of the outer sound cone of the source. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00327">327</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9257d5e2a6233fda79a19a170f3f5533"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetOuterConeVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the outer cone volume of the sound source. </p>
<p>This function will get the outer cone volume of the sound source. See <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ae99b53a8dcb610bb0df055ba0cd118fa" title="Sets how much the volume is scaled in the outer cone.">SetOuterConeVolume()</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns how much the volume of the source is scaled in the outer cone. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a95876ef2df75b0f780c06b6abd0e134f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetPitch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the pitch of the sound source. </p>
<p>This function will get the pitch of the sound source. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the pitch of the source. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00229">229</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9d4712b50c270c34446d238855b4a73f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Audio::Sound::GetPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the objects position. </p>
<p>Gets the objects current position. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the objects current position. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00244">244</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a89751ce8cd36d57b6214c89b7d6a878c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetRolloffFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Rolloff factor of the sound source. </p>
<p>This function will get the factor used in attenuating the source over distance. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the factor used in attenuating the source over distance. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00277">277</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afd8808de9c5b5e6b6f150d0d40455dc0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetStrength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Strength of the sound source. </p>
<p>This function will get the strength of the source, which determines how well the sound carries over a distance. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the strength of the source. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00287">287</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a25ea84a94dc52a85adee4a407fb5147a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::Audio::Sound::GetTotalAudioSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the total size of the sound in memory. </p>
<p>This function will return the total size of the sound in memory. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real that is the size in memory. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00189">189</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae467acd6b7fc2aa594de666bec4e6dab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetTotalAudioTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the total size of the sound in seconds. </p>
<p>This function will return the amount of seconds of the sound. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real that is the size in seconds. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00184">184</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afab6416b8ec5570568c2c1ebdc5cc398"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a316b2244b8be1a8c441a39b0a246295e">Audio::SoundType</a> Mezzanine::Audio::Sound::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the sound type of this sound. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a SoundType enum value that is the type of this sound. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00219">219</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a534ecdd7cf8780f68377be655c37b6c0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetTypeVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the volume of this sound type. </p>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac612c81165beadf27da635095bd82bb2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Audio::Sound::GetVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the objects velocity. </p>
<p>Gets the objects current velocity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the objects current velocity. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00255">255</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac6fe43760b1957e2193a6ff7516d47af"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::Sound::GetVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current volume of the sound source after all volume settings are applied. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the volume of this sound after all volume settings are applied. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00154">154</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aae77074cbaae126241c6547afdeb131c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::Sound::IsLooping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks to see if the sound is currently set to loop. </p>
<p>Checks to see if the sound is currently set to loop. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the sound is currently set to loop. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00139">139</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac51d8a20e3ce5453416ef21162be2a87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::Sound::IsPaused </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks to see if the sound is currently paused. </p>
<p>Checks to see if the sound is currently paused. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the sound is currently paused. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00129">129</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a625331bf3d995a129529a780a97f086b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::Sound::IsPlaying </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks to see if the sound is currently playing. </p>
<p>Checks to see if the sound is currently playing. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the sound is currently playing. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00124">124</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9174378c97699bb32812984cd74b51ee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::Sound::IsStopped </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks to see if the sound is currently stopped. </p>
<p>Checks to see if the sound is currently stopped. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the sound is currently stopped. </dd></dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae8747ddd906e7e0f65ba4ac1aa748525"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Loop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ToLoop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether this sound should loop. </p>
<p>Sets whether this sound should restart once it's done playing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToLoop</td><td>Whether or not this sound should restart </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a593eae500e9a29c622c8e94df2e86baa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Move </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Moves the sound source. </p>
<p>This function will set both the position and velocity of the sound source. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>The new position of the sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00234">234</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2dd1ce1638240021be219774236bd837"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Pause </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Pauses the sound. </p>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3cdf4ec1159b6c26a1abebcdd8255e80"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Play </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Plays the sound. </p>
<p>Plays the sound with the same settings as the last time it was played. </p>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5f549b02f28454d79d5f8bb35bebf679"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Play2d </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Loop</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Plays the sound in 2D mode. </p>
<p>This will play the sound without altering it by it's position in 3D space. Ideal for music and ambient sounds. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Loop</td><td>Whether or not the sound should restart once it's done playing. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00094">94</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5e30d7724149dae882cd5767a05bb754"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Play3d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>SoundStrength</em> = <code>1.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Loop</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Plays the sound in 3D mode. </p>
<p>This will play the sound and alter it's properties based on it's location in 3D space. Sounds can sound like they are coming more from one direction then another, etc.. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>The location in 3D space where the sound originates. </td></tr>
    <tr><td class="paramname">SoundStrength</td><td>The higher the sound strength, the further away you can hear the sound, not the same as volume. </td></tr>
    <tr><td class="paramname">Loop</td><td>Whether or not the sound should restart once it's done playing. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a345874faf8a50fdd9f689f231d4da310"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Seek </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Seconds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Relative</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows you to go to a specific point in the sound. </p>
<p>This function will allow you to jump ahead or rewind to any specific point in the sound. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Seconds</td><td>How many seconds into the sound you want to jump to. </td></tr>
    <tr><td class="paramname">Relative</td><td>Whether or not you want the jump to be relative to where the sound is at the time of calling this function. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a90f305991e5ca0a5edab80a63161b6aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetBaseVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Base</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the current volume of the sound source before effects and other volume settings. </p>
<p>This function will set the current volume of the sound source before effects (like attenuation) are applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Base</td><td>The volume of the sound source to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab1ce22cea03635eccdc50a7c685137c5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetDirection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Direction</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the direction the sound source is facing. </p>
<p>This function will set the direction the sound source is facing to be used with the sound in 3D mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Direction</td><td>The new direction of the sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00261">261</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1e3cf13e3ca46410356872ee23f2d526"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetDopplerStrength </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>DopStr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the doppler strength, which impacts the doppler effect. </p>
<p>This function will set the doppler strength of the sound source, which can enhance or diminish the doppler effect given off by this sound source. Default: 1.0 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DopStr</td><td>The doppler strength to be applied to this sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00342">342</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa14440b5281f08d50be12aa7c90a97d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetDopplerVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Velocity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the doppler velocity vector. </p>
<p>In most cases you shouldn't need to call this as this is handled by the engine. Is called every time position, velocity, or direction is altered. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Velocity</td><td>A vector3 representing the doppler velocity to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00352">352</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a23599ad48da5e5d2dbc2a194c12d2cda"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetInnerConeAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>InnerAngle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the inner cone angle of the sound source if you want the sound to be projected as a cone. </p>
<p>This function will set the angle for the inner cone which the sound will be projected. The cone will open up in the direction set by <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ab1ce22cea03635eccdc50a7c685137c5" title="Sets the direction the sound source is facing.">SetDirection()</a>. Sounds are at their loudest only if the listener is within the inner cone. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">InnerAngle</td><td>The angle of the inner cone. Range is: 0.0 to 360.0. Default: 360.0 (broadcast) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00312">312</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a77de9e890d539b951b915437f160b4c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetMaxDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>MaxDistance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the distance from the sound source where attenuation will stop. </p>
<p>This function will set the distance from the sound source where attenuation effects will stop being applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MaxDistance</td><td>The distance at which attenuation effects stop being applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00302">302</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a938e5d0ab3367e9f2191b75b9f2829cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetMaxVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>MaxVolume</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the maximum volume the sound source can achieve. </p>
<p>This function will set the maximum volume the sound source can achieve after effects(like attenuation) have been applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MaxVolume</td><td>The maximum volume allowed for the sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aac06e4db9ebd1e0f04ee1727539a1ff5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetMinDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>MinDistance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the distance from the sound source where attenuation will start. </p>
<p>This function will set the distance from the sound source where attenuation effects will start being applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MinDistance</td><td>The distance at which attenuation effects start being applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00292">292</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaa56d27a3dcbf2b6e8a4b3b1141ad766"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetMinVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>MinVolume</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the minimum volume the sound source can achieve. </p>
<p>This function will set the minimum volume the sound source can achieve after effects(like attenuation) have been applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MinVolume</td><td>The minimum volume allowed for the sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00159">159</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9d851625bb64c7f4a77eef305464a7f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetOuterConeAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>OuterAngle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the outer cone angle of the sound source if you want the sound to be projected as a cone. </p>
<p>This function will set the angle for the outer cone which the sound will be projected. The cone will open up in the direction set by <a class="el" href="classMezzanine_1_1Audio_1_1Sound.xhtml#ab1ce22cea03635eccdc50a7c685137c5" title="Sets the direction the sound source is facing.">SetDirection()</a>. Sounds connot be heard if the listener is outside the outer cone. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OuterAngle</td><td>The angle of the outer cone. Range is: 0.0 to 360.0. Default: 360.0 (broadcast) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00322">322</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae99b53a8dcb610bb0df055ba0cd118fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetOuterConeVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>OuterVolume</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets how much the volume is scaled in the outer cone. </p>
<p>This function will set how much the volume is scaled by for sounds in the outer cone of the sound source. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OuterVolume</td><td>The scale for volume for sounds in the outer cone. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00332">332</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5c73f4cfc446e8760c5770c1e9b2c860"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetPitch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Pitch</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the pitch of the sound source. </p>
<p>This function will set the pitch of the sound source. Note: higher values will speed up the playback of the sound. Default: 1.0 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pitch</td><td>The new pitch of the sound. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad4ae4db3fdf4d60391f049ff58a20668"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetPosition </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the position of the sound source. </p>
<p>This function will set the position of the source to be used with the sound in 3D mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>The new position of the sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00239">239</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4bb39c27ee5916b92cb09a6c3ba80db5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetRolloffFactor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Rolloff</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Rolloff factor used to attenuate the sound over a distance. </p>
<p>This function will set how much the sound source will attenuate over a distance. Larger values will make the sound attenuate faster/shorter distnaces, smaller values will make the sound carry better. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rolloff</td><td>The factor at which the sound will attenuate. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00272">272</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a473e3e46141c95b3ace664d2174240d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetStrength </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>SoundStrength</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the strength of the sound source. </p>
<p>This function will set the strength of the sound, which will determine how well the sound from this sound source will carry over a distance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">SoundStrength</td><td>The strength of the sound. Default: 1.0 </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1c987846b4e33b70266afea6e350a7fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::SetVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Velocity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the velocity of the sound source. </p>
<p>This function will set the velocity of the source to be used with the sound in 3D mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Velocity</td><td>The new velocity of the sound source. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7c1d618d573b6176056c9255d06872b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::Sound::Stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Stops the sound. </p>

<p>Definition at line <a class="el" href="sound_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Audio/<a class="el" href="sound_8h_source.xhtml">sound.h</a></li>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Audio/<a class="el" href="sound_8cpp_source.xhtml">sound.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 23:09:57 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
