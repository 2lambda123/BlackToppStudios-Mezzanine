<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::AreaEffect Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml">AreaEffect</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1AreaEffect-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::AreaEffect Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is used to define area's in the world that have unique effects.  
 <a href="classMezzanine_1_1AreaEffect.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="areaeffect_8h_source.xhtml">areaeffect.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::AreaEffect:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1AreaEffect__inherit__graph.svg" width="100%" height="442"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::AreaEffect:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1AreaEffect__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7422b18aa40ba0d9373b1e25e278205b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a7422b18aa40ba0d9373b1e25e278205b">AreaEffect</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;name, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a7422b18aa40ba0d9373b1e25e278205b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a7422b18aa40ba0d9373b1e25e278205b"></a><br/></td></tr>
<tr class="memitem:a595ea19fa61ca484d67796bc6ab74c00"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a595ea19fa61ca484d67796bc6ab74c00">~AreaEffect</a> ()</td></tr>
<tr class="memdesc:a595ea19fa61ca484d67796bc6ab74c00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a595ea19fa61ca484d67796bc6ab74c00"></a><br/></td></tr>
<tr class="memitem:ab0b3159f1b4f4d65430aba657414e0eb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ab0b3159f1b4f4d65430aba657414e0eb">_Update</a> ()</td></tr>
<tr class="memdesc:ab0b3159f1b4f4d65430aba657414e0eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object every frame.   <a href="#ab0b3159f1b4f4d65430aba657414e0eb"></a><br/></td></tr>
<tr class="memitem:a9aff64afd90f30f28956d57aa461044d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a9aff64afd90f30f28956d57aa461044d">AddToWorld</a> ()</td></tr>
<tr class="memdesc:a9aff64afd90f30f28956d57aa461044d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.   <a href="#a9aff64afd90f30f28956d57aa461044d"></a><br/></td></tr>
<tr class="memitem:a988cd958e49d65331a059951af3c2884"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a988cd958e49d65331a059951af3c2884">ApplyEffect</a> ()=0</td></tr>
<tr class="memdesc:a988cd958e49d65331a059951af3c2884"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines and applies the effect of the field.  <a href="#a988cd958e49d65331a059951af3c2884"></a><br/></td></tr>
<tr class="memitem:a5df27404888d117c0a44ba4f5863fb29"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a5df27404888d117c0a44ba4f5863fb29">GetAddedActors</a> ()</td></tr>
<tr class="memdesc:a5df27404888d117c0a44ba4f5863fb29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the list of actors that have been added to the list since the last simulation step.  <a href="#a5df27404888d117c0a44ba4f5863fb29"></a><br/></td></tr>
<tr class="memitem:a37d04f8e6d6e8451348ee60fd083968b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a37d04f8e6d6e8451348ee60fd083968b">GetLocation</a> () const </td></tr>
<tr class="memdesc:a37d04f8e6d6e8451348ee60fd083968b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the location of the object.   <a href="#a37d04f8e6d6e8451348ee60fd083968b"></a><br/></td></tr>
<tr class="memitem:aedf3f0747694f989de033f046f0c35bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aedf3f0747694f989de033f046f0c35bb">GetName</a> () const </td></tr>
<tr class="memdesc:aedf3f0747694f989de033f046f0c35bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.   <a href="#aedf3f0747694f989de033f046f0c35bb"></a><br/></td></tr>
<tr class="memitem:a40bbe87e9212eccae31bef25eaf142b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a40bbe87e9212eccae31bef25eaf142b1">GetNumAddedActors</a> ()</td></tr>
<tr class="memdesc:a40bbe87e9212eccae31bef25eaf142b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of actors added to this AE since the last update.  <a href="#a40bbe87e9212eccae31bef25eaf142b1"></a><br/></td></tr>
<tr class="memitem:af257df2bf68c1c34bc4ced3daa182ee5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#af257df2bf68c1c34bc4ced3daa182ee5">GetNumOverlappingActors</a> ()</td></tr>
<tr class="memdesc:af257df2bf68c1c34bc4ced3daa182ee5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of actors currently overlapping with this AE.  <a href="#af257df2bf68c1c34bc4ced3daa182ee5"></a><br/></td></tr>
<tr class="memitem:ac5755475929edb8c24474ec976772072"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ac5755475929edb8c24474ec976772072">GetNumRemovedActors</a> ()</td></tr>
<tr class="memdesc:ac5755475929edb8c24474ec976772072"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of actors removed from this AE since the last update.  <a href="#ac5755475929edb8c24474ec976772072"></a><br/></td></tr>
<tr class="memitem:a18c9fa2cbac6e1b62d9c34b56e8f7dc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a18c9fa2cbac6e1b62d9c34b56e8f7dc9">GetOrientation</a> () const </td></tr>
<tr class="memdesc:a18c9fa2cbac6e1b62d9c34b56e8f7dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.   <a href="#a18c9fa2cbac6e1b62d9c34b56e8f7dc9"></a><br/></td></tr>
<tr class="memitem:a725f67053cc638c30f146817ca7601a1"><td class="memItemLeft" align="right" valign="top">std::list&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a725f67053cc638c30f146817ca7601a1">GetOverlappingActors</a> ()</td></tr>
<tr class="memdesc:a725f67053cc638c30f146817ca7601a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the list of actors within this field.  <a href="#a725f67053cc638c30f146817ca7601a1"></a><br/></td></tr>
<tr class="memitem:a27c4f0f45004b0e3b70c39d91e03612e"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a27c4f0f45004b0e3b70c39d91e03612e">GetRemovedActors</a> ()</td></tr>
<tr class="memdesc:a27c4f0f45004b0e3b70c39d91e03612e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the list of actors that have been removed from the list since the last simulation step.  <a href="#a27c4f0f45004b0e3b70c39d91e03612e"></a><br/></td></tr>
<tr class="memitem:adc4af3aa8a43d2e08d716990153fb89d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#adc4af3aa8a43d2e08d716990153fb89d">GetScaling</a> () const </td></tr>
<tr class="memdesc:adc4af3aa8a43d2e08d716990153fb89d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.   <a href="#adc4af3aa8a43d2e08d716990153fb89d"></a><br/></td></tr>
<tr class="memitem:a60a0390056b5d9089df30941f4175abe"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a60a0390056b5d9089df30941f4175abe">GetType</a> () const </td></tr>
<tr class="memdesc:a60a0390056b5d9089df30941f4175abe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance.   <a href="#a60a0390056b5d9089df30941f4175abe"></a><br/></td></tr>
<tr class="memitem:ae32884a3cecc80dcb79eac216afbac13"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ae32884a3cecc80dcb79eac216afbac13">RemoveFromWorld</a> ()</td></tr>
<tr class="memdesc:ae32884a3cecc80dcb79eac216afbac13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object from the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.   <a href="#ae32884a3cecc80dcb79eac216afbac13"></a><br/></td></tr>
<tr class="memitem:a93056bdf18b07d8067367b368fbf24a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a93056bdf18b07d8067367b368fbf24a1">SetLocalLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a93056bdf18b07d8067367b368fbf24a1"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a93056bdf18b07d8067367b368fbf24a1"></a><br/></td></tr>
<tr class="memitem:a59907341f2a0c8814b7962f010cea587"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a59907341f2a0c8814b7962f010cea587">SetLocalOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:a59907341f2a0c8814b7962f010cea587"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a59907341f2a0c8814b7962f010cea587"></a><br/></td></tr>
<tr class="memitem:a4dd22757bc627242de169e31a1717139"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a4dd22757bc627242de169e31a1717139">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a4dd22757bc627242de169e31a1717139"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a4dd22757bc627242de169e31a1717139"></a><br/></td></tr>
<tr class="memitem:a62bcda0a0c2a95b8f1ccdfe2cd3d1018"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a62bcda0a0c2a95b8f1ccdfe2cd3d1018">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:a62bcda0a0c2a95b8f1ccdfe2cd3d1018"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a62bcda0a0c2a95b8f1ccdfe2cd3d1018"></a><br/></td></tr>
<tr class="memitem:ae0448d98c3689ae407734bbcd85a08cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ae0448d98c3689ae407734bbcd85a08cb">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:ae0448d98c3689ae407734bbcd85a08cb"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#ae0448d98c3689ae407734bbcd85a08cb"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1NonStaticWorldObject"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1NonStaticWorldObject')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml">Mezzanine::NonStaticWorldObject</a></td></tr>
<tr class="memitem:ae68784bd2201013e99c6a957201c5264 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae68784bd2201013e99c6a957201c5264"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ae68784bd2201013e99c6a957201c5264">NonStaticWorldObject</a> ()</td></tr>
<tr class="memdesc:ae68784bd2201013e99c6a957201c5264 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a5bfa4c2acd83b5556bcf16d73b8eeba1 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5bfa4c2acd83b5556bcf16d73b8eeba1"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a5bfa4c2acd83b5556bcf16d73b8eeba1">~NonStaticWorldObject</a> ()</td></tr>
<tr class="memdesc:a5bfa4c2acd83b5556bcf16d73b8eeba1 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:ad726fa6c7934a325599120366cf1d900 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ad726fa6c7934a325599120366cf1d900">SetOrientation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;x, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;z, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;w)</td></tr>
<tr class="memdesc:ad726fa6c7934a325599120366cf1d900 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#ad726fa6c7934a325599120366cf1d900"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldObject"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldObject')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldObject.xhtml">Mezzanine::WorldObject</a></td></tr>
<tr class="memitem:a7718ab150d1337b52715b0db1a4a4762 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7718ab150d1337b52715b0db1a4a4762"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7718ab150d1337b52715b0db1a4a4762">WorldObject</a> ()</td></tr>
<tr class="memdesc:a7718ab150d1337b52715b0db1a4a4762 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:aa44b96eb039584d0adc1805250ba1146 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa44b96eb039584d0adc1805250ba1146"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aa44b96eb039584d0adc1805250ba1146">~WorldObject</a> ()</td></tr>
<tr class="memdesc:aa44b96eb039584d0adc1805250ba1146 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a15f23b44542efcf1e4ee824ae59f0210 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a15f23b44542efcf1e4ee824ae59f0210">_GetBasePhysicsObject</a> () const </td></tr>
<tr class="memdesc:a15f23b44542efcf1e4ee824ae59f0210 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal physics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on.  <a href="#a15f23b44542efcf1e4ee824ae59f0210"></a><br/></td></tr>
<tr class="memitem:a7673104fb11f0d7ededca43ff8026562 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual Ogre::SceneNode *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7673104fb11f0d7ededca43ff8026562">_GetGraphicsNode</a> () const </td></tr>
<tr class="memdesc:a7673104fb11f0d7ededca43ff8026562 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics node this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object uses for it's graphics transform.  <a href="#a7673104fb11f0d7ededca43ff8026562"></a><br/></td></tr>
<tr class="memitem:a5ceb1599dbe08f1039c82db959eb0d5e inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual Ogre::Entity *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a5ceb1599dbe08f1039c82db959eb0d5e">_GetGraphicsObject</a> () const </td></tr>
<tr class="memdesc:a5ceb1599dbe08f1039c82db959eb0d5e inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on.  <a href="#a5ceb1599dbe08f1039c82db959eb0d5e"></a><br/></td></tr>
<tr class="memitem:ab6007bf3a962e89854ffe9c234721b64 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ab6007bf3a962e89854ffe9c234721b64">_NotifyCollisionState</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *Col, const <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml#a65c483a4ea1e7faf02539e7e0c18af7f">Physics::Collision::CollisionState</a> &amp;State)</td></tr>
<tr class="memdesc:ab6007bf3a962e89854ffe9c234721b64 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object of a collision that is occuring with it.  <a href="#ab6007bf3a962e89854ffe9c234721b64"></a><br/></td></tr>
<tr class="memitem:a131f816f0c0613f088e13cdb9f1993ae inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a131f816f0c0613f088e13cdb9f1993ae">GetGraphicsSettings</a> () const </td></tr>
<tr class="memdesc:a131f816f0c0613f088e13cdb9f1993ae inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the graphics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a131f816f0c0613f088e13cdb9f1993ae"></a><br/></td></tr>
<tr class="memitem:a0bf0008923a4f71bd58ba538ada333ff inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0bf0008923a4f71bd58ba538ada333ff">GetPhysicsSettings</a> () const </td></tr>
<tr class="memdesc:a0bf0008923a4f71bd58ba538ada333ff inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the physics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a0bf0008923a4f71bd58ba538ada333ff"></a><br/></td></tr>
<tr class="memitem:a4e629227edc6a548870be3df58035824 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a4e629227edc6a548870be3df58035824">GetSounds</a> () const </td></tr>
<tr class="memdesc:a4e629227edc6a548870be3df58035824 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the set of sounds associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a4e629227edc6a548870be3df58035824"></a><br/></td></tr>
<tr class="memitem:abd1e6eae70256cbcf82229c60deb51ad inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#abd1e6eae70256cbcf82229c60deb51ad">IsInWorld</a> () const </td></tr>
<tr class="memdesc:abd1e6eae70256cbcf82229c60deb51ad inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is currently in the world.  <a href="#abd1e6eae70256cbcf82229c60deb51ad"></a><br/></td></tr>
<tr class="memitem:a0c912e54d09574b5821eb972f51dc93b inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0c912e54d09574b5821eb972f51dc93b">IsStaticOrKinematic</a> () const </td></tr>
<tr class="memdesc:a0c912e54d09574b5821eb972f51dc93b inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is static or kinematic.  <a href="#a0c912e54d09574b5821eb972f51dc93b"></a><br/></td></tr>
<tr class="memitem:ad21f34d4cec83072347da0bb79b08a66 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ad21f34d4cec83072347da0bb79b08a66">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;x, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;z)</td></tr>
<tr class="memdesc:ad21f34d4cec83072347da0bb79b08a66 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#ad21f34d4cec83072347da0bb79b08a66"></a><br/></td></tr>
<tr class="memitem:a06ee100d2c4f3b4d2a944a497f1711f4 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a06ee100d2c4f3b4d2a944a497f1711f4">SetSounds</a> (<a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *Sounds)</td></tr>
<tr class="memdesc:a06ee100d2c4f3b4d2a944a497f1711f4 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the sounds to be used by this object.  <a href="#a06ee100d2c4f3b4d2a944a497f1711f4"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ac9d49cd99bddd5b29d734581d02538"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a6ac9d49cd99bddd5b29d734581d02538">AttachableParent</a> ()</td></tr>
<tr class="memdesc:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:ab176913ae00cc2bece000e51fa897aa2 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab176913ae00cc2bece000e51fa897aa2"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#ab176913ae00cc2bece000e51fa897aa2">~AttachableParent</a> ()</td></tr>
<tr class="memdesc:ab176913ae00cc2bece000e51fa897aa2 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9c76fdc43b1cddada62385215ca6c8d4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a9c76fdc43b1cddada62385215ca6c8d4">_RecalculateAllChildTransforms</a> ()</td></tr>
<tr class="memdesc:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates the transforms of all children of this attachable. <br/></td></tr>
<tr class="memitem:a8d429b2f9c9c6bd6f71bf20704120aac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a8d429b2f9c9c6bd6f71bf20704120aac">AttachObject</a> (<a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *Target)</td></tr>
<tr class="memdesc:a8d429b2f9c9c6bd6f71bf20704120aac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attaches an attachable element to this object.  <a href="#a8d429b2f9c9c6bd6f71bf20704120aac"></a><br/></td></tr>
<tr class="memitem:a05bd725c8819b8c1a41057da2dc2cba4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">AttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a05bd725c8819b8c1a41057da2dc2cba4">BeginChild</a> ()</td></tr>
<tr class="memdesc:a05bd725c8819b8c1a41057da2dc2cba4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an AttachableIterator to the first object.  <a href="#a05bd725c8819b8c1a41057da2dc2cba4"></a><br/></td></tr>
<tr class="memitem:a16ce9bac2da3fe2cf68234354059eaa4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">ConstAttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a16ce9bac2da3fe2cf68234354059eaa4">BeginChild</a> () const </td></tr>
<tr class="memdesc:a16ce9bac2da3fe2cf68234354059eaa4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstAttachableIterator to the first object.  <a href="#a16ce9bac2da3fe2cf68234354059eaa4"></a><br/></td></tr>
<tr class="memitem:a3ac235c47748d0b5b48f542ec37723d6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ac235c47748d0b5b48f542ec37723d6"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a3ac235c47748d0b5b48f542ec37723d6">DetachAllChildren</a> ()</td></tr>
<tr class="memdesc:a3ac235c47748d0b5b48f542ec37723d6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detaches all attachables currently attached. <br/></td></tr>
<tr class="memitem:a3d893c17daf2b9e0f124f2f4adc13a54 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a3d893c17daf2b9e0f124f2f4adc13a54">DetachObject</a> (<a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *Target)</td></tr>
<tr class="memdesc:a3d893c17daf2b9e0f124f2f4adc13a54 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detaches an attachable element from this object.  <a href="#a3d893c17daf2b9e0f124f2f4adc13a54"></a><br/></td></tr>
<tr class="memitem:a247dfcc8db7834ba479eeb50e000c1ac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">AttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a247dfcc8db7834ba479eeb50e000c1ac">EndChild</a> ()</td></tr>
<tr class="memdesc:a247dfcc8db7834ba479eeb50e000c1ac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an AttachableIterator to one past the last object.  <a href="#a247dfcc8db7834ba479eeb50e000c1ac"></a><br/></td></tr>
<tr class="memitem:a98225e7b3739c4f832d39fe1056833f6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">ConstAttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a98225e7b3739c4f832d39fe1056833f6">EndChild</a> () const </td></tr>
<tr class="memdesc:a98225e7b3739c4f832d39fe1056833f6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstAttachableIterator to one past the last object.  <a href="#a98225e7b3739c4f832d39fe1056833f6"></a><br/></td></tr>
<tr class="memitem:a822d461921c4556c5cad2ad3933c0466 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a822d461921c4556c5cad2ad3933c0466">GetAttached</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const </td></tr>
<tr class="memdesc:a822d461921c4556c5cad2ad3933c0466 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a specific attached Item.  <a href="#a822d461921c4556c5cad2ad3933c0466"></a><br/></td></tr>
<tr class="memitem:a42013a31c0c5e483c98e34aa3815afc4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a42013a31c0c5e483c98e34aa3815afc4">GetNumAttached</a> () const </td></tr>
<tr class="memdesc:a42013a31c0c5e483c98e34aa3815afc4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of elements attached to this object.  <a href="#a42013a31c0c5e483c98e34aa3815afc4"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a72bee4c7d028162ececabf6010f9015d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a72bee4c7d028162ececabf6010f9015d">AttachableBase</a> ()</td></tr>
<tr class="memdesc:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a525c8f74c27cb29bc46a0330753fdcb4 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a525c8f74c27cb29bc46a0330753fdcb4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a525c8f74c27cb29bc46a0330753fdcb4">~AttachableBase</a> ()</td></tr>
<tr class="memdesc:a525c8f74c27cb29bc46a0330753fdcb4 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a33eb528b2e924ef70a9bab7fd79c70d0">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in global space to the same point in local space.  <a href="#a33eb528b2e924ef70a9bab7fd79c70d0"></a><br/></td></tr>
<tr class="memitem:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a39338b566a38828b8c9b1ddf3e2c865e">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in global space to the same rotation in local space.  <a href="#a39338b566a38828b8c9b1ddf3e2c865e"></a><br/></td></tr>
<tr class="memitem:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab8a5b6e1379ff5cedb5758c4aafe61ed">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in local space to the same point in global space.  <a href="#ab8a5b6e1379ff5cedb5758c4aafe61ed"></a><br/></td></tr>
<tr class="memitem:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a709ad287377d07a576ebaca995392e15">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in local space to the same rotation in global space.  <a href="#a709ad287377d07a576ebaca995392e15"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa1baf517c478f03c0116ccf6df62f750"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#aa1baf517c478f03c0116ccf6df62f750">AttachableChild</a> ()</td></tr>
<tr class="memdesc:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a2f42975f868a1591ec6ce7f285e19415 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f42975f868a1591ec6ce7f285e19415"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a2f42975f868a1591ec6ce7f285e19415">~AttachableChild</a> ()</td></tr>
<tr class="memdesc:a2f42975f868a1591ec6ce7f285e19415 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#ad34350de631e502a8bc3d4ce25fff4f6">_RecalculateGlobalTransform</a> (bool FromParent=false)</td></tr>
<tr class="memdesc:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates objects global transform from parent.  <a href="#ad34350de631e502a8bc3d4ce25fff4f6"></a><br/></td></tr>
<tr class="memitem:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a500d824fc29de69ac05ffcdbdaf67e9e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a500d824fc29de69ac05ffcdbdaf67e9e">_RecalculateLocalTransform</a> ()</td></tr>
<tr class="memdesc:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates this objects local transform based on it's current global position. <br/></td></tr>
<tr class="memitem:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a59bbbc115c028f87db652f32d252ee61">GetLocalLocation</a> () const </td></tr>
<tr class="memdesc:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Location of this object in local space.  <a href="#a59bbbc115c028f87db652f32d252ee61"></a><br/></td></tr>
<tr class="memitem:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a81104f92420f9558b39144cce4eb7cd0">GetLocalOrientation</a> () const </td></tr>
<tr class="memdesc:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of this object in local space.  <a href="#a81104f92420f9558b39144cce4eb7cd0"></a><br/></td></tr>
<tr class="memitem:a9015db8e4a6d041601b25b82246bbfc9 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a9015db8e4a6d041601b25b82246bbfc9">GetParent</a> () const </td></tr>
<tr class="memdesc:a9015db8e4a6d041601b25b82246bbfc9 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of this child.  <a href="#a9015db8e4a6d041601b25b82246bbfc9"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:afd9768dd8d41039970823abd04ae45ab"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#afd9768dd8d41039970823abd04ae45ab">SerializableName</a> ()</td></tr>
<tr class="memdesc:afd9768dd8d41039970823abd04ae45ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#afd9768dd8d41039970823abd04ae45ab"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad4989d8db0cee190f414ff9874280230"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad4989d8db0cee190f414ff9874280230"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ad4989d8db0cee190f414ff9874280230">AddActorToList</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *Actor)</td></tr>
<tr class="memdesc:ad4989d8db0cee190f414ff9874280230"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for adding actors to relevant lists. <br/></td></tr>
<tr class="memitem:aab9cd68816ada3cce8db1500f14fb079"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aab9cd68816ada3cce8db1500f14fb079">CreateGhostObject</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:aab9cd68816ada3cce8db1500f14fb079"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor Function.  <a href="#aab9cd68816ada3cce8db1500f14fb079"></a><br/></td></tr>
<tr class="memitem:aa90447eec1f94787ff1acc61c7d3ca2a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aa90447eec1f94787ff1acc61c7d3ca2a">GraphicsSettingsSerializableName</a> () const </td></tr>
<tr class="memdesc:aa90447eec1f94787ff1acc61c7d3ca2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings.  <a href="#aa90447eec1f94787ff1acc61c7d3ca2a"></a><br/></td></tr>
<tr class="memitem:a1b0fd7b609d3cf874e5bea821a03b385"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a1b0fd7b609d3cf874e5bea821a03b385">PhysicsSettingsSerializableName</a> () const </td></tr>
<tr class="memdesc:a1b0fd7b609d3cf874e5bea821a03b385"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings.  <a href="#a1b0fd7b609d3cf874e5bea821a03b385"></a><br/></td></tr>
<tr class="memitem:a0a6fa7fba41362c44ac666a15678f3fb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a0a6fa7fba41362c44ac666a15678f3fb">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:a0a6fa7fba41362c44ac666a15678f3fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it.  <a href="#a0a6fa7fba41362c44ac666a15678f3fb"></a><br/></td></tr>
<tr class="memitem:a9fae7ccb8bcfd0fa1288860fa11dae0f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a9fae7ccb8bcfd0fa1288860fa11dae0f">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:a9fae7ccb8bcfd0fa1288860fa11dae0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a9fae7ccb8bcfd0fa1288860fa11dae0f"></a><br/></td></tr>
<tr class="memitem:aae0cac10ca2d17f8796ae52f8a18f305"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae0cac10ca2d17f8796ae52f8a18f305"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aae0cac10ca2d17f8796ae52f8a18f305">RemoveActorFromList</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *Actor)</td></tr>
<tr class="memdesc:aae0cac10ca2d17f8796ae52f8a18f305"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for adding actors to relevant lists. <br/></td></tr>
<tr class="memitem:ac91e12e3a457552c0b0b9097dd8902fc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ac91e12e3a457552c0b0b9097dd8902fc">ThrowSerialError</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Fail) const </td></tr>
<tr class="memdesc:ac91e12e3a457552c0b0b9097dd8902fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">a Helper function that assembles strings and throws an exception  <a href="#ac91e12e3a457552c0b0b9097dd8902fc"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1NonStaticWorldObject"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1NonStaticWorldObject')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml">Mezzanine::NonStaticWorldObject</a></td></tr>
<tr class="memitem:a4eb605ae33349a8e31b10dbb2ea87923 inherit pro_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4eb605ae33349a8e31b10dbb2ea87923"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a4eb605ae33349a8e31b10dbb2ea87923">InternalSetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:a4eb605ae33349a8e31b10dbb2ea87923 inherit pro_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. <br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1WorldObject"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1WorldObject')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldObject.xhtml">Mezzanine::WorldObject</a></td></tr>
<tr class="memitem:ac324e1dfdf9cd59a5abdc0d6f8d10b4e inherit pro_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac324e1dfdf9cd59a5abdc0d6f8d10b4e"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac324e1dfdf9cd59a5abdc0d6f8d10b4e">AttachToGraphics</a> ()</td></tr>
<tr class="memdesc:ac324e1dfdf9cd59a5abdc0d6f8d10b4e inherit pro_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the terrain visible. <br/></td></tr>
<tr class="memitem:af13904d91d16ceb3c74afea152def276 inherit pro_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af13904d91d16ceb3c74afea152def276"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af13904d91d16ceb3c74afea152def276">DetachFromGraphics</a> ()</td></tr>
<tr class="memdesc:af13904d91d16ceb3c74afea152def276 inherit pro_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the terrain invisible. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a9a7e333c5e52fd5d7ae892f4691dbc16"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9a7e333c5e52fd5d7ae892f4691dbc16"></a>
std::vector&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a9a7e333c5e52fd5d7ae892f4691dbc16">AddedActors</a></td></tr>
<tr class="memdesc:a9a7e333c5e52fd5d7ae892f4691dbc16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container of actors that have been added since last frame. <br/></td></tr>
<tr class="memitem:a16427c9805ea4c87faa84715ec04f97d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a16427c9805ea4c87faa84715ec04f97d"></a>
btPairCachingGhostObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a16427c9805ea4c87faa84715ec04f97d">Ghost</a></td></tr>
<tr class="memdesc:a16427c9805ea4c87faa84715ec04f97d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The object representing the AE field itself. <br/></td></tr>
<tr class="memitem:a9a1dbe79efda62adad5f56b5f93813ca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9a1dbe79efda62adad5f56b5f93813ca"></a>
std::list&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a9a1dbe79efda62adad5f56b5f93813ca">OverlappingActors</a></td></tr>
<tr class="memdesc:a9a1dbe79efda62adad5f56b5f93813ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container for actors within the field area. <br/></td></tr>
<tr class="memitem:adaab6a94b9c4a9cfdb917ff4ce3fcabf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adaab6a94b9c4a9cfdb917ff4ce3fcabf"></a>
std::vector&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AreaEffect.xhtml#adaab6a94b9c4a9cfdb917ff4ce3fcabf">RemovedActors</a></td></tr>
<tr class="memdesc:adaab6a94b9c4a9cfdb917ff4ce3fcabf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container of actors that have been removed since last frame. <br/></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:a6940c66cc4725deb27024ddd6c5459b8 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6940c66cc4725deb27024ddd6c5459b8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GlobalTransformDirty</b></td></tr>
<tr class="memitem:a142c9f848101dec654f8eeca88e689b5 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a142c9f848101dec654f8eeca88e689b5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>LocalTransformDirty</b></td></tr>
<tr class="memitem:adc604405ff0ac70699a0286b5e4869b9 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc604405ff0ac70699a0286b5e4869b9"></a>
<a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><b>LocalXform</b></td></tr>
<tr class="memitem:acdd3042178a3bdc83c483b55498ae76e inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acdd3042178a3bdc83c483b55498ae76e"></a>
<a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Parent</b></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:ab1042d571c1a40f0ab79e33206ab9761 inherit pro_attribs_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab1042d571c1a40f0ab79e33206ab9761"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Updating</b></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a139cf05ac01161b7071c8a037c841683"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a139cf05ac01161b7071c8a037c841683"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>PhysicsManager</b></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&nbsp;Public Types inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:a6e9c08040897d349a302ff06f647168a inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e9c08040897d349a302ff06f647168a"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>AttachableContainer</b></td></tr>
<tr class="memitem:a29dc368ae43bb6544304c2fadadac55e inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29dc368ae43bb6544304c2fadadac55e"></a>
typedef <br class="typebreak"/>
AttachableContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>AttachableIterator</b></td></tr>
<tr class="memitem:a7f75a92904328d5f68362f4e3b148934 inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7f75a92904328d5f68362f4e3b148934"></a>
typedef <br class="typebreak"/>
AttachableContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstAttachableIterator</b></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This class is used to define area's in the world that have unique effects. </p>
<p>Common uses for this class are for gravity fields, and explosions. But can be made to do more. <br/>
 Note: This is a base class intended to be derived from. This class cannot be created itself. To make an <a class="el" href="classMezzanine_1_1AreaEffect.xhtml" title="This class is used to define area&#39;s in the world that have unique effects.">AreaEffect</a> class that does what you want it to, simple inherit from this class with an AE class of your own, and define the <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a988cd958e49d65331a059951af3c2884" title="Defines and applies the effect of the field.">ApplyEffect()</a> function to do what you want your effect to do. </p>

<p>Definition at line <a class="el" href="areaeffect_8h_source.xhtml#l00072">72</a> of file <a class="el" href="areaeffect_8h_source.xhtml">areaeffect.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7422b18aa40ba0d9373b1e25e278205b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::AreaEffect::AreaEffect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Basic initialization constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the field. </td></tr>
    <tr><td class="paramname">Location</td><td>The location of the AE field. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a595ea19fa61ca484d67796bc6ab74c00"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Mezzanine::AreaEffect::~AreaEffect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>Class destructor. </p>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="ab0b3159f1b4f4d65430aba657414e0eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::_Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object every frame.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1WorldObject.xhtml#af54c2dd470b534a51f12baae51631359">Mezzanine::WorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a9aff64afd90f30f28956d57aa461044d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::AddToWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1WorldObject.xhtml#a73f51f4025bfbb1f86075de45d33d10a">Mezzanine::WorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a988cd958e49d65331a059951af3c2884"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::ApplyEffect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Defines and applies the effect of the field. </p>
<p>When inheriting this class, this function is what defines the effect the field has. <br/>
 This function will be called on by the physics manager and shouldn't be called manually. </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1FieldOfForce.xhtml#ae05789a63f48de49a0fe76c238cbdc42">Mezzanine::FieldOfForce</a>, <a class="el" href="classMezzanine_1_1GravityWell.xhtml#a4f883dcfcbe9b62d87cfcab899d347be">Mezzanine::GravityWell</a>, <a class="el" href="classMezzanine_1_1GravityField.xhtml#a977e466898c7b8b9f5caa4bb3a42de88">Mezzanine::GravityField</a>, and <a class="el" href="classMezzanine_1_1TestAE.xhtml#af1d3f7ddcad4036ebf3904fd87e5fa09">Mezzanine::TestAE</a>.</p>

</div>
</div>
<a class="anchor" id="aab9cd68816ada3cce8db1500f14fb079"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::CreateGhostObject </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor Function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The location of the AE field. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5df27404888d117c0a44ba4f5863fb29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a>*&gt;&amp; Mezzanine::AreaEffect::GetAddedActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the list of actors that have been added to the list since the last simulation step. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the vector storing all the actors that have been added to the list since the last simulation step. </dd></dl>

</div>
</div>
<a class="anchor" id="a37d04f8e6d6e8451348ee60fd083968b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::AreaEffect::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the location of the object.  </p>
<p>This function will retrieve the location of the object within the world. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Mezzanine::Vector3</a> containing the location. </dd></dl>
 </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ade42648baa0f893d54b3bc5dcdfa9300">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="aedf3f0747694f989de033f046f0c35bb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a>&amp; Mezzanine::AreaEffect::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>
 </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a38f1da6bfef6666be6f5a0c3d12bbed6">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a40bbe87e9212eccae31bef25eaf142b1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::AreaEffect::GetNumAddedActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of actors added to this AE since the last update. </p>
<dl class="section note"><dt>Note</dt><dd>Updates are usually once per frame, but can be manipulated to be more or less frequent. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of new actors overlapping with this AE. </dd></dl>

</div>
</div>
<a class="anchor" id="af257df2bf68c1c34bc4ced3daa182ee5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::AreaEffect::GetNumOverlappingActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of actors currently overlapping with this AE. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of actors inside this AE. </dd></dl>

</div>
</div>
<a class="anchor" id="ac5755475929edb8c24474ec976772072"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::AreaEffect::GetNumRemovedActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of actors removed from this AE since the last update. </p>
<dl class="section note"><dt>Note</dt><dd>Updates are usually once per frame, but can be manipulated to be more or less frequent. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of actors that were found to no longer be overlapping during the last update. </dd></dl>

</div>
</div>
<a class="anchor" id="a18c9fa2cbac6e1b62d9c34b56e8f7dc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Mezzanine::AreaEffect::GetOrientation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a quaternion representing the rotation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>
 </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#adaa959e0758ca685b8009f17d671469f">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a725f67053cc638c30f146817ca7601a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::list&lt;<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a>*&gt;&amp; Mezzanine::AreaEffect::GetOverlappingActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the list of actors within this field. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the list of actors contained within this field. </dd></dl>

</div>
</div>
<a class="anchor" id="a27c4f0f45004b0e3b70c39d91e03612e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a>*&gt;&amp; Mezzanine::AreaEffect::GetRemovedActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the list of actors that have been removed from the list since the last simulation step. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the vector storing all the actors that have been removed from the list since the last simulation step. </dd></dl>

</div>
</div>
<a class="anchor" id="adc4af3aa8a43d2e08d716990153fb89d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::AreaEffect::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the scaling being applied on all axes of this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. </dd></dl>
 </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#af186dbff98c7a1884736072345384a67">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a60a0390056b5d9089df30941f4175abe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::AreaEffect::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a42bb7c2cab933d28dea86d2ec2934c6a">Mezzanine::AttachableBase</a>.</p>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1FieldOfForce.xhtml#a00498253ab8ed66173575823663e3d36">Mezzanine::FieldOfForce</a>, <a class="el" href="classMezzanine_1_1GravityWell.xhtml#ad77289ff7c1e4ca07189e1861999dc60">Mezzanine::GravityWell</a>, and <a class="el" href="classMezzanine_1_1GravityField.xhtml#a78bc15828d4ed8c8a96edbe897f95849">Mezzanine::GravityField</a>.</p>

</div>
</div>
<a class="anchor" id="aa90447eec1f94787ff1acc61c7d3ca2a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::AreaEffect::GraphicsSettingsSerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing name of the serialized graphics settings. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a641a2f221c0a3fba0f0ffc646d634b31">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a1b0fd7b609d3cf874e5bea821a03b385"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::AreaEffect::PhysicsSettingsSerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing name of the serialized graphics settings. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a1e1decda1e208587eeafa90e3f185c01">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a0a6fa7fba41362c44ac666a15678f3fb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> containing the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>A precondition of using this is that all of the actors intended for use must already be Deserialized. </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a058d16109e1fc14fe2de5845d3a013a4">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a9fae7ccb8bcfd0fa1288860fa11dae0f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CurrentRoot</td><td>The point in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> hierarchy that all this vectorw should be appended to. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a83c13a87ff50a69eaa528e1096de5f54">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="ae32884a3cecc80dcb79eac216afbac13"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::RemoveFromWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object from the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1WorldObject.xhtml#a67e3c05d50cc1ff631beecd37d87255a">Mezzanine::WorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="afd9768dd8d41039970823abd04ae45ab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::AreaEffect::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "Point2PointConstraint" </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#af4c06a15f82e81402209398ce88a8a22">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a93056bdf18b07d8067367b368fbf24a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::AreaEffect::SetLocalLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a527ef7ddbf4c3936214eff5af821ae63">Mezzanine::AttachableChild</a>.</p>

</div>
</div>
<a class="anchor" id="a59907341f2a0c8814b7962f010cea587"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::AreaEffect::SetLocalOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a3604a2450a1647ae882ef1d9dab1ec5d">Mezzanine::AttachableChild</a>.</p>

</div>
</div>
<a class="anchor" id="a4dd22757bc627242de169e31a1717139"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::AreaEffect::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a6caec63791a9143d7f6a0a58fbc1a44e">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a62bcda0a0c2a95b8f1ccdfe2cd3d1018"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::AreaEffect::SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Rotation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a93ffa6d7e23ec9015fdcf7a1b5cc6828">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="ae0448d98c3689ae407734bbcd85a08cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::AreaEffect::SetScaling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#afa55be7243c103062ad07acabbabbbfb">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="ac91e12e3a457552c0b0b9097dd8902fc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::AreaEffect::ThrowSerialError </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Fail</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>a Helper function that assembles strings and throws an exception </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Fail</td><td>The item that failed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a2bc3dc969770bb2fa0ab053b86fa8217">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="areaeffect_8h_source.xhtml">areaeffect.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Mar 30 2013 10:40:51 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
