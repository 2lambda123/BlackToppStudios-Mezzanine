<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/sqeaky/Code/Mezzanine/Mezzanine/src/uimanager.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_282391f6f4177160a7bfc5213c65158e.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_b044052e4980a71349e081a68f99b09b.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">uimanager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _uimanager_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _uimanager_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;uimanager.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;mathtool.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;UI/textureatlas.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;cameramanager.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;graphicsmanager.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;eventmanager.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;eventuserinput.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resourcemanager_8h.xhtml" title="The defintion of the Resource Manager.">resourcemanager.h</a>&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;Graphics/viewport.h&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;UI/screen.h&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;UI/button.h&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;UI/widget.h&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &quot;UI/glyph.h&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &quot;inputmanager.h&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#include &quot;Input/mouse.h&quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">template</span>&lt;&gt; UIManager* Singleton&lt;UIManager&gt;::SingletonPtr = 0;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a2101862a8b3f08f2fa657b0bffb75bd0">   65</a></span>&#160;    <a class="code" href="classMezzanine_1_1UIManager.xhtml#a2101862a8b3f08f2fa657b0bffb75bd0" title="Class Constructor.">UIManager::UIManager</a>()</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        : HoveredWidget(NULL),</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;          WidgetFocus(NULL),</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;          InputCapture(NULL),</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;          LastWidgetSelected(NULL),</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;          ButtonAutoRegister(false)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">ResourceManager::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1ResourceManager.xhtml#aee353dc44370081eaabd70f233b9368b" title="Creates an asset group.">CreateAssetGroup</a>(<span class="stringliteral">&quot;UI&quot;</span>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9" title="This is a weighting used by the main loop to decide what order the managers should be called in...">Priority</a> = 15;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a7d9205e916c67a75f6af55c038642b29">   76</a></span>&#160;    <a class="code" href="classMezzanine_1_1UIManager.xhtml#a2101862a8b3f08f2fa657b0bffb75bd0" title="Class Constructor.">UIManager::UIManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        : HoveredWidget(NULL),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;          WidgetFocus(NULL),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;          InputCapture(NULL),</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;          LastWidgetSelected(NULL),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;          ButtonAutoRegister(false)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">ResourceManager::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1ResourceManager.xhtml#aee353dc44370081eaabd70f233b9368b" title="Creates an asset group.">CreateAssetGroup</a>(<span class="stringliteral">&quot;UI&quot;</span>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9" title="This is a weighting used by the main loop to decide what order the managers should be called in...">Priority</a> = 15;<span class="comment"></span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">        /// @todo This class currently doesn&#39;t initialize anything from XML, if that changes this constructor needs to be expanded.</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span>    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ad480071e4f02d2e24903da56425e6b6a">   88</a></span>&#160;    <a class="code" href="classMezzanine_1_1UIManager.xhtml#ad480071e4f02d2e24903da56425e6b6a" title="Class Destructor.">UIManager::~UIManager</a>()</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="classMezzanine_1_1UIManager.xhtml#a43e0ae42532e4c7a9d16ea46775be110" title="Deletes all screens stored in this manager.">DestroyAllScreens</a>();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">void</span> UIManager::HoverChecks()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        HoveredWidget = <a class="code" href="classMezzanine_1_1UIManager.xhtml#ab12c172934cb6836e97568266d973e50" title="Searches all visable screens and layers to see if a widget was clicked.">CheckWidgetMouseIsOver</a>();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">if</span>(HoveredWidget)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">UI::Widget</a>* BottomMost = HoveredWidget-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#ab01ea99fe7504de6107dc558dbe30ab6" title="Gets a pointer to the Widget at the bottom of the hovered SubWidget chain.">GetBottomMostHoveredWidget</a>();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span>(UI::Widget::W_Button == BottomMost-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#a9e1a01dc48630ce92e617cc0c6e9d31a" title="Gets the type of widget this is.">GetType</a>())</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                MouseActivationCheck(static_cast&lt;UI::Button*&gt;(BottomMost));</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">void</span> UIManager::HotKeyAndInputCaptureChecks()</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">if</span>(HotKeys.empty())</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        std::vector&lt;Input::InputCode&gt; CapturedCodes;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        std::list&lt;EventUserInput*&gt;* InputList = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">EventManager::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1EventManager.xhtml#a50abe233b2f932105d0f33cd38badb26" title="This returns a complete list of all the User Input events.">GetAllUserInputEvents</a>();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a> CurrCode;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">for</span>( std::list&lt;EventUserInput*&gt;::iterator Ilit = InputList-&gt;begin() ; Ilit != InputList-&gt;end() ; Ilit++ )</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> X = 0 ; X &lt; (*Ilit)-&gt;size() ; X++ )</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                CurrCode = (*Ilit)-&gt;GetMetaCode(X).GetCode();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordflow">if</span>(LastWidgetSelected &amp;&amp; LastWidgetSelected-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#ad18ddb91597bc835d6a3678a2fbcd45d" title="Checks if this is an input capturing widget.">IsInputCaptureWidget</a>())</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                    CapturedCodes.push_back(CurrCode);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    HotKeyActivationCheck(CurrCode);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">if</span>(!CapturedCodes.empty())</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            LastWidgetSelected-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#a7aa4803d32b18d8f5d9550942b2acfe2" title="Gets the data determining what input should be captured.">GetInputCaptureData</a>()-&gt;<a class="code" href="classMezzanine_1_1UI_1_1InputCaptureData.xhtml#a84df31d8c25a576ead2d38e2933f6d35" title="Updates the list of captured inputs for the frame.">UpdateCapturedInputs</a>(CapturedCodes);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">void</span> UIManager::WidgetUpdates()</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">if</span>(HoveredWidget)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            HoveredWidget-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#aeb05b9fb68cdfc58fcff45d03e80dd39" title="For use with widget update/automation.">Update</a>();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">if</span>(HoveredWidget || WidgetFocus)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61" title="An Optional listing of value that can be used in a metacode to represent the information of a button ...">Input::ButtonState</a> State = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">InputManager::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1InputManager.xhtml#a932f1872e10404fd60b33c7e8c77326b" title="Gets the system mouse.">GetSystemMouse</a>()-&gt;<a class="code" href="classMezzanine_1_1Input_1_1Mouse.xhtml#aead7d6f78f6ad18cb967cf6d241c4ceb">GetButtonState</a>(1);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61a5beafdd93feb57496cfc110a0684e163">Input::BUTTON_PRESSING</a> == State)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                WidgetFocus = HoveredWidget;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61ac5666548694af5ebd7195efceb4835e6">Input::BUTTON_DOWN</a> == State)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">if</span>(HoveredWidget != WidgetFocus &amp;&amp; WidgetFocus)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    WidgetFocus-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#aeb05b9fb68cdfc58fcff45d03e80dd39" title="For use with widget update/automation.">Update</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61afb2375de3d3fddff958656af436265d7">Input::BUTTON_LIFTING</a> == State)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">if</span>(HoveredWidget != WidgetFocus &amp;&amp; WidgetFocus)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                    WidgetFocus-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#aeb05b9fb68cdfc58fcff45d03e80dd39" title="For use with widget update/automation.">Update</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>(HoveredWidget &amp;&amp; HoveredWidget == WidgetFocus)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                    LastWidgetSelected = HoveredWidget;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                WidgetFocus = NULL;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!HoveredWidget &amp;&amp; !WidgetFocus)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61" title="An Optional listing of value that can be used in a metacode to represent the information of a button ...">Input::ButtonState</a> State = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">InputManager::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1InputManager.xhtml#a932f1872e10404fd60b33c7e8c77326b" title="Gets the system mouse.">GetSystemMouse</a>()-&gt;<a class="code" href="classMezzanine_1_1Input_1_1Mouse.xhtml#aead7d6f78f6ad18cb967cf6d241c4ceb">GetButtonState</a>(1);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">if</span>(LastWidgetSelected &amp;&amp; <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61afb2375de3d3fddff958656af436265d7">Input::BUTTON_LIFTING</a> == State)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                LastWidgetSelected = NULL;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">void</span> UIManager::ClearButtonActivations()</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">if</span>(ActivatedButtons.empty())</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">for</span>(ButtonIterator It = ActivatedButtons.begin() ; It != ActivatedButtons.end() ; It++ )</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            (*It)-&gt;_SetActivation(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        ActivatedButtons.clear();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">void</span> UIManager::ViewportUpdateChecks()</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> x=0 ; x &lt; Screens.size() ; x++ )</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            Screens[x]-&gt;CheckViewportSize();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">void</span> UIManager::MouseActivationCheck(UI::Button* ToCheck)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">if</span>(!ToCheck)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        Input::Mouse* SysMouse = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">InputManager::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1InputManager.xhtml#a932f1872e10404fd60b33c7e8c77326b" title="Gets the system mouse.">GetSystemMouse</a>();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">const</span> std::vector&lt;Input::InputCode&gt;&amp; MouseCodes = ToCheck-&gt;GetMouseActivationButtons();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61" title="An Optional listing of value that can be used in a metacode to represent the information of a button ...">Input::ButtonState</a> State = ToCheck-&gt;IsLiftActivation() ? <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61afb2375de3d3fddff958656af436265d7">Input::BUTTON_LIFTING</a> : <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61a5beafdd93feb57496cfc110a0684e163">Input::BUTTON_PRESSING</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> X = 0 ; X &lt; MouseCodes.size() ; X++ )</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a> Code = MouseCodes.at(X);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">if</span>( SysMouse-&gt;CheckButtonState(Code,State) )</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                ToCheck-&gt;_SetActivation(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                ActivatedButtons.push_back(ToCheck);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">void</span> UIManager::HotKeyActivationCheck(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; Code)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">if</span>( Input::KEY_FIRST &lt; Code &amp;&amp; Input::KEY_LAST &gt; Code )</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            std::pair&lt;const HotKeyIterator,const HotKeyIterator&gt; Result = HotKeys.equal_range(Code);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span>( (*Result.first).first != Code )</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">for</span>( HotKeyIterator It = Result.first ; It != Result.second ; It++ )</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">if</span>((*It).second-&gt;IsVisible())</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    (*It).second-&gt;_SetActivation(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span>    <span class="comment">// Texture Atlas Management</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a78c3b7a0aafc83e0b4ea55b0b0ad640c">  216</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a78c3b7a0aafc83e0b4ea55b0b0ad640c" title="Loads a Mezzanine Texture Atlas file for use with UI::Screen&#39;s.">UIManager::LoadMTA</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Group)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a>* NewAtlas = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a>(Name + <span class="stringliteral">&quot;.mta&quot;</span>,Group);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        Atlases[Name] = NewAtlas;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a904d4d7a3957a13cf5e27e8d97dd1add">  222</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a>* <a class="code" href="classMezzanine_1_1UIManager.xhtml#a904d4d7a3957a13cf5e27e8d97dd1add" title="Gets a loaded Atlas being stored in this manager.">UIManager::GetAtlas</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; AtlasName)</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">        /// @todo These NULL returns should probably be exceptions.</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment"></span>        <span class="keywordflow">if</span>(<span class="stringliteral">&quot;&quot;</span> == AtlasName)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            AtlasIterator It = Atlases.begin();</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">if</span>(It != Atlases.end()) <span class="keywordflow">return</span> (*It).second;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        AtlasIterator It = Atlases.find(AtlasName);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">if</span>(It != Atlases.end()) <span class="keywordflow">return</span> (*It).second;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"></span>    <span class="comment">// Screen Management</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a7dee096496bf1d4b5cf3002a40146525">  239</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* <a class="code" href="classMezzanine_1_1UIManager.xhtml#a7dee096496bf1d4b5cf3002a40146525" title="Creates an internal HUD screen.">UIManager::CreateScreen</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; ScreenName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Atlas, <a class="code" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml" title="This class is for creating and managing viewports within a game window.">Graphics::Viewport</a>* WindowViewport)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* MezzScreen = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>(ScreenName, Atlas, WindowViewport);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        Screens.push_back(MezzScreen);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        VisibleScreenIterator It = VisibleScreens.find(WindowViewport);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">if</span>( VisibleScreens.end() == It )</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            VisibleScreens.insert( std::pair&lt;Graphics::Viewport*,UI::Screen*&gt;(WindowViewport,MezzScreen) );</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            MezzScreen-&gt;Visible = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> MezzScreen;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a11a4962c5f55d915d01a5598afcff6d6">  255</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* <a class="code" href="classMezzanine_1_1UIManager.xhtml#a11a4962c5f55d915d01a5598afcff6d6" title="Gets an already created screen by name.">UIManager::GetScreen</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">for</span>( ScreenIterator it = Screens.begin() ; it != Screens.end() ; it++ )</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="keywordflow">if</span> ( Name == (*it)-&gt;GetName() )</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* Screen = (*it);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordflow">return</span> Screen;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            }</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a6ac35a5f9781c460416fd6bfab65e5e7">  268</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* <a class="code" href="classMezzanine_1_1UIManager.xhtml#a11a4962c5f55d915d01a5598afcff6d6" title="Gets an already created screen by name.">UIManager::GetScreen</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a>&amp; Index)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">return</span> Screens[Index];</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a847efdfe7496f7bf3aeaef9991a3a631">  273</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a847efdfe7496f7bf3aeaef9991a3a631" title="Gets the number of screens created and stored in this manager.">UIManager::GetNumScreens</a>()</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">return</span> Screens.size();</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a8634d75235a218f1b7c77a33fb2c4273">  278</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a8634d75235a218f1b7c77a33fb2c4273" title="Deletes a screen and removes all trace of it from the manager.">UIManager::DestroyScreen</a>(<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* Screen)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">if</span>(Screens.empty())</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">for</span>( ScreenIterator it = Screens.begin() ; it != Screens.end() ; it++ )</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">if</span>( Screen == (*it) )</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                Screens.erase(it);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a43e0ae42532e4c7a9d16ea46775be110">  293</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a43e0ae42532e4c7a9d16ea46775be110" title="Deletes all screens stored in this manager.">UIManager::DestroyAllScreens</a>()</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">if</span>(Screens.empty())</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">for</span>( ScreenIterator it = Screens.begin() ; it != Screens.end() ; it++ )</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        Screens.clear();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ab34beacbbd550c2a4d730e511d65e89d">  305</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* <a class="code" href="classMezzanine_1_1UIManager.xhtml#ab34beacbbd550c2a4d730e511d65e89d" title="Gets the currently visible screen on the provided viewport.">UIManager::GetVisibleScreenOnViewport</a>(<a class="code" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml" title="This class is for creating and managing viewports within a game window.">Graphics::Viewport</a>* WindowViewport)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        VisibleScreenIterator It = VisibleScreens.find(WindowViewport);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">if</span>( VisibleScreens.end() != It ) <span class="keywordflow">return</span> (*It).second;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment"></span>    <span class="comment">// HotKey and Activation Management</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a9d8cc26ef8d2b8df8312eaeea184dd7b">  315</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a9d8cc26ef8d2b8df8312eaeea184dd7b" title="Binds a key to a button.">UIManager::BindHotKey</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; HotKey, <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">UI::Button</a>* BoundButton)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">if</span>( Input::KEY_FIRST &lt; HotKey &amp;&amp; Input::KEY_LAST &gt; HotKey )</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            HotKeys.insert(std::pair&lt;Input::InputCode,UI::Button*&gt;(HotKey,BoundButton));</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ab08ca0871b87c2f2ad098bdbdb3ab386">  321</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#ab08ca0871b87c2f2ad098bdbdb3ab386" title="Removes a previously set hotkey binding.">UIManager::UnbindHotKey</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a>&amp; HotKey, <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">UI::Button</a>* BoundButton)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        std::pair&lt;const HotKeyIterator,const HotKeyIterator&gt; Result = HotKeys.equal_range(HotKey);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">for</span>( HotKeyIterator It = Result.first ; It != Result.second ; It++ )</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">if</span>(BoundButton == (*It).second)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                HotKeys.erase(It);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ae08dfa033157e91247ca95bae4d3fd7f">  334</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#ae08dfa033157e91247ca95bae4d3fd7f" title="Clears all registered hotkeys.">UIManager::RemoveAllHotKeys</a>()</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        HotKeys.clear();</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a5dda002532786846f076ed9c685af2f5">  339</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a5dda002532786846f076ed9c685af2f5" title="Enables whether or not to automatically set the activation key or button for UI buttons.">UIManager::EnableButtonAutoRegister</a>(<span class="keywordtype">bool</span> Enable)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        ButtonAutoRegister = Enable;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a7e88a8d25ae95440032333179f2f493f">  344</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a7e88a8d25ae95440032333179f2f493f" title="Gets whether or not the ButtonAutoRegister feature is enabled.">UIManager::ButtonAutoRegisterEnabled</a>()</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">return</span> ButtonAutoRegister;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a293f7af73b027ce667fed5a7c6211738">  349</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a293f7af73b027ce667fed5a7c6211738" title="Adds a key or button that will be auto-registered with every created UI button.">UIManager::AddAutoRegisterCode</a>(<a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a> Code)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">for</span>( CodeIterator It = AutoRegisterCodes.begin() ; It != AutoRegisterCodes.end() ; It++ )</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keywordflow">if</span>((*It)==Code)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        }</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        AutoRegisterCodes.push_back(Code);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a129cd96269e23a33c38a6c6dfe149fc2">  359</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a129cd96269e23a33c38a6c6dfe149fc2" title="Removes a previously set auto-registering input code.">UIManager::RemoveAutoRegisterCode</a>(<a class="code" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a" title="The InputCode enum defines all the posible types of inputs.">Input::InputCode</a> Code)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">for</span>( CodeIterator It = AutoRegisterCodes.begin() ; It != AutoRegisterCodes.end() ; It++ )</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        {</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keywordflow">if</span>((*It)==Code)</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                AutoRegisterCodes.erase(It);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a294aa11be082a4d3130e7aedf34747c8">  371</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a294aa11be082a4d3130e7aedf34747c8" title="Removes all auto-registering input codes.">UIManager::RemoveAllAutoRegisterCodes</a>()</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        AutoRegisterCodes.clear();</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a20dcc620a26bc2cce1094f810aca4500">  376</a></span>&#160;    UIManager::CodeContainer* <a class="code" href="classMezzanine_1_1UIManager.xhtml#a20dcc620a26bc2cce1094f810aca4500" title="Gets the list of codes that will be auto-registered with each UI button.">UIManager::GetAutoRegisteredCodes</a>()</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">return</span> &amp;AutoRegisterCodes;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment"></span>    <span class="comment">// Utility</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a62fe2ec9d4dad13762aa154f65d707a7">  384</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a62fe2ec9d4dad13762aa154f65d707a7" title="Forces everything loaded into the UI system to be redrawn.">UIManager::RedrawAll</a>(<span class="keywordtype">bool</span> Force)</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    {</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">for</span>( ScreenIterator it = Screens.begin() ; it != Screens.end() ; it++ )</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        {</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            (*it)-&gt;_RedrawAllIndexes(Force);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ab12c172934cb6836e97568266d973e50">  392</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">UI::Widget</a>* <a class="code" href="classMezzanine_1_1UIManager.xhtml#ab12c172934cb6836e97568266d973e50" title="Searches all visable screens and layers to see if a widget was clicked.">UIManager::CheckWidgetMouseIsOver</a>()</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">for</span>( VisibleScreenIterator It = VisibleScreens.begin() ; It != VisibleScreens.end() ; ++It )</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        {</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">if</span>( (*It).second )</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            {</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">UI::Widget</a>* widget = (*It).second-&gt;CheckWidgetMouseIsOver();</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="keywordflow">if</span>(widget)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    <span class="keywordflow">return</span> widget;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        }</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a7f3ea82551d2a894545235f4a9cba549">  408</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml#a7f3ea82551d2a894545235f4a9cba549" title="Checks to see if the mouse is over a UI element.">UIManager::MouseIsInUISystem</a>()</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">return</span> (HoveredWidget || WidgetFocus);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div>
<div class="line"><a name="l00413"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a10d0c53e12e365d4e48ef9daab155817">  413</a></span>&#160;    UIManager::GlyphIndexResult <a class="code" href="classMezzanine_1_1UIManager.xhtml#a10d0c53e12e365d4e48ef9daab155817" title="Suggests a glyph index based on the desired actual height.">UIManager::SuggestGlyphIndex</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a>&amp; Height, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Atlas)</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    {</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">UI::TextureAtlas</a>* TheAtlas = NULL;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        AtlasIterator It = Atlases.find(Atlas);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keywordflow">if</span>(It != Atlases.end()) TheAtlas = (*It).second;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a14311376b409dd4861e4bf0f1d640ea5" title="When used a instance of InvalidParametersException is thrown. Thrown when parameters are checked at r...">Exception::INVALID_PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Attempting to access TextureAtlas \&quot;&quot;</span> + Atlas + <span class="stringliteral">&quot;\&quot;, which does not exist or is not loaded.&quot;</span>);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        }</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        std::map&lt;UInt32,UI::GlyphData*&gt;&amp; Glyphs = TheAtlas-&gt;GetGlyphs();</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> LargerMatch = 0;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> SmallerMatch = 0;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> LargerHeight = 0;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> SmallerHeight = 0;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> LargerMatchDiff = 1000000.0;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> SmallerMatchDiff = 1000000.0;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> RequestedHeight = (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>)Height;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keywordflow">for</span>( std::map&lt;UInt32,UI::GlyphData*&gt;::iterator it = Glyphs.begin() ; it != Glyphs.end() ; it++ )</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Diff = 0.0;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            <span class="keywordflow">if</span>((*it).second-&gt;LineHeight &gt; RequestedHeight)</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            {</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                Diff = (*it).second-&gt;LineHeight - RequestedHeight;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="keywordflow">if</span>(Diff &lt; LargerMatchDiff)</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                    LargerMatch = (*it).first;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                    LargerHeight = (*it).second-&gt;LineHeight;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                    LargerMatchDiff = Diff;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                Diff = RequestedHeight - (*it).second-&gt;LineHeight;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="keywordflow">if</span>(Diff &lt; SmallerMatchDiff)</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                {</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                    SmallerMatch = (*it).first;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                    SmallerHeight = (*it).second-&gt;LineHeight;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                    SmallerMatchDiff = Diff;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                }</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            }</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        }</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Scale = 1;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">if</span>(LargerMatch != 0)</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            Scale = RequestedHeight / LargerHeight;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <span class="keywordflow">return</span> GlyphIndexResult(LargerMatch,Scale);</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            Scale = RequestedHeight / SmallerHeight;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            <span class="keywordflow">return</span> GlyphIndexResult(SmallerMatch,Scale);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        }</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment"></span>    <span class="comment">// Fetch Methods</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ac4a7e054c5a5e52d37f1ff38f5328e9e">  470</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">UI::Widget</a>* UIManager::GetHoveredWidget()</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keywordflow">return</span> HoveredWidget;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a57b306a3fca917e2dfa1c05ca87f6262">  475</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">UI::Widget</a>* UIManager::GetWidgetFocus()</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    {</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="keywordflow">return</span> WidgetFocus;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#ac4fda10f2f5af5df7ecbc089eb1ee359">  480</a></span>&#160;    <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">UI::Widget</a>* UIManager::GetWidgetCapturingInput()</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    {</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">return</span> InputCapture;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment"></span>    <span class="comment">// Inherited from ManagerBase</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a51dc53c08ac8657133279e75fbce466a">  488</a></span>&#160;    <span class="keywordtype">void</span> UIManager::Initialize()</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        Initialized = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    }</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div>
<div class="line"><a name="l00493"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#af774da651d30b4fe1ea086899c1961ca">  493</a></span>&#160;    <span class="keywordtype">void</span> UIManager::DoMainLoopItems()</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        ViewportUpdateChecks();</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        ClearButtonActivations();</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        HoverChecks();</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        HotKeyAndInputCaptureChecks();</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        WidgetUpdates();</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#aa900905eb59df281fd329c3f0f11f1ef">  502</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> UIManager::GetInterfaceType()<span class="keyword"> const</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> ManagerBase::UIManager; }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div>
<div class="line"><a name="l00505"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a9e3cd00f851c07ba4f5d8a7f1a867b19">  505</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> UIManager::GetImplementationTypeName()<span class="keyword"> const</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultUIManager&quot;</span>; }</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"></span>    <span class="comment">// Internal Methods</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UIManager.xhtml#a7f28a7fbc0ea37df3c53bbd17549837b">  511</a></span>&#160;    <span class="keywordtype">void</span> UIManager::_NotifyScreenVisibility(<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">UI::Screen</a>* BeingShown, <span class="keywordtype">bool</span> Visible)</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    {</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        VisibleScreenIterator It = VisibleScreens.find(BeingShown-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#ae7e723a811859d8b8fc002cb296293b7" title="Gets the Viewport this screen is currently rendering to.">GetViewport</a>());</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keywordflow">if</span>( VisibleScreens.end() != It )</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            <span class="keywordflow">if</span>( (*It).second )</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                (*It).second-&gt;Visible = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keywordflow">if</span>(Visible) (*It).second = BeingShown;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <span class="keywordflow">else</span> (*It).second = NULL;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            VisibleScreens.insert( std::pair&lt;Graphics::Viewport*,UI::Screen*&gt;(BeingShown-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#ae7e723a811859d8b8fc002cb296293b7" title="Gets the Viewport this screen is currently rendering to.">GetViewport</a>(), ( Visible ? BeingShown : NULL ) ) );</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        }</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    }</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment"></span>    <span class="comment">// DefaultUIManagerFactory Methods</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div>
<div class="line"><a name="l00529"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultUIManagerFactory.xhtml#a90474a073408c5465dfdea217bac6076">  529</a></span>&#160;    DefaultUIManagerFactory::DefaultUIManagerFactory()</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    {</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultUIManagerFactory.xhtml#ad93a336f5052ea14c3457c7c7ab2fb9d">  533</a></span>&#160;    DefaultUIManagerFactory::~DefaultUIManagerFactory()</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    {</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    }</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div>
<div class="line"><a name="l00537"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultUIManagerFactory.xhtml#a7928433273f07d9dec14eb6062605ae3">  537</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> DefaultUIManagerFactory::GetManagerTypeName()<span class="keyword"> const</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultUIManager&quot;</span>;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    }</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div>
<div class="line"><a name="l00542"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultUIManagerFactory.xhtml#aee5a9ea55ba77f7d118dc052605bf2d3">  542</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* DefaultUIManagerFactory::CreateManager(<a class="code" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28" title="This is a datatype mostly used for describing settings or parameters that can&#39;t be declared in advanc...">NameValuePairList</a>&amp; Params)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordflow">if</span>(UIManager::SingletonValid())</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">            /// @todo Add something to log a warning that the manager exists and was requested to be constructed when we have a logging manager set up.</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment"></span>            <span class="keywordflow">return</span> UIManager::GetSingletonPtr();</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        }<span class="keywordflow">else</span> <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a>();</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultUIManagerFactory.xhtml#a64230cbd8c6dffa83018189d0dae5116">  551</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* DefaultUIManagerFactory::CreateManager(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    {</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keywordflow">if</span>(UIManager::SingletonValid())</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">            /// @todo Add something to log a warning that the manager exists and was requested to be constructed when we have a logging manager set up.</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment"></span>            <span class="keywordflow">return</span> UIManager::GetSingletonPtr();</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        }<span class="keywordflow">else</span> <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a>(XMLNode);</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00560"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultUIManagerFactory.xhtml#a7080b5abe0d56643da05456c9ae13d7c">  560</a></span>&#160;    <span class="keywordtype">void</span> DefaultUIManagerFactory::DestroyManager(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    {</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keyword">delete</span> ToBeDestroyed;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 22:24:20 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
