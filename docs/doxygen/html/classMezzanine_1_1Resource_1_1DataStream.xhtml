<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Resource::DataStream Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml">Resource</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">DataStream</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Resource_1_1DataStream-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Resource::DataStream Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This represents a stream to a piece of data, usually a file.  
 <a href="classMezzanine_1_1Resource_1_1DataStream.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="datastream_8h_source.xhtml">datastream.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Resource::DataStream:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Resource_1_1DataStream__inherit__graph.svg" width="363" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Resource::DataStream:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Resource_1_1DataStream__coll__graph.svg" width="174" height="246"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afe2916e4ed8c06130d032d99c5a532f2"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> { <b>DS_Read</b> = 1, 
<b>DS_Write</b> = 2
 }</td></tr>
<tr class="memdesc:afe2916e4ed8c06130d032d99c5a532f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum describes the type of access to the resource. <br/></td></tr>
<tr class="separator:afe2916e4ed8c06130d032d99c5a532f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac88ac21234a2b0b34e03ec4246d356c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356c">StreamFlags</a> { <b>SF_None</b> = 0, 
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356cad012c5a3ee64eae0312983dc8d33aa99">SF_CreateOnFail</a> = 1, 
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356caa8a0fd61e54eeb1fe009e28f61a791c7">SF_Binary</a> = 2, 
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356ca1a0a24a169dd2b57cbaaa7b908c9285c">SF_Truncate</a> = 4
 }</td></tr>
<tr class="memdesc:aac88ac21234a2b0b34e03ec4246d356c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum describes the flags that control certain behaviors of a stream.  <a href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356c">More...</a><br/></td></tr>
<tr class="separator:aac88ac21234a2b0b34e03ec4246d356c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5d69345b9e91455ce5bcc3e56e33f0f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a5d69345b9e91455ce5bcc3e56e33f0f2">DataStream</a> (const <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> &amp;Mode=DS_Read)</td></tr>
<tr class="memdesc:a5d69345b9e91455ce5bcc3e56e33f0f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#a5d69345b9e91455ce5bcc3e56e33f0f2">More...</a><br/></td></tr>
<tr class="separator:a5d69345b9e91455ce5bcc3e56e33f0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3efd57c5ec4a24ae0f03469c7aae3f40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a3efd57c5ec4a24ae0f03469c7aae3f40">DataStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, const <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> &amp;Mode=DS_Read)</td></tr>
<tr class="memdesc:a3efd57c5ec4a24ae0f03469c7aae3f40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Named constructor.  <a href="#a3efd57c5ec4a24ae0f03469c7aae3f40">More...</a><br/></td></tr>
<tr class="separator:a3efd57c5ec4a24ae0f03469c7aae3f40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae928fe7f1490fa4e1c8720150feb0efe"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae928fe7f1490fa4e1c8720150feb0efe"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#ae928fe7f1490fa4e1c8720150feb0efe">~DataStream</a> ()</td></tr>
<tr class="memdesc:ae928fe7f1490fa4e1c8720150feb0efe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:ae928fe7f1490fa4e1c8720150feb0efe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff1a3ceed4d6db62361544440c1bac32"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aff1a3ceed4d6db62361544440c1bac32"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aff1a3ceed4d6db62361544440c1bac32">Close</a> ()=0</td></tr>
<tr class="memdesc:aff1a3ceed4d6db62361544440c1bac32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the stream to the resource. <br/></td></tr>
<tr class="separator:aff1a3ceed4d6db62361544440c1bac32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a606ec8602a93ddda483be1454f7e98a4"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a606ec8602a93ddda483be1454f7e98a4">EoF</a> () const =0</td></tr>
<tr class="memdesc:a606ec8602a93ddda483be1454f7e98a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the current position is at the end of the file/stream.  <a href="#a606ec8602a93ddda483be1454f7e98a4">More...</a><br/></td></tr>
<tr class="separator:a606ec8602a93ddda483be1454f7e98a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae782c5c017c91f2de472b977b14632bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#ae782c5c017c91f2de472b977b14632bc">GetAccessMode</a> () const </td></tr>
<tr class="memdesc:ae782c5c017c91f2de472b977b14632bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set access mode for this data stream.  <a href="#ae782c5c017c91f2de472b977b14632bc">More...</a><br/></td></tr>
<tr class="separator:ae782c5c017c91f2de472b977b14632bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0351a0b4e2948473d9000c59b9486e11"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a0351a0b4e2948473d9000c59b9486e11">GetAsString</a> ()</td></tr>
<tr class="memdesc:a0351a0b4e2948473d9000c59b9486e11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the contents of the stream as a string.  <a href="#a0351a0b4e2948473d9000c59b9486e11">More...</a><br/></td></tr>
<tr class="separator:a0351a0b4e2948473d9000c59b9486e11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d82ff6feb1f8e8c3814daf60b3682d8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a8d82ff6feb1f8e8c3814daf60b3682d8">GetLine</a> (bool Trim=true)</td></tr>
<tr class="memdesc:a8d82ff6feb1f8e8c3814daf60b3682d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the contents of the current line in the stream.  <a href="#a8d82ff6feb1f8e8c3814daf60b3682d8">More...</a><br/></td></tr>
<tr class="separator:a8d82ff6feb1f8e8c3814daf60b3682d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f7035f42f32a4cef1d094c421e904b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a37f7035f42f32a4cef1d094c421e904b">GetName</a> () const </td></tr>
<tr class="memdesc:a37f7035f42f32a4cef1d094c421e904b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this resource.  <a href="#a37f7035f42f32a4cef1d094c421e904b">More...</a><br/></td></tr>
<tr class="separator:a37f7035f42f32a4cef1d094c421e904b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2f840e59423e73557b1c8781ac4ad22"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aa2f840e59423e73557b1c8781ac4ad22">GetSize</a> () const </td></tr>
<tr class="memdesc:aa2f840e59423e73557b1c8781ac4ad22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the stream.  <a href="#aa2f840e59423e73557b1c8781ac4ad22">More...</a><br/></td></tr>
<tr class="separator:aa2f840e59423e73557b1c8781ac4ad22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e5166ed06cc36f222f9585963686608"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a6e5166ed06cc36f222f9585963686608">IsReadable</a> () const </td></tr>
<tr class="memdesc:a6e5166ed06cc36f222f9585963686608"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether this stream can be read.  <a href="#a6e5166ed06cc36f222f9585963686608">More...</a><br/></td></tr>
<tr class="separator:a6e5166ed06cc36f222f9585963686608"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeefdbb71d557d0696b661ecbc8be2cf2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aeefdbb71d557d0696b661ecbc8be2cf2">IsWriteable</a> () const </td></tr>
<tr class="memdesc:aeefdbb71d557d0696b661ecbc8be2cf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether this stream can be written to.  <a href="#aeefdbb71d557d0696b661ecbc8be2cf2">More...</a><br/></td></tr>
<tr class="separator:aeefdbb71d557d0696b661ecbc8be2cf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9b597f7d4561a7425b96bb497e6dce2"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#ad9b597f7d4561a7425b96bb497e6dce2">Read</a> (void *Buffer, const size_t &amp;Count)=0</td></tr>
<tr class="memdesc:ad9b597f7d4561a7425b96bb497e6dce2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads data from the stream, copying to a buffer.  <a href="#ad9b597f7d4561a7425b96bb497e6dce2">More...</a><br/></td></tr>
<tr class="separator:ad9b597f7d4561a7425b96bb497e6dce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7de500ab600bffc67beeb5f1f1eaeff"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aa7de500ab600bffc67beeb5f1f1eaeff">ReadLine</a> (<a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, size_t MaxCount, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Delim=&quot;\n&quot;)</td></tr>
<tr class="memdesc:aa7de500ab600bffc67beeb5f1f1eaeff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single line from a string.  <a href="#aa7de500ab600bffc67beeb5f1f1eaeff">More...</a><br/></td></tr>
<tr class="separator:aa7de500ab600bffc67beeb5f1f1eaeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93e869b3f6bb6f8cad75522f01d68e78"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a93e869b3f6bb6f8cad75522f01d68e78">Seek</a> (const size_t &amp;Position)=0</td></tr>
<tr class="memdesc:a93e869b3f6bb6f8cad75522f01d68e78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current position in the stream.  <a href="#a93e869b3f6bb6f8cad75522f01d68e78">More...</a><br/></td></tr>
<tr class="separator:a93e869b3f6bb6f8cad75522f01d68e78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ba58755ae72eae04678c42e5e2c22b9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a5ba58755ae72eae04678c42e5e2c22b9">Skip</a> (const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> &amp;Count)=0</td></tr>
<tr class="memdesc:a5ba58755ae72eae04678c42e5e2c22b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the position in the stream.  <a href="#a5ba58755ae72eae04678c42e5e2c22b9">More...</a><br/></td></tr>
<tr class="separator:a5ba58755ae72eae04678c42e5e2c22b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f6f56ae1ad15cab26cc306d69f08c9d"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a7f6f56ae1ad15cab26cc306d69f08c9d">SkipLine</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Delim=&quot;\n&quot;)</td></tr>
<tr class="memdesc:a7f6f56ae1ad15cab26cc306d69f08c9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the current position to the start of the next line.  <a href="#a7f6f56ae1ad15cab26cc306d69f08c9d">More...</a><br/></td></tr>
<tr class="separator:a7f6f56ae1ad15cab26cc306d69f08c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fa4e7d3297ffead34f4aed868dcb633"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a0fa4e7d3297ffead34f4aed868dcb633">Tell</a> ()=0</td></tr>
<tr class="memdesc:a0fa4e7d3297ffead34f4aed868dcb633"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the offset of the current position from the start position.  <a href="#a0fa4e7d3297ffead34f4aed868dcb633">More...</a><br/></td></tr>
<tr class="separator:a0fa4e7d3297ffead34f4aed868dcb633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafdbe4aeb8e8743d514fbd1075a30859"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aafdbe4aeb8e8743d514fbd1075a30859">Write</a> (const void *Buffer, const size_t &amp;Count)=0</td></tr>
<tr class="memdesc:aafdbe4aeb8e8743d514fbd1075a30859"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes data from the stream, copying from the provided buffer.  <a href="#aafdbe4aeb8e8743d514fbd1075a30859">More...</a><br/></td></tr>
<tr class="separator:aafdbe4aeb8e8743d514fbd1075a30859"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a1331a3a41cc51912619443af35b0a4f6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1331a3a41cc51912619443af35b0a4f6"></a>
<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a1331a3a41cc51912619443af35b0a4f6">Access</a></td></tr>
<tr class="memdesc:a1331a3a41cc51912619443af35b0a4f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of access this stream has to the resource. <br/></td></tr>
<tr class="separator:a1331a3a41cc51912619443af35b0a4f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c8f09b002ce06283df8f1f1791fef07"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c8f09b002ce06283df8f1f1791fef07"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a4c8f09b002ce06283df8f1f1791fef07">ResourceName</a></td></tr>
<tr class="memdesc:a4c8f09b002ce06283df8f1f1791fef07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the resource. If this is a stream to a file, this should be the filename. <br/></td></tr>
<tr class="separator:a4c8f09b002ce06283df8f1f1791fef07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d92c94764fb8d3cdd1c7e4575625a51"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d92c94764fb8d3cdd1c7e4575625a51"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#a3d92c94764fb8d3cdd1c7e4575625a51">Size</a></td></tr>
<tr class="memdesc:a3d92c94764fb8d3cdd1c7e4575625a51"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the stream. <br/></td></tr>
<tr class="separator:a3d92c94764fb8d3cdd1c7e4575625a51"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This represents a stream to a piece of data, usually a file. </p>
<p>This is a base class that can be overriden to read from a variey of sources including data in memory, and archive files. </p>

<p>Definition at line <a class="el" href="datastream_8h_source.xhtml#l00059">59</a> of file <a class="el" href="datastream_8h_source.xhtml">datastream.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="aac88ac21234a2b0b34e03ec4246d356c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#aac88ac21234a2b0b34e03ec4246d356c">Mezzanine::Resource::DataStream::StreamFlags</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This enum describes the flags that control certain behaviors of a stream. </p>
<p>It is important to note that not all of these flags are used by all streams. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="aac88ac21234a2b0b34e03ec4246d356cad012c5a3ee64eae0312983dc8d33aa99"></a>SF_CreateOnFail</em>&nbsp;</td><td class="fielddoc">
<p>In the event of a failure to find the file, create it. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aac88ac21234a2b0b34e03ec4246d356caa8a0fd61e54eeb1fe009e28f61a791c7"></a>SF_Binary</em>&nbsp;</td><td class="fielddoc">
<p>Tell the stream that the file in question is Binary. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aac88ac21234a2b0b34e03ec4246d356ca1a0a24a169dd2b57cbaaa7b908c9285c"></a>SF_Truncate</em>&nbsp;</td><td class="fielddoc">
<p>Clear the contents of the file when opening. Note that this will also create the file if it's not found. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="datastream_8h_source.xhtml#l00072">72</a> of file <a class="el" href="datastream_8h_source.xhtml">datastream.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5d69345b9e91455ce5bcc3e56e33f0f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Resource::DataStream::DataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> &amp;&#160;</td>
          <td class="paramname"><em>Mode</em> = <code>DS_Read</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Mode</td><td>The access mode for the stream. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3efd57c5ec4a24ae0f03469c7aae3f40"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Resource::DataStream::DataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> &amp;&#160;</td>
          <td class="paramname"><em>Mode</em> = <code>DS_Read</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Named constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the stream. </td></tr>
    <tr><td class="paramname">Mode</td><td>The access mode for the stream. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a606ec8602a93ddda483be1454f7e98a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Resource::DataStream::EoF </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not the current position is at the end of the file/stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the current position has reached the end of the stream, false otherwise. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Resource_1_1FileStreamDataStream.xhtml#a44d5128d782a5408ad7dc4d120fb20c9">Mezzanine::Resource::FileStreamDataStream</a>, <a class="el" href="classMezzanine_1_1Resource_1_1FileHandleDataStream.xhtml#abb729d3ee906743c8dd2e036cc839cb2">Mezzanine::Resource::FileHandleDataStream</a>, and <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a3c30367e57de9b7c6a29e8dd7283716f">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="ae782c5c017c91f2de472b977b14632bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml#afe2916e4ed8c06130d032d99c5a532f2">AccessMode</a> Mezzanine::Resource::DataStream::GetAccessMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the currently set access mode for this data stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an enum value representing the current access mode for this data stream. </dd></dl>

</div>
</div>
<a class="anchor" id="a0351a0b4e2948473d9000c59b9486e11"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Resource::DataStream::GetAsString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the contents of the stream as a string. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string with the contents of the stream. </dd></dl>

</div>
</div>
<a class="anchor" id="a8d82ff6feb1f8e8c3814daf60b3682d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Resource::DataStream::GetLine </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Trim</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the contents of the current line in the stream. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function should only be used if a file was opened in binary mode. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trim</td><td>Whether or not to trim whitespaces on both sides of the string. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing characters from the current position in the stream to the end of the line. </dd></dl>

</div>
</div>
<a class="anchor" id="a37f7035f42f32a4cef1d094c421e904b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a>&amp; Mezzanine::Resource::DataStream::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the name of this resource. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to a string containing the name of this resource if one was assigned. </dd></dl>

</div>
</div>
<a class="anchor" id="aa2f840e59423e73557b1c8781ac4ad22"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t Mezzanine::Resource::DataStream::GetSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the size of the stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the size of this stream in bytes. </dd></dl>

</div>
</div>
<a class="anchor" id="a6e5166ed06cc36f222f9585963686608"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Resource::DataStream::IsReadable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether this stream can be read. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this stream is in reading mode, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="aeefdbb71d557d0696b661ecbc8be2cf2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Resource::DataStream::IsWriteable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether this stream can be written to. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this stream is in writing mode, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ad9b597f7d4561a7425b96bb497e6dce2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t Mezzanine::Resource::DataStream::Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>Count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads data from the stream, copying to a buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>The buffer to place data from the stream. </td></tr>
    <tr><td class="paramname">Count</td><td>The number of bytes to read from the stream. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes read. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Resource_1_1FileStreamDataStream.xhtml#addddfb70429bcb6606809678d75a222e">Mezzanine::Resource::FileStreamDataStream</a>, <a class="el" href="classMezzanine_1_1Resource_1_1FileHandleDataStream.xhtml#a0803cc15f2a5444c0a01d3e73506f5b9">Mezzanine::Resource::FileHandleDataStream</a>, and <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#ae665ebaff9d35e50a6d5fc04d28931e2">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="aa7de500ab600bffc67beeb5f1f1eaeff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t Mezzanine::Resource::DataStream::ReadLine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>MaxCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Delim</em> = <code>&quot;\n&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a single line from a string. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function should only be used if a file was opened in binary mode. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>Pointer to the buffer to copy to. </td></tr>
    <tr><td class="paramname">MaxCount</td><td>The maximum number of bytes to read. Usually you want this to be your buffer size. </td></tr>
    <tr><td class="paramname">Delim</td><td>The character that marks the end of a line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes actually read, not including the Delimiter. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#af7bda3553741235731776c77be64f59e">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="a93e869b3f6bb6f8cad75522f01d68e78"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Resource::DataStream::Seek </td>
          <td>(</td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the current position in the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>The position in the stream to be set as current. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Resource_1_1FileStreamDataStream.xhtml#aaf271d81777442037b87114bc56acf99">Mezzanine::Resource::FileStreamDataStream</a>, <a class="el" href="classMezzanine_1_1Resource_1_1FileHandleDataStream.xhtml#abf6a84ea7bc700604f9dd342aef2d672">Mezzanine::Resource::FileHandleDataStream</a>, and <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a028e5ebf241017faaf3d09222792b44b">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="a5ba58755ae72eae04678c42e5e2c22b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Resource::DataStream::Skip </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> &amp;&#160;</td>
          <td class="paramname"><em>Count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Advances the position in the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Count</td><td>The number of bytes to skip/advance in the stream from the current position. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Resource_1_1FileStreamDataStream.xhtml#a19878ee75ebafbbdc895bac67797f51c">Mezzanine::Resource::FileStreamDataStream</a>, <a class="el" href="classMezzanine_1_1Resource_1_1FileHandleDataStream.xhtml#a9e3ee64b2ca632db7b9e17c8abc23191">Mezzanine::Resource::FileHandleDataStream</a>, and <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a40cf0a8b3bc18009ec612bb7d9c9e530">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="a7f6f56ae1ad15cab26cc306d69f08c9d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t Mezzanine::Resource::DataStream::SkipLine </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Delim</em> = <code>&quot;\n&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Moves the current position to the start of the next line. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function should only be used if a file was opened in binary mode. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Delim</td><td>The character that marks the end of a line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes skipped. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#ad7fa1349ec675dd99afbd74443879f4d">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="a0fa4e7d3297ffead34f4aed868dcb633"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t Mezzanine::Resource::DataStream::Tell </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the offset of the current position from the start position. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes the current position is from the beginning of the stream. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Resource_1_1FileStreamDataStream.xhtml#a0f90090c6337b522bb0074804f317d83">Mezzanine::Resource::FileStreamDataStream</a>, <a class="el" href="classMezzanine_1_1Resource_1_1FileHandleDataStream.xhtml#ad12a60b6bf4d8996237a421a94ece967">Mezzanine::Resource::FileHandleDataStream</a>, and <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#ad0863bb15228326e005a94ee752e0827">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<a class="anchor" id="aafdbe4aeb8e8743d514fbd1075a30859"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t Mezzanine::Resource::DataStream::Write </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t &amp;&#160;</td>
          <td class="paramname"><em>Count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes data from the stream, copying from the provided buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>The buffer of data to be written. </td></tr>
    <tr><td class="paramname">Count</td><td>The number of bytes to write from the buffer to the stream. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes written. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Resource_1_1FileStreamDataStream.xhtml#abb01c837df910860dd45d57cf56b22ae">Mezzanine::Resource::FileStreamDataStream</a>, <a class="el" href="classMezzanine_1_1Resource_1_1FileHandleDataStream.xhtml#a48b7e1fb5ceb33a9350f82e3591be399">Mezzanine::Resource::FileHandleDataStream</a>, and <a class="el" href="classMezzanine_1_1Resource_1_1MemoryDataStream.xhtml#a17e5e7851a4787dd6cce846434757ccd">Mezzanine::Resource::MemoryDataStream</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Resource/<a class="el" href="datastream_8h_source.xhtml">datastream.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 17:17:09 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
