<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::ActorSoft Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml">ActorSoft</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1ActorSoft-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::ActorSoft Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the actor class for Soft Objects.  
 <a href="classMezzanine_1_1ActorSoft.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="actorsoft_8h_source.xhtml">actorsoft.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::ActorSoft:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ActorSoft__inherit__graph.svg" width="384" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::ActorSoft:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ActorSoft__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3ab7c4cb45c0308a1b398069095d81b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a3ab7c4cb45c0308a1b398069095d81b2">ActorSoft</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> mass, <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> name, <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> file, <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> group)</td></tr>
<tr class="memdesc:a3ab7c4cb45c0308a1b398069095d81b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a3ab7c4cb45c0308a1b398069095d81b2"></a><br/></td></tr>
<tr class="memitem:a232414cb25507d4f09476742b2ab4d20"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a232414cb25507d4f09476742b2ab4d20">~ActorSoft</a> ()</td></tr>
<tr class="memdesc:a232414cb25507d4f09476742b2ab4d20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a232414cb25507d4f09476742b2ab4d20"></a><br/></td></tr>
<tr class="memitem:a7fc5a425dd92c4db7fa5655fecc0e6ae"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a7fc5a425dd92c4db7fa5655fecc0e6ae">_Update</a> ()</td></tr>
<tr class="memdesc:a7fc5a425dd92c4db7fa5655fecc0e6ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object every frame.   <a href="#a7fc5a425dd92c4db7fa5655fecc0e6ae"></a><br/></td></tr>
<tr class="memitem:a5ea189dc5604c15ce4dab04edda451f7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a5ea189dc5604c15ce4dab04edda451f7">AddToWorld</a> ()</td></tr>
<tr class="memdesc:a5ea189dc5604c15ce4dab04edda451f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.   <a href="#a5ea189dc5604c15ce4dab04edda451f7"></a><br/></td></tr>
<tr class="memitem:ad074c60b7654cda4f9cfe681c8ac5c90"><td class="memItemLeft" align="right" valign="top">virtual btSoftBody *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ad074c60b7654cda4f9cfe681c8ac5c90">GetBulletObject</a> ()</td></tr>
<tr class="memdesc:ad074c60b7654cda4f9cfe681c8ac5c90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> data raw from the physic subsystem.  <a href="#ad074c60b7654cda4f9cfe681c8ac5c90"></a><br/></td></tr>
<tr class="memitem:a3ba8e458ec064a7d8367114d74f73a74"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a3ba8e458ec064a7d8367114d74f73a74">GetLocation</a> () const </td></tr>
<tr class="memdesc:a3ba8e458ec064a7d8367114d74f73a74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the location of the object.  <a href="#a3ba8e458ec064a7d8367114d74f73a74"></a><br/></td></tr>
<tr class="memitem:ac0773b9b1389d4f079eb250aa992f74c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ac0773b9b1389d4f079eb250aa992f74c">GetName</a> () const </td></tr>
<tr class="memdesc:ac0773b9b1389d4f079eb250aa992f74c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the name of the object.  <a href="#ac0773b9b1389d4f079eb250aa992f74c"></a><br/></td></tr>
<tr class="memitem:aa55affd1526c194e061b3e447382924c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ActorSoftPhysicsSettings.xhtml">ActorSoftPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#aa55affd1526c194e061b3e447382924c">GetPhysicsSettings</a> ()</td></tr>
<tr class="memdesc:aa55affd1526c194e061b3e447382924c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the physics settings class associated with this actor.  <a href="#aa55affd1526c194e061b3e447382924c"></a><br/></td></tr>
<tr class="memitem:a7fb8c4ead304ce7aa1b1b9b08596163a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a7fb8c4ead304ce7aa1b1b9b08596163a">GetType</a> () const </td></tr>
<tr class="memdesc:a7fb8c4ead304ce7aa1b1b9b08596163a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance.   <a href="#a7fb8c4ead304ce7aa1b1b9b08596163a"></a><br/></td></tr>
<tr class="memitem:aaef85192df20ef61458c766396c613ba"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#aaef85192df20ef61458c766396c613ba">RemoveFromWorld</a> ()</td></tr>
<tr class="memdesc:aaef85192df20ef61458c766396c613ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object from the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.   <a href="#aaef85192df20ef61458c766396c613ba"></a><br/></td></tr>
<tr class="memitem:ab76bcb0d227374ef5d69878783c7f89b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ab76bcb0d227374ef5d69878783c7f89b">SetActorScaling</a> (<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> scale)</td></tr>
<tr class="memdesc:ab76bcb0d227374ef5d69878783c7f89b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scale of the actor.  <a href="#ab76bcb0d227374ef5d69878783c7f89b"></a><br/></td></tr>
<tr class="memitem:a282e827436c8aa5bfc94994194a846c3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a282e827436c8aa5bfc94994194a846c3">SetInitLocation</a> (<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Location)</td></tr>
<tr class="memdesc:a282e827436c8aa5bfc94994194a846c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the starting location of the actor.  <a href="#a282e827436c8aa5bfc94994194a846c3"></a><br/></td></tr>
<tr class="memitem:a8324a461fd3a9437b313b959382adb0a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a8324a461fd3a9437b313b959382adb0a">SetInitOrientation</a> (<a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Orientation)</td></tr>
<tr class="memdesc:a8324a461fd3a9437b313b959382adb0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the starting orientation of the actor.  <a href="#a8324a461fd3a9437b313b959382adb0a"></a><br/></td></tr>
<tr class="memitem:a74aeacf44fee84b9be0cb27b8c6d9b03"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a74aeacf44fee84b9be0cb27b8c6d9b03">SetLocation</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> x, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> y, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> z)</td></tr>
<tr class="memdesc:a74aeacf44fee84b9be0cb27b8c6d9b03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the actor.  <a href="#a74aeacf44fee84b9be0cb27b8c6d9b03"></a><br/></td></tr>
<tr class="memitem:a85df68bb231bbe5cbf7d6f2ff895f172"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a85df68bb231bbe5cbf7d6f2ff895f172">SetLocation</a> (<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Place)</td></tr>
<tr class="memdesc:a85df68bb231bbe5cbf7d6f2ff895f172"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the actor.  <a href="#a85df68bb231bbe5cbf7d6f2ff895f172"></a><br/></td></tr>
<tr class="memitem:a31db2a58f777399930f0efc4680f46cb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a31db2a58f777399930f0efc4680f46cb">SetOrientation</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> x, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> y, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> z, <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> w)</td></tr>
<tr class="memdesc:a31db2a58f777399930f0efc4680f46cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the actor.  <a href="#a31db2a58f777399930f0efc4680f46cb"></a><br/></td></tr>
<tr class="memitem:af173b17bd2c3af660fd763fb40206f79"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#af173b17bd2c3af660fd763fb40206f79">SetOrientation</a> (<a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Rotation)</td></tr>
<tr class="memdesc:af173b17bd2c3af660fd763fb40206f79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the actor.  <a href="#af173b17bd2c3af660fd763fb40206f79"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ActorBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ActorBase')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ActorBase.xhtml">Mezzanine::ActorBase</a></td></tr>
<tr class="memitem:aa9cc2fce1ff708a96d4a879b87054f18 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#aa9cc2fce1ff708a96d4a879b87054f18">ActorBase</a> ()</td></tr>
<tr class="memdesc:aa9cc2fce1ff708a96d4a879b87054f18 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aa9cc2fce1ff708a96d4a879b87054f18"></a><br/></td></tr>
<tr class="memitem:a47db9a4170ef4d173b9ff754318a07b3 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a47db9a4170ef4d173b9ff754318a07b3">~ActorBase</a> ()</td></tr>
<tr class="memdesc:a47db9a4170ef4d173b9ff754318a07b3 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a47db9a4170ef4d173b9ff754318a07b3"></a><br/></td></tr>
<tr class="memitem:afab1afdb3e87b16688e3852a4c93d22f inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#afab1afdb3e87b16688e3852a4c93d22f">AdvanceAnimation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;<a class="el" href="structMezzanine_1_1Time.xhtml">Time</a>)</td></tr>
<tr class="memdesc:afab1afdb3e87b16688e3852a4c93d22f inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the animation, making it animate.  <a href="#afab1afdb3e87b16688e3852a4c93d22f"></a><br/></td></tr>
<tr class="memitem:ae9fc7f59403cb7a3983a84f8584f4d92 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#ae9fc7f59403cb7a3983a84f8584f4d92">EnableAnimation</a> (bool Enable)</td></tr>
<tr class="memdesc:ae9fc7f59403cb7a3983a84f8584f4d92 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the animation if one is set.  <a href="#ae9fc7f59403cb7a3983a84f8584f4d92"></a><br/></td></tr>
<tr class="memitem:a636a0dbf78907d565d4cabd994442637 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a636a0dbf78907d565d4cabd994442637">GraphicsSettingsSerializableName</a> () const =0</td></tr>
<tr class="memdesc:a636a0dbf78907d565d4cabd994442637 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings.  <a href="#a636a0dbf78907d565d4cabd994442637"></a><br/></td></tr>
<tr class="memitem:a8ce203f09b29ae086b1b6aa98763ebda inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a8ce203f09b29ae086b1b6aa98763ebda">IsAnimated</a> () const </td></tr>
<tr class="memdesc:a8ce203f09b29ae086b1b6aa98763ebda inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells whether this actor is animated or not.  <a href="#a8ce203f09b29ae086b1b6aa98763ebda"></a><br/></td></tr>
<tr class="memitem:a7a18ac81a996e2d68057223ebbc7959c inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a7a18ac81a996e2d68057223ebbc7959c">PhysicsSettingsSerializableName</a> () const =0</td></tr>
<tr class="memdesc:a7a18ac81a996e2d68057223ebbc7959c inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings.  <a href="#a7a18ac81a996e2d68057223ebbc7959c"></a><br/></td></tr>
<tr class="memitem:aa3364c5b8991eab2431ee97de6b3aca9 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#aa3364c5b8991eab2431ee97de6b3aca9">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:aa3364c5b8991eab2431ee97de6b3aca9 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it.  <a href="#aa3364c5b8991eab2431ee97de6b3aca9"></a><br/></td></tr>
<tr class="memitem:a83ac934e5ca5ae180199a5c57c13030c inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a83ac934e5ca5ae180199a5c57c13030c">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:a83ac934e5ca5ae180199a5c57c13030c inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a83ac934e5ca5ae180199a5c57c13030c"></a><br/></td></tr>
<tr class="memitem:a3a06b7c5099c9d579bf1e0964abb57cb inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a3a06b7c5099c9d579bf1e0964abb57cb">RemoveSetAnimation</a> ()</td></tr>
<tr class="memdesc:a3a06b7c5099c9d579bf1e0964abb57cb inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unloads a loaded animation.  <a href="#a3a06b7c5099c9d579bf1e0964abb57cb"></a><br/></td></tr>
<tr class="memitem:ac98f7622eddb758f5a4b13036fd42539 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#ac98f7622eddb758f5a4b13036fd42539">SetAnimation</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;AnimationName, bool Loop)</td></tr>
<tr class="memdesc:ac98f7622eddb758f5a4b13036fd42539 inherit pub_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the animation for this object.  <a href="#ac98f7622eddb758f5a4b13036fd42539"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1NonStaticWorldObject"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1NonStaticWorldObject')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml">Mezzanine::NonStaticWorldObject</a></td></tr>
<tr class="memitem:ae68784bd2201013e99c6a957201c5264 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae68784bd2201013e99c6a957201c5264"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ae68784bd2201013e99c6a957201c5264">NonStaticWorldObject</a> ()</td></tr>
<tr class="memdesc:ae68784bd2201013e99c6a957201c5264 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a5bfa4c2acd83b5556bcf16d73b8eeba1 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5bfa4c2acd83b5556bcf16d73b8eeba1"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a5bfa4c2acd83b5556bcf16d73b8eeba1">~NonStaticWorldObject</a> ()</td></tr>
<tr class="memdesc:a5bfa4c2acd83b5556bcf16d73b8eeba1 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:adaa959e0758ca685b8009f17d671469f inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#adaa959e0758ca685b8009f17d671469f">GetOrientation</a> () const </td></tr>
<tr class="memdesc:adaa959e0758ca685b8009f17d671469f inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#adaa959e0758ca685b8009f17d671469f"></a><br/></td></tr>
<tr class="memitem:af186dbff98c7a1884736072345384a67 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#af186dbff98c7a1884736072345384a67">GetScaling</a> () const </td></tr>
<tr class="memdesc:af186dbff98c7a1884736072345384a67 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.   <a href="#af186dbff98c7a1884736072345384a67"></a><br/></td></tr>
<tr class="memitem:a6caec63791a9143d7f6a0a58fbc1a44e inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a6caec63791a9143d7f6a0a58fbc1a44e">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a6caec63791a9143d7f6a0a58fbc1a44e inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a6caec63791a9143d7f6a0a58fbc1a44e"></a><br/></td></tr>
<tr class="memitem:ad726fa6c7934a325599120366cf1d900 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ad726fa6c7934a325599120366cf1d900">SetOrientation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;x, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;z, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;w)</td></tr>
<tr class="memdesc:ad726fa6c7934a325599120366cf1d900 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#ad726fa6c7934a325599120366cf1d900"></a><br/></td></tr>
<tr class="memitem:a93ffa6d7e23ec9015fdcf7a1b5cc6828 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a93ffa6d7e23ec9015fdcf7a1b5cc6828">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:a93ffa6d7e23ec9015fdcf7a1b5cc6828 inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a93ffa6d7e23ec9015fdcf7a1b5cc6828"></a><br/></td></tr>
<tr class="memitem:afa55be7243c103062ad07acabbabbbfb inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#afa55be7243c103062ad07acabbabbbfb">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:afa55be7243c103062ad07acabbabbbfb inherit pub_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#afa55be7243c103062ad07acabbabbbfb"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldObject"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldObject')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldObject.xhtml">Mezzanine::WorldObject</a></td></tr>
<tr class="memitem:a7718ab150d1337b52715b0db1a4a4762 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7718ab150d1337b52715b0db1a4a4762"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7718ab150d1337b52715b0db1a4a4762">WorldObject</a> ()</td></tr>
<tr class="memdesc:a7718ab150d1337b52715b0db1a4a4762 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:aa44b96eb039584d0adc1805250ba1146 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa44b96eb039584d0adc1805250ba1146"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aa44b96eb039584d0adc1805250ba1146">~WorldObject</a> ()</td></tr>
<tr class="memdesc:aa44b96eb039584d0adc1805250ba1146 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a15f23b44542efcf1e4ee824ae59f0210 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a15f23b44542efcf1e4ee824ae59f0210">_GetBasePhysicsObject</a> () const </td></tr>
<tr class="memdesc:a15f23b44542efcf1e4ee824ae59f0210 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal physics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on.  <a href="#a15f23b44542efcf1e4ee824ae59f0210"></a><br/></td></tr>
<tr class="memitem:a7673104fb11f0d7ededca43ff8026562 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual Ogre::SceneNode *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7673104fb11f0d7ededca43ff8026562">_GetGraphicsNode</a> () const </td></tr>
<tr class="memdesc:a7673104fb11f0d7ededca43ff8026562 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics node this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object uses for it's graphics transform.  <a href="#a7673104fb11f0d7ededca43ff8026562"></a><br/></td></tr>
<tr class="memitem:a5ceb1599dbe08f1039c82db959eb0d5e inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual Ogre::Entity *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a5ceb1599dbe08f1039c82db959eb0d5e">_GetGraphicsObject</a> () const </td></tr>
<tr class="memdesc:a5ceb1599dbe08f1039c82db959eb0d5e inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics object this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is based on.  <a href="#a5ceb1599dbe08f1039c82db959eb0d5e"></a><br/></td></tr>
<tr class="memitem:ab6007bf3a962e89854ffe9c234721b64 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ab6007bf3a962e89854ffe9c234721b64">_NotifyCollisionState</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *Col, const <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml#a65c483a4ea1e7faf02539e7e0c18af7f">Physics::Collision::CollisionState</a> &amp;State)</td></tr>
<tr class="memdesc:ab6007bf3a962e89854ffe9c234721b64 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object of a collision that is occuring with it.  <a href="#ab6007bf3a962e89854ffe9c234721b64"></a><br/></td></tr>
<tr class="memitem:a131f816f0c0613f088e13cdb9f1993ae inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a131f816f0c0613f088e13cdb9f1993ae">GetGraphicsSettings</a> () const </td></tr>
<tr class="memdesc:a131f816f0c0613f088e13cdb9f1993ae inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the graphics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a131f816f0c0613f088e13cdb9f1993ae"></a><br/></td></tr>
<tr class="memitem:a0bf0008923a4f71bd58ba538ada333ff inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0bf0008923a4f71bd58ba538ada333ff">GetPhysicsSettings</a> () const </td></tr>
<tr class="memdesc:a0bf0008923a4f71bd58ba538ada333ff inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the physics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a0bf0008923a4f71bd58ba538ada333ff"></a><br/></td></tr>
<tr class="memitem:a4e629227edc6a548870be3df58035824 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a4e629227edc6a548870be3df58035824">GetSounds</a> () const </td></tr>
<tr class="memdesc:a4e629227edc6a548870be3df58035824 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the set of sounds associated with this <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#a4e629227edc6a548870be3df58035824"></a><br/></td></tr>
<tr class="memitem:abd1e6eae70256cbcf82229c60deb51ad inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#abd1e6eae70256cbcf82229c60deb51ad">IsInWorld</a> () const </td></tr>
<tr class="memdesc:abd1e6eae70256cbcf82229c60deb51ad inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is currently in the world.  <a href="#abd1e6eae70256cbcf82229c60deb51ad"></a><br/></td></tr>
<tr class="memitem:a0c912e54d09574b5821eb972f51dc93b inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0c912e54d09574b5821eb972f51dc93b">IsStaticOrKinematic</a> () const </td></tr>
<tr class="memdesc:a0c912e54d09574b5821eb972f51dc93b inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object is static or kinematic.  <a href="#a0c912e54d09574b5821eb972f51dc93b"></a><br/></td></tr>
<tr class="memitem:ad21f34d4cec83072347da0bb79b08a66 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ad21f34d4cec83072347da0bb79b08a66">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;x, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;z)</td></tr>
<tr class="memdesc:ad21f34d4cec83072347da0bb79b08a66 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object.  <a href="#ad21f34d4cec83072347da0bb79b08a66"></a><br/></td></tr>
<tr class="memitem:a06ee100d2c4f3b4d2a944a497f1711f4 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a06ee100d2c4f3b4d2a944a497f1711f4">SetSounds</a> (<a class="el" href="classMezzanine_1_1Audio_1_1SoundSet.xhtml">Audio::SoundSet</a> *Sounds)</td></tr>
<tr class="memdesc:a06ee100d2c4f3b4d2a944a497f1711f4 inherit pub_methods_classMezzanine_1_1WorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the sounds to be used by this object.  <a href="#a06ee100d2c4f3b4d2a944a497f1711f4"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ac9d49cd99bddd5b29d734581d02538"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a6ac9d49cd99bddd5b29d734581d02538">AttachableParent</a> ()</td></tr>
<tr class="memdesc:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:ab176913ae00cc2bece000e51fa897aa2 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab176913ae00cc2bece000e51fa897aa2"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#ab176913ae00cc2bece000e51fa897aa2">~AttachableParent</a> ()</td></tr>
<tr class="memdesc:ab176913ae00cc2bece000e51fa897aa2 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9c76fdc43b1cddada62385215ca6c8d4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a9c76fdc43b1cddada62385215ca6c8d4">_RecalculateAllChildTransforms</a> ()</td></tr>
<tr class="memdesc:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates the transforms of all children of this attachable. <br/></td></tr>
<tr class="memitem:a8d429b2f9c9c6bd6f71bf20704120aac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a8d429b2f9c9c6bd6f71bf20704120aac">AttachObject</a> (<a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *Target)</td></tr>
<tr class="memdesc:a8d429b2f9c9c6bd6f71bf20704120aac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attaches an attachable element to this object.  <a href="#a8d429b2f9c9c6bd6f71bf20704120aac"></a><br/></td></tr>
<tr class="memitem:a05bd725c8819b8c1a41057da2dc2cba4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">AttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a05bd725c8819b8c1a41057da2dc2cba4">BeginChild</a> ()</td></tr>
<tr class="memdesc:a05bd725c8819b8c1a41057da2dc2cba4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an AttachableIterator to the first object.  <a href="#a05bd725c8819b8c1a41057da2dc2cba4"></a><br/></td></tr>
<tr class="memitem:a16ce9bac2da3fe2cf68234354059eaa4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">ConstAttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a16ce9bac2da3fe2cf68234354059eaa4">BeginChild</a> () const </td></tr>
<tr class="memdesc:a16ce9bac2da3fe2cf68234354059eaa4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstAttachableIterator to the first object.  <a href="#a16ce9bac2da3fe2cf68234354059eaa4"></a><br/></td></tr>
<tr class="memitem:a3ac235c47748d0b5b48f542ec37723d6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ac235c47748d0b5b48f542ec37723d6"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a3ac235c47748d0b5b48f542ec37723d6">DetachAllChildren</a> ()</td></tr>
<tr class="memdesc:a3ac235c47748d0b5b48f542ec37723d6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detaches all attachables currently attached. <br/></td></tr>
<tr class="memitem:a3d893c17daf2b9e0f124f2f4adc13a54 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a3d893c17daf2b9e0f124f2f4adc13a54">DetachObject</a> (<a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *Target)</td></tr>
<tr class="memdesc:a3d893c17daf2b9e0f124f2f4adc13a54 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detaches an attachable element from this object.  <a href="#a3d893c17daf2b9e0f124f2f4adc13a54"></a><br/></td></tr>
<tr class="memitem:a247dfcc8db7834ba479eeb50e000c1ac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">AttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a247dfcc8db7834ba479eeb50e000c1ac">EndChild</a> ()</td></tr>
<tr class="memdesc:a247dfcc8db7834ba479eeb50e000c1ac inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an AttachableIterator to one past the last object.  <a href="#a247dfcc8db7834ba479eeb50e000c1ac"></a><br/></td></tr>
<tr class="memitem:a98225e7b3739c4f832d39fe1056833f6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">ConstAttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a98225e7b3739c4f832d39fe1056833f6">EndChild</a> () const </td></tr>
<tr class="memdesc:a98225e7b3739c4f832d39fe1056833f6 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstAttachableIterator to one past the last object.  <a href="#a98225e7b3739c4f832d39fe1056833f6"></a><br/></td></tr>
<tr class="memitem:a822d461921c4556c5cad2ad3933c0466 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a822d461921c4556c5cad2ad3933c0466">GetAttached</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const </td></tr>
<tr class="memdesc:a822d461921c4556c5cad2ad3933c0466 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a specific attached Item.  <a href="#a822d461921c4556c5cad2ad3933c0466"></a><br/></td></tr>
<tr class="memitem:a42013a31c0c5e483c98e34aa3815afc4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a42013a31c0c5e483c98e34aa3815afc4">GetNumAttached</a> () const </td></tr>
<tr class="memdesc:a42013a31c0c5e483c98e34aa3815afc4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of elements attached to this object.  <a href="#a42013a31c0c5e483c98e34aa3815afc4"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a72bee4c7d028162ececabf6010f9015d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a72bee4c7d028162ececabf6010f9015d">AttachableBase</a> ()</td></tr>
<tr class="memdesc:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="memitem:a525c8f74c27cb29bc46a0330753fdcb4 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a525c8f74c27cb29bc46a0330753fdcb4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a525c8f74c27cb29bc46a0330753fdcb4">~AttachableBase</a> ()</td></tr>
<tr class="memdesc:a525c8f74c27cb29bc46a0330753fdcb4 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="memitem:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a33eb528b2e924ef70a9bab7fd79c70d0">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in global space to the same point in local space.  <a href="#a33eb528b2e924ef70a9bab7fd79c70d0"></a><br/></td></tr>
<tr class="memitem:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a39338b566a38828b8c9b1ddf3e2c865e">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in global space to the same rotation in local space.  <a href="#a39338b566a38828b8c9b1ddf3e2c865e"></a><br/></td></tr>
<tr class="memitem:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab8a5b6e1379ff5cedb5758c4aafe61ed">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in local space to the same point in global space.  <a href="#ab8a5b6e1379ff5cedb5758c4aafe61ed"></a><br/></td></tr>
<tr class="memitem:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a709ad287377d07a576ebaca995392e15">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in local space to the same rotation in global space.  <a href="#a709ad287377d07a576ebaca995392e15"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a3471dd4e9cb5d3431de2c704ebf56c96"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a3471dd4e9cb5d3431de2c704ebf56c96">AttachToGraphics</a> ()</td></tr>
<tr class="memdesc:a3471dd4e9cb5d3431de2c704ebf56c96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the actor visable.  <a href="#a3471dd4e9cb5d3431de2c704ebf56c96"></a><br/></td></tr>
<tr class="memitem:a52ef123f82ac082991da5a517f77adf8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a52ef123f82ac082991da5a517f77adf8">CreateManualMesh</a> (Internal::MeshInfo &amp;TheMesh)</td></tr>
<tr class="memdesc:a52ef123f82ac082991da5a517f77adf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates and configures a manual object for rendering.  <a href="#a52ef123f82ac082991da5a517f77adf8"></a><br/></td></tr>
<tr class="memitem:ab0ee1ceadedb3d92295cce649749cb7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ab0ee1ceadedb3d92295cce649749cb7a">CreateSoftObject</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> mass)</td></tr>
<tr class="memdesc:ab0ee1ceadedb3d92295cce649749cb7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a soft object for the actor.  <a href="#ab0ee1ceadedb3d92295cce649749cb7a"></a><br/></td></tr>
<tr class="memitem:a2c955c262f76f4efe131561ad5f8f570"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a2c955c262f76f4efe131561ad5f8f570">DetachFromGraphics</a> ()</td></tr>
<tr class="memdesc:a2c955c262f76f4efe131561ad5f8f570"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the actor invisable.  <a href="#a2c955c262f76f4efe131561ad5f8f570"></a><br/></td></tr>
<tr class="memitem:a34a1b796fd17a3d2485bbaeb383c6086"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a34a1b796fd17a3d2485bbaeb383c6086">GetBulletLocation</a> () const </td></tr>
<tr class="memdesc:a34a1b796fd17a3d2485bbaeb383c6086"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the location of the physics body.  <a href="#a34a1b796fd17a3d2485bbaeb383c6086"></a><br/></td></tr>
<tr class="memitem:aedc4f1f6141338341262c708da88fc6d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#aedc4f1f6141338341262c708da88fc6d">SetBulletLocation</a> (<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Location)</td></tr>
<tr class="memdesc:aedc4f1f6141338341262c708da88fc6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of the physics body.  <a href="#aedc4f1f6141338341262c708da88fc6d"></a><br/></td></tr>
<tr class="memitem:ab69aa7de088710db75a00e576b65f409"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ab69aa7de088710db75a00e576b65f409">SetBulletOrientation</a> (<a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Rotation)</td></tr>
<tr class="memdesc:ab69aa7de088710db75a00e576b65f409"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the physics body.  <a href="#ab69aa7de088710db75a00e576b65f409"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1ActorBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1ActorBase')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1ActorBase.xhtml">Mezzanine::ActorBase</a></td></tr>
<tr class="memitem:af326bf63fe6da247ef8cbc9043a9f2fe inherit pro_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#af326bf63fe6da247ef8cbc9043a9f2fe">ThrowSerialError</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Fail) const </td></tr>
<tr class="memdesc:af326bf63fe6da247ef8cbc9043a9f2fe inherit pro_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">a Helper function that assembles strings and throws an exception  <a href="#af326bf63fe6da247ef8cbc9043a9f2fe"></a><br/></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1NonStaticWorldObject"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1NonStaticWorldObject')"><img src="closed.png" alt="-"/>&nbsp;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml">Mezzanine::NonStaticWorldObject</a></td></tr>
<tr class="memitem:a4eb605ae33349a8e31b10dbb2ea87923 inherit pro_methods_classMezzanine_1_1NonStaticWorldObject"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4eb605ae33349a8e31b10dbb2ea87923"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a4eb605ae33349a8e31b10dbb2ea87923">InternalSetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:a4eb605ae33349a8e31b10dbb2ea87923 inherit pro_methods_classMezzanine_1_1NonStaticWorldObject"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ab7ea9b20786fbd7505f836135c890434"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab7ea9b20786fbd7505f836135c890434"></a>
<a class="el" href="classMezzanine_1_1ActorSoftPhysicsSettings.xhtml">ActorSoftPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434">PhysicsSettings</a></td></tr>
<tr class="memdesc:ab7ea9b20786fbd7505f836135c890434"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates physics specific configuration for this actor. <br/></td></tr>
<tr class="memitem:a4eb4bcfe665df0c4741f5c17ff268c88"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4eb4bcfe665df0c4741f5c17ff268c88"></a>
btSoftBody *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88">PhysicsSoftBody</a></td></tr>
<tr class="memdesc:a4eb4bcfe665df0c4741f5c17ff268c88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to simulate the functionality of a btSoftBody for use with the physics subsystem. <br/></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ActorBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ActorBase')"><img src="closed.png" alt="-"/>&nbsp;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ActorBase.xhtml">Mezzanine::ActorBase</a></td></tr>
<tr class="memitem:ae71259b98aed5a9c269e0758344d36a7 inherit pro_attribs_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae71259b98aed5a9c269e0758344d36a7"></a>
Ogre::AnimationState *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#ae71259b98aed5a9c269e0758344d36a7">Animation</a></td></tr>
<tr class="memdesc:ae71259b98aed5a9c269e0758344d36a7 inherit pro_attribs_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the Ogre::AnimationState using this. <br/></td></tr>
<tr class="memitem:a1fa8d58874d4c395d871ae9f5628c7fd inherit pro_attribs_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1fa8d58874d4c395d871ae9f5628c7fd"></a>
Internal::AttachableMotionState *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a1fa8d58874d4c395d871ae9f5628c7fd">MotionState</a></td></tr>
<tr class="memdesc:a1fa8d58874d4c395d871ae9f5628c7fd inherit pro_attribs_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the PhysMotionState using this. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&nbsp;Public Types inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:a6e9c08040897d349a302ff06f647168a inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e9c08040897d349a302ff06f647168a"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>AttachableContainer</b></td></tr>
<tr class="memitem:a29dc368ae43bb6544304c2fadadac55e inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29dc368ae43bb6544304c2fadadac55e"></a>
typedef <br class="typebreak"/>
AttachableContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>AttachableIterator</b></td></tr>
<tr class="memitem:a7f75a92904328d5f68362f4e3b148934 inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7f75a92904328d5f68362f4e3b148934"></a>
typedef <br class="typebreak"/>
AttachableContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstAttachableIterator</b></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ActorBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ActorBase')"><img src="closed.png" alt="-"/>&nbsp;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ActorBase.xhtml">Mezzanine::ActorBase</a></td></tr>
<tr class="memitem:a118602e772c93d72493dba70b4572008 inherit pub_static_methods_classMezzanine_1_1ActorBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBase.xhtml#a118602e772c93d72493dba70b4572008">SerializableName</a> ()</td></tr>
<tr class="memdesc:a118602e772c93d72493dba70b4572008 inherit pub_static_methods_classMezzanine_1_1ActorBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#a118602e772c93d72493dba70b4572008"></a><br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This is the actor class for Soft Objects. </p>
<p>This class should be used to make any soft object that, like <a class="el" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>, can be moved or manipulated as a result of force. Examples of soft objects are: Paper, Rope, and Cloth. Semi Rigid bodies that are still somewhat deformable, like Jello, should be made as a soft object. </p>
<dl class="section warning"><dt>Warning</dt><dd>Currently this is not fully implemented and will likely cause errors if used. </dd></dl>

<p>Definition at line <a class="el" href="actorsoft_8h_source.xhtml#l00079">79</a> of file <a class="el" href="actorsoft_8h_source.xhtml">actorsoft.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a3ab7c4cb45c0308a1b398069095d81b2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ActorSoft::ActorSoft </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>mass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td>
          <td class="paramname"><em>group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mass</td><td>The mass of the soft body. </td></tr>
    <tr><td class="paramname">name</td><td>Name of the object </td></tr>
    <tr><td class="paramname">file</td><td>Mesh the soft body is stored in </td></tr>
    <tr><td class="paramname">group</td><td>The <a class="el" href="namespaceMezzanine_1_1Resource.xhtml" title="This namespace is for all the classes belonging to the non-network I/O Subsystem.">Resource</a> group the mesh can be found in. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a232414cb25507d4f09476742b2ab4d20"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Mezzanine::ActorSoft::~ActorSoft </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>The class destructor. </p>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a7fc5a425dd92c4db7fa5655fecc0e6ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::_Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object every frame.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a8f5a36a6981f1249dbabab318531afd0">Mezzanine::ActorBase</a>.</p>

</div>
</div>
<a class="anchor" id="a5ea189dc5604c15ce4dab04edda451f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::AddToWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1ActorBase.xhtml#abe739a46f248a7ba257becfb560d9aa5">Mezzanine::ActorBase</a>.</p>

</div>
</div>
<a class="anchor" id="a3471dd4e9cb5d3431de2c704ebf56c96"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::AttachToGraphics </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Makes the actor visable. </p>
<p>Adds the actor to all the nessessary graphics elements to make it visable on screen. <br/>
 This is automaticly called by the Worlds AddActor function and shouldn't ever need to be called manually. </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac324e1dfdf9cd59a5abdc0d6f8d10b4e">Mezzanine::WorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a52ef123f82ac082991da5a517f77adf8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorSoft::CreateManualMesh </td>
          <td>(</td>
          <td class="paramtype">Internal::MeshInfo &amp;&#160;</td>
          <td class="paramname"><em>TheMesh</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates and configures a manual object for rendering. </p>
<p>This function will create and configure an <a class="el" href="namespaceOgre.xhtml">Ogre</a> manual object based on the mesh provided, that will be updateable each frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TheMesh</td><td>The struct with all the appropriate mesh information to base the manual object on. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab0ee1ceadedb3d92295cce649749cb7a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorSoft::CreateSoftObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>mass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a soft object for the actor. </p>
<p>Creates a soft object to be placed in the physics world later. <br/>
 This is automatically called by the Constructor and shouldn't be called manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mass</td><td>The desired total mass of the soft object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2c955c262f76f4efe131561ad5f8f570"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::DetachFromGraphics </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Makes the actor invisable. </p>
<p>This is the inverse of the AttachToGraphics function. This will effectively remove the object from the graphics world and make it no longer visable. <br/>
 This is automaticly called by the Worlds RemoveActor function and shouldn't ever need to be called manually. </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1WorldObject.xhtml#af13904d91d16ceb3c74afea152def276">Mezzanine::WorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="a34a1b796fd17a3d2485bbaeb383c6086"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorSoft::GetBulletLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the location of the physics body. </p>
<p>This function will retrieve the location of the object within the physics world. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the location in the physics system. </dd></dl>

</div>
</div>
<a class="anchor" id="ad074c60b7654cda4f9cfe681c8ac5c90"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual btSoftBody* Mezzanine::ActorSoft::GetBulletObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> data raw from the physic subsystem. </p>
<dl class="section return"><dt>Returns</dt><dd>Currently this returns a pointer to a btSoftBody. </dd></dl>

</div>
</div>
<a class="anchor" id="a3ba8e458ec064a7d8367114d74f73a74"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorSoft::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the location of the object. </p>
<p>This function will retrieve the location of the object within the world. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the actual locaiton of this Actor. </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ade42648baa0f893d54b3bc5dcdfa9300">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="ac0773b9b1389d4f079eb250aa992f74c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a>&amp; Mezzanine::ActorSoft::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the name of the object. </p>
<dl class="section return"><dt>Returns</dt><dd>A String with the name of this Actor </dd></dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a38f1da6bfef6666be6f5a0c3d12bbed6">Mezzanine::NonStaticWorldObject</a>.</p>

</div>
</div>
<a class="anchor" id="aa55affd1526c194e061b3e447382924c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1ActorSoftPhysicsSettings.xhtml">ActorSoftPhysicsSettings</a>* Mezzanine::ActorSoft::GetPhysicsSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the physics settings class associated with this actor. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the physics settings class in use by this actor. </dd></dl>

</div>
</div>
<a class="anchor" id="a7fb8c4ead304ce7aa1b1b9b08596163a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::ActorSoft::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance.  </p>
<p><dl class="section return"><dt>Returns</dt><dd>Returns the type of the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object instance </dd></dl>
 </p>

<p>Implements <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a83f7356d743f1b59ea58aac6d7570901">Mezzanine::ActorBase</a>.</p>

</div>
</div>
<a class="anchor" id="aaef85192df20ef61458c766396c613ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::RemoveFromWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> Object from the <a class="el" href="classMezzanine_1_1World.xhtml">World</a>.  </p>

<p>Implements <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a30910dd0351bc29b2bf88cb3dc8d83db">Mezzanine::ActorBase</a>.</p>

</div>
</div>
<a class="anchor" id="ab76bcb0d227374ef5d69878783c7f89b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorSoft::SetActorScaling </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td>
          <td class="paramname"><em>scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the scale of the actor. </p>
<p>This function will alter the scaling/size of the actor with the given vector3. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scale</td><td>The vector3 by which to apply the scale. Will scale each axis' accordingly. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aedc4f1f6141338341262c708da88fc6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetBulletLocation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the location of the physics body. </p>
<p>This will take a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> and set the location of the actor within the physics world. <br/>
 This function is called on by the SetLocation function, and shouldn't be called manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the location. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab69aa7de088710db75a00e576b65f409"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetBulletOrientation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td>
          <td class="paramname"><em>Rotation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the orientation of the physics body. </p>
<p>This will take a <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> and set the orientation of the actor within the physics world. <br/>
 This function is called on by the SetOrientation function, and shouldn't be called manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rotation</td><td>The quaternion representing the rotation of the actor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a282e827436c8aa5bfc94994194a846c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetInitLocation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the starting location of the actor. </p>
<p>Calling this function after adding it to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> will have no effect. <br/>
 This function will set where the actor will be located in the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> when it is first placed inside the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the location. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8324a461fd3a9437b313b959382adb0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetInitOrientation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the starting orientation of the actor. </p>
<p>Calling this function after adding it to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> will have no effect. <br/>
 This function will set where the actor is facing in the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> when it is first placed inside the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Orientation</td><td>The <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> representing the Orientation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a74aeacf44fee84b9be0cb27b8c6d9b03"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetLocation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually sets the location of the actor. </p>
<p>Calling this function prior to adding it to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> will have no effect. <br/>
 In most situations you won't want to use this function, and instead produce movement through physics functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Location on the X vector. </td></tr>
    <tr><td class="paramname">y</td><td>Location on the Y vector. </td></tr>
    <tr><td class="paramname">z</td><td>Location on the Z vector. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a85df68bb231bbe5cbf7d6f2ff895f172"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetLocation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td>
          <td class="paramname"><em>Place</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually sets the location of the actor. </p>
<p>Calling this function prior to adding it to the <a class="el" href="classMezzanine_1_1World.xhtml">World</a> will have no effect. <br/>
 In most situations you won't want to use this function, and instead produce movement through physics functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Place</td><td>The <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the location. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a31db2a58f777399930f0efc4680f46cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetOrientation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the orientation of the actor. </p>
<p>Sets the orientation of the actor via <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Where the X vector is rotated about. </td></tr>
    <tr><td class="paramname">y</td><td>Where the Y vector is rotated about. </td></tr>
    <tr><td class="paramname">z</td><td>Where the Z vector is rotated about. </td></tr>
    <tr><td class="paramname">w</td><td>How much to about the x, y, z. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af173b17bd2c3af660fd763fb40206f79"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::ActorSoft::SetOrientation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td>
          <td class="paramname"><em>Rotation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the orientation of the actor. </p>
<p>Sets the orientation of the actor via a <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rotation</td><td>The <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> representing the Rotation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="actorsoft_8h_source.xhtml">actorsoft.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Apr 9 2013 23:03:26 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
