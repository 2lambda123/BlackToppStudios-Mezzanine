<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Any Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1Any-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Any Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a simple class used for type-safe casting of any type of data.  
 <a href="classMezzanine_1_1Any.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="any_8h_source.xhtml">any.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Any:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Any__coll__graph.svg" width="192" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2110b73e2743239ac7be3bb7a06b9d1d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2110b73e2743239ac7be3bb7a06b9d1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a2110b73e2743239ac7be3bb7a06b9d1d">Any</a> ()</td></tr>
<tr class="memdesc:a2110b73e2743239ac7be3bb7a06b9d1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="memitem:a8afff2b5eda6e5d3d18681804d343a33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a8afff2b5eda6e5d3d18681804d343a33">Any</a> (const <a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;Other)</td></tr>
<tr class="memdesc:a8afff2b5eda6e5d3d18681804d343a33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy Constructor.  <a href="#a8afff2b5eda6e5d3d18681804d343a33"></a><br/></td></tr>
<tr class="memitem:aec4af2c2fb2a27414479987bdbf6203a"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:aec4af2c2fb2a27414479987bdbf6203a"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#aec4af2c2fb2a27414479987bdbf6203a">Any</a> (const ValueType &amp;Value)</td></tr>
<tr class="memdesc:aec4af2c2fb2a27414479987bdbf6203a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Template copy Constructor.  <a href="#aec4af2c2fb2a27414479987bdbf6203a"></a><br/></td></tr>
<tr class="memitem:a31e5d43af24ccd611f9fb3554e500889"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a31e5d43af24ccd611f9fb3554e500889"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a31e5d43af24ccd611f9fb3554e500889">~Any</a> ()</td></tr>
<tr class="memdesc:a31e5d43af24ccd611f9fb3554e500889"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="memitem:a4aa13b34a4193a374a02914d5b7ed786"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4aa13b34a4193a374a02914d5b7ed786"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a4aa13b34a4193a374a02914d5b7ed786">Destroy</a> ()</td></tr>
<tr class="memdesc:a4aa13b34a4193a374a02914d5b7ed786"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy's the data contained in this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> and makes it empty. <br/></td></tr>
<tr class="memitem:a68ed4296fff27072d944740f0cacc196"><td class="memItemLeft" align="right" valign="top">const std::type_info &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a68ed4296fff27072d944740f0cacc196">GetType</a> () const </td></tr>
<tr class="memdesc:a68ed4296fff27072d944740f0cacc196"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type-info of the stored data.  <a href="#a68ed4296fff27072d944740f0cacc196"></a><br/></td></tr>
<tr class="memitem:aa6d3408e8c58c3d2496cdd12a528c122"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#aa6d3408e8c58c3d2496cdd12a528c122">IsEmpty</a> () const </td></tr>
<tr class="memdesc:aa6d3408e8c58c3d2496cdd12a528c122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> is storing data.  <a href="#aa6d3408e8c58c3d2496cdd12a528c122"></a><br/></td></tr>
<tr class="memitem:a80e0935053029b964ccc1f057600bc8f"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a80e0935053029b964ccc1f057600bc8f"><td class="memTemplItemLeft" align="right" valign="top">ValueType&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a80e0935053029b964ccc1f057600bc8f">operator()</a> () const </td></tr>
<tr class="memdesc:a80e0935053029b964ccc1f057600bc8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parens operator.  <a href="#a80e0935053029b964ccc1f057600bc8f"></a><br/></td></tr>
<tr class="memitem:a341c6e5ba0af79f2c5f5ee331bf58f94"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a341c6e5ba0af79f2c5f5ee331bf58f94"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a341c6e5ba0af79f2c5f5ee331bf58f94">operator=</a> (const ValueType &amp;Other)</td></tr>
<tr class="memdesc:a341c6e5ba0af79f2c5f5ee331bf58f94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated Assignment operator.  <a href="#a341c6e5ba0af79f2c5f5ee331bf58f94"></a><br/></td></tr>
<tr class="memitem:a1183a817e5a134aef5a10b26e6c7edb7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#a1183a817e5a134aef5a10b26e6c7edb7">operator=</a> (const <a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;Other)</td></tr>
<tr class="memdesc:a1183a817e5a134aef5a10b26e6c7edb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#a1183a817e5a134aef5a10b26e6c7edb7"></a><br/></td></tr>
<tr class="memitem:acd67eea74b4290893704c43a40ee23d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#acd67eea74b4290893704c43a40ee23d5">Swap</a> (<a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;Other)</td></tr>
<tr class="memdesc:acd67eea74b4290893704c43a40ee23d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps the contents of this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> with another.  <a href="#acd67eea74b4290893704c43a40ee23d5"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a73f9b153e32288bf32219e87240bbdb7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a73f9b153e32288bf32219e87240bbdb7"></a>
<a class="el" href="classMezzanine_1_1AnyPlaceHolder.xhtml">AnyPlaceHolder</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Data</b></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ae41a20ee734b6e906c906d90a76ff470"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:ae41a20ee734b6e906c906d90a76ff470"><td class="memTemplItemLeft" align="right" valign="top">ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#ae41a20ee734b6e906c906d90a76ff470">Any_Cast</a> (<a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> *)</td></tr>
<tr class="memdesc:ae41a20ee734b6e906c906d90a76ff470"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast from an <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to a value.  <a href="#ae41a20ee734b6e906c906d90a76ff470"></a><br/></td></tr>
<tr class="memitem:add8b8db51a3d5124fff6867e8ae54a63"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Any.xhtml#add8b8db51a3d5124fff6867e8ae54a63">operator&lt;&lt;</a> (std::ostream &amp;Out, const <a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;Value)</td></tr>
<tr class="memdesc:add8b8db51a3d5124fff6867e8ae54a63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Streaming operator.  <a href="#add8b8db51a3d5124fff6867e8ae54a63"></a><br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This is a simple class used for type-safe casting of any type of data. </p>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00111">111</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a8afff2b5eda6e5d3d18681804d343a33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Any::Any </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>The other <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to construct from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00123">123</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="aec4af2c2fb2a27414479987bdbf6203a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Any::Any </td>
          <td>(</td>
          <td class="paramtype">const ValueType &amp;&#160;</td>
          <td class="paramname"><em>Value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Template copy Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Value</td><td>The data to construct this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> with. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00128">128</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a68ed4296fff27072d944740f0cacc196"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::type_info&amp; Mezzanine::Any::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type-info of the stored data. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a type_info struct detailing the type of data stored. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00167">167</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa6d3408e8c58c3d2496cdd12a528c122"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Any::IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> is storing data. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> is storing valid data, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00161">161</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="a80e0935053029b964ccc1f057600bc8f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ValueType Mezzanine::Any::operator() </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parens operator. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the value being stored. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo:</a></b></dt><dd>These exceptions should get logged, but the <a class="el" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a> class is too large for it to be worthwhile to include it here. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00191">191</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="a341c6e5ba0af79f2c5f5ee331bf58f94"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a>&amp; Mezzanine::Any::operator= </td>
          <td>(</td>
          <td class="paramtype">const ValueType &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Templated Assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>The Value to copy into this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a>. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00145">145</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1183a817e5a134aef5a10b26e6c7edb7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a>&amp; Mezzanine::Any::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>The <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to copy into this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a>. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00153">153</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="acd67eea74b4290893704c43a40ee23d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a>&amp; Mezzanine::Any::Swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Swaps the contents of this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> with another. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>The other <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to swap with. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to this <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a>. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00136">136</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="ae41a20ee734b6e906c906d90a76ff470"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ValueType* Any_Cast </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> *&#160;</td>
          <td class="paramname"><em>Operand</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Cast from an <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Operand</td><td>A pointer to the <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to cast from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the casted value. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00215">215</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<a class="anchor" id="add8b8db51a3d5124fff6867e8ae54a63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>Out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Any.xhtml">Any</a> &amp;&#160;</td>
          <td class="paramname"><em>Value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Streaming operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Out</td><td>The output stream to stream to. </td></tr>
    <tr><td class="paramname">Value</td><td>The <a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> to be streamed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a reference to the streamed stream. </dd></dl>

<p>Definition at line <a class="el" href="any_8h_source.xhtml#l00182">182</a> of file <a class="el" href="any_8h_source.xhtml">any.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="any_8h_source.xhtml">any.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Apr 9 2013 23:03:26 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
