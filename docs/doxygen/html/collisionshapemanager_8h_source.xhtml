<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/sqeaky/Code/Mezzanine/Mezzanine/src/collisionshapemanager.h Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_282391f6f4177160a7bfc5213c65158e.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_b044052e4980a71349e081a68f99b09b.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">collisionshapemanager.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _collisionshapemanager_h</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _collisionshapemanager_h</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;Physics/collisionshape.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="datatypes_8h.xhtml" title="All the definitions for datatypes as well as some basic conversion functions are defined here...">datatypes.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;managerbase.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;managerfactory.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;singleton.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">class </span>btTriangleMesh;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">class </span>btCollisionShape;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">namespace </span>Graphics</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">class </span>Mesh;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">namespace </span>Physics</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keyword">class </span>CollisionShape;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">class </span>ConvexHullCollisionShape;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">class </span>DynamicMeshCollisionShape;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">class </span>StaticMeshCollisionShape;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">class </span>CompoundCollisionShape;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// Used by the scripting language binder to help create bindgings for this class.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">    #ifdef SWIG</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span>    %<span class="keyword">template</span>(SingletonCollisionShapeManager) <a class="code" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt;CollisionShapeManager&gt;</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor"></span><span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /// @class CollisionShapeManager</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /// @headerfile collisionshapemanager.h</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    /// @brief This manager is for the storage of all shapes and creation of mesh shapes.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /// @details Collision shapes do not need to be stored in this manager, but can be re-used</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    /// across multiple World objects with physics representations.  For performance reasons, it is</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /// recommended to store and re-use a collision shape anytime you need it in multiple objects,</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    /// rather then re-creating the same shape again and again.</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    ///////////////////////////////////////</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml">   81</a></span>&#160;<span class="comment"></span>    <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a> : <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>, <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml">Singleton&lt;CollisionShapeManager&gt;</a></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">protected</span>:<span class="comment"></span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">            /// @brief This Stores the names and collision Shapes</span></div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#a5878a3669f80a6a1f0a7d7148d5ef8af">   85</a></span>&#160;<span class="comment"></span>            std::map&lt;String,Physics::CollisionShape*&gt; <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#a5878a3669f80a6a1f0a7d7148d5ef8af" title="This Stores the names and collision Shapes.">CollisionShapes</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">            /// @brief Stores shapes that have notbe given a name.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#a01863d6ee8dd2bf122c4b690b593cd93">   88</a></span>&#160;<span class="comment"></span>            std::set&lt;Physics::CollisionShape*&gt; <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#a01863d6ee8dd2bf122c4b690b593cd93" title="Stores shapes that have notbe given a name.">UnnamedShapes</a>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">            /// @brief Creates a TriMesh to be used in TriMesh based collision shapes.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span>            btTriangleMesh* CreateBulletTrimesh(<a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* ObjectMesh, <span class="keywordtype">bool</span> UseAllSubmeshes);<span class="comment"></span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">            /// @brief Creates a wrapper for an internal bullet shape.</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* WrapShape(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, btCollisionShape* InternalShape);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">            /// @brief Class constructor.</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a>();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">            /// @brief XML constructor.</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">            /// @param XMLNode The node of the xml document to construct from.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">            /// @brief Class destructor.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> ~<a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a>();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////     // There are reasons why maybe this should not be public</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span>            <span class="comment">// Iteration</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">            /// @brief An iterator that should be compatible with most iterator algorithms</span></div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#afdfd6a59aeee9ba1a31e7ad3ae85bb87">  109</a></span>&#160;<span class="comment"></span>            <span class="keyword">typedef</span> std::map&lt;String,Physics::CollisionShape*&gt;::iterator <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#afdfd6a59aeee9ba1a31e7ad3ae85bb87" title="An iterator that should be compatible with most iterator algorithms.">iterator</a>;<span class="comment"></span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">            /// @brief An const_iterator that should be compatible with most iterator algorithms</span></div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#add99b0db976867d9e370b785474c7296">  111</a></span>&#160;<span class="comment"></span>            <span class="keyword">typedef</span> std::map&lt;String,Physics::CollisionShape*&gt;::const_iterator <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#add99b0db976867d9e370b785474c7296" title="An const_iterator that should be compatible with most iterator algorithms.">const_iterator</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">            /// @brief Get an Iterator pointing to the first item in the container.</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">            /// @return An iterator that is compatible with most std algorithms and points to the first collisionshape entry.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span>            iterator begin();<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">            /// @brief Get a const Iterator pointing at the first item in the container.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">            /// @return A const iterator that is compatible with most std algorithms and points to the first collisionshape entry.</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span>            const_iterator begin() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">            /// @brief Get an Iterator pointing to one past the last item in the container.</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">            /// @return An iterator that is compatible with most std algorithms and points to one past the last valid collision shape entry.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"></span>            iterator end();<span class="comment"></span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">            /// @brief Get an const Iterator pointing to one past the last item in the container.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">            /// @return An const iterator that is compatible with most std algorithms and points to one past the last valid collision shape entry.</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span>            const_iterator end() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span>            <span class="comment">// Generic Shape Management</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">            /// @brief Stores a pre-made shape in this manager.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">            /// @param Shape The shape to be stored.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> StoreShape(<a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* Shape);<span class="comment"></span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">            /// @brief Gets a shape already stored in this manager.</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">            /// @return Returns a pointer to the desired shape.</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">            /// @param Name the name of the desired shape.</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* GetShape(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name);<span class="comment"></span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">            /// @brief Gets the number of stored shapes in this manager.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">            /// @return Returns a whole representing how many shapes this manager is storing.</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> GetNumStoredShapes();<span class="comment"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">            /// @brief Removes a shape from this manager without deleting it.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">            /// @param Shape Pointer to the shape to be removed.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> RemoveShape(<a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* Shape);<span class="comment"></span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">            /// @brief Removes a shape from this manager without deleting it.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">            /// @param Name The name of the shape to be removed.</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> RemoveShape(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name);<span class="comment"></span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">            /// @brief Removes all shapes from the manager without deleting them.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> RemoveAllShapes();<span class="comment"></span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">            /// @brief Removes a shape from this manager and deletes it.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">            /// @param Shape Pointer to the shape to be destroyed.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyShape(<a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* Shape);<span class="comment"></span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">            /// @brief Removes a shape from this manager and deletes it.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">            /// @param Name The name of the shape to be destroyed.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyShape(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name);<span class="comment"></span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">            /// @brief Removes all shapes from the manager and then deletes them.</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyAllShapes();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span>            <span class="comment">// Shape Creation Utilities</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">            /// @brief Generates a Convex Hull from a provided mesh.</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">            /// @param ObjectMesh The mesh to base this shape off of.</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1ConvexHullCollisionShape.xhtml" title="A simple convex shape built from a low number of points in local space.">Physics::ConvexHullCollisionShape</a>* GenerateConvexHull(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* ObjectMesh, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">            /// @brief Generates a Convex Hull from a provided mesh.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">            /// @param MeshName The name of the mesh to base this shape off of.</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">            /// @param Group The resource group where the mesh can be found.</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1ConvexHullCollisionShape.xhtml" title="A simple convex shape built from a low number of points in local space.">Physics::ConvexHullCollisionShape</a>* GenerateConvexHull(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Group, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">            /// @brief Generates a mesh shape for dynamic objects.</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">            /// @param ObjectMesh The mesh to base this shape off of.</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1DynamicMeshCollisionShape.xhtml" title="A triangle mesh collsion shape based on a graphics mesh.">Physics::DynamicMeshCollisionShape</a>* GenerateDynamicTriMesh(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* ObjectMesh, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">            /// @brief Generates a mesh shape for dynamic objects.</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">            /// @param MeshName The name of the mesh to base this shape off of.</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">            /// @param Group The resource group where the mesh can be found.</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1DynamicMeshCollisionShape.xhtml" title="A triangle mesh collsion shape based on a graphics mesh.">Physics::DynamicMeshCollisionShape</a>* GenerateDynamicTriMesh(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Group, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">            /// @brief Generates a mesh shape for static objects.</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">            /// @param ObjectMesh The mesh to base this shape off of.</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1StaticMeshCollisionShape.xhtml" title="A triangle mesh collsion shape based on a graphics mesh.">Physics::StaticMeshCollisionShape</a>* GenerateStaticTriMesh(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* ObjectMesh, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">            /// @brief Generates a mesh shape for static objects.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">            /// @param MeshName The name of the mesh to base this shape off of.</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">            /// @param Group The resource group where the mesh can be found.</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1StaticMeshCollisionShape.xhtml" title="A triangle mesh collsion shape based on a graphics mesh.">Physics::StaticMeshCollisionShape</a>* GenerateStaticTriMesh(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Group, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">            /// @brief Generates a compound shape of Convex Hulls from a provided mesh.</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">            /// @param ObjectMesh The mesh to base this shape off of.</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1CompoundCollisionShape.xhtml" title="A collision shape composed of many other collision shapes placed and oriented in local space...">Physics::CompoundCollisionShape</a>* PerformConvexDecomposition(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* ObjectMesh, <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> Depth, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> CPercent, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> PPercent, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">            /// @brief Generates a compound shape of Convex Hulls from a provided mesh.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">            /// @return Returns a pointer to the created shape.</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">            /// @param Name The name to give the created shape.</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">            /// @param MeshName The name of the mesh to base this shape off of.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">            /// @param Group The resource group where the mesh can be found.</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">            /// @param UseAllSubMeshes Whether or not you want to use all submesh information when generating this shape.</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Physics_1_1CompoundCollisionShape.xhtml" title="A collision shape composed of many other collision shapes placed and oriented in local space...">Physics::CompoundCollisionShape</a>* PerformConvexDecomposition(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Group, <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="A Datatype used to represent an postive integer numbers.">Whole</a> Depth, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> CPercent, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> PPercent, <span class="keywordtype">bool</span> UseAllSubmeshes = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"></span>            <span class="comment">// Shape Saving/Loading Utilities</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">            /// @brief Loads all shapes saved in an existing .bullet file, and stores them in this manager.</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">            /// @param FileName The name of the file to load shapes from.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">            /// @param Group The resource group the .bullet file is located in.</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> LoadAllShapesFromFile(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; FileName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; Group);<span class="comment"></span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">            /// @brief Takes all the shapes currently stored this manager and saves them to a .bullet file.</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">            /// @param FileName The name of the file to save the shapes to.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SaveAllStoredShapesToFile(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; FileName);<span class="comment"></span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">            /// @brief Saves all shapes contained in a vector and saves them to a .bullet file.</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">            /// @param FileName The name of the file to save the shapes to.</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">            /// @param ShapesToSave A vector of collisions shapes that will be saved.</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SaveShapesToFile(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; FileName, std::vector&lt;Physics::CollisionShape*&gt;&amp; ShapesToSave);<span class="comment"></span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">            /// @brief Used to serialize and deserialize collisionshapes to xml</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">            /// @details More Sophisticated shapes may reference a .bullet or a .mesh file.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#aa8418b770b2f8dcb0c73cfed5c7d3e0f">  228</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Physics_1_1CollisionShapeDeSerializer.xhtml" title="A tool to aid in deserialization for the specific instances that DeSerialization CollisionShapes othe...">Physics::CollisionShapeDeSerializer</a> <a class="code" href="classMezzanine_1_1CollisionShapeManager.xhtml#aa8418b770b2f8dcb0c73cfed5c7d3e0f" title="Used to serialize and deserialize collisionshapes to xml.">ShapeDeserializer</a>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"></span>            <span class="comment">// Unnamed Shape Management</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">            /// @brief Returns a vector of unnamed shapes stored in this manager.</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">            /// @return Returns a reference to a vector storing all the unnamed shapes loaded from files.</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">            /// @details Shapes created in code require a name to be constructed.  However, sometimes when loading a file</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">            /// a shape may not have a name, since one isn&#39;t required by the .bullet file format in order for a shape</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">            /// to be serialized.  When that happens those shapes go here, and from there can be handled by the game</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">            /// programmer however they see fit.</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment"></span>            std::set&lt;Physics::CollisionShape*&gt;&amp; GetUnnamedShapes();<span class="comment"></span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">            /// @brief Assigns a name to an unnamed shape.</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">            /// @param NewName The new name to be assigned to a shape.</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">            /// @param Shape The shape to be given the new name.  This shape must be a valid shape currently stored in the</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">            /// set of unnamed shapes.  Calling this fucntion will not remove it from that set, but will move it into</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">            /// the named collision shape map.  If you want the shape removed from the Unnamed set, you must do it yourself.</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> SetNameForUnnamedShape(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a>&amp; NewName, <a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* Shape);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span>            <span class="comment">// Inherited from Managerbase</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">            /// @copydoc Mezzanine::ManagerBase::Initialize()</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> Initialize();<span class="comment"></span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">            /// @copydoc Mezzanine::ManagerBase::DoMainLoopItems()</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoMainLoopItems();<span class="comment"></span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">            /// @copydoc ManagerBase::GetInterfaceType()</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> GetInterfaceType() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">            /// @copydoc ManagerBase::GetImplementationTypeName()</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> GetImplementationTypeName() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    };<span class="comment">//CollisionShapeManager</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">    /// @class DefaultCollisionShapeManagerFactory</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">    /// @headerfile collisionshapemanager.h</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">    /// @brief A factory responsible for the creation and destruction of the default collisionshapemanager.</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">    ///////////////////////////////////////</span></div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultCollisionShapeManagerFactory.xhtml">  265</a></span>&#160;<span class="comment"></span>    <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1DefaultCollisionShapeManagerFactory.xhtml" title="A factory responsible for the creation and destruction of the default collisionshapemanager.">DefaultCollisionShapeManagerFactory</a> : <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1ManagerFactory.xhtml" title="This is a base class for factories that construct the managers the engine uses.">ManagerFactory</a></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">            /// @brief Class constructor.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1DefaultCollisionShapeManagerFactory.xhtml" title="A factory responsible for the creation and destruction of the default collisionshapemanager.">DefaultCollisionShapeManagerFactory</a>();<span class="comment"></span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">            /// @brief Class destructor.</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> ~<a class="code" href="classMezzanine_1_1DefaultCollisionShapeManagerFactory.xhtml" title="A factory responsible for the creation and destruction of the default collisionshapemanager.">DefaultCollisionShapeManagerFactory</a>();</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">            /// @copydoc ManagerFactory::GetManagerTypeName()</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment"></span>            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A Datatype used to a series of characters.">String</a> GetManagerTypeName() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">            /// @copydoc ManagerFactory::CreateManager(NameValuePairList&amp;)</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* CreateManager(<a class="code" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28" title="This is a datatype mostly used for describing settings or parameters that can&#39;t be declared in advanc...">NameValuePairList</a>&amp; Params);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">            /// @copydoc ManagerFactory::CreateManager(XML::Node&amp;)</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* CreateManager(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">            /// @copydoc ManagerFactory::DestroyManager(ManagerBase*)</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyManager(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>* ToBeDestroyed);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    };<span class="comment">//DefaultCollisionShapeManagerFactory</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed May 8 2013 23:33:48 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2</small></address>
</body>
</html>
