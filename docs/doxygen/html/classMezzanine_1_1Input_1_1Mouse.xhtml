<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Input::Mouse Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">May 19, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Input.xhtml">Input</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml">Mouse</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Input_1_1Mouse-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Input::Mouse Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class represents the mouse input device.  
 <a href="classMezzanine_1_1Input_1_1Mouse.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="mouse_8h_source.xhtml">mouse.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Input::Mouse:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Input_1_1Mouse__inherit__graph.svg" width="174" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Input::Mouse:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Input_1_1Mouse__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2626a53ed8ab448c521c47f2db5e8b43"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2626a53ed8ab448c521c47f2db5e8b43"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a2626a53ed8ab448c521c47f2db5e8b43">Mouse</a> ()</td></tr>
<tr class="memdesc:a2626a53ed8ab448c521c47f2db5e8b43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a2626a53ed8ab448c521c47f2db5e8b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804921b4b178b91985674d08b6f4c3e9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a804921b4b178b91985674d08b6f4c3e9"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a804921b4b178b91985674d08b6f4c3e9">~Mouse</a> ()</td></tr>
<tr class="memdesc:a804921b4b178b91985674d08b6f4c3e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a804921b4b178b91985674d08b6f4c3e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aead7d6f78f6ad18cb967cf6d241c4ceb"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#aead7d6f78f6ad18cb967cf6d241c4ceb">GetButtonState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:aead7d6f78f6ad18cb967cf6d241c4ceb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the state of the requested button.  <a href="#aead7d6f78f6ad18cb967cf6d241c4ceb">More...</a><br/></td></tr>
<tr class="separator:aead7d6f78f6ad18cb967cf6d241c4ceb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4fdb908b10a4ef5404556fe5c2b8e77"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#aa4fdb908b10a4ef5404556fe5c2b8e77">GetButtonState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:aa4fdb908b10a4ef5404556fe5c2b8e77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the state of the requested button.  <a href="#aa4fdb908b10a4ef5404556fe5c2b8e77">More...</a><br/></td></tr>
<tr class="separator:aa4fdb908b10a4ef5404556fe5c2b8e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a110d1f77f6a7c226119ffcbee6776b00"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a110d1f77f6a7c226119ffcbee6776b00">GetCursorVisibility</a> ()</td></tr>
<tr class="memdesc:a110d1f77f6a7c226119ffcbee6776b00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current state of the visibility of the cursor.  <a href="#a110d1f77f6a7c226119ffcbee6776b00">More...</a><br/></td></tr>
<tr class="separator:a110d1f77f6a7c226119ffcbee6776b00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad96d44cfc3415c66c9a6c06db4bc3ef9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#ad96d44cfc3415c66c9a6c06db4bc3ef9">GetDeltaX</a> () const </td></tr>
<tr class="memdesc:ad96d44cfc3415c66c9a6c06db4bc3ef9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the X delta of the mouse position from the last update.  <a href="#ad96d44cfc3415c66c9a6c06db4bc3ef9">More...</a><br/></td></tr>
<tr class="separator:ad96d44cfc3415c66c9a6c06db4bc3ef9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9686caba63e8a1c0d09e1f60121c0989"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a9686caba63e8a1c0d09e1f60121c0989">GetDeltaY</a> () const </td></tr>
<tr class="memdesc:a9686caba63e8a1c0d09e1f60121c0989"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Y delta of the mouse position from the last update.  <a href="#a9686caba63e8a1c0d09e1f60121c0989">More...</a><br/></td></tr>
<tr class="separator:a9686caba63e8a1c0d09e1f60121c0989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a566ac03684a9b20edfdec6bc76330a7f"><td class="memItemLeft" align="right" valign="top">const <br class="typebreak"/>
<a class="el" href="namespaceMezzanine_1_1Input.xhtml#a85056e46299252c81ef5278cbb7d5c8f">Input::DirectionalMotionState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a566ac03684a9b20edfdec6bc76330a7f">GetHorizontalWheelState</a> () const </td></tr>
<tr class="memdesc:a566ac03684a9b20edfdec6bc76330a7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current state of the horizontal mouse wheel.  <a href="#a566ac03684a9b20edfdec6bc76330a7f">More...</a><br/></td></tr>
<tr class="separator:a566ac03684a9b20edfdec6bc76330a7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a467806ae2c8635d06514b7c648fbaabc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a467806ae2c8635d06514b7c648fbaabc">GetHoveredViewport</a> () const </td></tr>
<tr class="memdesc:a467806ae2c8635d06514b7c648fbaabc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the current viewport the mouse cursor is hovered over.  <a href="#a467806ae2c8635d06514b7c648fbaabc">More...</a><br/></td></tr>
<tr class="separator:a467806ae2c8635d06514b7c648fbaabc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac72abde5becd9f77d5eeb23fe127fe00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Graphics_1_1GameWindow.xhtml">Graphics::GameWindow</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#ac72abde5becd9f77d5eeb23fe127fe00">GetHoveredWindow</a> () const </td></tr>
<tr class="memdesc:ac72abde5becd9f77d5eeb23fe127fe00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the window with the current mouse focus.  <a href="#ac72abde5becd9f77d5eeb23fe127fe00">More...</a><br/></td></tr>
<tr class="separator:ac72abde5becd9f77d5eeb23fe127fe00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9670ee239edfc2451161572b7fc349c8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a9670ee239edfc2451161572b7fc349c8">GetMouseCursor</a> ()</td></tr>
<tr class="memdesc:a9670ee239edfc2451161572b7fc349c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current mouse cursor.  <a href="#a9670ee239edfc2451161572b7fc349c8">More...</a><br/></td></tr>
<tr class="separator:a9670ee239edfc2451161572b7fc349c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b704eef0243b9c396e421997b4c530f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a1b704eef0243b9c396e421997b4c530f">GetMouseDelta</a> () const </td></tr>
<tr class="memdesc:a1b704eef0243b9c396e421997b4c530f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the change in the mouse position from the previous update.  <a href="#a1b704eef0243b9c396e421997b4c530f">More...</a><br/></td></tr>
<tr class="separator:a1b704eef0243b9c396e421997b4c530f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58f6aa31a1042fa19e3231e72549eb8e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a58f6aa31a1042fa19e3231e72549eb8e">GetRelativeMode</a> ()</td></tr>
<tr class="memdesc:a58f6aa31a1042fa19e3231e72549eb8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not relative mode is enabled.  <a href="#a58f6aa31a1042fa19e3231e72549eb8e">More...</a><br/></td></tr>
<tr class="separator:a58f6aa31a1042fa19e3231e72549eb8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07c1eefa5a39012dba2b749061573bb6"><td class="memItemLeft" align="right" valign="top">const <br class="typebreak"/>
<a class="el" href="namespaceMezzanine_1_1Input.xhtml#a85056e46299252c81ef5278cbb7d5c8f">Input::DirectionalMotionState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a07c1eefa5a39012dba2b749061573bb6">GetVerticalWheelState</a> () const </td></tr>
<tr class="memdesc:a07c1eefa5a39012dba2b749061573bb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current state of the vertical mouse wheel.  <a href="#a07c1eefa5a39012dba2b749061573bb6">More...</a><br/></td></tr>
<tr class="separator:a07c1eefa5a39012dba2b749061573bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac26ac190eb0231d35d0b6ca9f995dda1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#ac26ac190eb0231d35d0b6ca9f995dda1">GetViewportPosition</a> () const </td></tr>
<tr class="memdesc:ac26ac190eb0231d35d0b6ca9f995dda1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the position of the mouse cursor relative to the origin of the viewport in the window with the mouse focus.  <a href="#ac26ac190eb0231d35d0b6ca9f995dda1">More...</a><br/></td></tr>
<tr class="separator:ac26ac190eb0231d35d0b6ca9f995dda1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a656ee2a55c5c8712147f5fed9b727fd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a656ee2a55c5c8712147f5fed9b727fd7">GetViewportX</a> () const </td></tr>
<tr class="memdesc:a656ee2a55c5c8712147f5fed9b727fd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the X position of the mouse relative to the viewport.  <a href="#a656ee2a55c5c8712147f5fed9b727fd7">More...</a><br/></td></tr>
<tr class="separator:a656ee2a55c5c8712147f5fed9b727fd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6264283f96afcf7474951d6ed57cc77c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a6264283f96afcf7474951d6ed57cc77c">GetViewportY</a> () const </td></tr>
<tr class="memdesc:a6264283f96afcf7474951d6ed57cc77c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Y position of the mouse relative to the viewport.  <a href="#a6264283f96afcf7474951d6ed57cc77c">More...</a><br/></td></tr>
<tr class="separator:a6264283f96afcf7474951d6ed57cc77c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac957a837bfd3319bc869ee15e53d9f7e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#ac957a837bfd3319bc869ee15e53d9f7e">GetWindowPosition</a> () const </td></tr>
<tr class="memdesc:ac957a837bfd3319bc869ee15e53d9f7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the position of the mouse cursor relative to the origin of the window with the mouse focus.  <a href="#ac957a837bfd3319bc869ee15e53d9f7e">More...</a><br/></td></tr>
<tr class="separator:ac957a837bfd3319bc869ee15e53d9f7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c590b1f949bf4db4816adf002fb876"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a99c590b1f949bf4db4816adf002fb876">GetWindowX</a> () const </td></tr>
<tr class="memdesc:a99c590b1f949bf4db4816adf002fb876"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the X position of the mouse relative to the window.  <a href="#a99c590b1f949bf4db4816adf002fb876">More...</a><br/></td></tr>
<tr class="separator:a99c590b1f949bf4db4816adf002fb876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aa47851b0c7ae27931c2c692daa1886"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a2aa47851b0c7ae27931c2c692daa1886">GetWindowY</a> () const </td></tr>
<tr class="memdesc:a2aa47851b0c7ae27931c2c692daa1886"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Y position of the mouse relative to the window.  <a href="#a2aa47851b0c7ae27931c2c692daa1886">More...</a><br/></td></tr>
<tr class="separator:a2aa47851b0c7ae27931c2c692daa1886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f5368a5b202123d217b2c6cd72dcf62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a7f5368a5b202123d217b2c6cd72dcf62">SetCursorVisibility</a> (bool Visible)</td></tr>
<tr class="memdesc:a7f5368a5b202123d217b2c6cd72dcf62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the visibility of the mouse cursor.  <a href="#a7f5368a5b202123d217b2c6cd72dcf62">More...</a><br/></td></tr>
<tr class="separator:a7f5368a5b202123d217b2c6cd72dcf62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90893a29c5fa8022232e9f4119e492d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a90893a29c5fa8022232e9f4119e492d7">SetMouseCursor</a> ()</td></tr>
<tr class="memdesc:a90893a29c5fa8022232e9f4119e492d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the mouse cursor.  <a href="#a90893a29c5fa8022232e9f4119e492d7">More...</a><br/></td></tr>
<tr class="separator:a90893a29c5fa8022232e9f4119e492d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c8c7b3fec2654f016b9194dfd3895f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#ad4c8c7b3fec2654f016b9194dfd3895f">SetRelativeMode</a> (bool Enable)</td></tr>
<tr class="memdesc:ad4c8c7b3fec2654f016b9194dfd3895f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not relative mode is enabled.  <a href="#ad4c8c7b3fec2654f016b9194dfd3895f">More...</a><br/></td></tr>
<tr class="separator:ad4c8c7b3fec2654f016b9194dfd3895f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e2d295e14c16f0182802100e3934fb2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a0e2d295e14c16f0182802100e3934fb2">WarpCursorToPosition</a> (<a class="el" href="classMezzanine_1_1Graphics_1_1GameWindow.xhtml">Graphics::GameWindow</a> *Win, const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;Position)</td></tr>
<tr class="memdesc:a0e2d295e14c16f0182802100e3934fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the mouse cursor's position to the specified point in the specified window.  <a href="#a0e2d295e14c16f0182802100e3934fb2">More...</a><br/></td></tr>
<tr class="separator:a0e2d295e14c16f0182802100e3934fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d4723b175746531847007864df7a5d1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a9d4723b175746531847007864df7a5d1">Device</a> ()</td></tr>
<tr class="memdesc:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af06c5fb7dcd85a5f5e432716beff064f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af06c5fb7dcd85a5f5e432716beff064f"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#af06c5fb7dcd85a5f5e432716beff064f">~Device</a> ()</td></tr>
<tr class="memdesc:af06c5fb7dcd85a5f5e432716beff064f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:af06c5fb7dcd85a5f5e432716beff064f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0656cd5b70729ded22a4a71fff996598 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a0656cd5b70729ded22a4a71fff996598">_Update</a> (std::vector&lt; <a class="el" href="classMezzanine_1_1MetaCode.xhtml">MetaCode</a> &gt; &amp;Codes)</td></tr>
<tr class="memdesc:a0656cd5b70729ded22a4a71fff996598 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates this device with the newest data.  <a href="#a0656cd5b70729ded22a4a71fff996598">More...</a><br/></td></tr>
<tr class="separator:a0656cd5b70729ded22a4a71fff996598 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0c68ecb03ccbfea547a8d9fa3f290b6 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ac0c68ecb03ccbfea547a8d9fa3f290b6">CheckButtonState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;State) const </td></tr>
<tr class="memdesc:ac0c68ecb03ccbfea547a8d9fa3f290b6 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a button on this device is a specific state.  <a href="#ac0c68ecb03ccbfea547a8d9fa3f290b6">More...</a><br/></td></tr>
<tr class="separator:ac0c68ecb03ccbfea547a8d9fa3f290b6 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fdaacf2f0da28707f92ad5fe998e941 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a3fdaacf2f0da28707f92ad5fe998e941">CheckButtonState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;State) const </td></tr>
<tr class="memdesc:a3fdaacf2f0da28707f92ad5fe998e941 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a button on this device is a specific state.  <a href="#a3fdaacf2f0da28707f92ad5fe998e941">More...</a><br/></td></tr>
<tr class="separator:a3fdaacf2f0da28707f92ad5fe998e941 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49bab894fc0efe8ecd3792699dd17464 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a49bab894fc0efe8ecd3792699dd17464">GetNumButtons</a> () const </td></tr>
<tr class="memdesc:a49bab894fc0efe8ecd3792699dd17464 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of buttons on this device.  <a href="#a49bab894fc0efe8ecd3792699dd17464">More...</a><br/></td></tr>
<tr class="separator:a49bab894fc0efe8ecd3792699dd17464 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b77cf9fe8ebf9a78396662b3294c50a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a4b77cf9fe8ebf9a78396662b3294c50a">IsButtonLifting</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a4b77cf9fe8ebf9a78396662b3294c50a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted this frame.  <a href="#a4b77cf9fe8ebf9a78396662b3294c50a">More...</a><br/></td></tr>
<tr class="separator:a4b77cf9fe8ebf9a78396662b3294c50a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad398a5e4e66e8c01dd00ad6c11d33d58 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ad398a5e4e66e8c01dd00ad6c11d33d58">IsButtonLifting</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:ad398a5e4e66e8c01dd00ad6c11d33d58 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted this frame.  <a href="#ad398a5e4e66e8c01dd00ad6c11d33d58">More...</a><br/></td></tr>
<tr class="separator:ad398a5e4e66e8c01dd00ad6c11d33d58 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a4fbbfc35c26d42c558ead08f56548a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a1a4fbbfc35c26d42c558ead08f56548a">IsButtonPressed</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a1a4fbbfc35c26d42c558ead08f56548a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button is pressed down.  <a href="#a1a4fbbfc35c26d42c558ead08f56548a">More...</a><br/></td></tr>
<tr class="separator:a1a4fbbfc35c26d42c558ead08f56548a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf7114603e6f41145a679abf9bf52727 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#aaf7114603e6f41145a679abf9bf52727">IsButtonPressed</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:aaf7114603e6f41145a679abf9bf52727 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button is pressed down.  <a href="#aaf7114603e6f41145a679abf9bf52727">More...</a><br/></td></tr>
<tr class="separator:aaf7114603e6f41145a679abf9bf52727 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6095b30b515a7dc5192c2658a1bb59bd inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a6095b30b515a7dc5192c2658a1bb59bd">IsButtonPressing</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a6095b30b515a7dc5192c2658a1bb59bd inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was pressed this frame.  <a href="#a6095b30b515a7dc5192c2658a1bb59bd">More...</a><br/></td></tr>
<tr class="separator:a6095b30b515a7dc5192c2658a1bb59bd inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a86ab4232a0bf2d331751342ba99446 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a2a86ab4232a0bf2d331751342ba99446">IsButtonPressing</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:a2a86ab4232a0bf2d331751342ba99446 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was pressed this frame.  <a href="#a2a86ab4232a0bf2d331751342ba99446">More...</a><br/></td></tr>
<tr class="separator:a2a86ab4232a0bf2d331751342ba99446 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4971ecec6152e885d29b1877c7c4adb7 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a4971ecec6152e885d29b1877c7c4adb7">IsButtonTransitioning</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a4971ecec6152e885d29b1877c7c4adb7 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted or pressed this frame.  <a href="#a4971ecec6152e885d29b1877c7c4adb7">More...</a><br/></td></tr>
<tr class="separator:a4971ecec6152e885d29b1877c7c4adb7 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f100cb8894fcd0847cc8906af4ef0e inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a77f100cb8894fcd0847cc8906af4ef0e">IsButtonTransitioning</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;Button) const </td></tr>
<tr class="memdesc:a77f100cb8894fcd0847cc8906af4ef0e inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted or pressed this frame.  <a href="#a77f100cb8894fcd0847cc8906af4ef0e">More...</a><br/></td></tr>
<tr class="separator:a77f100cb8894fcd0847cc8906af4ef0e inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a5bbeb4b0c26c42cb787438cc57046cc6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a5bbeb4b0c26c42cb787438cc57046cc6">UpdateImpl</a> (std::vector&lt; <a class="el" href="classMezzanine_1_1MetaCode.xhtml">MetaCode</a> &gt; &amp;Codes)</td></tr>
<tr class="memdesc:a5bbeb4b0c26c42cb787438cc57046cc6"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a5bbeb4b0c26c42cb787438cc57046cc6">More...</a><br/></td></tr>
<tr class="separator:a5bbeb4b0c26c42cb787438cc57046cc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:ae31c5c750d8d3da37f415a35eed7e41f inherit pro_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ae31c5c750d8d3da37f415a35eed7e41f">UpdateButtonTransitions</a> ()</td></tr>
<tr class="memdesc:ae31c5c750d8d3da37f415a35eed7e41f inherit pro_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates transitioning buttons.  <a href="#ae31c5c750d8d3da37f415a35eed7e41f">More...</a><br/></td></tr>
<tr class="separator:ae31c5c750d8d3da37f415a35eed7e41f inherit pro_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:abff76be21ec731f5cdf84a0a57802755"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abff76be21ec731f5cdf84a0a57802755"></a>
<a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CurrentViewport</b></td></tr>
<tr class="separator:abff76be21ec731f5cdf84a0a57802755"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe189409db06792717894977ee2a4ea3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abe189409db06792717894977ee2a4ea3"></a>
<a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Delta</b></td></tr>
<tr class="separator:abe189409db06792717894977ee2a4ea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aded006d32cc7ebc3d584a8bb433e0c62"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aded006d32cc7ebc3d584a8bb433e0c62"></a>
<a class="el" href="namespaceMezzanine_1_1Input.xhtml#a85056e46299252c81ef5278cbb7d5c8f">Input::DirectionalMotionState</a>&#160;</td><td class="memItemRight" valign="bottom"><b>HorizontalWheelState</b></td></tr>
<tr class="separator:aded006d32cc7ebc3d584a8bb433e0c62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c3eaa7e566ef4fa96d49d5aa4745f9a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5c3eaa7e566ef4fa96d49d5aa4745f9a"></a>
<a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Position</b></td></tr>
<tr class="separator:a5c3eaa7e566ef4fa96d49d5aa4745f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace271332a1f1d7ed961225d46fde66ec"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ace271332a1f1d7ed961225d46fde66ec"></a>
<a class="el" href="namespaceMezzanine_1_1Input.xhtml#a85056e46299252c81ef5278cbb7d5c8f">Input::DirectionalMotionState</a>&#160;</td><td class="memItemRight" valign="bottom"><b>VerticalWheelState</b></td></tr>
<tr class="separator:ace271332a1f1d7ed961225d46fde66ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:a8050caaa3fc14b635218609e59945a2a inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8050caaa3fc14b635218609e59945a2a"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Buttons</b></td></tr>
<tr class="separator:a8050caaa3fc14b635218609e59945a2a inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf42bfd5d0fe7f0f15c718c8b38d7b96 inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf42bfd5d0fe7f0f15c718c8b38d7b96"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TransitioningIndexes</b></td></tr>
<tr class="separator:aaf42bfd5d0fe7f0f15c718c8b38d7b96 inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class represents the mouse input device. </p>

<p>Definition at line <a class="el" href="mouse_8h_source.xhtml#l00062">62</a> of file <a class="el" href="mouse_8h_source.xhtml">mouse.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aead7d6f78f6ad18cb967cf6d241c4ceb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp; Mezzanine::Input::Mouse::GetButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the state of the requested button. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function accepts a button number, and as such expects a number from 1 to 20. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the actual state of the requested button. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#af94403d922185ad028489c6ea957f55f">Mezzanine::Input::Device</a>.</p>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00197">197</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa4fdb908b10a4ef5404556fe5c2b8e77"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp; Mezzanine::Input::Mouse::GetButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the state of the requested button. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the actual state of the requested button. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a239504b35f52758477ef549342f74d8d">Mezzanine::Input::Device</a>.</p>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a110d1f77f6a7c226119ffcbee6776b00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::Mouse::GetCursorVisibility </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current state of the visibility of the cursor. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the cursor is visible, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00225">225</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad96d44cfc3415c66c9a6c06db4bc3ef9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Mouse::GetDeltaX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the X delta of the mouse position from the last update. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real with the offset from the previous update on the X axis. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00187">187</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9686caba63e8a1c0d09e1f60121c0989"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Mouse::GetDeltaY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Y delta of the mouse position from the last update. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real with the offset from the previous update on the Y axis. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00192">192</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a566ac03684a9b20edfdec6bc76330a7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a85056e46299252c81ef5278cbb7d5c8f">Input::DirectionalMotionState</a> &amp; Mezzanine::Input::Mouse::GetHorizontalWheelState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current state of the horizontal mouse wheel. </p>
<dl class="section remark"><dt>Remarks</dt><dd>If a mouse doesn't have a mouse wheel this will always report "DIRECTIONALMOTION_UNCHANGED". </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a directional motion update of the mouse wheel. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00212">212</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a467806ae2c8635d06514b7c648fbaabc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> * Mezzanine::Input::Mouse::GetHoveredViewport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the current viewport the mouse cursor is hovered over. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the hovered viewport. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00140">140</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac72abde5becd9f77d5eeb23fe127fe00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Graphics_1_1GameWindow.xhtml">Graphics::GameWindow</a> * Mezzanine::Input::Mouse::GetHoveredWindow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the window with the current mouse focus. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the window with the current focus. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00145">145</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9670ee239edfc2451161572b7fc349c8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::Mouse::GetMouseCursor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current mouse cursor. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000092">Todo:</a></b></dt><dd>Implement this. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1b704eef0243b9c396e421997b4c530f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp; Mezzanine::Input::Mouse::GetMouseDelta </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the change in the mouse position from the previous update. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to the change in the mouse position. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00182">182</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a58f6aa31a1042fa19e3231e72549eb8e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::Mouse::GetRelativeMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not relative mode is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if relative mode is enabled, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a07c1eefa5a39012dba2b749061573bb6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a85056e46299252c81ef5278cbb7d5c8f">Input::DirectionalMotionState</a> &amp; Mezzanine::Input::Mouse::GetVerticalWheelState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current state of the vertical mouse wheel. </p>
<dl class="section remark"><dt>Remarks</dt><dd>If a mouse doesn't have a mouse wheel this will always report "DIRECTIONALMOTION_UNCHANGED". </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a directional motion update of the mouse wheel. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00207">207</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac26ac190eb0231d35d0b6ca9f995dda1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> Mezzanine::Input::Mouse::GetViewportPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the position of the mouse cursor relative to the origin of the viewport in the window with the mouse focus. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector2 to the mouse's current position on the current viewport. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a656ee2a55c5c8712147f5fed9b727fd7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Mouse::GetViewportX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the X position of the mouse relative to the viewport. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real with the current viewport position on the X axis. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6264283f96afcf7474951d6ed57cc77c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Mouse::GetViewportY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Y position of the mouse relative to the viewport. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real with the current viewport position on the Y axis. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00177">177</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac957a837bfd3319bc869ee15e53d9f7e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp; Mezzanine::Input::Mouse::GetWindowPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the position of the mouse cursor relative to the origin of the window with the mouse focus. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to the mouse's current position on the window. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00151">151</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a99c590b1f949bf4db4816adf002fb876"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Mouse::GetWindowX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the X position of the mouse relative to the window. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real with the current window position on the X axis. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2aa47851b0c7ae27931c2c692daa1886"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Input::Mouse::GetWindowY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Y position of the mouse relative to the window. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a real with the current window position on the Y axis. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00161">161</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7f5368a5b202123d217b2c6cd72dcf62"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::Mouse::SetCursorVisibility </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Visible</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the visibility of the mouse cursor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Visible</td><td>Whether or not the cursor is to be visible. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00220">220</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a90893a29c5fa8022232e9f4119e492d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::Mouse::SetMouseCursor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the mouse cursor. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000091">Todo:</a></b></dt><dd>Implement this. </dd></dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00240">240</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad4c8c7b3fec2654f016b9194dfd3895f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::Mouse::SetRelativeMode </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets whether or not relative mode is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns false if relative mode is not supported on this system. True if the operation was a success. </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>"Relative mode" entails hiding the cursor, locking the position, and only updating the mouse delta position each update. This is useful for First Person Shooter style games. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>True to enable relative mode, false to disable. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5bbeb4b0c26c42cb787438cc57046cc6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::Mouse::UpdateImpl </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classMezzanine_1_1MetaCode.xhtml">MetaCode</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Codes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000090">Todo:</a></b></dt><dd>Getting the mouse focus doesn't do what I originally thought it would. When a mouse leaves a window, the focus isn't set to NULL as expected. If you have only one window, then it just stays pointing to that window. If you have two then it will stay on the first window until you mouse over the second, even if there is a space between the windows. This should be updated somehow so that we can set "HoveredWindow" to NULL when none of our windows are being hovered. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a737c5cfc38efdb62a586bb62641135f0">Mezzanine::Input::Device</a>.</p>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0e2d295e14c16f0182802100e3934fb2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::Mouse::WarpCursorToPosition </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Graphics_1_1GameWindow.xhtml">Graphics::GameWindow</a> *&#160;</td>
          <td class="paramname"><em>Win</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the mouse cursor's position to the specified point in the specified window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Win</td><td>The window to warp the cursor to. </td></tr>
    <tr><td class="paramname">Position</td><td>The position on the specified window to warp the cursor to. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="mouse_8cpp_source.xhtml#l00255">255</a> of file <a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Input/<a class="el" href="mouse_8h_source.xhtml">mouse.h</a></li>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/Input/<a class="el" href="mouse_8cpp_source.xhtml">mouse.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Jun 20 2013 21:56:59 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
