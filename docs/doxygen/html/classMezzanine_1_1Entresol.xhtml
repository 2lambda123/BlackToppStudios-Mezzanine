<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Entresol Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">March 7, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classMezzanine_1_1Entresol-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Entresol Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the main entry point for the entire library.  
 <a href="classMezzanine_1_1Entresol.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="entresol_8h_source.xhtml">entresol.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Entresol:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Entresol__inherit__graph.svg" width="152" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Entresol:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Entresol__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:affffc2f3d85a219fde85b56608549a5d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="affffc2f3d85a219fde85b56608549a5d"></a>
typedef <br class="typebreak"/>
ManagerFactoryMap::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstManagerFactoryIterator</b></td></tr>
<tr class="separator:affffc2f3d85a219fde85b56608549a5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add7bc967361f851b6a5bd9633141a264"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">LoggingFrequency</a> { <a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a6bc527e961e4bde5c17eca0ac07cab7b">LogNever</a> = 0, 
<a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a10965bf83c466474c47a1a8e17b31a06">LogOncePerFrame</a> = 1, 
<a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a8896aa8f099eae3f8fb9835ffb29fc54">LogOncePerXFrames</a> = 2, 
<a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264a9db31202f65617e64500625046ebda88">LogOncePerXSeconds</a> = 3
 }</td></tr>
<tr class="memdesc:add7bc967361f851b6a5bd9633141a264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to indicate the frequency of logging.  <a href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">More...</a><br/></td></tr>
<tr class="separator:add7bc967361f851b6a5bd9633141a264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0bef2ad312debb823db22e742378e7d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa0bef2ad312debb823db22e742378e7d"></a>
typedef ManagerFactoryMap::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ManagerFactoryIterator</b></td></tr>
<tr class="separator:aa0bef2ad312debb823db22e742378e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d32ab85e4b4346ace4b0f38a453aa70"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7d32ab85e4b4346ace4b0f38a453aa70"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ManagerFactoryMap</b></td></tr>
<tr class="separator:a7d32ab85e4b4346ace4b0f38a453aa70"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6a95f5946b9dd4366d13b094b225aead"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a6a95f5946b9dd4366d13b094b225aead">Entresol</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;EngineDataPath, const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> ArchType, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;InitializerFile=&quot;Mezzanine.mxi&quot;)</td></tr>
<tr class="memdesc:a6a95f5946b9dd4366d13b094b225aead"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializer file constructor.  <a href="#a6a95f5946b9dd4366d13b094b225aead">More...</a><br/></td></tr>
<tr class="separator:a6a95f5946b9dd4366d13b094b225aead"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01710b32749d49f8ec16a66e1bceecf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a01710b32749d49f8ec16a66e1bceecf6">Entresol</a> (std::vector&lt; <a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> * &gt; &amp;CustomFactories, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;EngineDataPath, const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> ArchType, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;InitializerFile=&quot;Mezzanine.mxi&quot;)</td></tr>
<tr class="memdesc:a01710b32749d49f8ec16a66e1bceecf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Factory and initializer file constructor.  <a href="#a01710b32749d49f8ec16a66e1bceecf6">More...</a><br/></td></tr>
<tr class="separator:a01710b32749d49f8ec16a66e1bceecf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902ea1ab9ea27102b50f88baa5cced5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a902ea1ab9ea27102b50f88baa5cced5d">Entresol</a> (const <a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> &amp;PhysicsInfo, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;SceneType, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;EngineDataPath, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;LogFileName=&quot;Mezzanine.log&quot;)</td></tr>
<tr class="memdesc:a902ea1ab9ea27102b50f88baa5cced5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Descriptive constructor With Manager Pointers.  <a href="#a902ea1ab9ea27102b50f88baa5cced5d">More...</a><br/></td></tr>
<tr class="separator:a902ea1ab9ea27102b50f88baa5cced5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea4ac7f31eaa7bfb898787df4a351ade"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#aea4ac7f31eaa7bfb898787df4a351ade">Entresol</a> (const <a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> &amp;PhysicsInfo, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;SceneType, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;EngineDataPath, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;LogFileName, const std::vector&lt; <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> * &gt; &amp;ManagerToBeAdded)</td></tr>
<tr class="memdesc:aea4ac7f31eaa7bfb898787df4a351ade"><td class="mdescLeft">&#160;</td><td class="mdescRight">Descriptive constructor.  <a href="#aea4ac7f31eaa7bfb898787df4a351ade">More...</a><br/></td></tr>
<tr class="separator:aea4ac7f31eaa7bfb898787df4a351ade"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4ef9f2b6a474f82100bde73c0fff8de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#aa4ef9f2b6a474f82100bde73c0fff8de">Entresol</a> ()</td></tr>
<tr class="memdesc:aa4ef9f2b6a474f82100bde73c0fff8de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#aa4ef9f2b6a474f82100bde73c0fff8de">More...</a><br/></td></tr>
<tr class="separator:aa4ef9f2b6a474f82100bde73c0fff8de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db3adb965a107a122f1c99319609bd4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a7db3adb965a107a122f1c99319609bd4">~Entresol</a> ()</td></tr>
<tr class="memdesc:a7db3adb965a107a122f1c99319609bd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconstructor.  <a href="#a7db3adb965a107a122f1c99319609bd4">More...</a><br/></td></tr>
<tr class="separator:a7db3adb965a107a122f1c99319609bd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae163ce87b11e99986d5daff29dce850e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae163ce87b11e99986d5daff29dce850e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ae163ce87b11e99986d5daff29dce850e">AddAllEngineDefaultManagerFactories</a> ()</td></tr>
<tr class="memdesc:ae163ce87b11e99986d5daff29dce850e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds all the default manager factories provided by the engine to the world. <br/></td></tr>
<tr class="separator:ae163ce87b11e99986d5daff29dce850e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a840e7d30f89c366d524817b65035cf87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a840e7d30f89c366d524817b65035cf87">AddManager</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *ManagerToAdd)</td></tr>
<tr class="memdesc:a840e7d30f89c366d524817b65035cf87"><td class="mdescLeft">&#160;</td><td class="mdescRight">This adds a manager, in the correct order, to the list that the world calls on.  <a href="#a840e7d30f89c366d524817b65035cf87">More...</a><br/></td></tr>
<tr class="separator:a840e7d30f89c366d524817b65035cf87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80e76b09dc1d0476e2e1796e131f9e2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a80e76b09dc1d0476e2e1796e131f9e2f">AddManagerFactory</a> (<a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> *ToBeAdded)</td></tr>
<tr class="memdesc:a80e76b09dc1d0476e2e1796e131f9e2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds/registers a manager factory with this world, allowing it to be constructed through this API.  <a href="#a80e76b09dc1d0476e2e1796e131f9e2f">More...</a><br/></td></tr>
<tr class="separator:a80e76b09dc1d0476e2e1796e131f9e2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa87180b17656f185a4d021eb320b2911"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#aa87180b17656f185a4d021eb320b2911">BreakMainLoop</a> ()</td></tr>
<tr class="memdesc:aa87180b17656f185a4d021eb320b2911"><td class="mdescLeft">&#160;</td><td class="mdescRight">This makes the main loop end after it's current iteration.  <a href="#aa87180b17656f185a4d021eb320b2911">More...</a><br/></td></tr>
<tr class="separator:aa87180b17656f185a4d021eb320b2911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af31cdc456e937f8cf66dccb7d89f6967"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#af31cdc456e937f8cf66dccb7d89f6967">CommitLog</a> ()</td></tr>
<tr class="memdesc:af31cdc456e937f8cf66dccb7d89f6967"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces the log to commit to disk (or whereever)  <a href="#af31cdc456e937f8cf66dccb7d89f6967">More...</a><br/></td></tr>
<tr class="separator:af31cdc456e937f8cf66dccb7d89f6967"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d74ed883f6822fd84ed54bb6228fec5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a7d74ed883f6822fd84ed54bb6228fec5">CreateManager</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerImplName, <a class="el" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28">NameValuePairList</a> &amp;Params, bool AddToWorld=true)</td></tr>
<tr class="memdesc:a7d74ed883f6822fd84ed54bb6228fec5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new manager.  <a href="#a7d74ed883f6822fd84ed54bb6228fec5">More...</a><br/></td></tr>
<tr class="separator:a7d74ed883f6822fd84ed54bb6228fec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dd77fc522b654eebdc5000fd2a3c908"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a2dd77fc522b654eebdc5000fd2a3c908">CreateManager</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerImplName, <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode, bool AddToWorld=true)</td></tr>
<tr class="memdesc:a2dd77fc522b654eebdc5000fd2a3c908"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new manager.  <a href="#a2dd77fc522b654eebdc5000fd2a3c908">More...</a><br/></td></tr>
<tr class="separator:a2dd77fc522b654eebdc5000fd2a3c908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8135feb4d5fc6b258ca54672eb0f41c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a8135feb4d5fc6b258ca54672eb0f41c7">DestroyAllManagerFactories</a> ()</td></tr>
<tr class="memdesc:a8135feb4d5fc6b258ca54672eb0f41c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all manager factories in this world.  <a href="#a8135feb4d5fc6b258ca54672eb0f41c7">More...</a><br/></td></tr>
<tr class="separator:a8135feb4d5fc6b258ca54672eb0f41c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a094af80571c2e36de6c4867073d87fdc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a094af80571c2e36de6c4867073d87fdc">DestroyAllManagers</a> ()</td></tr>
<tr class="memdesc:a094af80571c2e36de6c4867073d87fdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all managers currently in the world.  <a href="#a094af80571c2e36de6c4867073d87fdc">More...</a><br/></td></tr>
<tr class="separator:a094af80571c2e36de6c4867073d87fdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d0ad1bbc5082f24a8151c0b988c15ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a3d0ad1bbc5082f24a8151c0b988c15ab">DestroyManager</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:a3d0ad1bbc5082f24a8151c0b988c15ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a manager.  <a href="#a3d0ad1bbc5082f24a8151c0b988c15ab">More...</a><br/></td></tr>
<tr class="separator:a3d0ad1bbc5082f24a8151c0b988c15ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cee55e885f87673e23486f13cd02f98"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a9cee55e885f87673e23486f13cd02f98">DestroyManagerFactory</a> (<a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> *ToBeRemoved)</td></tr>
<tr class="memdesc:a9cee55e885f87673e23486f13cd02f98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes and destroys a manager factory in this world.  <a href="#a9cee55e885f87673e23486f13cd02f98">More...</a><br/></td></tr>
<tr class="separator:a9cee55e885f87673e23486f13cd02f98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03f789249648832f687a53f76821f0d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a03f789249648832f687a53f76821f0d0">DestroyManagerFactory</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ImplName)</td></tr>
<tr class="memdesc:a03f789249648832f687a53f76821f0d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes and destroys a manager factory in this world.  <a href="#a03f789249648832f687a53f76821f0d0">More...</a><br/></td></tr>
<tr class="separator:a03f789249648832f687a53f76821f0d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff3a62c982cb032d644b2f327ce547f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a9ff3a62c982cb032d644b2f327ce547f">DoMainLoopLogging</a> ()</td></tr>
<tr class="memdesc:a9ff3a62c982cb032d644b2f327ce547f"><td class="mdescLeft">&#160;</td><td class="mdescRight">This commits the log stream to the log.  <a href="#a9ff3a62c982cb032d644b2f327ce547f">More...</a><br/></td></tr>
<tr class="separator:a9ff3a62c982cb032d644b2f327ce547f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa73899c1bf58d4d0671a224f1e2469b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#afa73899c1bf58d4d0671a224f1e2469b">EngineInit</a> (const bool &amp;CallMainLoop=false)</td></tr>
<tr class="memdesc:afa73899c1bf58d4d0671a224f1e2469b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This initializes all the managers currently in the world.  <a href="#afa73899c1bf58d4d0671a224f1e2469b">More...</a><br/></td></tr>
<tr class="separator:afa73899c1bf58d4d0671a224f1e2469b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d1a2d72564d09e6bc22c404758217bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ActorManager.xhtml">ActorManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a5d1a2d72564d09e6bc22c404758217bd">GetActorManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a5d1a2d72564d09e6bc22c404758217bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1ActorManager.xhtml" title="A manager responsible for the storage and management of all actors in use.">ActorManager</a> from the manager list.  <a href="#a5d1a2d72564d09e6bc22c404758217bd">More...</a><br/></td></tr>
<tr class="separator:a5d1a2d72564d09e6bc22c404758217bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6203f8826ab5be8fa9d1e9a4d38a6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AudioManager.xhtml">AudioManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a7e6203f8826ab5be8fa9d1e9a4d38a6a">GetAudioManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a7e6203f8826ab5be8fa9d1e9a4d38a6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a> from the manager list.  <a href="#a7e6203f8826ab5be8fa9d1e9a4d38a6a">More...</a><br/></td></tr>
<tr class="separator:a7e6203f8826ab5be8fa9d1e9a4d38a6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b64d738f482b2a38923efe8cc4b7d09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a2b64d738f482b2a38923efe8cc4b7d09">GetCameraManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a2b64d738f482b2a38923efe8cc4b7d09"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a> from the manager list.  <a href="#a2b64d738f482b2a38923efe8cc4b7d09">More...</a><br/></td></tr>
<tr class="separator:a2b64d738f482b2a38923efe8cc4b7d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a7b04833c40f0fbf2e49cb9c47d63b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml">CollisionShapeManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a2a7b04833c40f0fbf2e49cb9c47d63b7">GetCollisionShapeManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a2a7b04833c40f0fbf2e49cb9c47d63b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a> from the manager list.  <a href="#a2a7b04833c40f0fbf2e49cb9c47d63b7">More...</a><br/></td></tr>
<tr class="separator:a2a7b04833c40f0fbf2e49cb9c47d63b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68800e34befaffad0f026ffbc1b44f87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1EventManager.xhtml">EventManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a68800e34befaffad0f026ffbc1b44f87">GetEventManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a68800e34befaffad0f026ffbc1b44f87"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1EventManager.xhtml" title="This is a container for Events and facilitates the transfer of data.">EventManager</a> from the manager list.  <a href="#a68800e34befaffad0f026ffbc1b44f87">More...</a><br/></td></tr>
<tr class="separator:a68800e34befaffad0f026ffbc1b44f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45d87ca28ed75adeac1f02219807342f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a45d87ca28ed75adeac1f02219807342f">GetFrameTime</a> ()</td></tr>
<tr class="memdesc:a45d87ca28ed75adeac1f02219807342f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the amount of time since the last time Rendering began.  <a href="#a45d87ca28ed75adeac1f02219807342f">More...</a><br/></td></tr>
<tr class="separator:a45d87ca28ed75adeac1f02219807342f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e11f8951e01fa482b79cc71b63b6b7a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1GraphicsManager.xhtml">GraphicsManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a6e11f8951e01fa482b79cc71b63b6b7a">GetGraphicsManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a6e11f8951e01fa482b79cc71b63b6b7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml" title="This is intended to store basic graphics setting for the user.">GraphicsManager</a> from the manager list.  <a href="#a6e11f8951e01fa482b79cc71b63b6b7a">More...</a><br/></td></tr>
<tr class="separator:a6e11f8951e01fa482b79cc71b63b6b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbbc18baca6729647ffa9c8c4bed61ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1InputManager.xhtml">InputManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#acbbc18baca6729647ffa9c8c4bed61ad">GetInputManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:acbbc18baca6729647ffa9c8c4bed61ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1InputManager.xhtml" title="This is the manager responsible for the handling of input devices and events.">InputManager</a> from the manager list.  <a href="#acbbc18baca6729647ffa9c8c4bed61ad">More...</a><br/></td></tr>
<tr class="separator:acbbc18baca6729647ffa9c8c4bed61ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7996ff53a81b183945e886f8f012411"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">LoggingFrequency</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ae7996ff53a81b183945e886f8f012411">GetLoggingFrequency</a> ()</td></tr>
<tr class="memdesc:ae7996ff53a81b183945e886f8f012411"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the frequency of logging commits.  <a href="#ae7996ff53a81b183945e886f8f012411">More...</a><br/></td></tr>
<tr class="separator:ae7996ff53a81b183945e886f8f012411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80e99d18b6c45b0e71b9a73e418664db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a80e99d18b6c45b0e71b9a73e418664db">GetManager</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> &amp;ManagersToRemoveType, short unsigned int WhichOne=0)</td></tr>
<tr class="memdesc:a80e99d18b6c45b0e71b9a73e418664db"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is will find the manager of a given type.  <a href="#a80e99d18b6c45b0e71b9a73e418664db">More...</a><br/></td></tr>
<tr class="separator:a80e99d18b6c45b0e71b9a73e418664db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e93873e1da448e95aee8dc3aed224bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1MeshManager.xhtml">MeshManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a1e93873e1da448e95aee8dc3aed224bf">GetMeshManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a1e93873e1da448e95aee8dc3aed224bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1MeshManager.xhtml" title="This manager handles the storage, generation, and query of of Graphics Meshes.">MeshManager</a> from the manager list.  <a href="#a1e93873e1da448e95aee8dc3aed224bf">More...</a><br/></td></tr>
<tr class="separator:a1e93873e1da448e95aee8dc3aed224bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86e0f3f15b4f08611907d9b631416cb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml">PhysicsManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a86e0f3f15b4f08611907d9b631416cb2">GetPhysicsManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a86e0f3f15b4f08611907d9b631416cb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml" title="This is simply a place for storing all the Physics Related functions.">PhysicsManager</a> from the manager list.  <a href="#a86e0f3f15b4f08611907d9b631416cb2">More...</a><br/></td></tr>
<tr class="separator:a86e0f3f15b4f08611907d9b631416cb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcc40c373e57e1b402a0cdb6ee68be9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml">ResourceManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#adcc40c373e57e1b402a0cdb6ee68be9d">GetResourceManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:adcc40c373e57e1b402a0cdb6ee68be9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1ResourceManager.xhtml" title="This is the manager responsible for the loading and unloading of files.">ResourceManager</a> from the manager list. These are responsible for reading and writing files on the disk.  <a href="#adcc40c373e57e1b402a0cdb6ee68be9d">More...</a><br/></td></tr>
<tr class="separator:adcc40c373e57e1b402a0cdb6ee68be9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a6dcc618c79b2bb1c1d65b30d269916"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a3a6dcc618c79b2bb1c1d65b30d269916">GetSceneManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a3a6dcc618c79b2bb1c1d65b30d269916"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a> from the manager list.  <a href="#a3a6dcc618c79b2bb1c1d65b30d269916">More...</a><br/></td></tr>
<tr class="separator:a3a6dcc618c79b2bb1c1d65b30d269916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad009b4ed29febd443616060ca32ad573"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ad009b4ed29febd443616060ca32ad573">GetTargetFrameTime</a> ()</td></tr>
<tr class="memdesc:ad009b4ed29febd443616060ca32ad573"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the amount of milliseconds we would like each iteration of the Main Loop to be.  <a href="#ad009b4ed29febd443616060ca32ad573">More...</a><br/></td></tr>
<tr class="separator:ad009b4ed29febd443616060ca32ad573"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a110fc0c64ba496785629b87596dbf905"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1TimerManager.xhtml">TimerManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a110fc0c64ba496785629b87596dbf905">GetTimerManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:a110fc0c64ba496785629b87596dbf905"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1TimerManager.xhtml" title="A manager responsible for the updating of all timers in use by this engine.">TimerManager</a> from the manager list.  <a href="#a110fc0c64ba496785629b87596dbf905">More...</a><br/></td></tr>
<tr class="separator:a110fc0c64ba496785629b87596dbf905"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af15831387da5a02e77ebe8fe19ba368e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UIManager.xhtml">UIManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#af15831387da5a02e77ebe8fe19ba368e">GetUIManager</a> (const short unsigned int &amp;WhichOne=0)</td></tr>
<tr class="memdesc:af15831387da5a02e77ebe8fe19ba368e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This gets the <a class="el" href="classMezzanine_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a> from the manager list.  <a href="#af15831387da5a02e77ebe8fe19ba368e">More...</a><br/></td></tr>
<tr class="separator:af15831387da5a02e77ebe8fe19ba368e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96f894e20225d43643091c3731acc35d"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a96f894e20225d43643091c3731acc35d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a96f894e20225d43643091c3731acc35d">Log</a> (const T &amp;Message)</td></tr>
<tr class="memdesc:a96f894e20225d43643091c3731acc35d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runtime event and message logging.  <a href="#a96f894e20225d43643091c3731acc35d">More...</a><br/></td></tr>
<tr class="separator:a96f894e20225d43643091c3731acc35d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2340831c76fdf2a547868a29756c32"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0f2340831c76fdf2a547868a29756c32"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a0f2340831c76fdf2a547868a29756c32">Log</a> ()</td></tr>
<tr class="memdesc:a0f2340831c76fdf2a547868a29756c32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Force any outstanding logs to be commited to logs. <br/></td></tr>
<tr class="separator:a0f2340831c76fdf2a547868a29756c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab42f6a9a7f43618625667b5d40b12681"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ab42f6a9a7f43618625667b5d40b12681">LogString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;message)</td></tr>
<tr class="memdesc:ab42f6a9a7f43618625667b5d40b12681"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log String directly with no conversion.  <a href="#ab42f6a9a7f43618625667b5d40b12681">More...</a><br/></td></tr>
<tr class="separator:ab42f6a9a7f43618625667b5d40b12681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43085ec83543377dce2817374d9de156"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a43085ec83543377dce2817374d9de156">MainLoop</a> ()</td></tr>
<tr class="memdesc:a43085ec83543377dce2817374d9de156"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Function house the main loop.  <a href="#a43085ec83543377dce2817374d9de156">More...</a><br/></td></tr>
<tr class="separator:a43085ec83543377dce2817374d9de156"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae08805febf5cc290639c75c23ffd8d3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ae08805febf5cc290639c75c23ffd8d3d">PauseWorld</a> (bool Pause)</td></tr>
<tr class="memdesc:ae08805febf5cc290639c75c23ffd8d3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pauses all animations, particles, and object movement throughout the world.  <a href="#ae08805febf5cc290639c75c23ffd8d3d">More...</a><br/></td></tr>
<tr class="separator:ae08805febf5cc290639c75c23ffd8d3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb626cc8d43180b89e512f2959f5630"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#afdb626cc8d43180b89e512f2959f5630">RemoveManager</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *ManagerToRemove)</td></tr>
<tr class="memdesc:afdb626cc8d43180b89e512f2959f5630"><td class="mdescLeft">&#160;</td><td class="mdescRight">This removes a manager by finding the matching pointer.  <a href="#afdb626cc8d43180b89e512f2959f5630">More...</a><br/></td></tr>
<tr class="separator:afdb626cc8d43180b89e512f2959f5630"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01738d3370d867ac48f6422029faba0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a01738d3370d867ac48f6422029faba0b">RemoveManager</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> &amp;ManagersToRemoveType, short unsigned int WhichOne)</td></tr>
<tr class="memdesc:a01738d3370d867ac48f6422029faba0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This removes a manager of a specific type from the list.  <a href="#a01738d3370d867ac48f6422029faba0b">More...</a><br/></td></tr>
<tr class="separator:a01738d3370d867ac48f6422029faba0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a215d55d4382a211c6d5f0950387f63d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a215d55d4382a211c6d5f0950387f63d0">RemoveManagerFactory</a> (<a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> *ToBeRemoved)</td></tr>
<tr class="memdesc:a215d55d4382a211c6d5f0950387f63d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a manager factory from this world.  <a href="#a215d55d4382a211c6d5f0950387f63d0">More...</a><br/></td></tr>
<tr class="separator:a215d55d4382a211c6d5f0950387f63d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f0d45fab7479f97402e278b0aa35103"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a5f0d45fab7479f97402e278b0aa35103">RemoveManagerFactory</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ImplName)</td></tr>
<tr class="memdesc:a5f0d45fab7479f97402e278b0aa35103"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a manager factory from this world.  <a href="#a5f0d45fab7479f97402e278b0aa35103">More...</a><br/></td></tr>
<tr class="separator:a5f0d45fab7479f97402e278b0aa35103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b070fdcf1026abcfdf906512c7c8d48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#a0b070fdcf1026abcfdf906512c7c8d48">SetFrameTime</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;FrameTime_)</td></tr>
<tr class="memdesc:a0b070fdcf1026abcfdf906512c7c8d48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the amount of time since the last time Rendering began.  <a href="#a0b070fdcf1026abcfdf906512c7c8d48">More...</a><br/></td></tr>
<tr class="separator:a0b070fdcf1026abcfdf906512c7c8d48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9cfff8cd699f22a241edf080a498df4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#af9cfff8cd699f22a241edf080a498df4">SetLoggingFrequency</a> (<a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">LoggingFrequency</a> HowOften, <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> FrequencyCounter=5)</td></tr>
<tr class="memdesc:af9cfff8cd699f22a241edf080a498df4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set how often log message should be commited to disk (or network, or whatever).  <a href="#af9cfff8cd699f22a241edf080a498df4">More...</a><br/></td></tr>
<tr class="separator:af9cfff8cd699f22a241edf080a498df4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4371cfd347a8b60003484a434e72ebc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ad4371cfd347a8b60003484a434e72ebc">SetTargetFrameRate</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;NewFrameRate)</td></tr>
<tr class="memdesc:ad4371cfd347a8b60003484a434e72ebc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This sets a new Target Frame Rate.  <a href="#ad4371cfd347a8b60003484a434e72ebc">More...</a><br/></td></tr>
<tr class="separator:ad4371cfd347a8b60003484a434e72ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7c16eb90e983c932d628bef64ca680d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ac7c16eb90e983c932d628bef64ca680d">SetTargetFrameTime</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;NewTargetTime)</td></tr>
<tr class="memdesc:ac7c16eb90e983c932d628bef64ca680d"><td class="mdescLeft">&#160;</td><td class="mdescRight">This sets a new Target <a class="el" href="structMezzanine_1_1Time.xhtml" title="A container for the metrics of time relevant for the timer class.">Time</a>.  <a href="#ac7c16eb90e983c932d628bef64ca680d">More...</a><br/></td></tr>
<tr class="separator:ac7c16eb90e983c932d628bef64ca680d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab261a0a4bd1295c6ff8eb6364dd361e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ab261a0a4bd1295c6ff8eb6364dd361e9">UpdateManagerOrder</a> (<a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *ManagerToChange, short int Priority_)</td></tr>
<tr class="memdesc:ab261a0a4bd1295c6ff8eb6364dd361e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes a Manager's time of execution.  <a href="#ab261a0a4bd1295c6ff8eb6364dd361e9">More...</a><br/></td></tr>
<tr class="separator:ab261a0a4bd1295c6ff8eb6364dd361e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfacfbcde9d24d46f74003bed33edf74"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#adfacfbcde9d24d46f74003bed33edf74">UpdateManagerOrder</a> ()</td></tr>
<tr class="memdesc:adfacfbcde9d24d46f74003bed33edf74"><td class="mdescLeft">&#160;</td><td class="mdescRight">This forces the list of managers to be resorted.  <a href="#adfacfbcde9d24d46f74003bed33edf74">More...</a><br/></td></tr>
<tr class="separator:adfacfbcde9d24d46f74003bed33edf74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; Entresol &gt;</a></td></tr>
<tr class="memitem:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7174af94e201bdaeab717cdbcbb2e565"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a7174af94e201bdaeab717cdbcbb2e565">Singleton</a> ()</td></tr>
<tr class="memdesc:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e45fc3969b0fae3d095676cc515da1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a5e45fc3969b0fae3d095676cc515da1d">~Singleton</a> ()</td></tr>
<tr class="memdesc:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ae11d3d584419c09ce38aa1c4b646cf86"><td class="memItemLeft" align="right" valign="top">std::stringstream&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Entresol.xhtml#ae11d3d584419c09ce38aa1c4b646cf86">LogStream</a></td></tr>
<tr class="memdesc:ae11d3d584419c09ce38aa1c4b646cf86"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is another way to put data in the log.  <a href="#ae11d3d584419c09ce38aa1c4b646cf86">More...</a><br/></td></tr>
<tr class="separator:ae11d3d584419c09ce38aa1c4b646cf86"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; Entresol &gt;</a></td></tr>
<tr class="memitem:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67">GetSingletonPtr</a> ()</td></tr>
<tr class="memdesc:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetches a pointer to the singleton.  <a href="#a78fc425584913f0b2c615ec440871a67">More...</a><br/></td></tr>
<tr class="separator:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9">SingletonValid</a> ()</td></tr>
<tr class="memdesc:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the singleton pointer is valid.  <a href="#a554165fe3e4b594b678d64215fd7a6f9">More...</a><br/></td></tr>
<tr class="separator:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_attribs_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; Entresol &gt;</a></td></tr>
<tr class="memitem:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0db9959ccd7daa1345f4567aa0b0655d"></a>
static <a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>SingletonPtr</b></td></tr>
<tr class="separator:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is the main entry point for the entire library. </p>
<p>The entresol coordinates and integrates all the underlying subsystems, Currently Ogre3d is used for 3d <a class="el" href="namespaceMezzanine_1_1Graphics.xhtml" title="This namespace is for all the classes belonging to the Graphics Subsystem.">Graphics</a>, Bullet is used for physics, and SDL is used for user input and window management. Games will need a container for all the playing pieces. It makes sense to tie all of this functionality into one core object. </p>

<p>Definition at line <a class="el" href="entresol_8h_source.xhtml#l00311">311</a> of file <a class="el" href="entresol_8h_source.xhtml">entresol.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="add7bc967361f851b6a5bd9633141a264"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">Mezzanine::Entresol::LoggingFrequency</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Used to indicate the frequency of logging. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="add7bc967361f851b6a5bd9633141a264a6bc527e961e4bde5c17eca0ac07cab7b"></a>LogNever</em>&nbsp;</td><td class="fielddoc">
<p>Never log. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="add7bc967361f851b6a5bd9633141a264a10965bf83c466474c47a1a8e17b31a06"></a>LogOncePerFrame</em>&nbsp;</td><td class="fielddoc">
<p>The Default, log each and every frame. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="add7bc967361f851b6a5bd9633141a264a8896aa8f099eae3f8fb9835ffb29fc54"></a>LogOncePerXFrames</em>&nbsp;</td><td class="fielddoc">
<p>Log once per every Xth frame, X is the FrequencyCounter Value passed in with this. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="add7bc967361f851b6a5bd9633141a264a9db31202f65617e64500625046ebda88"></a>LogOncePerXSeconds</em>&nbsp;</td><td class="fielddoc">
<p>Log once per every Xth second, X is the FrequencyCounter Value passed in with this. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="entresol_8h_source.xhtml#l00444">444</a> of file <a class="el" href="entresol_8h_source.xhtml">entresol.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a6a95f5946b9dd4366d13b094b225aead"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Entresol::Entresol </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>EngineDataPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>&#160;</td>
          <td class="paramname"><em>ArchType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>InitializerFile</em> = <code>&quot;Mezzanine.mxi&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializer file constructor. </p>
<p>This function expects an ".mxi" (<a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a> <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> Initializer) file. If the file provided is not one of this type this function will throw an exception. <br/>
 <br/>
 When initializing factories in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> file this constructor does not initialize any additional manager factories, so if they are called this will throw an exception. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">EngineDataPath</td><td>The directory where engine specific data resides. This is where it will search for the specified initializer file. </td></tr>
    <tr><td class="paramname">ArchType</td><td>The type of archive at the path provided. </td></tr>
    <tr><td class="paramname">InitializerFile</td><td>The file that describes how to initialize <a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a01710b32749d49f8ec16a66e1bceecf6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Entresol::Entresol </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>CustomFactories</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>EngineDataPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>&#160;</td>
          <td class="paramname"><em>ArchType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>InitializerFile</em> = <code>&quot;Mezzanine.mxi&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Factory and initializer file constructor. </p>
<p>This function expects an ".mxi" (<a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a> <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> Initializer) file. If the file provided is not one of this type this function will throw an exception. <br/>
 <br/>
 Also default factories are already added and thus do not need to be included in the Factory vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CustomFactories</td><td>A vector containing the additional factories to be registered before initializing the engine. </td></tr>
    <tr><td class="paramname">EngineDataPath</td><td>The directory where engine specific data resides. This is where it will search for the specified initializer file. </td></tr>
    <tr><td class="paramname">ArchType</td><td>The type of archive at the path provided. </td></tr>
    <tr><td class="paramname">InitializerFile</td><td>The file that describes how to initialize <a class="el" href="namespaceMezzanine.xhtml" title="The bulk of the engine components go in this namspace.">Mezzanine</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a902ea1ab9ea27102b50f88baa5cced5d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Entresol::Entresol </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>PhysicsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>SceneType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>EngineDataPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>LogFileName</em> = <code>&quot;Mezzanine.log&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Descriptive constructor With Manager Pointers. </p>
<p>This constructor allows for an easier way to define the boundaries for items moving about inside the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PhysicsInfo</td><td>All the info needed to initialize the physics subsystem. </td></tr>
    <tr><td class="paramname">SceneType</td><td>A cue to the scenemanager as to how rendering should occur. </td></tr>
    <tr><td class="paramname">EngineDataPath</td><td>The directory where engine specific data (as opposed to game/application data) reside, and it include the plugins file and potentially other low level resources. </td></tr>
    <tr><td class="paramname">LogFileName</td><td>This is the place that log messages get sent to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aea4ac7f31eaa7bfb898787df4a351ade"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Entresol::Entresol </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1PhysicsConstructionInfo.xhtml">PhysicsConstructionInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>PhysicsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>SceneType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>EngineDataPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>LogFileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>ManagerToBeAdded</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Descriptive constructor. </p>
<p>This constructor allows for an easier way to define the boundaries for items moving about inside the world. This constructor provides no default arguments, but allows for maximum customization. In addition to everything the other constructors this one can accept a vector of pointers to managers. They will be add </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PhysicsInfo</td><td>All the info needed to initialize the physics subsystem. </td></tr>
    <tr><td class="paramname">PluginsFileName</td><td>The filename of the plugins file to be loaded. This is relative to the EngineDataPath. </td></tr>
    <tr><td class="paramname">EngineDataPath</td><td>The directory where engine specific data (as opposed to game/application data) reside, and it include the plugins file and potentially othe low level resources. </td></tr>
    <tr><td class="paramname">LogFileName</td><td>This is the place that log messages get sent to. </td></tr>
    <tr><td class="paramname">SceneType</td><td>A cue to the scenemanager as to how rendering should occur. </td></tr>
    <tr><td class="paramname">ManagerToBeAdded</td><td>This is a vector of manager pointers that will be used instead of creating new ones. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa4ef9f2b6a474f82100bde73c0fff8de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Entresol::Entresol </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<p>This simply performs the same work as the descriptive constructor with some sane, but small, limits. It will give you a world which expands for 100 units from the Origin, and only allows 10 Actors </p>
<dl class="section warning"><dt>Warning</dt><dd>Do not make a new world if one already exists. This can only cause problems </dd></dl>

</div>
</div>
<a class="anchor" id="a7db3adb965a107a122f1c99319609bd4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Entresol::~Entresol </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deconstructor. </p>
<p>This Tears down all the items created by the world, and safely frees any graphical resources, we will also delete any Objects passed into the world by pointer. We will not delete any pointers we pass out (like from the Events from the Event manager) </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a840e7d30f89c366d524817b65035cf87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::AddManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td>
          <td class="paramname"><em>ManagerToAdd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This adds a manager, in the correct order, to the list that the world calls on. </p>
<p>Internally the world had a list of managers that is sorted by the <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a96fb02bf2f4e8b4afe70dedd0d8c6ac9" title="This is a weighting used by the main loop to decide what order the managers should be called in...">ManagerBase::Priority</a>. Everytime a manager is added, the list is searched for the sorted point to insert the manager at. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagerToAdd</td><td>The pointer to the manager to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a80e76b09dc1d0476e2e1796e131f9e2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::AddManagerFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> *&#160;</td>
          <td class="paramname"><em>ToBeAdded</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds/registers a manager factory with this world, allowing it to be constructed through this API. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeAdded</td><td>The manager factory to be added. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa87180b17656f185a4d021eb320b2911"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::BreakMainLoop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This makes the main loop end after it's current iteration. </p>
<p>If called while not in the main loop, it will simply cause the next call to the main loop to do a single iteration and then exit. </p>

</div>
</div>
<a class="anchor" id="af31cdc456e937f8cf66dccb7d89f6967"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::CommitLog </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Forces the log to commit to disk (or whereever) </p>
<p><a class="el" href="classMezzanine_1_1Any.xhtml" title="This is a simple class used for type-safe casting of any type of data.">Any</a> outstanding log messages or entries into the logstream will be written in chronological order to to the appropriate place. </p>

</div>
</div>
<a class="anchor" id="a7d74ed883f6822fd84ed54bb6228fec5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a>* Mezzanine::Entresol::CreateManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ManagerImplName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28">NameValuePairList</a> &amp;&#160;</td>
          <td class="paramname"><em>Params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>AddToWorld</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagerImplName</td><td>The name of the manager implementation to create. </td></tr>
    <tr><td class="paramname">Params</td><td>A list of name-value pairs for the params that are to be used when creating the manager. </td></tr>
    <tr><td class="paramname">AddToWorld</td><td>Whether or not to add the created manager to the world after creation. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created manager. </dd></dl>

</div>
</div>
<a class="anchor" id="a2dd77fc522b654eebdc5000fd2a3c908"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a>* Mezzanine::Entresol::CreateManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ManagerImplName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>AddToWorld</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagerImplName</td><td>The name of the manager implementation to create. </td></tr>
    <tr><td class="paramname">XMLNode</td><td>An <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> node containing all construction and initialization info for the manager to be created. </td></tr>
    <tr><td class="paramname">AddToWorld</td><td>Whether or not to add the created manager to the world after creation. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created manager. </dd></dl>

</div>
</div>
<a class="anchor" id="a8135feb4d5fc6b258ca54672eb0f41c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::DestroyAllManagerFactories </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys all manager factories in this world. </p>
<dl class="section warning"><dt>Warning</dt><dd>The destruction of manager factories should only be done after the corresponding managers have been destroyed, otherwise this will cause an exception. </dd></dl>

</div>
</div>
<a class="anchor" id="a094af80571c2e36de6c4867073d87fdc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::DestroyAllManagers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys all managers currently in the world. </p>
<dl class="section warning"><dt>Warning</dt><dd>Do not call this in anything that is run during the main loop. If you do you will have a bad time. </dd></dl>

</div>
</div>
<a class="anchor" id="a3d0ad1bbc5082f24a8151c0b988c15ab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::DestroyManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys a manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>The manager to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9cee55e885f87673e23486f13cd02f98"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::DestroyManagerFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> *&#160;</td>
          <td class="paramname"><em>ToBeRemoved</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes and destroys a manager factory in this world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeRemoved</td><td>A pointer to the manager factory that is to be removed and destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a03f789249648832f687a53f76821f0d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::DestroyManagerFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ImplName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes and destroys a manager factory in this world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ImplName</td><td>The name of the manager implementation created by the factory to be removed and destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9ff3a62c982cb032d644b2f327ce547f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::DoMainLoopLogging </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This commits the log stream to the log. </p>
<p>This is called automatically at the end of each main loop iteration. You only need to call it if you are using your own main loop. </p>

</div>
</div>
<a class="anchor" id="afa73899c1bf58d4d0671a224f1e2469b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::EngineInit </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>CallMainLoop</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This initializes all the managers currently in the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CallMainLoop</td><td>Should the main loop be called. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5d1a2d72564d09e6bc22c404758217bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ActorManager.xhtml">ActorManager</a>* Mezzanine::Entresol::GetActorManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1ActorManager.xhtml" title="A manager responsible for the storage and management of all actors in use.">ActorManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple ActorManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1ActorManager.xhtml" title="A manager responsible for the storage and management of all actors in use.">ActorManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a7e6203f8826ab5be8fa9d1e9a4d38a6a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1AudioManager.xhtml">AudioManager</a>* Mezzanine::Entresol::GetAudioManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple AudioManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1AudioManager.xhtml" title="This is simply a place for storing all the Sound utilities and functions.">AudioManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a2b64d738f482b2a38923efe8cc4b7d09"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a>* Mezzanine::Entresol::GetCameraManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple CameraManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a2a7b04833c40f0fbf2e49cb9c47d63b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml">CollisionShapeManager</a>* Mezzanine::Entresol::GetCollisionShapeManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple CollisionShapeManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1CollisionShapeManager.xhtml" title="This manager is for the storage of all shapes and creation of mesh shapes.">CollisionShapeManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a68800e34befaffad0f026ffbc1b44f87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1EventManager.xhtml">EventManager</a>* Mezzanine::Entresol::GetEventManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1EventManager.xhtml" title="This is a container for Events and facilitates the transfer of data.">EventManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple EventManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1EventManager.xhtml" title="This is a container for Events and facilitates the transfer of data.">EventManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a45d87ca28ed75adeac1f02219807342f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Entresol::GetFrameTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the amount of time since the last time Rendering began. </p>
<p>This returns, in milliseconds the amount of time since the frame started (since the last rendering began) </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a whole number which can be used to aid in the timimg of various algorithms. </dd></dl>

</div>
</div>
<a class="anchor" id="a6e11f8951e01fa482b79cc71b63b6b7a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1GraphicsManager.xhtml">GraphicsManager</a>* Mezzanine::Entresol::GetGraphicsManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml" title="This is intended to store basic graphics setting for the user.">GraphicsManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple GraphicsManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1GraphicsManager.xhtml" title="This is intended to store basic graphics setting for the user.">GraphicsManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="acbbc18baca6729647ffa9c8c4bed61ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1InputManager.xhtml">InputManager</a>* Mezzanine::Entresol::GetInputManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1InputManager.xhtml" title="This is the manager responsible for the handling of input devices and events.">InputManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple InputManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1InputManager.xhtml" title="This is the manager responsible for the handling of input devices and events.">InputManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="ae7996ff53a81b183945e886f8f012411"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">LoggingFrequency</a> Mezzanine::Entresol::GetLoggingFrequency </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the frequency of logging commits. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264" title="Used to indicate the frequency of logging.">Entresol::LoggingFrequency</a> containing the requested information. </dd></dl>

</div>
</div>
<a class="anchor" id="a80e99d18b6c45b0e71b9a73e418664db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a>* Mezzanine::Entresol::GetManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> &amp;&#160;</td>
          <td class="paramname"><em>ManagersToRemoveType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short unsigned int&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This is will find the manager of a given type. </p>
<p>Specifically this will iterate from lowest priority to highest priority, and return a pointer to the first Manager with a matching type found. If you specify WhichOne, it will the Nth+1 in the list matching the type (kind of like array subscript). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagersToRemoveType</td><td></td></tr>
    <tr><td class="paramname">WhichOne</td><td>If not getting the first/only manager of the given type, get one. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the World Managers inherit.">ManagerBase</a>, or a NULL pointer if no matching manager exists </dd></dl>

</div>
</div>
<a class="anchor" id="a1e93873e1da448e95aee8dc3aed224bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1MeshManager.xhtml">MeshManager</a>* Mezzanine::Entresol::GetMeshManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1MeshManager.xhtml" title="This manager handles the storage, generation, and query of of Graphics Meshes.">MeshManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple MeshManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1MeshManager.xhtml" title="This manager handles the storage, generation, and query of of Graphics Meshes.">MeshManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a86e0f3f15b4f08611907d9b631416cb2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1PhysicsManager.xhtml">PhysicsManager</a>* Mezzanine::Entresol::GetPhysicsManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml" title="This is simply a place for storing all the Physics Related functions.">PhysicsManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple PhysicsManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1PhysicsManager.xhtml" title="This is simply a place for storing all the Physics Related functions.">PhysicsManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="adcc40c373e57e1b402a0cdb6ee68be9d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml">ResourceManager</a>* Mezzanine::Entresol::GetResourceManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1ResourceManager.xhtml" title="This is the manager responsible for the loading and unloading of files.">ResourceManager</a> from the manager list. These are responsible for reading and writing files on the disk. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple ResourceManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1ResourceManager.xhtml" title="This is the manager responsible for the loading and unloading of files.">ResourceManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a3a6dcc618c79b2bb1c1d65b30d269916"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a>* Mezzanine::Entresol::GetSceneManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple SceneManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="ad009b4ed29febd443616060ca32ad573"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Entresol::GetTargetFrameTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves the amount of milliseconds we would like each iteration of the Main Loop to be. </p>
<p>In practice harI've done some more testing, started out digging through the code to see if there was anything wrong, there seemed to be random extra words inside our code that the compiler didn't mind that shouldn't be there. like there was a " Schedule : " right after a line where a pointer was initialized. I only found such occurrences in gamebase.cpp though, removed them and did two tests. First test I was just randomly clicking and then I inadvertently threw the metal sphere down into the abyss, the sphere was really close to the camera when this happened, about to go over. Second time I ran the game trying to click stuff, I simply couldn't click anything. I even tried zooming in on the robots, although I can only get so close to them before I have to tamper with the camera, which I haven't done yet, but there were no results with the Robots. The third time I was successfully able to stop two spheres and move them around the platform quite smoothly. These spheres were slightly further away from the camera compared to the first run. I stopped the wooden sphere and the second metal sphere. I included a screen shot and a copy of my log for the third run. The spheres in the screenshot are both in a rest position.dware performance or timing concerns can cause this goal to be unnaitanable or trivially easy. The main loop with actually pause execution until this amount of time is reach is main loop iteration, However, the mainloop will always skip waiting if hardware is overburdened. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a Whole with the current Value </dd></dl>

</div>
</div>
<a class="anchor" id="a110fc0c64ba496785629b87596dbf905"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1TimerManager.xhtml">TimerManager</a>* Mezzanine::Entresol::GetTimerManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1TimerManager.xhtml" title="A manager responsible for the updating of all timers in use by this engine.">TimerManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple TimerManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1TimerManager.xhtml" title="A manager responsible for the updating of all timers in use by this engine.">TimerManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="af15831387da5a02e77ebe8fe19ba368e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UIManager.xhtml">UIManager</a>* Mezzanine::Entresol::GetUIManager </td>
          <td>(</td>
          <td class="paramtype">const short unsigned int &amp;&#160;</td>
          <td class="paramname"><em>WhichOne</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This gets the <a class="el" href="classMezzanine_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a> from the manager list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WhichOne</td><td>If you have multiple UIManagers this will choose which one to return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This returns a pointer to a <a class="el" href="classMezzanine_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a>, or a NULL pointer if no matching manager exists. </dd></dl>

</div>
</div>
<a class="anchor" id="a96f894e20225d43643091c3731acc35d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::Log </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>Message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Runtime event and message logging. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Message</td><td>This is what will be streamed to the log</td></tr>
  </table>
  </dd>
</dl>
<p>This also gathers any outstanding Log messages from any subsystem. Currently the <a class="el" href="namespaceMezzanine_1_1Graphics.xhtml" title="This namespace is for all the classes belonging to the Graphics Subsystem.">Graphics</a> subsystem (Ogre3d) and the sound subsystem (cAudio) are the Only ones to produce meaningul log messages. </p>

<p>Definition at line <a class="el" href="entresol_8h_source.xhtml#l00476">476</a> of file <a class="el" href="entresol_8h_source.xhtml">entresol.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab42f6a9a7f43618625667b5d40b12681"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::LogString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Log String directly with no conversion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>The string to log </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a43085ec83543377dce2817374d9de156"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::MainLoop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This Function house the main loop. </p>
<p>By default this is called from the function World.GameInit() this is were the bulk of the simulation is ran from, see mainloop1 </p>

</div>
</div>
<a class="anchor" id="ae08805febf5cc290639c75c23ffd8d3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::PauseWorld </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Pause</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pauses all animations, particles, and object movement throughout the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pause</td><td>Pauses the world if true, unpauses if false. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afdb626cc8d43180b89e512f2959f5630"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::RemoveManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td>
          <td class="paramname"><em>ManagerToRemove</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This removes a manager by finding the matching pointer. </p>
<p>Currently this just iterates through the list looking for the matching pointer, at some future point this could replaced with more sophisticated algorithm, but for now assume this operates in linear time. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagerToRemove</td><td>A pointer to the manager to be removed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a01738d3370d867ac48f6422029faba0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::RemoveManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> &amp;&#160;</td>
          <td class="paramname"><em>ManagersToRemoveType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short unsigned int&#160;</td>
          <td class="paramname"><em>WhichOne</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This removes a manager of a specific type from the list. </p>
<p>This starts at the beginning (should be the lowest priority)of the list and iterates through looking for a matching type, at some future point this could replaced with more sophisticated algorithm, but for now assume this operates in linear time. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagersToRemoveType</td><td>The ManagerBase::ManagerTypeName of the manager to remove. </td></tr>
    <tr><td class="paramname">WhichOne</td><td>If not removing the first/only manager of the given type, which one by count are you erasing. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a215d55d4382a211c6d5f0950387f63d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::RemoveManagerFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerFactory.xhtml">ManagerFactory</a> *&#160;</td>
          <td class="paramname"><em>ToBeRemoved</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a manager factory from this world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeRemoved</td><td>A pointer to the manager factory that is to be removed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5f0d45fab7479f97402e278b0aa35103"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::RemoveManagerFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ImplName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a manager factory from this world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ImplName</td><td>The name of the manager implementation created by the factory to be removed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0b070fdcf1026abcfdf906512c7c8d48"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::SetFrameTime </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>FrameTime_</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the amount of time since the last time Rendering began. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FrameTime_</td><td>This is the amount of time in milliseconds.</td></tr>
  </table>
  </dd>
</dl>
<p>This sets, in milliseconds the amount of time since the frame started (since the last rendering began). Don't set this carelessely can screw up a lot of stuff, for the most part this should be by the rendering manager during the rendering process. </p>

</div>
</div>
<a class="anchor" id="af9cfff8cd699f22a241edf080a498df4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::SetLoggingFrequency </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Entresol.xhtml#add7bc967361f851b6a5bd9633141a264">LoggingFrequency</a>&#160;</td>
          <td class="paramname"><em>HowOften</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td>
          <td class="paramname"><em>FrequencyCounter</em> = <code>5</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set how often log message should be commited to disk (or network, or whatever). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">HowOften</td><td>The actual setting for how often. </td></tr>
    <tr><td class="paramname">FrequencyCounter</td><td>For settings that use X this is X, this defaults to 5</td></tr>
  </table>
  </dd>
</dl>
<p>By default this is set to LogOncePerFrame. <br/>
 <br/>
 There are a series of functions internally that represent each of the LoggingFrequency values. When You pass in one of these values you are setting which of these functions will be called. This way the only cost that is guaranteed to be incurred is the dereferencing of a function pointer (constant time). Additionally the members of the enum are sorted by the amount of time they are expected to take to run, of course your performance will vary, the best way to know how it will perform is to test. </p>

</div>
</div>
<a class="anchor" id="ad4371cfd347a8b60003484a434e72ebc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::SetTargetFrameRate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>NewFrameRate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This sets a new Target Frame Rate. </p>
<p>This sets a new time for each frame. This divides 1000 by the NewFrameRate, drops and floating point amount and uses that amount in an call to <a class="el" href="classMezzanine_1_1Entresol.xhtml#ac7c16eb90e983c932d628bef64ca680d" title="This sets a new Target Time.">Entresol::SetTargetFrameTime</a>. For example a target frame rate of 40 with cause each frame to take 25 milliseconds, and a Framerate of 70 would take 14 ms </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NewFrameRate</td><td>The new desired frame rate. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>Setting vary low or very High values could cause unknown errors, This is on our todo list of issues to fix. </dd></dl>

</div>
</div>
<a class="anchor" id="ac7c16eb90e983c932d628bef64ca680d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::SetTargetFrameTime </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>NewTargetTime</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This sets a new Target <a class="el" href="structMezzanine_1_1Time.xhtml" title="A container for the metrics of time relevant for the timer class.">Time</a>. </p>
<p>This sets a new time for each frame. Each iteration of the game loop will take around this long to run, but rarely exactly this long. Setting this value Higher can results in power savings (battery life), but setting it too High can cause choppiness. Settings this value higher can result in smoother gameplay, but set it too high, and system resources could becom completely taxed and power will be wasted. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NewTargetTime</td><td>The new length of time, in milliseconds. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>Setting vary low or very High values could cause unknown errors, This is on our todo list of issues to fix. </dd></dl>

</div>
</div>
<a class="anchor" id="ab261a0a4bd1295c6ff8eb6364dd361e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::UpdateManagerOrder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml">ManagerBase</a> *&#160;</td>
          <td class="paramname"><em>ManagerToChange</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>Priority_</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Changes a Manager's time of execution. </p>
<p>Searches through the Manager list and removes any previous entries to the changing manager, and add a new entry in the correct location. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ManagerToChange</td><td>A pointer to the manager that needs to be changed </td></tr>
    <tr><td class="paramname">Priority_</td><td>the new desire priority/execution order of the Manager </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adfacfbcde9d24d46f74003bed33edf74"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Entresol::UpdateManagerOrder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This forces the list of managers to be resorted. </p>
<p>This should only need to be called if the Priority attribute of a manager in the list has changed. This sorts the list of managers </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ae11d3d584419c09ce38aa1c4b646cf86"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::stringstream Mezzanine::Entresol::LogStream</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This is another way to put data in the log. </p>
<p>The contents of this will be commited to the log as per the logging frequency. Because the entry of this data into the actual log file(or whatever destination) is delayed, do not use this for data that is likely to be required to debug something the frame something crashes. However, for other kinds of debugging data and creating in game logs and gameworld recreations. </p>

<p>Definition at line <a class="el" href="entresol_8h_source.xhtml#l00487">487</a> of file <a class="el" href="entresol_8h_source.xhtml">entresol.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/sqeaky/Code/Mezzanine/Mezzanine/src/<a class="el" href="entresol_8h_source.xhtml">entresol.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat May 18 2013 17:17:07 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
