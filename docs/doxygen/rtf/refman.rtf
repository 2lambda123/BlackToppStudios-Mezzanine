{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment PhysGameEngine  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.01 \par
}}PhysGameEngine}
{\comment Generated byDoxgyen. }
{\creatim \yr2011\mo3\dy27\hr17\min1\sec5}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version .01\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Physgame\par \pard\plain 
{\tc \v Physgame}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Physgame Engine isn't really an engine. It is glue holding other code and libraries together. It is a series of other open source libraries (sometimes less user friendly, and almost always more sophistciated) that are held together in a single, hopefully, unchanging API. Others have attempted to do things like this before. Usually simple mistakes are made along the way that have huge negative impacts later in the design. A common mistake code is copy and pasted from open source projects with no plans for maintainability. This means that those projects get all the features and bugs from when they copied, without updates, new features and bugfixes since they started integrating the code. We too have copy and pasted, however we are keeping it up to date, and have a plan for upgrading each component we have brought in.\par
This is not simple, guaranteeing the most up to date libraries with meaningful and working integration means a lot of work. Many linux distributions try to keep the most up to date shared libraries around, but what about when they don't ship what you need, or ship a broken copy or an older library. What about Windows and Mac OS X which make no attempt to keep these kinds of software up to date. What if you do manage to get and stay up to date, then you still have to work on a confusing compiler and linker options, Code::Blocks or Visual Studio aren't going to set that up for you. The Physgame Engine project depends on a dozen or more libaries, so would your project if it had high performance 3d graphics, easy to use 3d physics integrated with the graphics and 3d positional audio ready to run on Windows, Linux and Mac OS X. We are figuring it out once, getting it right ( if we aren't, tell us and we will fix it ), so it doesn't need to be done again and again, for each game made.\par
This is still in heavy development and is not in usable condition for all systems. Currently the synchronization of 3d graphics and physics works great. But, some of the more advanced features of both physics and graphics to do not yet work. There are a number of other features that are in varied states of development.\par
If we do our jobs right this will save time and effort making, updating and porting games between a variety of platforms. If you link only against this library, not a single line of your standard compliant C++ code should need to change between platforms. At this early stage we are proving the concept with "Catch!" our first sample game. It Currently runs on Linux, Windows and Mac OS X with an Identical codebase. When we are done with "Catch!" We want it to have one codebase (with no messy IFDEFs in game code for compatibility), and downloadable in the Iphone app store, on the PS3, Wii download on Steam, and in a variety of linux repositories.\par
To get the latest news on development checkout: {\field {\*\fldinst { HYPERLINK  \\l "http://gitorious.org/physgame" }{}}{\fldrslt {\cs37\ul\cf2 http://gitorious.org/physgame}}}
 Or check the webpage {\field {\*\fldinst { HYPERLINK  \\l "http://www.blacktoppstudios.com" }{}}{\fldrslt {\cs37\ul\cf2 http://www.blacktoppstudios.com}}}
\par
Here we will detail the engine structure and different classes and datatypes, but this needs an update.\par
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Structure
\par}
{\tc\tcl2 \v Structure}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 Main Loop Flow}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World - It integrates everything}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 Events - Handling messages, event and interupts from the outisde}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 Actor Container - Keeping track of our in game objects}}} \par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Types
\par}
{\tc\tcl2 \v Data Types}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3WActor}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::Ray}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 phys::Real}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 phys::Whole}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 phys::MetaCode}}} \par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Sophisticated Data Types
\par}
{\tc\tcl2 \v Sophisticated Data Types}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 Actors - Items in the world}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsManager}}} \par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Optional Engine Components
\par}
{\tc\tcl2 \v Optional Engine Components}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldQueryTool}}}  \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
How to keep track of actors{\tc \v How to keep track of actors}\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Actor Container Overview
\par}
{\tc\tcl2 \v Actor Container Overview}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Main Loop Structure and Flow{\tc \v Main Loop Structure and Flow}\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000029" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid create a lighting manager and put this in there \par
}
The MainLoop is heart of most video games and simulations.\par
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Main loop Overview
\par}
{\tc\tcl2 \v Main loop Overview}
The Main loop runs in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEY" }{}}{\fldrslt {\cs37\ul\cf2 World.MainLoop()}}} which is called by default from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 World::GameInit()}}} . By default this Method also starts the render, the physics andthe input systems. It does very little on it's own. The main loop then calls the PreMainLoopItems(), DoMainLoopItems and PreMainLoopItems(), for each manager in the order of their priority from Lowest to Highest. \par Here is a listing of default priorities for each of the managers the a world intantiates by default: -50 User Input and events -40 Actors -30 Physics -20 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} -10 Lighting (Not yet implemented) 0 Graphics 10 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} 20 Resources \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Todo List{\tc \v Todo List}\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Page {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 Main Loop Structure and Flow}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid create a lighting manager and put this in there \par}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid::CreateShapeFromMeshDynamic}}} (short unsigned int Accuracy=1, bool UseAllSubmeshes=false) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid - Check for thread safety \par}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid::CreateShapeFromMeshStatic}}} (bool UseAllSubmeshes=false) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid - Check for thread safety \par}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFI" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain::CreateShapeFromMeshStatic}}} (bool UseAllSubmeshes=false) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid - Check for thread safety \par}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 phys::AreaEffect::CreateGraphicsBox}}} (String &MaterialName) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid The HalfExtents returned here includes scaling, should account for that so weird scaling sync issues don't occur. \par}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 phys::Camera}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Fix all the extra occurences of the word Camera in Function names on the camera. \par}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager::EventManager}}} () \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: Make the EventManager completely thread safe. IF this is completely thread safe, we can spawn numerous individual thread each accessing this and and the performance gain would almost scale directly with cpu core count increases. Look at boost scoped_lock \par}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFP" }{}}{\fldrslt {\cs37\ul\cf2 phys::GameWindow::setRenderHeight}}} (const Whole &Height) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: Need to attempt to update resolution here \par}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFR" }{}}{\fldrslt {\cs37\ul\cf2 phys::GameWindow::setRenderResolution}}} (const Whole &Width, const Whole &Height) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: Need to attempt to update resolution here \par}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 phys::GameWindow::setRenderWidth}}} (const Whole &Width) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: Need to attempt to update resolution here \par}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::Line3D::drawLine}}} (const Vector3 &start, const Vector3 &end) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: when using this function there should be a break in the line segment rendering. Not sure abot the best way to implement that, but it should happen \par}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup::drawLine}}} (const Vector3 &start, const Vector3 &end) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: In the future we will add a break in the line segment chain when this is called. \par}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup::drawLines}}} (void) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: PrepareForRendering should be rolled into drawLines, but this cannot happen until the physics debug rendererin gets more attention. \par}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup::LineGroup}}} (World *Parent_) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: This class really should support rotation, the underlying implementation does. \par}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 phys::PhysicsManager::Initialize}}} () \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Possibly restructure this so that it'll detect ogre first, preventing a crash. At current this makes the physics manager depend on the graphicsmanager. \par}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 phys::Ray::GetNormal}}} () const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid discuss the merits throwing an error here. \par}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox::ButtonListBox}}} (ConstString &name, Vector2 Position, Vector2 Size, Real ScrollbarWidth, UI::ScrollbarStyle ScrollStyle, UILayer *Layer) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Fourth instance of needing to include the namespace in the declaration seemingly needlessly. \par}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox::VertScroll}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Third instance of needing to include the namespace in the declaration seemingly needlessly. \par}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox::UncheckedSet}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Fix the issue with all strings being const, so we can resume use of typedefs here. \par}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox::ListBox}}} (ConstString &name, const Vector2 Position, const Vector2 Size, const Real ScrollbarWidth, UI::ScrollbarStyle ScrollStyle, UILayer *Layer) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Fourth instance of needing to include the namespace in the declaration seemingly needlessly. \par}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox::VertScroll}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Third instance of needing to include the namespace in the declaration seemingly needlessly. \par}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIScreen::CreateLayer}}} (const String &Name, Whole Zorder) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid add an exception here or maybe log entry, some notification it failed. \par}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3::GetNormal}}} () const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid discuss the merits throwing an error here. \par}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3::Inverse}}} () \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid fix division by zero in Vector3::Inverse() \par}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3::Normalize}}} () \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid discuss the merits throwing an error here. \par}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::World::SetWindowName}}} (const String &NewName) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO Change the name of an application once it is running \par}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldQueryTool::GetFirstActorOnRayByAABB}}} (Ray ActorRay) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid TODO: The function WorldQueryTool::GetFirstActorOnRayByAABB does not return an valid offset. This needs to be calculated somehow. \par
TODO: The function WorldQueryTool::GetFirstActorOnRayByAABB has not been tested and needs to be tested \par
TODO: The function WorldQueryTool::GetFirstActorOnRayByAABB does not take other obstructions into account \par}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::AsDouble}}} () const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Update Attribute::AsDouble() to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::AsFloat}}} () const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Update Attribute::AsFloat() to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::AsInt}}} () const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Update Attribute::AsInt() to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::AsUint}}} () const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Update Attribute::AsUint() to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetName}}} (const char_t *rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redudant and use an exception instead. \par}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetValue}}} (unsigned int rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetValue}}} (bool rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetValue}}} (const char_t *rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetValue}}} (int rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetValue}}} (double rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute::SetValue}}} (T rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Strip ">" automatically and provide a method to reconsitute it. \par}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::AppendChild}}} (NodeType Type=NodeElement) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::FirstElementByPath}}} (const char_t *Path, char_t delimiter= '/') const  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Investigate this more deeply. \par}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::InsertChildAfter}}} (NodeType Type, const Node &node) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par}
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::InsertChildBefore}}} (NodeType Type, const Node &node) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::PrependChild}}} (const char_t *Name) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::SetValue}}} (const char_t *rhs) \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented namespaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 phys}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bulk of the engine components go in this namspace })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 phys::crossplatform}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All functionality that needs different implemenations per platform will go in here })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 phys::debug}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is for internal debugging tools. In general it shouldn't be used in game code })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALE" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is used for internal helper classes, and in general it should be ignored by game developers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem resides, there are numerous class that are all tighlty integrated so one file seemed appropriate })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::ActorBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::ActorRigid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ActorSoft\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ActorTerrain\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::ActorGraphicsSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::AreaEffect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::GravityField\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::GravityWell\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::TestAE\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::Attachable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::Camera\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Light\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ParticleEffect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::xml::Attribute\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::AttributeIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AttributeStruct\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Button\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::UI::TextButton\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::UI::ButtonCallback\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Caption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ColourValue\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::EventBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::EventCollision\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::EventGameWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::EventQuit\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::EventRenderTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::EventUserInput\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::EventGameWindowData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::internal::EventManagerInternalData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Exception\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::xml::XPathException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::GameWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::GraphicsSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::InputQueryTool\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::WorldQueryTool\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::debug::InternalDebugDrawer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::internal::Line3D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::LineGroup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::LineList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ManagerBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::ActorContainerBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::ActorContainerVector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::CameraManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::EventManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::GraphicsManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::PhysicsManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ResourceManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::SceneManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::SoundManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::TimerManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UIManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::UI::MarkupText\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::MeshGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::MetaCode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::Node\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::xml::Document\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::xml::NodeIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodeStruct\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ObjectReference\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::ParseResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Plane\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Quaternion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Ray\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Rectangle\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::ResizingInfo< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::ResourceInputStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Sound\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::SoundListener\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Time\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Timer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::ExtendedTimer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::SimpleTimer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::TimerCallback\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::TreeWalker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UILayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UIScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Vector2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Vector3\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Vector3WActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::Viewport\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Widget\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::UI::ButtonListBox\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::CheckBox\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::ListBox\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Menu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Scrollbar\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::UI::Window\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::UI::MenuWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
phys::World\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::WorldGetSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::WorldNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::Writer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
phys::xml::WriterFile\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::WriterStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
phys::xml::XPathNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::XPathNodeSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::XPathParseResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::XPathQuery\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::XPathVariable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
phys::xml::XPathVariableSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the actors inherit })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base class to unify the interface for different kinds of containers for holding actors })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Actor Container using a vector })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorGraphicsSettings}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for configuring graphics settings of an actor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Rigid Objects })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Soft Objects })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is actor class for terrain })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::AreaEffect}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to define area's in the world that have unique effects })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 phys::Attachable}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is just a base class to be used by elements that are attachable to worldnodes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating attributes in DOM tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AttributeIterator}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 AttributeStruct}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal data storage structure used in an Attribute })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use as a button })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonCallback}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class provides customizable functionality to the button class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a widget for displaying a list of buttons in a box })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 phys::Camera}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the camera class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 phys::CameraManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager class for all camera functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Caption}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use with text })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple widget for storing a bool value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ColourValue}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple class for holding 4 reals representing the colour any give object or lightsource can have })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Document}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root node of any xml hierarchy is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base class for all events })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventCollision}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an event class used to track collsions in the physics world })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventGameWindow}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventGameWindowData}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to keep private in one place that is actually private })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for Events and facilitates the transfer of data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::EventManagerInternalData}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to increase encapsulation, just a bit })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventQuit}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventRenderTime}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This communicates the amount of time since the world was rendered })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventUserInput}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for MetaCodes that is used in the physEventManager })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Exception}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the exception thrown by most physgame system that can throw exceptions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 phys::ExtendedTimer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enhanced timer class that can store and track many units of time })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::GameWindow}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing game windows })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to store basic graphics setting for the user })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsSettings}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores all the possible configuration options the graphics manager supports })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJL" }{}}{\fldrslt {\cs37\ul\cf2 phys::GravityField}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity field implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 phys::GravityWell}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity well implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 phys::InputQueryTool}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of utilities for getting input information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 phys::debug::InternalDebugDrawer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to draw wireframse for the Physics subsystem })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 phys::Light}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the class used for dynamic lighting within the scene })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::Line3D}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does the bulk of the work that that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup}}} performs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a group of consectutive line segments to be rendered together })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::LineList}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an object comprised of a series of lines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a widget for displaying a list of captions in a box })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} Managers inherit })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::MarkupText}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for use with specialized text display })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a control mechanism for multiple windows in a heirarchy })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::MenuWindow}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is an extended version of the window class for use exclusively with the menu widget })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 phys::MeshGenerator}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class allows the creation of graphical meshes from code })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 phys::MetaCode}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Determines the kind of user input })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating nodes in DOM tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeIterator}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Child node iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal data storage structure used in a Node })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 phys::ObjectReference}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a small class used to store a reference to a world object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseResult}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All the information needed to troubleshoot a Parsing error })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 phys::ParticleEffect}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 phys::PhysicsManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the Physics Related functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 phys::Plane}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a flat infinite slice of the game world })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about rotation in 3d space })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::Ray}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to indicate a line with one end })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Rectangle}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use with background sprites and colours })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ResizingInfo< T >}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper struct for use in resizing UI containers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 phys::ResourceInputStream}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A stream from a file, can read from zip files as well })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 phys::ResourceManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager responsible for the loading and unloading of files })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 phys::SceneManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains utilities and functions to allow the manipulation of the Graphical scene, rather then the physics inside, or the object inside })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a widget class, to be used alongside any scrollable widget })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 phys::SimpleTimer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A basic timer class that can be used to track short intervals of time })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 phys::Sound}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an instance of a sound that can be played and manipulated })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 phys::SoundListener}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the listener class used for 3D sound })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 phys::SoundManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} utilities and functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 phys::TestAE}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a dummy class to test if the AE field works. Details will be output to the log })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a button class that provides text capabilities })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 phys::Time}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A container for the metrics of time relevant for the timer class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::Timer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base timer class for the different timers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 phys::TimerCallback}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A callback class for use automated and timed-event based timers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 phys::TimerManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A manager responsible for the updating of all timers in use by this engine })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::TreeWalker}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to call a function for_each member of the subtree of nodes descended from a specific node })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UILayer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the basic container class for UI elements })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIManager}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for any and all user interactions with the User interface/HUD })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIScreen}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class for creating UI's. It is responsible for storing and keeping track of all the elements of a single UI screen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point on a 2 dimentional area, such as a screen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point in space, or a vector through space })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3WActor}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to store or transfer a position relative to an Actor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 phys::Viewport}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing viewports within a game window })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the base class for all widgets })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container widget capable of holding any other widget })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the main entry point for the entire library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldGetSet}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple set of function to manage a pointer to the gameworld })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldNode}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class which non-physics objects, such as lights, cameras, ribbon trails, and particle effects may be attached to for enhanced effects })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldQueryTool}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of optional tools for working with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Writer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface for node printing (see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Node::Print}}} ) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::WriterFile}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing to FILEs as defined in stdio })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::WriterStream}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing std::ostreams })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathException}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thrown in a variety of XPath only situations, to indicate type mismatch or other issues })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathNode}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPath node which can store handles to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathNodeSet}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A collection of nodes that an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} can work on })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathParseResult}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPath parsing result })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathQuery}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A compiled XPath query object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathVariable}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single XPath variable })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathVariableSet}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of XPath variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b actorbase.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorbase.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorcontainerbase.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorcontainerbase.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorcontainervector.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorcontainervector.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorgraphicssettings.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorgraphicssettings.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorragdoll.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorragdoll.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorrigid.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorrigid.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorsoft.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorsoft.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorterrain.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b actorterrain.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b areaeffect.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b areaeffect.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b attachable.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b attachable.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b camera.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b camera.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cameramanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cameramanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b colourvalue.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b colourvalue.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b constraint.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b constraint.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b crossplatform.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b crossplatform.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 crossplatformexport.h}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file is used on some platforms to determine what data should be read and written to and from a shared/dynamic library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 datatypes.cpp}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds utilities for converting, concatenating, manipulating and working with simple datatypes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b datatypes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b enumerations.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventbase.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventbase.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventcollision.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventcollision.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventgamewindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventgamewindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventmanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventmanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventquit.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventquit.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventrendertime.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventrendertime.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventuserinput.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b eventuserinput.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exception.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exception.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b extendedtimer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b extendedtimer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gamewindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gamewindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b graphicsmanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b graphicsmanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b graphicssettings.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b inputquerytool.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b inputquerytool.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internaldecompinterface.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internaldecompinterface.h.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalGorilla.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalGorilla.h.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalmeshtools.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalmeshtools.h.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalmotionstate.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalmotionstate.h.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalogredatastreambuf.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b internalogredatastreambuf.h.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b light.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b light.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b linegroup.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b linegroup.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b managerbase.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b managerbase.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b meshgenerator.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b meshgenerator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metacode.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metacode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b objectreference.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b particleeffect.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b particleeffect.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 physgame.h}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single file that includes all of the physgame engine })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b physicsmanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b physicsmanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plane.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plane.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b quaternion.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b quaternion.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ray.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ray.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b resourceinputstream.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b resourceinputstream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b resourcemanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b resourcemanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b scenemanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b scenemanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b simpletimer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b simpletimer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sound.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sound.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soundlistener.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soundlistener.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soundmanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soundmanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b timer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b timermanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b timermanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uibutton.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uibutton.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uibuttonlistbox.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uibuttonlistbox.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uicaption.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uicaption.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uicheckbox.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uicheckbox.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uilayer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uilayer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uilinelist.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uilinelist.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uilistbox.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uilistbox.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimanager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimanager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimarkuptext.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimarkuptext.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimenu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimenu.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimenuwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uimenuwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uirectangle.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uirectangle.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiresizinginfo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiresizinginfo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiscreen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiscreen.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiscrollbar.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiscrollbar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uitextbutton.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uitextbutton.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiwidget.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiwidget.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b uiwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vector2.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vector2.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vector3.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vector3.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vector3wactor.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vector3wactor.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b viewport.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b viewport.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b world.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b world.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worldgetset.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worldgetset.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worldnode.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worldnode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worldquerytool.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worldquerytool.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b xml.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem is declare, there are numerous class that are all tighlty integrated so one file seemed appropriate })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b xmldoc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Doxygen documentation and minor tools to assist with the XML system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys Namespace Reference\par \pard\plain 
{\tc\tcl2 \v phys}
{\xe \v phys}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bulk of the engine components go in this namspace. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 crossplatform}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All functionality that needs different implemenations per platform will go in here. \par
}}}
}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 debug}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is for internal debugging tools. In general it shouldn't be used in game code. \par
}}}
}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALE" }{}}{\fldrslt {\cs37\ul\cf2 internal}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is used for internal helper classes, and in general it should be ignored by game developers. \par
}}}
}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 xml}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem resides, there are numerous class that are all tighlty integrated so one file seemed appropriate. \par
}}}
}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the actors inherit. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerBase}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base class to unify the interface for different kinds of containers for holding actors. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerVector}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Actor Container using a vector. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 ActorGraphicsSettings}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for configuring graphics settings of an actor. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 ActorRigid}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Rigid Objects. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIO" }{}}{\fldrslt {\cs37\ul\cf2 ActorSoft}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Soft Objects. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 ActorTerrain}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is actor class for terrain. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to define area's in the world that have unique effects. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 TestAE}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a dummy class to test if the AE field works. Details will be output to the log. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJL" }{}}{\fldrslt {\cs37\ul\cf2 GravityField}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity field implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 GravityWell}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity well implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is just a base class to be used by elements that are attachable to worldnodes. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the camera class. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager class for all camera functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple class for holding 4 reals representing the colour any give object or lightsource can have. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base class for all events. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an event class used to track collsions in the physics world. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used to keep private in one place that is actually private. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for Events and facilitates the transfer of data. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This communicates the amount of time since the world was rendered. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for MetaCodes that is used in the physEventManager. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 Exception}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the exception thrown by most physgame system that can throw exceptions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A container for the metrics of time relevant for the timer class. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enhanced timer class that can store and track many units of time. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing game windows. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to store basic graphics setting for the user. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores all the possible configuration options the graphics manager supports. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of utilities for getting input information. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the class used for dynamic lighting within the scene. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 LineGroup}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a group of consectutive line segments to be rendered together. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} Managers inherit. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 MeshGenerator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class allows the creation of graphical meshes from code. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Determines the kind of user input. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 ObjectReference}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a small class used to store a reference to a world object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the Physics Related functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a flat infinite slice of the game world. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about rotation in 3d space. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to indicate a line with one end. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A stream from a file, can read from zip files as well. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager responsible for the loading and unloading of files. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains utilities and functions to allow the manipulation of the Graphical scene, rather then the physics inside, or the object inside. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A basic timer class that can be used to track short intervals of time. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an instance of a sound that can be played and manipulated. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 SoundListener}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the listener class used for 3D sound. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} utilities and functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base timer class for the different timers. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 TimerCallback}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A callback class for use automated and timed-event based timers. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A manager responsible for the updating of all timers in use by this engine. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the basic container class for UI elements. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for any and all user interactions with the User interface/HUD. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class for creating UI's. It is responsible for storing and keeping track of all the elements of a single UI screen. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point on a 2 dimentional area, such as a screen. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point in space, or a vector through space. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to store or transfer a position relative to an Actor. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing viewports within a game window. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the main entry point for the entire library. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 WorldGetSet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple set of function to manage a pointer to the gameworld. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class which non-physics objects, such as lights, cameras, ribbon trails, and particle effects may be attached to for enhanced effects. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of optional tools for working with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to represent a real floating point number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to represent an postive integer numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A datatype use to represent any integer close to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to a series of characters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to a series of imutable characters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 Character}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A datatype to represent one character. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef SDL_Event {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an internal datatype use to communicate with the User input Subsystem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a vector that stores sounds. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 WorldObjectType}}}
 \{ {\b WOT_ActorBase}, 
{\b WOT_ActorRigid}, 
{\b WOT_ActorSoft}, 
{\b WOT_ActorRagdoll}, 
{\b WOT_ActorTerrain}, 
{\b WOT_AreaEffect}, 
{\b WOT_GravityField}, 
{\b WOT_GravityWell}, 
{\b WOT_Light}, 
{\b WOT_ParticleEffect}, 
{\b WOT_Camera}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used by various classes to help identify what class an object is. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 StringCat}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Front, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Back)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 2 Strings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 StringCat}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Front, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Middle, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Back)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 3 Strings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 StringCat}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Front, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Middle1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Middle2, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Back)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 3 Strings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALM" }{}}{\fldrslt {\cs37\ul\cf2 ToString}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a String as long as a streaming operator is available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 ToWhole}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a Whole as long as the proper streaming operators are available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 ToInteger}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to an Integer as long as the proper streaming operators are available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 Toint}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to an int as long as the proper streaming operators are available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 Tounsignedint}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to an unsigned int as long as the proper streaming operators are available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALR" }{}}{\fldrslt {\cs37\ul\cf2 ToReal}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a Real as long as the proper streaming operators are available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > float {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 Tofloat}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a float as long as the proper streaming operators are available for it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > double {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 Todouble}}}
 (const T &Datum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a double as long as the proper streaming operators are available for it. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bulk of the engine components go in this namspace. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where imporant classes like {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}, and The eventmanager reside. For more detailed usage information please refer to individual class documentation or the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 Physgame}}}  main page. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Character\:phys}
{\xe \v phys\:Character}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 phys::Character}}}
}
}\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A datatype to represent one character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This should be a char if String is an std::string. The XML parser expects this to be either char or wchar_t and has not be test with external types. The XML Parser expects XML_WCHAR_MODE to be defined if wchar_t is used. A remarked definition of this exists near the Character typedef in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 datatypes.h}}} \par
}{
Definition at line 103 of file datatypes.h.}\par
}
{\xe \v ConstString\:phys}
{\xe \v phys\:ConstString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 phys::ConstString}}}
}
}\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to a series of imutable characters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a typedef to const String, but could change. \par
}{
Definition at line 96 of file datatypes.h.}\par
}
{\xe \v Integer\:phys}
{\xe \v phys\:Integer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 phys::Integer}}}
}
}\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A datatype use to represent any integer close to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a typedef to int, but could int16 or smaller to improve performance in some situtations handheld platforms \par
}{
Definition at line 85 of file datatypes.h.}\par
}
{\xe \v RawEvent\:phys}
{\xe \v phys\:RawEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::RawEvent}}}
}
}\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an internal datatype use to communicate with the User input Subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This is a typedef to SDL_Event. See the SDL Documentation for more details \par}}{
Definition at line 110 of file datatypes.h.}\par
}
{\xe \v Real\:phys}
{\xe \v phys\:Real}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 phys::Real}}}
}
}\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to represent a real floating point number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Datatype is currently a typedef to a float, This is to match our compilations of Ogre (rendering subsystem ogre::Real), and Bullet (physics subsystem, btScalar). With a recompilation of all the subsystems and this there is no theoretical reason why this could not be changed to a double, or even something more extreme like a GMP datatype. Most likely this switch would require atleast some troubleshooting. \par
}{
Definition at line 74 of file datatypes.h.}\par
}
{\xe \v SoundSet\:phys}
{\xe \v phys\:SoundSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 phys::SoundSet}}}
}
}\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a vector that stores sounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a vector and can be use to store sounds that can be grouped together for similiar purposes or similiar content for easy tracking. \par
}{
Definition at line 116 of file datatypes.h.}\par
}
{\xe \v String\:phys}
{\xe \v phys\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}}
}
}\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to a series of characters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a typedef to std::string, but could change particularly if UTF16 or UTF32 support is desired. If this is changed, The Character typedef should be adjusted accordingly. \par
}{
Definition at line 91 of file datatypes.h.}\par
}
{\xe \v Whole\:phys}
{\xe \v phys\:Whole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 phys::Whole}}}
}
}\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Datatype used to represent an postive integer numbers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a typedef to unsigned Long. but could be smaller in some situations \par
}{
Definition at line 79 of file datatypes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v WorldObjectType\:phys}
{\xe \v phys\:WorldObjectType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldObjectType}}}
}
}\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used by various classes to help identify what class an object is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is mostly used internally for casting void pointers. \par
}{
Definition at line 51 of file enumerations.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v StringCat\:phys}
{\xe \v phys\:StringCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::StringCat (const String & {\i Front}, const String & {\i Back})}
}\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 2 Strings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Front} The first String \par
{\i Back} The last String \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A string containing the other Strings passed attached end to end \par
}}}
{\xe \v StringCat\:phys}
{\xe \v phys\:StringCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::StringCat (const String & {\i Front}, const String & {\i Middle}, const String & {\i Back})}
}\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 3 Strings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Front} The first String \par
{\i Middle} A String in the middle \par
{\i Back} The last String \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A string containing the other Strings passed attached end to end \par
}}}
{\xe \v StringCat\:phys}
{\xe \v phys\:StringCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::StringCat (const String & {\i Front}, const String & {\i Middle1}, const String & {\i Middle2}, const String & {\i Back})}
}\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 3 Strings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Front} The first String \par
{\i Middle1} The second string \par
{\i Middle2} The third string \par
{\i Back} The last String \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A string containing the other Strings passed attached end to end \par
}}}
{\xe \v Todouble\:phys}
{\xe \v phys\:Todouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > double phys::Todouble (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a double as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A double with the converted data\par
}This exists for interacting with other libraies, in situations where changing the Typedefs could break things \par
}{
Definition at line 214 of file datatypes.h.}\par
}
{\xe \v Tofloat\:phys}
{\xe \v phys\:Tofloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > float phys::Tofloat (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a float as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A float with the converted data\par
}This exists for interacting with other libraies, in situations where changing the Real Typedef could break things \par
}{
Definition at line 201 of file datatypes.h.}\par
}
{\xe \v Toint\:phys}
{\xe \v phys\:Toint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > int phys::Toint (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to an int as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An int with the converted data\par
}This exists for interacting with other libraies, in situations where changing the Integer Typedef could break things \par
}{
Definition at line 161 of file datatypes.h.}\par
}
{\xe \v ToInteger\:phys}
{\xe \v phys\:ToInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 phys::ToInteger (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to an Integer as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An Integer with the converted data \par
}}{
Definition at line 147 of file datatypes.h.}\par
}
{\xe \v ToReal\:phys}
{\xe \v phys\:ToReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::ToReal (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a Real as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Real with the converted data \par
}}{
Definition at line 187 of file datatypes.h.}\par
}
{\xe \v ToString\:phys}
{\xe \v phys\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::ToString (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a String as long as a streaming operator is available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A String with the converted data \par
}}{
Definition at line 125 of file datatypes.h.}\par
}
{\xe \v Tounsignedint\:phys}
{\xe \v phys\:Tounsignedint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int phys::Tounsignedint (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to an unsigned int as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An unsigned int with the converted data\par
}This exists for interacting with other libraies, in situations where changing the Integer Typedef could break things \par
}{
Definition at line 175 of file datatypes.h.}\par
}
{\xe \v ToWhole\:phys}
{\xe \v phys\:ToWhole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::ToWhole (const T & {\i Datum})}
}\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts whatever to a Whole as long as the proper streaming operators are available for it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Datum} The whatever to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Whole with the converted data \par
}}{
Definition at line 135 of file datatypes.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::crossplatform Namespace Reference\par \pard\plain 
{\tc\tcl2 \v phys::crossplatform}
{\xe \v phys::crossplatform}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All functionality that needs different implemenations per platform will go in here. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKC" }{}}{\fldrslt {\cs37\ul\cf2 GetPluginsDotCFG}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string with a path/filename to the default Plugins config file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKD" }{}}{\fldrslt {\cs37\ul\cf2 GetSettingsDotCFG}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string with a path/filename to the default Graphics Subsytem settings file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKE" }{}}{\fldrslt {\cs37\ul\cf2 GetDataDirectory}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Default Data Directory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKF" }{}}{\fldrslt {\cs37\ul\cf2 GetSDLOgreBinder}}}
 (SDL_Window *window, size_t &winGlContext)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a data structure that can help SDL(User Input Subsystem) with Ogre(graphics subsystem). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKG" }{}}{\fldrslt {\cs37\ul\cf2 WaitMilliseconds}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &WaitTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses the program for a given period of time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKH" }{}}{\fldrslt {\cs37\ul\cf2 RenderPhysWorld}}}
 (Ogre::RenderWindow *TheOgreWindow, SDL_Window *SDLWindow)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renders the current world contents to the screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKI" }{}}{\fldrslt {\cs37\ul\cf2 GetPlatform}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the platform currently being run on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKJ" }{}}{\fldrslt {\cs37\ul\cf2 SanitizeWindowedRes}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &ActualWidth, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &ActualHeight)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets cleaned dimensions for a game window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKK" }{}}{\fldrslt {\cs37\ul\cf2 GetWorkingDir}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the working directory as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All functionality that needs different implemenations per platform will go in here. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If we did our jobs right You not need to change anything to compile on different platforms exvept the build target. If you want, the platform can be manually defined in this section and this should be the only place that you need to change to compile this on a supported platform. Just remark all the lines that are not your platform using "//" and unremark your platform. \par\par Should you choose to port this to your platform, make sure that all the required libraries are installed, then make sure to write an implementation for each of the functions in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKL" }{}}{\fldrslt {\cs37\ul\cf2 crossplatform.cpp}}}, then you should get to the nitty gritty of making the minor platforms inconsistencies work. \par\par For most games there will be no need to directly call these functions, however if you decide you game is an exception, there is one key thing to remember about all of these functions. All of these may perform/behave slightly differently. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GetDataDirectory\:phys::crossplatform}
{\xe \v phys::crossplatform\:GetDataDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string PHYS_LIB phys::crossplatform::GetDataDirectory ()}
}\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Default Data Directory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The directory returned by this function can be used to easily graphics objects. In general the Graphics subsystem can easily open files in this location with just their filename \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A string containing the path to the default Data Directory. \par
}}}
{\xe \v GetPlatform\:phys::crossplatform}
{\xe \v phys::crossplatform\:GetPlatform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 PHYS_LIB phys::crossplatform::GetPlatform ()}
}\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the platform currently being run on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string based on the platform. "Windows", "Linux", or "MacOSX". \par
}}}
{\xe \v GetPluginsDotCFG\:phys::crossplatform}
{\xe \v phys::crossplatform\:GetPluginsDotCFG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string phys::crossplatform::GetPluginsDotCFG ()}
}\par
{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string with a path/filename to the default Plugins config file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Plugins.cfg is the file that determines which graphics plugins are loaded. This is a feature of the graphics subsystem and is generally not needed outside of engine code. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A string which contains the path and filename of the plugins file \par
}\par}}}
{\xe \v GetSDLOgreBinder\:phys::crossplatform}
{\xe \v phys::crossplatform\:GetSDLOgreBinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * phys::crossplatform::GetSDLOgreBinder (SDL_Window * {\i window}, size_t & {\i winGlContext})}
}\par
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a data structure that can help SDL(User Input Subsystem) with Ogre(graphics subsystem). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This creates a data structure that can help SDL(User Input Subsystem) with Ogre(graphics subsystem) This returns a named parameter list with valid settings to use Ogre rendering on a pre-existing SDL context \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This is an engine internal, and shouldn't be used anywhere else. For all practical purposes is return gibberish \par
}\par}}}
{\xe \v GetSettingsDotCFG\:phys::crossplatform}
{\xe \v phys::crossplatform\:GetSettingsDotCFG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string phys::crossplatform::GetSettingsDotCFG ()}
}\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string with a path/filename to the default Graphics Subsytem settings file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Settings.cfg is the file that determines how graphics settings are configured by default. This is a feature of the graphics subsystem and is generally not needed outside of engine code. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A string which contains the path and filename of the graphics setts file \par
}\par}}}
{\xe \v GetWorkingDir\:phys::crossplatform}
{\xe \v phys::crossplatform\:GetWorkingDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 PHYS_LIB phys::crossplatform::GetWorkingDir ()}
}\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the working directory as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The Directory the game was called from (not nescessarilly the location of the executable), as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}} \par
}}}
{\xe \v RenderPhysWorld\:phys::crossplatform}
{\xe \v phys::crossplatform\:RenderPhysWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PHYS_LIB phys::crossplatform::RenderPhysWorld (Ogre::RenderWindow * {\i TheOgreWindow}, SDL_Window * {\i SDLWindow})}
}\par
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renders the current world contents to the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This makes use of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} internals to Render to the screen, So it is advised against calling this directly. Currently there is no known issue with calling this directly, but it is not thread safe and is run during the main loop at the aproppriate times. Currently this references Ogre systems, that makes this internal Handles the actual cross platform swapping of graphics buffers. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TheOgreWindow} A pointer to the game window to be update to be rendered. This is considered an internal component \par
{\i SDLWindow} A pointer to the game window to be update to be rendered. This is considered an internal component \par
}
}}
{\xe \v SanitizeWindowedRes\:phys::crossplatform}
{\xe \v phys::crossplatform\:SanitizeWindowedRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PHYS_LIB phys::crossplatform::SanitizeWindowedRes (const Whole & {\i Width}, const Whole & {\i Height}, Whole & {\i ActualWidth}, Whole & {\i ActualHeight})}
}\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets cleaned dimensions for a game window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} The desired width of the window area. \par
{\i Height} The desired height of the window area. \par
{\i ActualWidth} The modified value of the rendering width, after window decorations have been taken into account. \par
{\i ActualHeight} The modified value of the rendering height, after window decorations have been taken into account. \par
}
}}
{\xe \v WaitMilliseconds\:phys::crossplatform}
{\xe \v phys::crossplatform\:WaitMilliseconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PHYS_LIB phys::crossplatform::WaitMilliseconds (const Whole & {\i WaitTime})}
}\par
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses the program for a given period of time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses the program for a given period of time. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WaitTime} The amount of time in milliseconds to wait \par
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::debug Namespace Reference\par \pard\plain 
{\tc\tcl2 \v phys::debug}
{\xe \v phys::debug}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is for internal debugging tools. In general it shouldn't be used in game code. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 InternalDebugDrawer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to draw wireframse for the Physics subsystem. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is for internal debugging tools. In general it shouldn't be used in game code. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid This whole debug namespace is a dirty hack. This is where internal only classes and functions go that can and maybe should be ommited from release builds \par}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::internal Namespace Reference\par \pard\plain 
{\tc\tcl2 \v phys::internal}
{\xe \v phys::internal}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is used for internal helper classes, and in general it should be ignored by game developers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 EventManagerInternalData}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to increase encapsulation, just a bit. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does the bulk of the work that that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup}}} performs. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKX" }{}}{\fldrslt {\cs37\ul\cf2 PhysSDLFilter}}}
 (void *userdata, SDL_Event *event)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL uses this to filter events it presents to applications. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace is used for internal helper classes, and in general it should be ignored by game developers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid This whole internal namespace is a home for dirty hacks and internal dependant code. This is where code goes that must implement classes or functions for the various subsytems the Physgame engine draws on. \par}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v PhysSDLFilter\:phys::internal}
{\xe \v phys::internal\:PhysSDLFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::internal::PhysSDLFilter (void * {\i userdata}, SDL_Event * {\i event})}
}\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL uses this to filter events it presents to applications. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This is used used to filter out SQL_quit messages, and generate appropriate messages for the game developer to use. This will always drop quit events, and store that information for later use. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i event} This is the event SDL expects use to filters, To get real data from this we setup it up so that if the event is a null pointer the function will return data about quit messages \par
{\i userdata} Nothing, a dummy argument that could be used by SDL \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Do not use this. It can only cause problems. This is for SDL, the user input subsystem, to filter certain events. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This will always return either 0 or 1 to SDL. 0 if it should drop the event, which it does to all SDL_quit events, 1 if the event should be allowed, which it does to all events which are not SDL_quit events. If a null pointer was passed, then this will return 4 if it dropped an SDL_Quit, and 2 if it has not droppped an SDL_quit. \par
}\par}}{
Definition at line 68 of file eventmanager.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml Namespace Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml}
{\xe \v phys::xml}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem resides, there are numerous class that are all tighlty integrated so one file seemed appropriate. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface for node printing (see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Node::Print}}} ). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 WriterFile}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing to FILEs as defined in stdio. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 WriterStream}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing std::ostreams. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating attributes in DOM tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating nodes in DOM tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Child node iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to call a function for_each member of the subtree of nodes descended from a specific node. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All the information needed to troubleshoot a Parsing error. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root node of any xml hierarchy is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPath parsing result. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single XPath variable. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of XPath variables. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A compiled XPath query object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 XPathException}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thrown in a variety of XPath only situations, to indicate type mismatch or other issues. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPath node which can store handles to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A collection of nodes that an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} can work on. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 Character}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent a UTF8 code point, char, or wchar_t depending on how compiled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::basic_string< XML_CHAR, std::char_traits< XML_CHAR >, std::allocator< XML_CHAR > > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent a string of UTF8 code point, char, or wchar_t depending on how compiled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void *(* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 AllocationFunction}}}
 )(size_t size){\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory allocation function interface; returns pointer to allocated memory or NULL on failure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void(* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 deAllocationFunction}}}
 )(void *ptr){\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory deallocation function interface. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 NodeNull}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 NodeDocument}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 NodeElement}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 NodePcdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeCdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 NodeComment}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 NodePi}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 NodeDeclaration}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 NodeDocType}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The types of nodes. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 EncodingAuto}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF8}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF16LE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF16BE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF16}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF32LE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF32BE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 EncodingUTF32}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 Encodingwchar_t}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These flags determine the encoding of input data for an XML document. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 ParseStatus}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 StatusOk}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 StatusFileNotFound}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 StatusIOError}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADC" }{}}{\fldrslt {\cs37\ul\cf2 StatusOutOfMemory}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 StatusInternalError}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 StatusUnrecognizedTag}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadPi}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadComment}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadCdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadDocType}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadPcdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadStartElement}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADL" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadAttribute}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 StatusBadEndElement}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADN" }{}}{\fldrslt {\cs37\ul\cf2 StatusEndElementMismatch}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These statuses are used to help determine what issues, if any the parser had. the XML parser had. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADP" }{}}{\fldrslt {\cs37\ul\cf2 XPathTypeNone}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathTypeNodeSet}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 XPathTypeNumber}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADS" }{}}{\fldrslt {\cs37\ul\cf2 XPathTypeString}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADT" }{}}{\fldrslt {\cs37\ul\cf2 XPathTypeBoolean}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPathQuery return type. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< char, std::char_traits< char >, std::allocator< char > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 AsUtf8}}}
 (const wchar_t *str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a c-style string of wchar_t to std::string containing UTF8. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< char, std::char_traits< char >, std::allocator< char > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADV" }{}}{\fldrslt {\cs37\ul\cf2 AsUtf8}}}
 (const std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > &str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a std::wstring to a UTF8 std::string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADW" }{}}{\fldrslt {\cs37\ul\cf2 AsWide}}}
 (const char *str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a Convert a c-style string to std::wstring containing native encoding (Usually UCS2 on windows and UTF32 on Linux/Mac). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADX" }{}}{\fldrslt {\cs37\ul\cf2 AsWide}}}
 (const std::basic_string< char, std::char_traits< char >, std::allocator< char > > &str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a Convert a std::string to std::wstring containing native encoding (Usually UCS2 on windows and UTF32 on Linux/Mac). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADY" }{}}{\fldrslt {\cs37\ul\cf2 SetMemory_management_functions}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 AllocationFunction}}}
 allocate, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 deAllocationFunction}}}
 deallocate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override default memory management functions. All subsequent allocations/deallocations will be performed via supplied functions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 AllocationFunction}}}
 PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 GetMemoryAllocationFunction}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current allocation funciton. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 deAllocationFunction}}}
 PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 GetMemoryDeallocationFunction}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current allocation funciton. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEV" }{}}{\fldrslt {\cs37\ul\cf2 GetOneTag}}}
 (std::istream &stream)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the first tag out of the Stream and returns it as a String. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEW" }{}}{\fldrslt {\cs37\ul\cf2 PreParseClassFromSingleTag}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &NameSpace, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &ClassName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &OneTag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a basic series of checks for extracting meaning from a single xml tag. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEB" }{}}{\fldrslt {\cs37\ul\cf2 ParseMinimal}}}
 = 0x0000\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimal parsing mode (equivalent to turning all other flags off). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 ParsePi}}}
 = 0x0001{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if processing instructions (NodePi) are added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAED" }{}}{\fldrslt {\cs37\ul\cf2 ParseComments}}}
 = 0x0002{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if comments (NodeComment) are added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEE" }{}}{\fldrslt {\cs37\ul\cf2 ParseCdata}}}
 = 0x0004{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if CDATA sections (NodeCdata) are added to the DOM tree. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEF" }{}}{\fldrslt {\cs37\ul\cf2 ParseWsPcdata}}}
 = 0x0008\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if plain character data (NodePcdata) that consist only of whitespace are added to the DOM tree. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 ParseEscapes}}}
 = 0x0010{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if character and entity references are expanded during parsing. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 ParseEol}}}
 = 0x0020{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if EOL characters are normalized (converted to xA) during parsing. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEI" }{}}{\fldrslt {\cs37\ul\cf2 ParseWconvAttribute}}}
 = 0x0040{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if attribute values are normalized using CDATA normalization rules during parsing. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEJ" }{}}{\fldrslt {\cs37\ul\cf2 ParseWnormAttribute}}}
 = 0x0080{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if attribute values are normalized using NMTOKENS normalization rules during parsing. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 ParseDeclaration}}}
 = 0x0100{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if document declaration (NodeDeclaration) is added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEL" }{}}{\fldrslt {\cs37\ul\cf2 ParseDocType}}}
 = 0x0200{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if document type declaration (NodeDoctype) is added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEE" }{}}{\fldrslt {\cs37\ul\cf2 ParseCdata}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 ParseEscapes}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEI" }{}}{\fldrslt {\cs37\ul\cf2 ParseWconvAttribute}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 ParseEol}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default parsing mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEN" }{}}{\fldrslt {\cs37\ul\cf2 ParseFull}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 ParsePi}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAED" }{}}{\fldrslt {\cs37\ul\cf2 ParseComments}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 ParseDeclaration}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEL" }{}}{\fldrslt {\cs37\ul\cf2 ParseDocType}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full parsing mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 FormatIndent}}}
 = 0x01{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indent the nodes that are written to output stream with as many indentation strings as deep the node is in DOM tree. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEP" }{}}{\fldrslt {\cs37\ul\cf2 FormatWriteBom}}}
 = 0x02{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write encoding-specific Byte Order Mark (BOM) to the output stream. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEQ" }{}}{\fldrslt {\cs37\ul\cf2 FormatRaw}}}
 = 0x04{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use raw output mode (no indentation and no line breaks are written). This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 FormatNoDeclaration}}}
 = 0x08{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Omit default XML declaration even if there is no declaration in the document. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 FormatIndent}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default set of formatting flags. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem resides, there are numerous class that are all tighlty integrated so one file seemed appropriate. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Our XML Parser IS a copy of PugiXML. It is simply the fastest, most stable, most reliable, feature rich, and robust XML parser we were aware of. We are using it with permission per it's included license. See the licenses folder, in either the docs folder, or the data/common folder. \par \par This XML parser uses an 'in place' design. It attmempts to load all of an XML document to one contiguous location in in memory, then create a tree of meta data that reference the already loaded document text. In testing this has been shown to be extremely fast. See pugixml.org for more details on the performace. \par \par The one drawback PugiXML had was that it has a completely different naming convention from our code. So we created a script ( docs/tools/PugiConversion) to covert version 1.1 and hopefully future versions to out naming convention. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v char_t\:phys::xml}
{\xe \v phys::xml\:char_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 Character}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::char_t}}}
}
}\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent a UTF8 code point, char, or wchar_t depending on how compiled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compatibility with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 phys::Character}}} is guaranteed. The exact type of this depends on depends on XML_WCHAR_MODE . \par
}{
Definition at line 168 of file xml.h.}\par
}
{\xe \v String\:phys::xml}
{\xe \v phys::xml\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::basic_string<XML_CHAR, std::char_traits<XML_CHAR>, std::allocator<XML_CHAR> > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::String}}}
}
}\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent a string of UTF8 code point, char, or wchar_t depending on how compiled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compatibility with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}} is guaranteed. The exact type of this depends on depends on XML_WCHAR_MODE . \par
}{
Definition at line 174 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Encoding\:phys::xml}
{\xe \v phys::xml\:Encoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Encoding}}}
}
}\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These flags determine the encoding of input data for an XML document. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v EncodingAuto\:phys::xml}
{\xe \v phys::xml\:EncodingAuto}
{\b {\i EncodingAuto{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auto-detect input document encoding using Byte Order Mark (BOM) or < / <? detection; use UTF8 if BOM is not found . \par
}{\xe \v EncodingUTF8\:phys::xml}
{\xe \v phys::xml\:EncodingUTF8}
{\b {\i EncodingUTF8{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UTF8 document encoding. \par
}{\xe \v EncodingUTF16LE\:phys::xml}
{\xe \v phys::xml\:EncodingUTF16LE}
{\b {\i EncodingUTF16LE{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Little-endian UTF16. \par
}{\xe \v EncodingUTF16BE\:phys::xml}
{\xe \v phys::xml\:EncodingUTF16BE}
{\b {\i EncodingUTF16BE{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big-endian UTF16. \par
}{\xe \v EncodingUTF16\:phys::xml}
{\xe \v phys::xml\:EncodingUTF16}
{\b {\i EncodingUTF16{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UTF16 with native endianness. \par
}{\xe \v EncodingUTF32LE\:phys::xml}
{\xe \v phys::xml\:EncodingUTF32LE}
{\b {\i EncodingUTF32LE{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Little-endian UTF32. \par
}{\xe \v EncodingUTF32BE\:phys::xml}
{\xe \v phys::xml\:EncodingUTF32BE}
{\b {\i EncodingUTF32BE{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big-endian UTF32. \par
}{\xe \v EncodingUTF32\:phys::xml}
{\xe \v phys::xml\:EncodingUTF32}
{\b {\i EncodingUTF32{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UTF32 with native endianness. \par
}{\xe \v Encodingwchar_t\:phys::xml}
{\xe \v phys::xml\:Encodingwchar_t}
{\b {\i Encodingwchar_t{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same document encoding wchar_t has (usually either UTF16 or UTF32). \par
}}
\par
{
Definition at line 246 of file xml.h.}\par
}
{\xe \v NodeType\:phys::xml}
{\xe \v phys::xml\:NodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeType}}}
}
}\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The types of nodes. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v NodeNull\:phys::xml}
{\xe \v phys::xml\:NodeNull}
{\b {\i NodeNull{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty (null) node handle. \par
}{\xe \v NodeDocument\:phys::xml}
{\xe \v phys::xml\:NodeDocument}
{\b {\i NodeDocument{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A document tree's absolute root. \par
}{\xe \v NodeElement\:phys::xml}
{\xe \v phys::xml\:NodeElement}
{\b {\i NodeElement{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element tag, i.e. '<node/>'. \par
}{\xe \v NodePcdata\:phys::xml}
{\xe \v phys::xml\:NodePcdata}
{\b {\i NodePcdata{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain character data, i.e. 'text'. \par
}{\xe \v NodeCdata\:phys::xml}
{\xe \v phys::xml\:NodeCdata}
{\b {\i NodeCdata{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character data, i.e. '<![CDATA[text]]>'. \par
}{\xe \v NodeComment\:phys::xml}
{\xe \v phys::xml\:NodeComment}
{\b {\i NodeComment{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comment tag, i.e. '<!-- text -->'. \par
}{\xe \v NodePi\:phys::xml}
{\xe \v phys::xml\:NodePi}
{\b {\i NodePi{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Processing instructions to the XML parser, i.e. '<?name?>'. \par
}{\xe \v NodeDeclaration\:phys::xml}
{\xe \v phys::xml\:NodeDeclaration}
{\b {\i NodeDeclaration{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} declaration, i.e. '<?xml version="1.0"?>'. \par
}{\xe \v NodeDocType\:phys::xml}
{\xe \v phys::xml\:NodeDocType}
{\b {\i NodeDocType{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} type declaration, i.e. '<!DOCTYPE doc>'. \par
}}
\par
{
Definition at line 185 of file xml.h.}\par
}
{\xe \v ParseStatus\:phys::xml}
{\xe \v phys::xml\:ParseStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseStatus}}}
}
}\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These statuses are used to help determine what issues, if any the parser had. the XML parser had. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v StatusOk\:phys::xml}
{\xe \v phys::xml\:StatusOk}
{\b {\i StatusOk{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is returned to indicated there where no issues parsing the XML document. \par
}{\xe \v StatusFileNotFound\:phys::xml}
{\xe \v phys::xml\:StatusFileNotFound}
{\b {\i StatusFileNotFound{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
File was not found during a loading from filename attempt. \par
}{\xe \v StatusIOError\:phys::xml}
{\xe \v phys::xml\:StatusIOError}
{\b {\i StatusIOError{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error reading from file or stream. \par
}{\xe \v StatusOutOfMemory\:phys::xml}
{\xe \v phys::xml\:StatusOutOfMemory}
{\b {\i StatusOutOfMemory{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Could not allocate memory. \par
}{\xe \v StatusInternalError\:phys::xml}
{\xe \v phys::xml\:StatusInternalError}
{\b {\i StatusInternalError{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An unkown error, currently nothing should be able to return this status. \par
}{\xe \v StatusUnrecognizedTag\:phys::xml}
{\xe \v phys::xml\:StatusUnrecognizedTag}
{\b {\i StatusUnrecognizedTag{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parser could not determine type of tag. \par
}{\xe \v StatusBadPi\:phys::xml}
{\xe \v phys::xml\:StatusBadPi}
{\b {\i StatusBadPi{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing document declaration/processing instruction. \par
}{\xe \v StatusBadComment\:phys::xml}
{\xe \v phys::xml\:StatusBadComment}
{\b {\i StatusBadComment{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing comment. \par
}{\xe \v StatusBadCdata\:phys::xml}
{\xe \v phys::xml\:StatusBadCdata}
{\b {\i StatusBadCdata{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing CDATA section. \par
}{\xe \v StatusBadDocType\:phys::xml}
{\xe \v phys::xml\:StatusBadDocType}
{\b {\i StatusBadDocType{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing document type declaration. \par
}{\xe \v StatusBadPcdata\:phys::xml}
{\xe \v phys::xml\:StatusBadPcdata}
{\b {\i StatusBadPcdata{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing PCDATA section. \par
}{\xe \v StatusBadStartElement\:phys::xml}
{\xe \v phys::xml\:StatusBadStartElement}
{\b {\i StatusBadStartElement{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing start element tag . \par
}{\xe \v StatusBadAttribute\:phys::xml}
{\xe \v phys::xml\:StatusBadAttribute}
{\b {\i StatusBadAttribute{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing element attribute. \par
}{\xe \v StatusBadEndElement\:phys::xml}
{\xe \v phys::xml\:StatusBadEndElement}
{\b {\i StatusBadEndElement{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing error occurred while parsing end element tag. \par
}{\xe \v StatusEndElementMismatch\:phys::xml}
{\xe \v phys::xml\:StatusEndElementMismatch}
{\b {\i StatusEndElementMismatch{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There was a mismatch of start-end tags (closing tag had incorrect name, some tag was not closed or there was an excessive closing tag). \par
}}
\par
{
Definition at line 943 of file xml.h.}\par
}
{\xe \v XPathValueType\:phys::xml}
{\xe \v phys::xml\:XPathValueType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathValueType}}}
}
}\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} return type. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XPathTypeNone\:phys::xml}
{\xe \v phys::xml\:XPathTypeNone}
{\b {\i XPathTypeNone{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Type (query failed to compile). \par
}{\xe \v XPathTypeNodeSet\:phys::xml}
{\xe \v phys::xml\:XPathTypeNodeSet}
{\b {\i XPathTypeNodeSet{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} set ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}). \par
}{\xe \v XPathTypeNumber\:phys::xml}
{\xe \v phys::xml\:XPathTypeNumber}
{\b {\i XPathTypeNumber{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number This corresponds to a double or Real. \par
}{\xe \v XPathTypeString\:phys::xml}
{\xe \v phys::xml\:XPathTypeString}
{\b {\i XPathTypeString{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Corresponds to the String type. \par
}{\xe \v XPathTypeBoolean\:phys::xml}
{\xe \v phys::xml\:XPathTypeBoolean}
{\b {\i XPathTypeBoolean{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Boolean value. \par
}}
\par
{
Definition at line 1105 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AsUtf8\:phys::xml}
{\xe \v phys::xml\:AsUtf8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AsUtf8 (const wchar_t * {\i str})}
}\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a c-style string of wchar_t to std::string containing UTF8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i str} The string to convert \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A std::basic_string<char, std::char_traits<char>, std::allocator<char> > containing the converted data \par
}\par}}}
{\xe \v AsUtf8\:phys::xml}
{\xe \v phys::xml\:AsUtf8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AsUtf8 (const std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > & {\i str})}
}\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a std::wstring to a UTF8 std::string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i str} The string to convert. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A std::basic_string<char, std::char_traits<char>, std::allocator<char> > containing the converted data \par
}\par}}}
{\xe \v AsWide\:phys::xml}
{\xe \v phys::xml\:AsWide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AsWide (const std::basic_string< char, std::char_traits< char >, std::allocator< char > > & {\i str})}
}\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a Convert a std::string to std::wstring containing native encoding (Usually UCS2 on windows and UTF32 on Linux/Mac). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i str} The string to convert. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > containing the converted data \par
}\par}}}
{\xe \v AsWide\:phys::xml}
{\xe \v phys::xml\:AsWide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AsWide (const char * {\i str})}
}\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a Convert a c-style string to std::wstring containing native encoding (Usually UCS2 on windows and UTF32 on Linux/Mac). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i str} The string to convert. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > containing the converted data \par
}\par}}}
{\xe \v GetMemoryAllocationFunction\:phys::xml}
{\xe \v phys::xml\:GetMemoryAllocationFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::GetMemoryAllocationFunction ()}
}\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current allocation funciton. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A function to the current allocation function \par
}\par}}}
{\xe \v GetMemoryDeallocationFunction\:phys::xml}
{\xe \v phys::xml\:GetMemoryDeallocationFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::GetMemoryDeallocationFunction ()}
}\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current allocation funciton. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A function to the current allocation function \par
}\par}}}
{\xe \v GetOneTag\:phys::xml}
{\xe \v phys::xml\:GetOneTag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::xml::GetOneTag (std::istream & {\i stream})}
}\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the first tag out of the Stream and returns it as a String. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} An std::ostream that contains atleast one xml tag \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This gets one XML tag, its closing tage, and all subtags. \par
}}}
{\xe \v PreParseClassFromSingleTag\:phys::xml}
{\xe \v phys::xml\:PreParseClassFromSingleTag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}}
* phys::xml::PreParseClassFromSingleTag (const String & {\i NameSpace}, const String & {\i ClassName}, const String & {\i OneTag})}
}\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a basic series of checks for extracting meaning from a single xml tag. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i NameSpace} Used when throwing exceptions, this is a string containing the namespace and colons of a class to be deserialized for example "phys::" \par
{\i ClassName} This will be used to identify the main xml element/tag you are attempting to deserialize. This will also be used in error messages. \par
{\i OneTag} One XML tag/elements worth of text to deserialize. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid An pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 xml::Document}}} that you are now the owner of and must delete, that has the data parse and ready to access. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw a phys::exception in the event that the xml cannot be parsed. \par
}
\par}}}
{\xe \v SetMemory_management_functions\:phys::xml}
{\xe \v phys::xml\:SetMemory_management_functions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::SetMemory_management_functions (AllocationFunction {\i allocate}, deAllocationFunction {\i deallocate})}
}\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override default memory management functions. All subsequent allocations/deallocations will be performed via supplied functions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i allocate} The new memory allocator \par
{\i deallocate} The new memory deallocator \par
}
\par}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v FormatDefault\:phys::xml}
{\xe \v phys::xml\:FormatDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::FormatDefault}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 FormatIndent}}}
}
}\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default set of formatting flags. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nodes are indented depending on their depth in DOM tree, a default declaration is output if document has none. \par
}{
Definition at line 275 of file xml.h.}\par
}
{\xe \v ParseDefault\:phys::xml}
{\xe \v phys::xml\:ParseDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseDefault}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEE" }{}}{\fldrslt {\cs37\ul\cf2 ParseCdata}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 ParseEscapes}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEI" }{}}{\fldrslt {\cs37\ul\cf2 ParseWconvAttribute}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 ParseEol}}}
}
}\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default parsing mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Elements, PCDATA and CDATA sections are added to the DOM tree, character/reference entities are expanded, End-of-Line characters are normalized, attribute values are normalized using CDATA normalization rules. \par
}{
Definition at line 238 of file xml.h.}\par
}
{\xe \v ParseFull\:phys::xml}
{\xe \v phys::xml\:ParseFull}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseFull}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 ParsePi}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAED" }{}}{\fldrslt {\cs37\ul\cf2 ParseComments}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 ParseDeclaration}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEL" }{}}{\fldrslt {\cs37\ul\cf2 ParseDocType}}}
}
}\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full parsing mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nodes of all types are added to the DOM tree, character/reference entities are expanded, End-of-Line characters are normalized, attribute values are normalized using CDATA normalization rules. \par
}{
Definition at line 243 of file xml.h.}\par
}
{\xe \v ParseMinimal\:phys::xml}
{\xe \v phys::xml\:ParseMinimal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseMinimal}}}
 = 0x0000}
}\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimal parsing mode (equivalent to turning all other flags off). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only elements and PCDATA sections are added to the DOM tree, no text conversions are performed. \par
}{
Definition at line 202 of file xml.h.}\par
}
{\xe \v ParseWsPcdata\:phys::xml}
{\xe \v phys::xml\:ParseWsPcdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseWsPcdata}}}
 = 0x0008}
}\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if plain character data (NodePcdata) that consist only of whitespace are added to the DOM tree. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag is off by default; turning it on usually results in slower parsing and more memory consumption. \par
}{
Definition at line 215 of file xml.h.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorBase Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorBase}
{\xe \v phys::ActorBase}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the actors inherit. }}\par
{
{\f2 #include <actorbase.h>}}\par
Inheritance diagram for phys::ActorBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d0f/classphys_1_1ActorBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 ActorTypeName}}}
 \{ {\b Actorbase}, 
{\b Actorragdoll}, 
{\b Actorrigid}, 
{\b Actorsoft}, 
{\b Actorterrain}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of Actor TypeNames. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of actor this class is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALY" }{}}{\fldrslt {\cs37\ul\cf2 GetShapeIsSaved}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this actors current shape has been saved or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALZ" }{}}{\fldrslt {\cs37\ul\cf2 IsInWorld}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not this object is currently in the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 SetBasicCollisionParams}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Friction, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Restitution)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the basic parameters for more realistic collision behavior. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 SetAnimation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &AnimationName, bool Loop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the animation for this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 EnableAnimation}}}
 (bool Enable)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the animation if one is set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 IsAnimated}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells whether this actor is animated or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 AdvanceAnimation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}
)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Advances the animation, making it animate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 RemoveSetAnimation}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unloads a loaded animation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 ActorGraphicsSettings}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 GetGraphicsSettings}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the graphics settings class associated with this actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMH" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorBase}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 file, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 group)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 SetInitLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting location of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 SetInitOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Orientation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting orientation of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 x, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 y, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Place)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMN" }{}}{\fldrslt {\cs37\ul\cf2 GetLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 SetOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 x, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 y, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 z, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 w)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 SetOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Rotation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 SetActorScaling}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 scale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMeshDynamic}}}
 (short unsigned int Accuracy, bool UseAllSubmeshes=false)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 AddObjectToWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 RemoveObjectFromWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 SetKinematic}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the state of the object to Kinematic. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 SetStatic}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the state of the object to Static. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 IsStaticOrKinematic}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks of the actor is static or kinematic. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 EnableCollisionResponse}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the actor to be able to collide with other objects in the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 DisableCollisionResponse}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the actor to be unable to collide with other objects in the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 CheckActivation}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the object is active in the simulation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual Ogre::Entity * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreObject}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal physics object this actor is based on. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 ActorSounds}}}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a collection of sounds for use with this actor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 SetOgreLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Place)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the graphical body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the graphical body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 SetOgreOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Rotation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the graphical body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 AttachToGraphics}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor visable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 DetachFromGraphics}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor invisable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 SetBulletLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the physics body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the physics body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 SetBulletOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Rotation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the physics body. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 GameWorld}}}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} the actor will reside. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::Entity * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsObject}}}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates the functionality of the Ogre::Entity using this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::SceneNode * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsNode}}}
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates the functionality of the Ogre::SceneNode using this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::AnimationState * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 Animation}}}
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates the functionality of the Ogre::AnimationState using this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

btCollisionShape * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 Shape}}}
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates the functionality of the btCollisionShape using this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

btCollisionObject * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANQ" }{}}{\fldrslt {\cs37\ul\cf2 CollisionObject}}}
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates the functionality of the btCollisionObject using this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

internal::PhysMotionState * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 MotionState}}}
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates the functionality of the PhysMotionState using this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 ActorGraphicsSettings}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class encapsulates graphics specific configuration for this actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 ActorTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 ActorType}}}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This variable stores the type of actor that this class is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANU" }{}}{\fldrslt {\cs37\ul\cf2 ShapeIsSaved}}}
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores whether or not the current physics shape has been saved in the manager. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b WorldNode}{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ActorContainerBase}{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b PhysicsManager}{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ResourceManager}{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the actors inherit. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actor classes store and manage all the relevant data regarding objects inside the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}. They serve as a binder between the physics and graphics for objects and have functions that allow the manipulation of objects loaded into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}. Currently there are 5 actor classes: {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 ActorRigid}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIO" }{}}{\fldrslt {\cs37\ul\cf2 ActorSoft}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 ActorTerrain}}}, ActorRagDoll. \par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} is a base class that serves as a template for the other four actor classes. \par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} should never be created, as it lacks the functionality needed for most objects. \par
}{
Definition at line 86 of file actorbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ActorTypeName\:phys::ActorBase}
{\xe \v phys::ActorBase\:ActorTypeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase::ActorTypeName}}}
}
}\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of Actor TypeNames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These will be returned by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase::GetType()}}}, and will allow code using this to determine what type of Actor class they are working with and use this information to more safely cast to the correct Actor if needed. \par
}{
Definition at line 99 of file actorbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~ActorBase\:phys::ActorBase}
{\xe \v phys::ActorBase\:~ActorBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorBase::~ActorBase (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 72 of file actorbase.cpp.}\par
}
{\xe \v ActorBase\:phys::ActorBase}
{\xe \v phys::ActorBase\:ActorBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorBase::ActorBase ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i file}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i group})}
}\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor contains the basic information needed to make an actor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the actor. \par
{\i file} The 3d mesh file that contains the 3d model the actor will use. \par
{\i group} The resource group where the 3d mesh and other related files can be found. \par
}
}{
Definition at line 57 of file actorbase.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddObjectToWorld\:phys::ActorBase}
{\xe \v phys::ActorBase\:AddObjectToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorBase::AddObjectToWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOB" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain}}}
.}\par
}
{\xe \v AdvanceAnimation\:phys::ActorBase}
{\xe \v phys::ActorBase\:AdvanceAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::AdvanceAnimation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Time}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Advances the animation, making it animate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You need to call this every frame while the actor is to be animated, otherwise even with the animation enabled you will see no change in the animation. \par
}{
Definition at line 247 of file actorbase.cpp.}\par
}
{\xe \v AttachToGraphics\:phys::ActorBase}
{\xe \v phys::ActorBase\:AttachToGraphics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::AttachToGraphics (){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor visable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to all the nessessary graphics elements to make it visable on screen. \par This is automaticly called by the PhysWorlds AddActor function and shouldn't ever need to be called manually. \par
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 178 of file actorbase.cpp.}\par
}
{\xe \v CheckActivation\:phys::ActorBase}
{\xe \v phys::ActorBase\:CheckActivation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ActorBase::CheckActivation (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the object is active in the simulation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the object is active, false if it's deactivated(at rest). \par
}}{
Definition at line 362 of file actorbase.cpp.}\par
}
{\xe \v CreateShapeFromMeshDynamic\:phys::ActorBase}
{\xe \v phys::ActorBase\:CreateShapeFromMeshDynamic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorBase::CreateShapeFromMeshDynamic (short unsigned int {\i Accuracy}, bool {\i UseAllSubmeshes} = {\f2 false}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will read the location of every verticy in the mesh file and use that to construct a triangle mesh shape and attach it to this objects collision shape. This shoiuld be used with only with Dynamic objects. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Accuracy} A short unsigned int, the higher the more accurate, but the more resource intensive. This is Actor dependent. \par
{\i UseAllSubmeshes} If true, this will use the geometry of all submeshes of the model to make the shape. Otherwise it'll only use the first submesh. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain}}}
.}\par
}
{\xe \v DetachFromGraphics\:phys::ActorBase}
{\xe \v phys::ActorBase\:DetachFromGraphics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::DetachFromGraphics (){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor invisable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the inverse of the AttachToGraphics function. This will effectively remove the object from the graphics world and make it no longer visable. \par This is automaticly called by the PhysWorlds RemoveActor function and shouldn't ever need to be called manually. \par
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 187 of file actorbase.cpp.}\par
}
{\xe \v DisableCollisionResponse\:phys::ActorBase}
{\xe \v phys::ActorBase\:DisableCollisionResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::DisableCollisionResponse (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the actor to be unable to collide with other objects in the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
By default collision response is enabled. Be sure to reactivate collision response if you want your objects to collide again. \par
}{
Definition at line 324 of file actorbase.cpp.}\par
}
{\xe \v EnableAnimation\:phys::ActorBase}
{\xe \v phys::ActorBase\:EnableAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::EnableAnimation (bool {\i Enable}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the animation if one is set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will enable the animation if passed true, making the object animate. If passed false will disable the animation. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Enable} True to enable the animation or false to disable the animation. \par
}
}{
Definition at line 229 of file actorbase.cpp.}\par
}
{\xe \v EnableCollisionResponse\:phys::ActorBase}
{\xe \v phys::ActorBase\:EnableCollisionResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::EnableCollisionResponse (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the actor to be able to collide with other objects in the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
By default collision response is enabled. Only call this function if you have disabled collision response. \par
}{
Definition at line 286 of file actorbase.cpp.}\par
}
{\xe \v GetBulletLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetBulletLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorBase::GetBulletLocation () const{\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the location of the object within the physics world. \par
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 110 of file actorbase.cpp.}\par
}
{\xe \v GetGraphicsSettings\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetGraphicsSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 ActorGraphicsSettings}}}
 * phys::ActorBase::GetGraphicsSettings (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the graphics settings class associated with this actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the graphics settings class in use by this actor. \par
}}{
Definition at line 264 of file actorbase.cpp.}\par
}
{\xe \v GetLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorBase::GetLocation () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the location of the object within the world. \par
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOH" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 144 of file actorbase.cpp.}\par
}
{\xe \v GetName\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::string phys::ActorBase::GetName () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the name of the object, \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOI" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain}}}
.}\par
}
{\xe \v GetOgreLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetOgreLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorBase::GetOgreLocation () const{\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the graphical body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the location of the object within the graphical world. This should always match the physics world. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} with the location of the graphics. \par
}}{
Definition at line 98 of file actorbase.cpp.}\par
}
{\xe \v GetOgreObject\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetOgreObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Entity * phys::ActorBase::GetOgreObject (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal physics object this actor is based on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the internal Bullet object. \par
}Gets the internal graphics object this actor is based on. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the internal graphics object. \par
}\par}}{
Definition at line 373 of file actorbase.cpp.}\par
}
{\xe \v GetShapeIsSaved\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetShapeIsSaved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool phys::ActorBase::GetShapeIsSaved (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this actors current shape has been saved or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will tell you if it's current physics shape has been saved for later use or not. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns whether or not the shape of this actor has been saved. \par
}}{
Definition at line 203 of file actorbase.cpp.}\par
}
{\xe \v GetType\:phys::ActorBase}
{\xe \v phys::ActorBase\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::ActorBase::GetType (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of actor this class is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the type of class that you are working with for checking and casting. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid ActorTypeName The type of actor that this is. \par
}}{
Definition at line 198 of file actorbase.cpp.}\par
}
{\xe \v IsAnimated\:phys::ActorBase}
{\xe \v phys::ActorBase\:IsAnimated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ActorBase::IsAnimated (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells whether this actor is animated or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return true if the actor has an animation set and it is enabled. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if an animation is set and enabled. \par
}}{
Definition at line 237 of file actorbase.cpp.}\par
}
{\xe \v IsInWorld\:phys::ActorBase}
{\xe \v phys::ActorBase\:IsInWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ActorBase::IsInWorld (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not this object is currently in the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating if this object has been added to the world. \par
}}{
Definition at line 208 of file actorbase.cpp.}\par
}
{\xe \v IsStaticOrKinematic\:phys::ActorBase}
{\xe \v phys::ActorBase\:IsStaticOrKinematic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ActorBase::IsStaticOrKinematic (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks of the actor is static or kinematic. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks of the actor is static or kinematic, returns true if it is either. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the actor is static or kinematic. \par
}}{
Definition at line 281 of file actorbase.cpp.}\par
}
{\xe \v RemoveObjectFromWorld\:phys::ActorBase}
{\xe \v phys::ActorBase\:RemoveObjectFromWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorBase::RemoveObjectFromWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOL" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorRigid}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOM" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAON" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain}}}
.}\par
}
{\xe \v RemoveSetAnimation\:phys::ActorBase}
{\xe \v phys::ActorBase\:RemoveSetAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::RemoveSetAnimation (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unloads a loaded animation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will remove the existing set animation. \par
}{
Definition at line 255 of file actorbase.cpp.}\par
}
{\xe \v SetActorScaling\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetActorScaling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetActorScaling ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i scale}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will alter the scaling/size of the actor with the given vector3. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scale} The vector3 by which to apply the scale. Will scale each axis' accordingly. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 192 of file actorbase.cpp.}\par
}
{\xe \v SetAnimation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetAnimation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i AnimationName}, bool {\i Loop}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the animation for this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the specified animation for this object stored in the mesh file, and will loop the animation if specified. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AnimationName} Name of the stored animation to be loaded. \par
{\i Loop} Whether or not you want the animation to loop. For example, you would want an idle animation to loop, but not a death animation. \par
}
}{
Definition at line 219 of file actorbase.cpp.}\par
}
{\xe \v SetBasicCollisionParams\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetBasicCollisionParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetBasicCollisionParams ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Friction}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Restitution}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the basic parameters for more realistic collision behavior. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the Friction and Resititution of the actor, which will enable it to collide and interact with other actors in a game world more realistically. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Friction} Should be self explanitory, higher values will resist sliding across surfaces. This number is the coefficient of friction. Range is from 0.0 to 2.0. Behavior in this regard is determined by the friction of both colliding bodies. \par Default: 0.5 \par
{\i Restitution} The coefficient of restitution determines how much energy is left after a collision with an object. Range is from 0.0 to 1.0. Behavior in this regard is determined by the restitution of both colliding bodies. \par Default: 0.0 \par
}
}{
Definition at line 213 of file actorbase.cpp.}\par
}
{\xe \v SetBulletLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetBulletLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetBulletLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will take a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} and set the location of the actor within the physics world. \par This function is called on by the SetLocation function, and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 104 of file actorbase.cpp.}\par
}
{\xe \v SetBulletOrientation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetBulletOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetBulletOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Rotation}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will take a PhysQuaternion and set the orientation of the actor within the physics world. \par This function is called on by the SetOrientation function, and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Rotation} The quaternion representing the rotation of the actor. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 124 of file actorbase.cpp.}\par
}
{\xe \v SetInitLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetInitLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetInitLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting location of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function after adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par This function will set where the actor will be located in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} when it is first placed inside the world. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 149 of file actorbase.cpp.}\par
}
{\xe \v SetInitOrientation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetInitOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetInitOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Orientation}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting orientation of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function after adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par This function will set where the actor is facing in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} when it is first placed inside the world. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Orientation} The PhysQuaternion representing the Orientation. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOS" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 158 of file actorbase.cpp.}\par
}
{\xe \v SetKinematic\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetKinematic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetKinematic (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the state of the object to Kinematic. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the object to a Kinematic Object. \par Kinematic Objects are like Static Objects but are also able to be moved directly by character controllers. \par
}{
Definition at line 271 of file actorbase.cpp.}\par
}
{\xe \v SetLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Place}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function prior to adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par In most situations you won't want to use this function, and instead produce movement through physics functions. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Place} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOT" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 138 of file actorbase.cpp.}\par
}
{\xe \v SetLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i x}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i y}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i z}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function prior to adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par In most situations you won't want to use this function, and instead produce movement through physics functions. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Location on the X vector. \par
{\i y} Location on the Y vector. \par
{\i z} Location on the Z vector. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 132 of file actorbase.cpp.}\par
}
{\xe \v SetOgreLocation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetOgreLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetOgreLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Place}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the graphical body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will take a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} and set the location of the actor within the graphical world. \par This function is called on by the SetLocation function, and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Place} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Definition at line 93 of file actorbase.cpp.}\par
}
{\xe \v SetOgreOrientation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetOgreOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetOgreOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Rotation}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the graphical body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will take a PhysQuaternion and set the orientation of the actor within the graphical world. \par This function is called on by the SetOrientation function, and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Rotation} The quaternion representing the rotation of the actor. \par
}
}{
Definition at line 119 of file actorbase.cpp.}\par
}
{\xe \v SetOrientation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Rotation}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor via a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Rotation} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} representing the Rotation. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 169 of file actorbase.cpp.}\par
}
{\xe \v SetOrientation\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i x}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i y}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i z}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i w}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor via {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} parameters. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Where the X vector is rotated about. \par
{\i y} Where the Y vector is rotated about. \par
{\i z} Where the Z vector is rotated about. \par
{\i w} How much to about the x, y, z. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOW" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorSoft}}}
.}\par
{
Definition at line 163 of file actorbase.cpp.}\par
}
{\xe \v SetStatic\:phys::ActorBase}
{\xe \v phys::ActorBase\:SetStatic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorBase::SetStatic (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the state of the object to Static. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the object to a Static Object. \par Static Objects don't move or have any force applied to them, but are cabable of exerting force on other objects. \par
}{
Definition at line 276 of file actorbase.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorbase.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorbase.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorContainerBase Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base class to unify the interface for different kinds of containers for holding actors. }}\par
{
{\f2 #include <actorcontainerbase.h>}}\par
Inheritance diagram for phys::ActorContainerBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d00/classphys_1_1ActorContainerBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerBase}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorContainerBase}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 AddActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *ActorToAdd)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will add an Actor to this container and the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 LastActorAdded}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides an easy way to access the last Actor added to this container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RemoveActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *ActorToRemove)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove an Actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RemoveActorAtCursor}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the current actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 GetActorCount}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns how many actors this stores. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 CursorToFirst}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the first item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 CursorToPrevious}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the previous item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 CursorToNext}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the next item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 CursorToLast}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the last item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 GetAtCursor}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the actor at the cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 GetFirst}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the first actor in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 GetLast}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the last actor in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 FindActor}}}
 (Ogre::SceneNode *GraphicsNode)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a graphics subsystem nodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 FindActor}}}
 (btCollisionObject *PhysicsObject)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a physics subsystem object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPN" }{}}{\fldrslt {\cs37\ul\cf2 FindActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Name)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor based on its name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 GetContainerType}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Which kind of container it this anyway. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPP" }{}}{\fldrslt {\cs37\ul\cf2 GetGameWorld}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this class is working with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPQ" }{}}{\fldrslt {\cs37\ul\cf2 SetGameWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *GameWorld_)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} that this Manager works with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPR" }{}}{\fldrslt {\cs37\ul\cf2 SetGameWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *GameWorld_, bool AddToWorld, bool RemoveFromWorld)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optionally move actors into or out of a physworld. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPU" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure Items requiring other Managers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPV" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main loop calls this once per frame. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::SceneNode * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPW" }{}}{\fldrslt {\cs37\ul\cf2 GetNode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *actor) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to work around the scenenode of an Actor being private, so all derived Containers can access it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
btCollisionObject * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPX" }{}}{\fldrslt {\cs37\ul\cf2 GetCollisionObject}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *actor) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to work around the collision object of an Actor being private, so all derived Containers can access it. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base class to unify the interface for different kinds of containers for holding actors. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Containers for actors must implement atleast this interface(abstract base class) to be usable with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} for tracking in game objects. There are several reasons why this will be useful. Our first thought was deriving from this and an STL container like vector or list. Members of this class should be implementing or inheriting a proper container\par\par The phys world will use one of these containers to store all of the actors for tracking purposes Since \par\par In theory you should be be able to work with multiple actor containers and swiftly add or remove them to ad from a world to quickly control what actors are being worked with. It should even be possible to remove all actors, or have multiple set of actor in the world if you use the GameWorldSet methods carefully. \par\par Additionally the is no reason an actor could be in multiple containers so this can provide even more options for actor sorting and categorization at runtime. \par\par Because of this classes representation of a cursor only 1 thread at a time should use the cursor movement functions. For the container that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} keeps it should be assume that the cursor is used. For other containers you should manage you container carefully and/or use another iteration method, such as STL iterators. \par
}{
Definition at line 76 of file actorcontainerbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActorContainerBase\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:ActorContainerBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorContainerBase::ActorContainerBase ()}
}\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This just assigned the passed pointer to ParentWorld \par
}{
Definition at line 49 of file actorcontainerbase.cpp.}\par
}
{\xe \v ~ActorContainerBase\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:~ActorContainerBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorContainerBase::~ActorContainerBase (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This really doesn't do anything, but if someone needs to overload it, it's here \par
}{
Definition at line 52 of file actorcontainerbase.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddActor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:AddActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerBase::AddActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i ActorToAdd}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will add an Actor to this container and the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will add an Actor to this container and the world, and handle the nitty gritty details of add this to physics subsystem and graphics subsystem. \par\par This will not add the Actor to any specific location in the ordering of the container. \par\par It is expected that any container implementing this method will take appropriate steps to insure That the actor involved is added to the Physics and graphics world. This method could be called from derived to accomplish that task {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ActorToAdd} This is a pointer to the actor to add. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPY" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
{
Definition at line 64 of file actorcontainerbase.cpp.}\par
}
{\xe \v CursorToFirst\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:CursorToFirst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::CursorToFirst (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the first item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the first item in the container change or return anything else. An exception will be throw if there are no valid items to move to with the cursor. There must be atleast one item to use any cursor moving functions. \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v CursorToLast\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:CursorToLast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::CursorToLast (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the last item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the last item in the container change or return anything else. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 CursorToFirst()}}} for more details. \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQA" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v CursorToNext\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:CursorToNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::CursorToNext (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the next item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 CursorToPrevious()}}} except if you start from the begin you'll work your way to the end. If you are at the end, you'll stay their if you call this again \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v CursorToPrevious\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:CursorToPrevious}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::CursorToPrevious (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the previous item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the previous item in the container, and if you started at the last item, you will visit every item in a properly implemented container, except for items that may have bee added during your traversal. It is also posible this could visit the same actor twice or more. When called from the first item this does nothing. An exception will be throw if there are no valid items to move to with the cursor. There must be atleast one item to use any cursor moving functions. \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQC" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v DoMainLoopItems\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::DoMainLoopItems (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main loop calls this once per frame. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where each manager is expected to put anything that needs to be run each iteration of the main loop \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQE" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v FindActor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:FindActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::FindActor (btCollisionObject * {\i PhysicsObject}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a physics subsystem object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will iterate through each Actor in the container until it finds one with a matching physics object. This runs in linear time. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} that has a physics object. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i PhysicsObject} This is a pointer to a physics object that the Actor you want to find will have. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQF" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v FindActor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:FindActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::FindActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Name}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor based on its name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} that has a matching name \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} This is the name of the Actor you want to find \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQG" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v FindActor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:FindActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::FindActor (Ogre::SceneNode * {\i GraphicsNode}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a graphics subsystem nodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} that has a matching node \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GraphicsNode} This is a pointer to a GraphicsNode that the Actor you want to find will have. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQH" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetActorCount\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetActorCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::ActorContainerBase::GetActorCount () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns how many actors this stores. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a Whole number with the count of actors \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQI" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetAtCursor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetAtCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::GetAtCursor () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the actor at the cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the actor at the cursor, and will not move the cursor. If the cursor has not be set to a location, any valid actor in the container could be returned. Will throw an exception when attempting to get from an empty container. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetCollisionObject\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetCollisionObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btCollisionObject * phys::ActorContainerBase::GetCollisionObject ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i actor}) const{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to work around the collision object of an Actor being private, so all derived Containers can access it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 58 of file actorcontainerbase.cpp.}\par
}
{\xe \v GetContainerType\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetContainerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::ActorContainerBase::GetContainerType () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Which kind of container it this anyway. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Since this interface could be used with any type of containers and innumerable 3rd party container implemention this can be used to more safely cast this container to a more specific type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}} \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetFirst\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetFirst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::GetFirst () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the first actor in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This and the actor the cursor points at after {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 CursorToFirst()}}} should match. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. Will throw an exception when attempting to get from an empty container. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQL" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetGameWorld\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
* phys::ActorContainerBase::GetGameWorld () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this class is working with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the gameworld that this container registers it's objects with. If this is not set, then this does not Register it's actors with any world. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}* \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQM" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQN" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetLast\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetLast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::GetLast () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the last actor in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This and the actor the cursor points at after {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 CursorToLast()}}} should match. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. Will throw an exception when attempting to get from an empty container. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v GetNode\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::SceneNode * phys::ActorContainerBase::GetNode ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i actor}) const{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to work around the scenenode of an Actor being private, so all derived Containers can access it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 55 of file actorcontainerbase.cpp.}\par
}
{\xe \v GetType\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::ActorContainerBase::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::ActorContainerBase \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 61 of file actorcontainerbase.cpp.}\par
}
{\xe \v Initialize\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::Initialize (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure Items requiring other Managers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If you are using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} this is called when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::World::GameInit()}}} is called. It is expected that by the time this is called either ManagerBase::ManagerBase(World*) or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQQ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::SetGameWorld(World*)}}} will have been called. This is where all configuration that requires atleast one other manager on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} to exist.\par\par Yes we know it is spelled wrong, but are Zs cooler anyway. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v LastActorAdded\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:LastActorAdded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
* phys::ActorContainerBase::LastActorAdded (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides an easy way to access the last Actor added to this container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For many containers this will simply return a pointer to the last actorl \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQT" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v RemoveActor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:RemoveActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerBase::RemoveActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i ActorToRemove}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove an Actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove all references of the actor pointed from the container. Will throw an exception when attempting to remove and no match could be found. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will cause issues if used with a container attached to a valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. Use World::RemoveActor instead. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
{
Definition at line 69 of file actorcontainerbase.cpp.}\par
}
{\xe \v RemoveActorAtCursor\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:RemoveActorAtCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::RemoveActorAtCursor (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the current actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes the actor the cursor at. Will throw an exception when attempting to remove from an empty container. Where the cursor goes is implementation dependent. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will cause issues if used with a container attached to a valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. Use World::RemoveActor instead. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v SetGameWorld\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:SetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::SetGameWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i GameWorld_}, bool {\i AddToWorld}, bool {\i RemoveFromWorld}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optionally move actors into or out of a physworld. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GameWorld_} The new GameWorldPointer, or 0 to set none \par
{\i AddToWorld} True to add AddActors if valid world pointer was supplied, false to not add \par
{\i RemoveFromWorld} True to remove AddActors if valid world pointer was supplied, false to not remove \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQW" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\xe \v SetGameWorld\:phys::ActorContainerBase}
{\xe \v phys::ActorContainerBase\:SetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ActorContainerBase::SetGameWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i GameWorld_}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} that this Manager works with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the are any actors in the world, this removes them from both the physics and graphics subsystem, and adds them to the new world as is appropriate. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GameWorld_} The new GameWorldPointer, or 0 to set none \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQX" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorcontainerbase.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorcontainerbase.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorContainerVector Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Actor Container using a vector. }}\par
{
{\f2 #include <actorcontainervector.h>}}\par
Inheritance diagram for phys::ActorContainerVector:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d64/classphys_1_1ActorContainerVector.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerVector}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorContainerVector}}}
 (){\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPY" }{}}{\fldrslt {\cs37\ul\cf2 AddActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *ActorToAdd)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will add an Actor to this container and the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQT" }{}}{\fldrslt {\cs37\ul\cf2 LastActorAdded}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides an easy way to access the last Actor added to this container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQU" }{}}{\fldrslt {\cs37\ul\cf2 RemoveActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *ActorToRemove)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove an Actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 RemoveActorAtCursor}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the current actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQI" }{}}{\fldrslt {\cs37\ul\cf2 GetActorCount}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns how many actors this stores. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 CursorToFirst}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the first item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQC" }{}}{\fldrslt {\cs37\ul\cf2 CursorToPrevious}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the previous item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 CursorToNext}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the next item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQA" }{}}{\fldrslt {\cs37\ul\cf2 CursorToLast}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the last item in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQJ" }{}}{\fldrslt {\cs37\ul\cf2 GetAtCursor}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the actor at the cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQL" }{}}{\fldrslt {\cs37\ul\cf2 GetFirst}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the first actor in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQO" }{}}{\fldrslt {\cs37\ul\cf2 GetLast}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the last actor in the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQK" }{}}{\fldrslt {\cs37\ul\cf2 GetContainerType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Which kind of container it this anyway. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQN" }{}}{\fldrslt {\cs37\ul\cf2 GetGameWorld}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this class is working with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQH" }{}}{\fldrslt {\cs37\ul\cf2 FindActor}}}
 (Ogre::SceneNode *GraphicsNode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a graphics subsystem nodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQF" }{}}{\fldrslt {\cs37\ul\cf2 FindActor}}}
 (btCollisionObject *PhysicsObject)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a physics subsystem object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQG" }{}}{\fldrslt {\cs37\ul\cf2 FindActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor based on its name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQX" }{}}{\fldrslt {\cs37\ul\cf2 SetGameWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *GameWorld_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This safely move all the Actors out of or into a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQW" }{}}{\fldrslt {\cs37\ul\cf2 SetGameWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *GameWorld_, bool AddToWorld, bool RemoveFromWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optionally move actors into or out of a physworld. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initilizor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQE" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * >::iterator {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 cursor}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about the cursor. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Actor Container using a vector. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This inherits from std::vector and our {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}} to allow us to have access to a container through a standardized structure this way the phys::world doesn't need to worry about the details when accessing and storing actors \par
}{
Definition at line 64 of file actorcontainervector.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActorContainerVector\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:ActorContainerVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorContainerVector::ActorContainerVector ()}
}\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates and empty usable container based on std::vector. \par
}{
Definition at line 45 of file actorcontainervector.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddActor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:AddActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::AddActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i ActorToAdd}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will add an Actor to this container and the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will add an Actor to this container and the world, and handle the nitty gritty details of add this to physics subsystem and graphics subsystem. \par\par This will not add the Actor to any specific location in the ordering of the container. \par\par It is expected that any container implementing this method will take appropriate steps to insure That the actor involved is added to the Physics and graphics world. This method could be called from derived to accomplish that task {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ActorToAdd} This is a pointer to the actor to add. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 55 of file actorcontainervector.cpp.}\par
}
{\xe \v CursorToFirst\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:CursorToFirst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::CursorToFirst (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the first item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the first item in the container change or return anything else. An exception will be throw if there are no valid items to move to with the cursor. There must be atleast one item to use any cursor moving functions. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 84 of file actorcontainervector.cpp.}\par
}
{\xe \v CursorToLast\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:CursorToLast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::CursorToLast (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the last item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the last item in the container change or return anything else. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 CursorToFirst()}}} for more details. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 110 of file actorcontainervector.cpp.}\par
}
{\xe \v CursorToNext\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:CursorToNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::CursorToNext (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the next item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQC" }{}}{\fldrslt {\cs37\ul\cf2 CursorToPrevious()}}} except if you start from the begin you'll work your way to the end. If you are at the end, you'll stay their if you call this again \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 101 of file actorcontainervector.cpp.}\par
}
{\xe \v CursorToPrevious\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:CursorToPrevious}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::CursorToPrevious (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the previous item in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This moves the cursor to the previous item in the container, and if you started at the last item, you will visit every item in a properly implemented container, except for items that may have bee added during your traversal. It is also posible this could visit the same actor twice or more. When called from the first item this does nothing. An exception will be throw if there are no valid items to move to with the cursor. There must be atleast one item to use any cursor moving functions. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 92 of file actorcontainervector.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class implements this for the sake of entension and compatibility this function does nothing \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 197 of file actorcontainervector.cpp.}\par
}
{\xe \v FindActor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:FindActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::FindActor (btCollisionObject * {\i PhysicsObject}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a physics subsystem object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will iterate through each Actor in the container until it finds one with a matching physics object. This runs in linear time. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} that has a physics object. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i PhysicsObject} This is a pointer to a physics object that the Actor you want to find will have. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 135 of file actorcontainervector.cpp.}\par
}
{\xe \v FindActor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:FindActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::FindActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor based on its name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will iterate through each Actor in the container until it finds one with a matching Name. This runs in linear time. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} that has a matching name. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} This is the name of the Actor you want to find. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 157 of file actorcontainervector.cpp.}\par
}
{\xe \v FindActor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:FindActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::FindActor (Ogre::SceneNode * {\i GraphicsNode}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds an actor by searching for a graphics subsystem nodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will iterate through each Actor in the container until it finds one with a matching Node. This runs in linear time. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}} that has a matching node. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GraphicsNode} This is a pointer to a GraphicsNode that the Actor you want to find will have. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 146 of file actorcontainervector.cpp.}\par
}
{\xe \v GetActorCount\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:GetActorCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::ActorContainerVector::GetActorCount () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns how many actors this stores. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a Whole number with the count of actors \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 81 of file actorcontainervector.cpp.}\par
}
{\xe \v GetAtCursor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:GetAtCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::GetAtCursor () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the actor at the cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the actor at the cursor, and will not move the cursor. If the cursor has not be set to a location, any valid actor in the container could be returned. Will throw an exception when attempting to get from an empty container. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 118 of file actorcontainervector.cpp.}\par
}
{\xe \v GetContainerType\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:GetContainerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::ActorContainerVector::GetContainerType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Which kind of container it this anyway. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Since this interface could be used with any type of containers and innumerable 3rd party container implemention this can be used to more safely cast this container to a more specific type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 phys::String}}} \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 132 of file actorcontainervector.cpp.}\par
}
{\xe \v GetFirst\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:GetFirst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::GetFirst () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the first actor in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This and the actor the cursor points at after {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 CursorToFirst()}}} should match. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. Will throw an exception when attempting to get from an empty container. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 126 of file actorcontainervector.cpp.}\par
}
{\xe \v GetGameWorld\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:GetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * phys::ActorContainerVector::GetGameWorld () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this class is working with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the gameworld that this container registers it's objects with. If this is not set, then this does not Register it's actors with any world. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}* \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 171 of file actorcontainervector.cpp.}\par
}
{\xe \v GetLast\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:GetLast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::GetLast () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the last actor in the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This and the actor the cursor points at after {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQA" }{}}{\fldrslt {\cs37\ul\cf2 CursorToLast()}}} should match. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. Will throw an exception when attempting to get from an empty container. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 129 of file actorcontainervector.cpp.}\par
}
{\xe \v Initialize\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initilizor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class implements this for the sake of entension and compatibility this function does nothing \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 194 of file actorcontainervector.cpp.}\par
}
{\xe \v LastActorAdded\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:LastActorAdded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * phys::ActorContainerVector::LastActorAdded (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides an easy way to access the last Actor added to this container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For many containers this will simply return a pointer to the last actorl \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 62 of file actorcontainervector.cpp.}\par
}
{\xe \v RemoveActor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:RemoveActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::RemoveActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i ActorToRemove}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove an Actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove all references of the actor pointed from the container. Will throw an exception when attempting to remove and no match could be found. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will cause issues if used with a container attached to a valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. Use World::RemoveActor instead. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 65 of file actorcontainervector.cpp.}\par
}
{\xe \v RemoveActorAtCursor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:RemoveActorAtCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::RemoveActorAtCursor (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the current actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes the actor the cursor at. Will throw an exception when attempting to remove from an empty container. Where the cursor goes is implementation dependent. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will cause issues if used with a container attached to a valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. Use World::RemoveActor instead. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 78 of file actorcontainervector.cpp.}\par
}
{\xe \v SetGameWorld\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:SetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::SetGameWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i GameWorld_}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This safely move all the Actors out of or into a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Removes all scene nodes from the Ogre the graphics subsystem, and removes all bodies from the physics system if a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} is present. Then this sets up all actors with the new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} unless it is NULL {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GameWorld_} This is a pointer to the new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} to work with. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 174 of file actorcontainervector.cpp.}\par
}
{\xe \v SetGameWorld\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:SetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorContainerVector::SetGameWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i GameWorld_}, bool {\i AddToWorld}, bool {\i RemoveFromWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optionally move actors into or out of a physworld. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GameWorld_} This is a pointer to the new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} to work with. \par
{\i AddToWorld} True to add AddActors if valid world pointer was supplied, false to not add \par
{\i RemoveFromWorld} True to remove AddActors if valid world pointer was supplied, false to not remove \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
.}\par
{
Definition at line 177 of file actorcontainervector.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cursor\:phys::ActorContainerVector}
{\xe \v phys::ActorContainerVector\:cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
*>::iterator {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector::cursor}}}
}
}\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about the cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerBase}}} will use this, and only this to access the cursor so feel free to use this instead. \par
}{
Definition at line 123 of file actorcontainervector.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorcontainervector.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorcontainervector.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorGraphicsSettings Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for configuring graphics settings of an actor. }}\par
{
{\f2 #include <actorgraphicssettings.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 ActorGraphicsSettings}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, Ogre::Entity *GraphicsObject)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorGraphicsSettings}}}
 (){\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 SetMaterial}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 MatName, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the material of the specified submesh. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 GetMaterialName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the material name of the specified submesh. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARF" }{}}{\fldrslt {\cs37\ul\cf2 HasMaterialSet}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not the specified submesh has a material script assigned to it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 GetNumSubmeshes}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of submeshes in the mesh of the graphics ohject. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARH" }{}}{\fldrslt {\cs37\ul\cf2 SetMaterialAmbient}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Ambient, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Ambient colour value of the material belonging to the specified submesh. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARI" }{}}{\fldrslt {\cs37\ul\cf2 SetMaterialSpecular}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Specular, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Specular colour value of the material belonging to the specified submesh. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 SetMaterialDiffuse}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Diffuse, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Diffuse colour value of the material belonging to the specified submesh. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::MaterialPtr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARK" }{}}{\fldrslt {\cs37\ul\cf2 GetMaterial}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Submesh=0){\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Material/textures for the actor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Entity * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARL" }{}}{\fldrslt {\cs37\ul\cf2 ActorEnt}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store meta data for actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARM" }{}}{\fldrslt {\cs37\ul\cf2 Parent}}}
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Actor this bleongs to. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for configuring graphics settings of an actor. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains functions for the configuring of graphics specific settings of an actor. This class can only configure the actors graphics. For configuring actor physics, see ActorPhysicsSettings. \par
}{
Definition at line 62 of file actorgraphicssettings.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActorGraphicsSettings\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:ActorGraphicsSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorGraphicsSettings::ActorGraphicsSettings ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, Ogre::Entity * {\i GraphicsObject})}
}\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Actor} The actor this settings class configures. \par
{\i GraphicsObject} The graphics object belonging to the actor this class configures. \par
}
}{
Definition at line 50 of file actorgraphicssettings.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetMaterialName\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:GetMaterialName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::ActorGraphicsSettings::GetMaterialName ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Submesh} = {\f2 0})}
}\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the material name of the specified submesh. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Note the returned name isn't of the .material file, but the material script. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Submesh} The submesh you want to get the material name from. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a String containing the name of the material script in use. \par
}}{
Definition at line 70 of file actorgraphicssettings.cpp.}\par
}
{\xe \v GetNumSubmeshes\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:GetNumSubmeshes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::ActorGraphicsSettings::GetNumSubmeshes ()}
}\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of submeshes in the mesh of the graphics ohject. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a whole representing the number of submeshes in this objects mesh. \par
}}{
Definition at line 80 of file actorgraphicssettings.cpp.}\par
}
{\xe \v HasMaterialSet\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:HasMaterialSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ActorGraphicsSettings::HasMaterialSet ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Submesh} = {\f2 0})}
}\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not the specified submesh has a material script assigned to it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Submesh} The submesh to check. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether there is a material assigned to the specified submesh. \par
}}{
Definition at line 75 of file actorgraphicssettings.cpp.}\par
}
{\xe \v SetMaterial\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:SetMaterial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorGraphicsSettings::SetMaterial ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i MatName}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Submesh} = {\f2 0})}
}\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the material of the specified submesh. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The name of the material isn't the same as the name of the .material file. As a single material file can contain several material scripts. The name this function expects is the name of the material script inside a .material file. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MatName} The name of the material to be applied. \par
{\i Submesh} The submesh to apply the material to. \par
}
}{
Definition at line 65 of file actorgraphicssettings.cpp.}\par
}
{\xe \v SetMaterialAmbient\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:SetMaterialAmbient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorGraphicsSettings::SetMaterialAmbient (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Ambient}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Submesh} = {\f2 0})}
}\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Ambient colour value of the material belonging to the specified submesh. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The set value is applied to every technique of every pass in the material. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Ambient} The colour you wish to set as the material Ambient. \par
{\i Submesh} The submesh you want to alter the material of. \par
}
}{
Definition at line 85 of file actorgraphicssettings.cpp.}\par
}
{\xe \v SetMaterialDiffuse\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:SetMaterialDiffuse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorGraphicsSettings::SetMaterialDiffuse (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Diffuse}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Submesh} = {\f2 0})}
}\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Diffuse colour value of the material belonging to the specified submesh. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The set value is applied to every technique of every pass in the material. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Diffuse} The colour you wish to set as the material Diffuse. \par
{\i Submesh} The submesh you want to alter the material of. \par
}
}{
Definition at line 95 of file actorgraphicssettings.cpp.}\par
}
{\xe \v SetMaterialSpecular\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:SetMaterialSpecular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorGraphicsSettings::SetMaterialSpecular (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Specular}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Submesh} = {\f2 0})}
}\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Specular colour value of the material belonging to the specified submesh. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The set value is applied to every technique of every pass in the material. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Specular} The colour you wish to set as the material Specular. \par
{\i Submesh} The submesh you want to alter the material of. \par
}
}{
Definition at line 90 of file actorgraphicssettings.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ActorEnt\:phys::ActorGraphicsSettings}
{\xe \v phys::ActorGraphicsSettings\:ActorEnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Entity* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARL" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorGraphicsSettings::ActorEnt}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store meta data for actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 67 of file actorgraphicssettings.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorgraphicssettings.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorgraphicssettings.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorRigid Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorRigid}
{\xe \v phys::ActorRigid}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Rigid Objects. }}\par
{
{\f2 #include <actorbase.h>}}\par
Inheritance diagram for phys::ActorRigid:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d71/classphys_1_1ActorRigid.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARN" }{}}{\fldrslt {\cs37\ul\cf2 ActorRigid}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 mass, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 file, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 group)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARO" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorRigid}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMeshDynamic}}}
 (short unsigned int Accuracy=1, bool UseAllSubmeshes=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARP" }{}}{\fldrslt {\cs37\ul\cf2 CreateSphereShapeFromMesh}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere collision shape. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMeshStatic}}}
 (bool UseAllSubmeshes=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARQ" }{}}{\fldrslt {\cs37\ul\cf2 SetDamping}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 LinDamping, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 AngDamping)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Damping for this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARR" }{}}{\fldrslt {\cs37\ul\cf2 SetLinearVelocity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 LinVel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Linear Velocity of this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARS" }{}}{\fldrslt {\cs37\ul\cf2 GetLinearVelocity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Linear Velocity of this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAART" }{}}{\fldrslt {\cs37\ul\cf2 SetAngularVelocity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 AngVel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Angular Velocity of this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARU" }{}}{\fldrslt {\cs37\ul\cf2 GetAngularVelocity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Angular Velocity of this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARV" }{}}{\fldrslt {\cs37\ul\cf2 SetIndividualGravity}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Gravity)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity for only this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARW" }{}}{\fldrslt {\cs37\ul\cf2 GetIndividualGravity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gravity being applied to this object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOI" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARX" }{}}{\fldrslt {\cs37\ul\cf2 LimitMovementOnAxis}}}
 (bool x, bool y, bool z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restricts movement on the axis or axies of your choice. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARY" }{}}{\fldrslt {\cs37\ul\cf2 DisableDeactivation}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the deactivation of the physics body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARZ" }{}}{\fldrslt {\cs37\ul\cf2 RestoreActivation}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restores the activation state of the physics body to normal. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 AddObjectToWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOL" }{}}{\fldrslt {\cs37\ul\cf2 RemoveObjectFromWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual btRigidBody * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASA" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletObject}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Physics data raw from the physic subsystem. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASB" }{}}{\fldrslt {\cs37\ul\cf2 CreateRigidObject}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 pmass)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rigid object for the actor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

btRigidBody * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASC" }{}}{\fldrslt {\cs37\ul\cf2 physrigidbody}}}
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to simulate the behavior of a btRigidBody. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b TypedConstraint}{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Rigid Objects. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class should be used to make any rigid object that can be moved as a result of force. Most objects will fall into this catagory. A few examples of a Rigid Object: Boxes, Car Frames, Chairs, etc. For Semi Rigid bodies that are deformable, like jello, it is better to use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIO" }{}}{\fldrslt {\cs37\ul\cf2 ActorSoft}}}. \par
}{
Definition at line 63 of file actorrigid.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActorRigid\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:ActorRigid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorRigid::ActorRigid ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i mass}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i file}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i group})}
}\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor contains the basic information needed to make a Rigid Object. \par This class inherits from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mass} The mass the object will have in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}. \par
{\i name} The name of the actor. \par
{\i file} The 3d mesh file that contains the 3d model the actor will use. \par
{\i group} The resource group where the 3d mesh and other related files can be found. \par
}
}{
Definition at line 56 of file actorrigid.cpp.}\par
}
{\xe \v ~ActorRigid\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:~ActorRigid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorRigid::~ActorRigid (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 65 of file actorrigid.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddObjectToWorld\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:AddObjectToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::AddObjectToWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 86 of file actorrigid.cpp.}\par
}
{\xe \v CreateRigidObject\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:CreateRigidObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::CreateRigidObject ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i pmass}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rigid object for the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rigid object to be placed in the physics world later. \par This is automaticly called by the Constructor and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pmass} "Real Mass" The mass of the object. \par
}
}{
Definition at line 71 of file actorrigid.cpp.}\par
}
{\xe \v CreateShapeFromMeshDynamic\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:CreateShapeFromMeshDynamic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::CreateShapeFromMeshDynamic (short unsigned int {\i Accuracy} = {\f2 1}, bool {\i UseAllSubmeshes} = {\f2 false}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will read the location of every verticy in the mesh file and use that to construct a triangle mesh shape and attach it to this objects collision shape. This shoiuld be used with only with Dynamic objects. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Accuracy} A value from 1 to 4. The higher the more accurate, but the more resource intensive \par
{\i UseAllSubmeshes} Should Child meshes, if any, be used when approximating physics shapes \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000001" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Check for thread safety \par}
\par
}
}}\par
{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 98 of file actorrigid.cpp.}\par
}
{\xe \v CreateShapeFromMeshStatic\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:CreateShapeFromMeshStatic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::CreateShapeFromMeshStatic (bool {\i UseAllSubmeshes} = {\f2 false}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will read the location of every verticy in the mesh file and use that to construct a triangle mesh shape and attach it to this objects collision shape. This shoiuld be used with only with Static objects. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i UseAllSubmeshes} If true, this will use the geometry of all submeshes of the model to make the shape. Otherwise it'll only use the first submesh. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000002" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Check for thread safety \par}
\par
}
}}\par
{
Definition at line 231 of file actorrigid.cpp.}\par
}
{\xe \v CreateSphereShapeFromMesh\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:CreateSphereShapeFromMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::CreateSphereShapeFromMesh (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere collision shape. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Will dynamically create a sphere collision shape from the loaded mesh file. \par
}{
Definition at line 201 of file actorrigid.cpp.}\par
}
{\xe \v DisableDeactivation\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:DisableDeactivation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::DisableDeactivation (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the deactivation of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is useful when using constraints to prevent it from locking in situations where it shouldn't. \par
}{
Definition at line 296 of file actorrigid.cpp.}\par
}
{\xe \v GetAngularVelocity\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:GetAngularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorRigid::GetAngularVelocity (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Angular Velocity of this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the currently set Angular Velocity of this object. \par
}}{
Definition at line 279 of file actorrigid.cpp.}\par
}
{\xe \v GetBulletObject\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:GetBulletObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btRigidBody * phys::ActorRigid::GetBulletObject (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Physics data raw from the physic subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Currently this returns a pointer to a btRigidBody. \par
}\par}}{
Definition at line 307 of file actorrigid.cpp.}\par
}
{\xe \v GetIndividualGravity\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:GetIndividualGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorRigid::GetIndividualGravity (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gravity being applied to this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the gravity applied to this object, which may or may not be the same as the world gravity. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the gravity currently being applied to this object. \par
}}{
Definition at line 290 of file actorrigid.cpp.}\par
}
{\xe \v GetLinearVelocity\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:GetLinearVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorRigid::GetLinearVelocity (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Linear Velocity of this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the currently set Linear Velocity of this object. \par
}}{
Definition at line 268 of file actorrigid.cpp.}\par
}
{\xe \v GetName\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string phys::ActorRigid::GetName () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the name of the object, \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 246 of file actorrigid.cpp.}\par
}
{\xe \v LimitMovementOnAxis\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:LimitMovementOnAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::LimitMovementOnAxis (bool {\i x}, bool {\i y}, bool {\i z}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restricts movement on the axis or axies of your choice. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will lock any and all axies you define you want to be locked. Simply pass true to allow movement on that axis, false if you don't. This function is primarily useful for 2D games, in which if you are viewing the playing area from the side you can pass in LimitMovementOnAxis(true,true,false) and the object will only be able to move up, down, or side to side, but not in or out. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Allow or Disallow use of the X axis for movement. \par
{\i y} Allow or Disallow use of the Y axis for movement. \par
{\i z} Allow or Disallow use of the Z axis for movement. \par
}
}{
Definition at line 251 of file actorrigid.cpp.}\par
}
{\xe \v RemoveObjectFromWorld\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:RemoveObjectFromWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::RemoveObjectFromWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 92 of file actorrigid.cpp.}\par
}
{\xe \v RestoreActivation\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:RestoreActivation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::RestoreActivation (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restores the activation state of the physics body to normal. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is useful when you are done applying a constraint to a body, or any other effect that would have you call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARY" }{}}{\fldrslt {\cs37\ul\cf2 DisableDeactivation()}}}. \par
}{
Definition at line 301 of file actorrigid.cpp.}\par
}
{\xe \v SetAngularVelocity\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:SetAngularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::SetAngularVelocity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i AngVel}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Angular Velocity of this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AngVel} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the Angular Velocity to be set. \par
}
}{
Definition at line 274 of file actorrigid.cpp.}\par
}
{\xe \v SetDamping\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:SetDamping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::SetDamping ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i LinDamping}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i AngDamping}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Damping for this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Both of Linear Damping and Angular Damping default to zero. This is usful if you wish to simulate something like air resistance. Values can range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i LinDamping} Real representing the amount of Linear Damping to be applied. \par
{\i AngDamping} Real representing the amount of Angular Damping to be applied. \par
}
}{
Definition at line 258 of file actorrigid.cpp.}\par
}
{\xe \v SetIndividualGravity\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:SetIndividualGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::SetIndividualGravity (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Gravity}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity for only this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This value will override the world gravity. Should be called after adding to the world. When the object is added to the world the world gravity is applied to it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Gravity} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the direction and strength of gravity to be applied. \par
}
}{
Definition at line 285 of file actorrigid.cpp.}\par
}
{\xe \v SetLinearVelocity\:phys::ActorRigid}
{\xe \v phys::ActorRigid\:SetLinearVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorRigid::SetLinearVelocity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i LinVel}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Linear Velocity of this object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i LinVel} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the Linear Velocity to be set. \par
}
}{
Definition at line 263 of file actorrigid.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorrigid.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorrigid.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorSoft Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorSoft}
{\xe \v phys::ActorSoft}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Soft Objects. }}\par
{
{\f2 #include <actorsoft.h>}}\par
Inheritance diagram for phys::ActorSoft:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d23/classphys_1_1ActorSoft.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASE" }{}}{\fldrslt {\cs37\ul\cf2 ActorSoft}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 mass, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 file, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 group)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASF" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorSoft}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 UpdateSoftBody}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the rendering info with physics info. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOJ" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOO" }{}}{\fldrslt {\cs37\ul\cf2 SetActorScaling}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 scale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 SetInitLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting location of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOS" }{}}{\fldrslt {\cs37\ul\cf2 SetInitOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Orientation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting orientation of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOU" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 x, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 y, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOT" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Place)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOH" }{}}{\fldrslt {\cs37\ul\cf2 GetLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOW" }{}}{\fldrslt {\cs37\ul\cf2 SetOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 x, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 y, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 z, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 w)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 SetOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Rotation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOD" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMeshDynamic}}}
 (short unsigned int Accuracy, bool UseAllSubmeshes=false){\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited from Actorbase. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 AddObjectToWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOM" }{}}{\fldrslt {\cs37\ul\cf2 RemoveObjectFromWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual btSoftBody * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASH" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletObject}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Physics data raw from the physic subsystem. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASI" }{}}{\fldrslt {\cs37\ul\cf2 CreateSoftObject}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 mass)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a soft object for the actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASJ" }{}}{\fldrslt {\cs37\ul\cf2 CreateManualMesh}}}
 (internal::MeshInfo &TheMesh)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates and configures a manual object for rendering. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 AttachToGraphics}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor visable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 DetachFromGraphics}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor invisable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOP" }{}}{\fldrslt {\cs37\ul\cf2 SetBulletLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the physics body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the physics body. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOQ" }{}}{\fldrslt {\cs37\ul\cf2 SetBulletOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Rotation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the physics body. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

btSoftBody * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASK" }{}}{\fldrslt {\cs37\ul\cf2 physsoftbody}}}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to simulate the functionality of a btSoftBody for use with the physics subsystem. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the actor class for Soft Objects. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class should be used to make any soft object that, like {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 ActorRigid}}}, can be moved or manipulated as a result of force. Examples of soft objects are: Paper, Rope, and Cloth. Semi Rigid bodies that are still somewhat deformable, like Jello, should be made as a soft object. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Currently this is not fully implemented and will likely cause errors if used. \par
}}{
Definition at line 78 of file actorsoft.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActorSoft\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:ActorSoft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorSoft::ActorSoft ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i mass}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i file}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i group})}
}\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mass} The mass of the soft body. \par
{\i name} Name of the object \par
{\i file} Mesh the soft body is stored in \par
{\i group} The Resource group the mesh can be found in. \par
}
}{
Definition at line 59 of file actorsoft.cpp.}\par
}
{\xe \v ~ActorSoft\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:~ActorSoft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorSoft::~ActorSoft (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 66 of file actorsoft.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddObjectToWorld\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:AddObjectToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::AddObjectToWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 251 of file actorsoft.cpp.}\par
}
{\xe \v AttachToGraphics\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:AttachToGraphics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::AttachToGraphics (){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor visable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to all the nessessary graphics elements to make it visable on screen. \par This is automaticly called by the PhysWorlds AddActor function and shouldn't ever need to be called manually. \par
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 125 of file actorsoft.cpp.}\par
}
{\xe \v CreateManualMesh\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:CreateManualMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::CreateManualMesh (internal::MeshInfo & {\i TheMesh}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates and configures a manual object for rendering. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will create and configure an Ogre manual object based on the mesh provided, that will be updateable each frame. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TheMesh} The struct with all the appropriate mesh information to base the manual object on. \par
}
}{
Definition at line 102 of file actorsoft.cpp.}\par
}
{\xe \v CreateSoftObject\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:CreateSoftObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::CreateSoftObject ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i mass}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a soft object for the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a soft object to be placed in the physics world later. \par This is automatically called by the Constructor and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mass} The desired total mass of the soft object. \par
}
}{
Definition at line 71 of file actorsoft.cpp.}\par
}
{\xe \v DetachFromGraphics\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:DetachFromGraphics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::DetachFromGraphics (){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes the actor invisable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the inverse of the AttachToGraphics function. This will effectively remove the object from the graphics world and make it no longer visable. \par This is automaticly called by the PhysWorlds RemoveActor function and shouldn't ever need to be called manually. \par
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 138 of file actorsoft.cpp.}\par
}
{\xe \v GetBulletLocation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:GetBulletLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorSoft::GetBulletLocation () const{\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the location of the object within the physics world. \par
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 149 of file actorsoft.cpp.}\par
}
{\xe \v GetBulletObject\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:GetBulletObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btSoftBody * phys::ActorSoft::GetBulletObject (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Physics data raw from the physic subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Currently this returns a pointer to a btSoftBody. \par
}\par}}{
Definition at line 263 of file actorsoft.cpp.}\par
}
{\xe \v GetLocation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:GetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::ActorSoft::GetLocation () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the location of the object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the location of the object within the world. \par
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMN" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 230 of file actorsoft.cpp.}\par
}
{\xe \v GetName\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string phys::ActorSoft::GetName () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the name of the object, \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 192 of file actorsoft.cpp.}\par
}
{\xe \v RemoveObjectFromWorld\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:RemoveObjectFromWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::RemoveObjectFromWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 257 of file actorsoft.cpp.}\par
}
{\xe \v SetActorScaling\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetActorScaling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetActorScaling ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i scale}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will alter the scaling/size of the actor with the given vector3. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scale} The vector3 by which to apply the scale. Will scale each axis' accordingly. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 197 of file actorsoft.cpp.}\par
}
{\xe \v SetBulletLocation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetBulletLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetBulletLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will take a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} and set the location of the actor within the physics world. \par This function is called on by the SetLocation function, and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 143 of file actorsoft.cpp.}\par
}
{\xe \v SetBulletOrientation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetBulletOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetBulletOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Rotation}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the physics body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will take a PhysQuaternion and set the orientation of the actor within the physics world. \par This function is called on by the SetOrientation function, and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Rotation} The quaternion representing the rotation of the actor. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 156 of file actorsoft.cpp.}\par
}
{\xe \v SetInitLocation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetInitLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetInitLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting location of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function after adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par This function will set where the actor will be located in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} when it is first placed inside the world. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 203 of file actorsoft.cpp.}\par
}
{\xe \v SetInitOrientation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetInitOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetInitOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Orientation}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the starting orientation of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function after adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par This function will set where the actor is facing in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} when it is first placed inside the world. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Orientation} The PhysQuaternion representing the Orientation. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 212 of file actorsoft.cpp.}\par
}
{\xe \v SetLocation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Place}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function prior to adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par In most situations you won't want to use this function, and instead produce movement through physics functions. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Place} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the location. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 224 of file actorsoft.cpp.}\par
}
{\xe \v SetLocation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i x}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i y}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i z}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually sets the location of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calling this function prior to adding it to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} will have no effect. \par In most situations you won't want to use this function, and instead produce movement through physics functions. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Location on the X vector. \par
{\i y} Location on the Y vector. \par
{\i z} Location on the Z vector. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 218 of file actorsoft.cpp.}\par
}
{\xe \v SetOrientation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i x}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i y}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i z}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i w}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor via {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} parameters. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Where the X vector is rotated about. \par
{\i y} Where the Y vector is rotated about. \par
{\i z} Where the Z vector is rotated about. \par
{\i w} How much to about the x, y, z. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 235 of file actorsoft.cpp.}\par
}
{\xe \v SetOrientation\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:SetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::SetOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Rotation}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the actor via a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Rotation} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} representing the Rotation. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 241 of file actorsoft.cpp.}\par
}
{\xe \v UpdateSoftBody\:phys::ActorSoft}
{\xe \v phys::ActorSoft\:UpdateSoftBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorSoft::UpdateSoftBody ()}
}\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the rendering info with physics info. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function needs to be called every frame, otherwise your soft bodies won't appear to move. \par
}{
Definition at line 165 of file actorsoft.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorsoft.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorsoft.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ActorTerrain Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ActorTerrain}
{\xe \v phys::ActorTerrain}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is actor class for terrain. }}\par
{
{\f2 #include <actorterrain.h>}}\par
Inheritance diagram for phys::ActorTerrain:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d74/classphys_1_1ActorTerrain.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASL" }{}}{\fldrslt {\cs37\ul\cf2 ActorTerrain}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 InitPosition, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 file, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 group)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASM" }{}}{\fldrslt {\cs37\ul\cf2 ~ActorTerrain}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFI" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMeshStatic}}}
 (bool UseAllSubmeshes=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMeshDynamic}}}
 (short unsigned int Accuracy, bool UseAllSubmeshes=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compatability function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOK" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOB" }{}}{\fldrslt {\cs37\ul\cf2 AddObjectToWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAON" }{}}{\fldrslt {\cs37\ul\cf2 RemoveObjectFromWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *TargetWorld)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual btRigidBody * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASN" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletObject}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Physics data raw from the physic subsystem. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASO" }{}}{\fldrslt {\cs37\ul\cf2 CreateCollisionTerrain}}}
 (){\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses value already passed into this to create the physics shapes. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
btRigidBody * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASP" }{}}{\fldrslt {\cs37\ul\cf2 RigidBody}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physics data. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is actor class for terrain. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is intended to be used for terrain. This class uses sub-classes with fewer features, but still more then enough features for static terrain. This helps reduce the memory footprint of the class as well as processing speed. \par
}{
Definition at line 58 of file actorterrain.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActorTerrain\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:ActorTerrain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorTerrain::ActorTerrain ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i InitPosition}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i file}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i group})}
}\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InitPosition} The location for this terrain. \par
{\i name} The name of the actor. \par
{\i file} The 3d mesh file that contains the 3d model the actor will use. \par
{\i group} The resource group where the 3d mesh and other related files can be found. \par
}
}{
Definition at line 56 of file actorterrain.cpp.}\par
}
{\xe \v ~ActorTerrain\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:~ActorTerrain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ActorTerrain::~ActorTerrain ()}
}\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 65 of file actorterrain.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddObjectToWorld\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:AddObjectToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorTerrain::AddObjectToWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the actor to the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 106 of file actorterrain.cpp.}\par
}
{\xe \v CreateShapeFromMeshDynamic\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:CreateShapeFromMeshDynamic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorTerrain::CreateShapeFromMeshDynamic (short unsigned int {\i Accuracy}, bool {\i UseAllSubmeshes} = {\f2 false}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compatability function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does nothing, as this class isn't dynamic. This is simply here to allow the engine to compile. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 97 of file actorterrain.cpp.}\par
}
{\xe \v CreateShapeFromMeshStatic\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:CreateShapeFromMeshStatic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorTerrain::CreateShapeFromMeshStatic (bool {\i UseAllSubmeshes} = {\f2 false})}
}\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a collision shape from mesh file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will read the location of every verticy in the mesh file and use that to construct a triangle mesh shape and attach it to this objects collision shape. This shoiuld be used with only with Static objects. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i UseAllSubmeshes} If true, this will use the geometry of all submeshes of the model to make the shape. Otherwise it'll only use the first submesh. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000003" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Check for thread safety \par}
\par
}
}}\par
{
Definition at line 82 of file actorterrain.cpp.}\par
}
{\xe \v GetBulletObject\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:GetBulletObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btRigidBody * phys::ActorTerrain::GetBulletObject (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Physics data raw from the physic subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Currently this returns a pointer to a btSoftBody. \par
}\par}}{
Definition at line 120 of file actorterrain.cpp.}\par
}
{\xe \v GetName\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string phys::ActorTerrain::GetName () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the name of the object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the name of the object, \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 101 of file actorterrain.cpp.}\par
}
{\xe \v RemoveObjectFromWorld\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:RemoveObjectFromWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ActorTerrain::RemoveObjectFromWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i TargetWorld}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the actor from the physics world. \par This is automatically called by the phys::Actors::AddActor function and Doesn't neet to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetWorld} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} class. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorBase}}}
.}\par
{
Definition at line 113 of file actorterrain.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v RigidBody\:phys::ActorTerrain}
{\xe \v phys::ActorTerrain\:RigidBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btRigidBody* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorTerrain::RigidBody}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physics data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 62 of file actorterrain.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorterrain.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
actorterrain.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::AreaEffect Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::AreaEffect}
{\xe \v phys::AreaEffect}
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to define area's in the world that have unique effects. }}\par
{
{\f2 #include <areaeffect.h>}}\par
Inheritance diagram for phys::AreaEffect:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d55/classphys_1_1AreaEffect.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASR" }{}}{\fldrslt {\cs37\ul\cf2 ~AreaEffect}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASS" }{}}{\fldrslt {\cs37\ul\cf2 ApplyEffect}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines and applies the effect of the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAST" }{}}{\fldrslt {\cs37\ul\cf2 UpdateActorList}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the actors listed as within the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASU" }{}}{\fldrslt {\cs37\ul\cf2 CreateSphereShape}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Radius)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Sphere shape for the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASV" }{}}{\fldrslt {\cs37\ul\cf2 CreateCylinderShapeX}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 HalfExtents)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Cylinder shape for the field that is alligned on the X axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASW" }{}}{\fldrslt {\cs37\ul\cf2 CreateCylinderShapeY}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 HalfExtents)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Cylinder shape for the field that is alligned on the Y axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASX" }{}}{\fldrslt {\cs37\ul\cf2 CreateCylinderShapeZ}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 HalfExtents)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Cylinder shape for the field that is alligned on the Z axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASY" }{}}{\fldrslt {\cs37\ul\cf2 CreateBoxShape}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 HalfExtents)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Box shape for the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASZ" }{}}{\fldrslt {\cs37\ul\cf2 CreateShapeFromMesh}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Filename, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Group, bool MakeVisible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a shape from a .mesh model for the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATA" }{}}{\fldrslt {\cs37\ul\cf2 ScaleFieldShape}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Scale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale of the shape of the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATB" }{}}{\fldrslt {\cs37\ul\cf2 GetFieldShapeScale}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scale of the shape of the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATC" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the origin for the area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATD" }{}}{\fldrslt {\cs37\ul\cf2 GetLocation}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the origin for the area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATE" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Area Effects name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect::AEShapeType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATG" }{}}{\fldrslt {\cs37\ul\cf2 GetShapeType}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current shape type in use by this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATH" }{}}{\fldrslt {\cs37\ul\cf2 CreateGraphicsSphere}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Rings=16, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Segments=16)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere mesh based on the physics shape for this area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATI" }{}}{\fldrslt {\cs37\ul\cf2 CreateGraphicsSphere}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MaterialName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Rings=16, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Segments=16)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere mesh based on the physics shape for this area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATJ" }{}}{\fldrslt {\cs37\ul\cf2 CreateGraphicsCylinder}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cylinder mesh based on the physics shape for this area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATK" }{}}{\fldrslt {\cs37\ul\cf2 CreateGraphicsCylinder}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MaterialName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cylinder mesh based on the physics shape for this area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATL" }{}}{\fldrslt {\cs37\ul\cf2 CreateGraphicsBox}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a box mesh based on the physics shape for this area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 CreateGraphicsBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MaterialName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a box mesh based on the physics shape for this area effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATM" }{}}{\fldrslt {\cs37\ul\cf2 GetOverlappingActors}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of actors within this field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATN" }{}}{\fldrslt {\cs37\ul\cf2 GetAddedActors}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of actors that have been added to the list since the last simulation step. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATO" }{}}{\fldrslt {\cs37\ul\cf2 GetRemovedActors}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of actors that have been removed from the list since the last simulation step. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 AEShapeType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATP" }{}}{\fldrslt {\cs37\ul\cf2 AE_Sphere}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATQ" }{}}{\fldrslt {\cs37\ul\cf2 AE_CylinderX}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATR" }{}}{\fldrslt {\cs37\ul\cf2 AE_CylinderY}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATS" }{}}{\fldrslt {\cs37\ul\cf2 AE_CylinderZ}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATT" }{}}{\fldrslt {\cs37\ul\cf2 AE_Box}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATU" }{}}{\fldrslt {\cs37\ul\cf2 AE_Custom}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATV" }{}}{\fldrslt {\cs37\ul\cf2 AE_Unassigned}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The kinds of shapes and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} can take. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATW" }{}}{\fldrslt {\cs37\ul\cf2 CreateGhostObject}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor Function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual Ogre::MaterialPtr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 CreateColouredMaterial}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour){\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a basic material in code using the provided colour. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATY" }{}}{\fldrslt {\cs37\ul\cf2 PreGraphicsMeshCreate}}}
 (){\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convenience function for the common starting steps in making a graphics object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATZ" }{}}{\fldrslt {\cs37\ul\cf2 PostGraphicsMeshCreate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &GroupName){\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convenience function for the common final steps in making a graphics object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 AddActorToList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor){\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper function for adding actors to relevant lists. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RemoveActorFromList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor){\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper function for adding actors to relevant lists. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 Name}}}
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The name of the Area Effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 AEShapeType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 ShapeType}}}
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of physics shape in use by this AE field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

btCollisionShape * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUE" }{}}{\fldrslt {\cs37\ul\cf2 Shape}}}
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the shape of the AE field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

btPairCachingGhostObject * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUF" }{}}{\fldrslt {\cs37\ul\cf2 Ghost}}}
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The object representing the AE field itself. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::SceneNode * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUG" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsNode}}}
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre node required to adding a graohical representation to the scene graph. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::Entity * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsObject}}}
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Ogre object being added to the scene graph. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUI" }{}}{\fldrslt {\cs37\ul\cf2 TheWorld}}}
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} pointer simply to enable the effects of this class to be as diverse as the engine features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 OverlappingActors}}}
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for actors within the field area. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUK" }{}}{\fldrslt {\cs37\ul\cf2 AddedActors}}}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container of actors that have been added since last frame. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUL" }{}}{\fldrslt {\cs37\ul\cf2 RemovedActors}}}
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container of actors that have been removed since last frame. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b PhysicsManager}{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to define area's in the world that have unique effects. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common uses for this class are for gravity fields, and explosions. But can be made to do more. \par Note: This is a base class intended to be derived from. This class cannot be created itself. To make an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class that does what you want it to, simple inherit from this class with an AE class of your own, and define the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASS" }{}}{\fldrslt {\cs37\ul\cf2 ApplyEffect()}}} function to do what you want your effect to do. \par
}{
Definition at line 73 of file areaeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AEShapeType\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AEShapeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 phys::AreaEffect::AEShapeType}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The kinds of shapes and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} can take. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v AE_Sphere\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_Sphere}
{\b {\i AE_Sphere{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v AE_CylinderX\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_CylinderX}
{\b {\i AE_CylinderX{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v AE_CylinderY\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_CylinderY}
{\b {\i AE_CylinderY{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v AE_CylinderZ\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_CylinderZ}
{\b {\i AE_CylinderZ{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v AE_Box\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_Box}
{\b {\i AE_Box{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v AE_Custom\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_Custom}
{\b {\i AE_Custom{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v AE_Unassigned\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AE_Unassigned}
{\b {\i AE_Unassigned{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}}
\par
{
Definition at line 78 of file areaeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AreaEffect\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:AreaEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::AreaEffect::AreaEffect (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic initialization constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the field. \par
{\i Location} The location of the AE field. \par
}
}{
Definition at line 51 of file areaeffect.cpp.}\par
}
{\xe \v ~AreaEffect\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:~AreaEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::AreaEffect::~AreaEffect (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. \par
}{
Definition at line 62 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyEffect\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:ApplyEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::AreaEffect::ApplyEffect (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines and applies the effect of the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When inheriting this class, this function is what defines the effect the field has. \par This function will be called on by the physics manager and shouldn't be called manually. \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUN" }{}}{\fldrslt {\cs37\ul\cf2 phys::TestAE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUO" }{}}{\fldrslt {\cs37\ul\cf2 phys::GravityField}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 phys::GravityWell}}}
.}\par
}
{\xe \v CreateBoxShape\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateBoxShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateBoxShape (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i HalfExtents})}
}\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Box shape for the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When making the vector to be passed in, remember to pass in only half values of what you want the actual size to be. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i HalfExtents} The vector representing the size of the shape. \par
}
}{
Definition at line 234 of file areaeffect.cpp.}\par
}
{\xe \v CreateCylinderShapeX\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateCylinderShapeX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateCylinderShapeX (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i HalfExtents})}
}\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Cylinder shape for the field that is alligned on the X axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When making the vector to be passed in, remember the layout should be as such: (width*0.5, radius, radius), with the second radius perpendicular to the first. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i HalfExtents} The vector representing the size of the shape. \par
}
}{
Definition at line 213 of file areaeffect.cpp.}\par
}
{\xe \v CreateCylinderShapeY\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateCylinderShapeY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateCylinderShapeY (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i HalfExtents})}
}\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Cylinder shape for the field that is alligned on the Y axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When making the vector to be passed in, remember the layout should be as such: (radius, height*0.5, radius), with the second radius perpendicular to the first. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i HalfExtents} The vector representing the size of the shape. \par
}
}{
Definition at line 220 of file areaeffect.cpp.}\par
}
{\xe \v CreateCylinderShapeZ\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateCylinderShapeZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateCylinderShapeZ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i HalfExtents})}
}\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Cylinder shape for the field that is alligned on the Z axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When making the vector to be passed in, remember the layout should be as such: (radius, radius, length*0.5), with the second radius perpendicular to the first. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i HalfExtents} The vector representing the size of the shape. \par
}
}{
Definition at line 227 of file areaeffect.cpp.}\par
}
{\xe \v CreateGhostObject\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGhostObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGhostObject (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor Function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The location of the AE field. \par
}
}{
Definition at line 69 of file areaeffect.cpp.}\par
}
{\xe \v CreateGraphicsBox\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGraphicsBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGraphicsBox (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a box mesh based on the physics shape for this area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will create a material script on the fly for you to use with your AR field. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} The colour to put into the custom created material script. This will be the final colour of the graphics object. \par
}
}{
Definition at line 424 of file areaeffect.cpp.}\par
}
{\xe \v CreateGraphicsBox\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGraphicsBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGraphicsBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MaterialName}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a box mesh based on the physics shape for this area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MaterialName} The name of the material script to be applied to the graphics object that is created. Must be valid. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000004" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The HalfExtents returned here includes scaling, should account for that so weird scaling sync issues don't occur. \par
}
}}\par
{
Definition at line 435 of file areaeffect.cpp.}\par
}
{\xe \v CreateGraphicsCylinder\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGraphicsCylinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGraphicsCylinder (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cylinder mesh based on the physics shape for this area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will create a material script on the fly for you to use with your AR field. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} The colour to put into the custom created material script. This will be the final colour of the graphics object. \par
}
}{
Definition at line 385 of file areaeffect.cpp.}\par
}
{\xe \v CreateGraphicsCylinder\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGraphicsCylinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGraphicsCylinder ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MaterialName}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cylinder mesh based on the physics shape for this area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MaterialName} The name of the material script to be applied to the graphics object that is created. Must be valid. \par
}
}{
Definition at line 396 of file areaeffect.cpp.}\par
}
{\xe \v CreateGraphicsSphere\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGraphicsSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGraphicsSphere (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Rings} = {\f2 16}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Segments} = {\f2 16}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere mesh based on the physics shape for this area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will create a material script on the fly for you to use with your AR field. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} The colour to put into the custom created material script. This will be the final colour of the graphics object. \par
{\i Rings} The number of horizontal rings the sphere is to be comprised of. This along with the segments parameter controls the overall resolution of the sphere. Less then 16 is not recommended. \par
{\i Segments} The number of vertical rings the sphere is to be comprised of. This along with the rings parameter controls the overall resolution of the sphere. Less then 16 is not recommended. \par
}
}{
Definition at line 359 of file areaeffect.cpp.}\par
}
{\xe \v CreateGraphicsSphere\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateGraphicsSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateGraphicsSphere ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MaterialName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Rings} = {\f2 16}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Segments} = {\f2 16}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere mesh based on the physics shape for this area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MaterialName} The name of the material script to be applied to the graphics object that is created. Must be valid. \par
{\i Rings} The number of horizontal rings the sphere is to be comprised of. This along with the segments parameter controls the overall resolution of the sphere. Less then 16 is not recommended. \par
{\i Segments} The number of vertical rings the sphere is to be comprised of. This along with the rings parameter controls the overall resolution of the sphere. Less then 16 is not recommended. \par
}
}{
Definition at line 370 of file areaeffect.cpp.}\par
}
{\xe \v CreateShapeFromMesh\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateShapeFromMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateShapeFromMesh ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Filename}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Group}, bool {\i MakeVisible})}
}\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a shape from a .mesh model for the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Filename} The name of the .mesh file to be used. \par
{\i Group} The resource group where the mesh can be found. \par
{\i MakeVisible} If true, this function will create a visual representation from the same mesh provided. \par
}
}{
Definition at line 241 of file areaeffect.cpp.}\par
}
{\xe \v CreateSphereShape\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:CreateSphereShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::CreateSphereShape (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Radius})}
}\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Sphere shape for the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Radius} The radius of the sphere you want to create. \par
}
}{
Definition at line 206 of file areaeffect.cpp.}\par
}
{\xe \v GetAddedActors\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetAddedActors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > & phys::AreaEffect::GetAddedActors ()}
}\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of actors that have been added to the list since the last simulation step. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the vector storing all the actors that have been added to the list since the last simulation step. \par
}}{
Definition at line 456 of file areaeffect.cpp.}\par
}
{\xe \v GetFieldShapeScale\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetFieldShapeScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::AreaEffect::GetFieldShapeScale ()}
}\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scale of the shape of the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default scale is 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current scale applied to the fields shape. \par
}}{
Definition at line 330 of file areaeffect.cpp.}\par
}
{\xe \v GetLocation\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::AreaEffect::GetLocation ()}
}\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the origin for the area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is particularly useful when making fields such as gravity wells, that have continuous effects centering on one location. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the vector3 representing the location of the area effect. \par
}}{
Definition at line 343 of file areaeffect.cpp.}\par
}
{\xe \v GetName\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::AreaEffect::GetName ()}
}\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Area Effects name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the name of the Area Effect. \par
}}{
Definition at line 349 of file areaeffect.cpp.}\par
}
{\xe \v GetOverlappingActors\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetOverlappingActors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > & phys::AreaEffect::GetOverlappingActors ()}
}\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of actors within this field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the list of actors contained within this field. \par
}}{
Definition at line 451 of file areaeffect.cpp.}\par
}
{\xe \v GetRemovedActors\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetRemovedActors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * > & phys::AreaEffect::GetRemovedActors ()}
}\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of actors that have been removed from the list since the last simulation step. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the vector storing all the actors that have been removed from the list since the last simulation step. \par
}}{
Definition at line 461 of file areaeffect.cpp.}\par
}
{\xe \v GetShapeType\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:GetShapeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect::AEShapeType}}}
 phys::AreaEffect::GetShapeType ()}
}\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current shape type in use by this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing the type of shape being used by this class. \par
}}{
Definition at line 354 of file areaeffect.cpp.}\par
}
{\xe \v ScaleFieldShape\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:ScaleFieldShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::ScaleFieldShape (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Scale})}
}\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale of the shape of the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default scale is 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Scale} The vector3 representing the scale you wish to apply to each axis of the field shape. \par
}
}{
Definition at line 325 of file areaeffect.cpp.}\par
}
{\xe \v SetLocation\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::SetLocation (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the origin for the area effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In most cases you won't want to call this, with the exception of when you want a field to follow/track an actor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The updated location of the origin for the field. \par
}
}{
Definition at line 336 of file areaeffect.cpp.}\par
}
{\xe \v UpdateActorList\:phys::AreaEffect}
{\xe \v phys::AreaEffect\:UpdateActorList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::AreaEffect::UpdateActorList (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the actors listed as within the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is automatically called once every simulation step. This shouldn't be called manually unless your usage of this class requires more then one update per step. \par
}{
Definition at line 140 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Attachable Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Attachable}
{\xe \v phys::Attachable}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is just a base class to be used by elements that are attachable to worldnodes. }}\par
{
{\f2 #include <attachable.h>}}\par
Inheritance diagram for phys::Attachable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dbd/classphys_1_1Attachable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 AttachableElement}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 None}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVQ" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVR" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVS" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 =  3
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of possible types of this that could be attached to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVT" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
 (){\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No initialization class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVU" }{}}{\fldrslt {\cs37\ul\cf2 ~Attachable}}}
 (){\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 Attachable::AttachableElement}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVV" }{}}{\fldrslt {\cs37\ul\cf2 GetElementType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of element this is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVW" }{}}{\fldrslt {\cs37\ul\cf2 GetAttachedTo}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} this thinks it is attached to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVX" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const =0{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of the attachable element. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVY" }{}}{\fldrslt {\cs37\ul\cf2 SetElementType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 Attachable::AttachableElement}}}
 Type)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of element this class is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVZ" }{}}{\fldrslt {\cs37\ul\cf2 SetAttachedTo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 *NextWorldNode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This changes the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} that this thinks it is attached to. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 Attachable::AttachableElement}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWA" }{}}{\fldrslt {\cs37\ul\cf2 ElementType}}}
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum value representing the type of element this is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWB" }{}}{\fldrslt {\cs37\ul\cf2 AttachedTo}}}
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} this is attached to or null if not attached. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b WorldNode}{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is just a base class to be used by elements that are attachable to worldnodes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is useless on it's own and should not be created manually. \par
}{
Definition at line 58 of file attachable.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AttachableElement\:phys::Attachable}
{\xe \v phys::Attachable\:AttachableElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 phys::Attachable::AttachableElement}}}
}
}\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of possible types of this that could be attached to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v None\:phys::Attachable}
{\xe \v phys::Attachable\:None}
{\b {\i None{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is no-type of object, only used in error conditions. \par
}{\xe \v Camera\:phys::Attachable}
{\xe \v phys::Attachable\:Camera}
{\b {\i Camera{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 phys::Camera}}}. \par
}{\xe \v Light\:phys::Attachable}
{\xe \v phys::Attachable\:Light}
{\b {\i Light{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 phys::Light}}}. \par
}{\xe \v ParticleEffect\:phys::Attachable}
{\xe \v phys::Attachable\:ParticleEffect}
{\b {\i ParticleEffect{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 phys::ParticleEffect}}}. \par
}}
\par
{
Definition at line 64 of file attachable.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetAttachedTo\:phys::Attachable}
{\xe \v phys::Attachable\:GetAttachedTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * phys::Attachable::GetAttachedTo () const}
}\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} this thinks it is attached to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} this is attached to. \par
}}{
Definition at line 71 of file attachable.cpp.}\par
}
{\xe \v GetElementType\:phys::Attachable}
{\xe \v phys::Attachable\:GetElementType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 Attachable::AttachableElement}}}
 phys::Attachable::GetElementType () const}
}\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of element this is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value indicating what type of element this is. \par
}}{
Definition at line 61 of file attachable.cpp.}\par
}
{\xe \v SetAttachedTo\:phys::Attachable}
{\xe \v phys::Attachable\:SetAttachedTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Attachable::SetAttachedTo ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\i NextWorldNode}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This changes the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} that this thinks it is attached to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i NextWorldNode} A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} this should think it is attached to. \par
}
}{
Definition at line 66 of file attachable.cpp.}\par
}
{\xe \v SetElementType\:phys::Attachable}
{\xe \v phys::Attachable\:SetElementType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Attachable::SetElementType ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 Attachable::AttachableElement}}}
 {\i Type}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of element this class is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} Value representing the type of element to be set. \par
}
}{
Definition at line 56 of file attachable.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
attachable.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
attachable.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::Attribute Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::Attribute}
{\xe \v phys::xml::Attribute}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating attributes in DOM tree. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFF" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 (){\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFG" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 AttributeStruct}}}
 *attr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs attribute from internal pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFH" }{}}{\fldrslt {\cs37\ul\cf2 operator unspecified_bool_type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFI" }{}}{\fldrslt {\cs37\ul\cf2 operator!}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this attribute the opposite of it's normal boolean value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFJ" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check equality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFK" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFL" }{}}{\fldrslt {\cs37\ul\cf2 operator<}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFM" }{}}{\fldrslt {\cs37\ul\cf2 operator>}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFN" }{}}{\fldrslt {\cs37\ul\cf2 operator<=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFO" }{}}{\fldrslt {\cs37\ul\cf2 operator>=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFP" }{}}{\fldrslt {\cs37\ul\cf2 Empty}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this storing anything at all? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFQ" }{}}{\fldrslt {\cs37\ul\cf2 Name}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFR" }{}}{\fldrslt {\cs37\ul\cf2 Value}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Value of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 AsInt}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to an int and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHJ" }{}}{\fldrslt {\cs37\ul\cf2 AsUint}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to an unsigned int and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 AsDouble}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a double and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 AsFloat}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a float and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFS" }{}}{\fldrslt {\cs37\ul\cf2 AsReal}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a Real and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFT" }{}}{\fldrslt {\cs37\ul\cf2 AsWhole}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a Whole and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFU" }{}}{\fldrslt {\cs37\ul\cf2 AsInteger}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a Integer and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFV" }{}}{\fldrslt {\cs37\ul\cf2 AsString}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a String and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFW" }{}}{\fldrslt {\cs37\ul\cf2 AsBool}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a float and returns the results. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 SetName}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of this attribute. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (int rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains rhs, then use that as the new value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (unsigned int rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains rhs, then use that as the new value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (double rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains rhs, then use that as the new value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (bool rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains the meaning of rhs, then use that as the new value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (T rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains the meaning of rhs, then use that as the new value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFX" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue(const char_t* rhs)}}} ; without the error return. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFY" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (int rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFZ" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (unsigned int rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGA" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (double rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGB" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (bool rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGC" }{}}{\fldrslt {\cs37\ul\cf2 GetNextAttribute}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the next attribute. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGD" }{}}{\fldrslt {\cs37\ul\cf2 GetPreviousAttribute}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the previous attribute. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGE" }{}}{\fldrslt {\cs37\ul\cf2 HashValue}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a unique identifying value for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this represents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 AttributeStruct}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGF" }{}}{\fldrslt {\cs37\ul\cf2 InternalObject}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve a pointer to the internal data. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b AttributeIterator}{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Node}{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating attributes in DOM tree. \par
}{
Definition at line 344 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Attribute\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:Attribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::Attribute ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 AttributeStruct}}}
 * {\i attr}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs attribute from internal pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i attr} An internal {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 AttributeStruct}}} pointer containing all the data to create an attribute. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AsBool\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsBool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsBool () const}
}\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a float and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Value as bool (returns true if first character is in '1tTyY' set), or false if attribute is empty \par
}}}
{\xe \v AsDouble\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsDouble () const}
}\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a double and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be convert to a double by reading the character and interpretting them a number, that numberis returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000045" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Update {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::AsDouble()}}} to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This may silently fail if the value of the attribute exceeds the maximum value that can be stored in and double. Check "errno" and see if it is set to "ERANGE" to test for this condition. \par
}}}
{\xe \v AsFloat\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsFloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsFloat () const}
}\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a float and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be convert to a float by reading the character and interpretting them a number, that numberis returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000046" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Update {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::AsFloat()}}} to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This may silently fail if the value of the attribute exceeds the maximum value that can be stored in and float. Check "errno" and see if it is set to "ERANGE" to test for this condition. \par
}}}
{\xe \v AsInt\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsInt () const}
}\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to an int and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be convert to an int by reading the character and interpretting them a number, that numberis returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000043" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Update {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::AsInt()}}} to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This may silently fail if the value of the attribute exceeds the maximum value that can be stored in and int. Check "errno" and see if it is set to "ERANGE" to test for this condition. \par
}}}
{\xe \v AsInteger\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsInteger () const}
}\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a Integer and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be converted to a Integer by reading the character and interpretting them a number, that number is returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw exception in certain overflow conditions \par
}
}}
{\xe \v AsReal\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsReal () const}
}\par
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a Real and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be converted to a Real by reading the character and interpretting them a number, that number is returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw exception in certain overflow conditions \par
}
}}
{\xe \v AsString\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsString () const}
}\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a String and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be converted to a Real by reading the character and interpretting them a number, that number is returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw exception in certain overflow conditions \par
}
}}
{\xe \v AsUint\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsUint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsUint () const}
}\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to an unsigned int and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be convert to an unsigned int by reading the character and interpretting them a number, that numberis returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000044" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Update {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHJ" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::AsUint()}}} to check errno and throw exceptions were appropriate, and throw a exception on failure instead of producing a valid return value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This may silently fail if the value of the attribute exceeds the maximum value that can be stored in and int. Check "errno" and see if it is set to "ERANGE" to test for this condition. \par
}}}
{\xe \v AsWhole\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:AsWhole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::AsWhole () const}
}\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempts to convert the value of the attribute to a Whole and returns the results. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the value of this attribute can be converted to a Whole by reading the character and interpretting them a number, that number is returned. Returns 0 on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw exception in certain overflow conditions \par
}
}}
{\xe \v Empty\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:Empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::Empty () const}
}\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this storing anything at all? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  is storing nothing. False if it is storing anything. \par
}}}
{\xe \v GetNextAttribute\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:GetNextAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::GetNextAttribute () const}
}\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the next attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get the next sibling attribute. That is, another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on the same node as this attribute. This is internally a circular linked list, so once you reach the end, you simply be given the first node. If this attribute is empty this will return a empty attribute. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Either the next attribute or if this attribute is empty an empty attribute. \par
}}}
{\xe \v GetPreviousAttribute\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:GetPreviousAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::GetPreviousAttribute () const}
}\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the previous attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get the previous sibling attribute. That is, another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on the same node as this attribute. This is internally a circular linked list, so once you reach the beginning, you simply be given the last node. If this attribute is empty this will return a empty attribute. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Either the previous attribute or if this attribute is empty an empty attribute. \par
}}}
{\xe \v HashValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:HashValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::HashValue () const}
}\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a unique identifying value for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this represents. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A size_t that is unique per {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that an attribute could represent. \par
}}}
{\xe \v InternalObject\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:InternalObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::InternalObject () const}
}\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve a pointer to the internal data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A void pointer to the internal data. \par
}{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}}
{\xe \v Name\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::Name () const}
}\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns A pointer to a const c-style array of the the character type (usually char or wchar_t) containing the name. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid returns "" if attribute is empty. \par
}}}
{\xe \v operator unspecified_bool_type\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator unspecified_bool_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator unspecified_bool_type () const}
}\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the internal data is set and false otherwise. \par
}}}
{\xe \v operator!\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator!}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator! () const}
}\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this attribute the opposite of it's normal boolean value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is described in the PugiXML source a a workaround for a borland c++ issue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns false if the internal pointer {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 AttributeStruct}}} is set and true otherwise. \par
}}}
{\xe \v operator!=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if any of the internal values don't match between this and the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . \par
}}}
{\xe \v operator<\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator< (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  is greater than this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v operator<=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator<= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  is greater than or equal to this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v operator=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator= (int {\i rhs})}
}\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as an int. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An reference to this attribute. \par
}}}
{\xe \v operator=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator= (double {\i rhs})}
}\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as a double. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An reference to this attribute. \par
}}}
{\xe \v operator=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator= (bool {\i rhs})}
}\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} This with be interpretted, then converted to "true" or "false" and used as the new value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An reference to this attribute. \par
}}}
{\xe \v operator=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator= (unsigned int {\i rhs})}
}\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue()}}} ; without the error return. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as an unsigned int. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An reference to this attribute. \par
}}}
{\xe \v operator=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i rhs})}
}\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The same as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 Attribute::SetValue(const char_t* rhs)}}} ; without the error return. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as an c-style string. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An reference to this attribute. \par
}}}
{\xe \v operator==\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check equality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if all the internal values match between this and the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. \par
}}}
{\xe \v operator>\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator> (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  is less than this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v operator>=\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::operator>= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  is less than or equal to this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v SetName\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::SetName (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i rhs})}
}\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of this attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new name. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000047" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redudant and use an exception instead. \par
}
}}
{\xe \v SetValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool phys::xml::Attribute::SetValue (T {\i rhs}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains the meaning of rhs, then use that as the new value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} This with be converted to a character array using the appropriate streaming operator <<, then used as the new value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid You should not pass classes that stream/serialize to xml into this function, the result will be invalid XML. If you must, find a way to strip out the ">" character, then you can reinsert it later \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000039" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Strip ">" automatically and provide a method to reconsitute it. \par
}
}{
Definition at line 438 of file xml.h.}\par
}
{\xe \v SetValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Attribute::SetValue (double {\i rhs})}
}\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains rhs, then use that as the new value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as a double. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000037" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par
}
}}
{\xe \v SetValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Attribute::SetValue (unsigned int {\i rhs})}
}\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains rhs, then use that as the new value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as an unsigned int. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000036" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par
}
}}
{\xe \v SetValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Attribute::SetValue (int {\i rhs})}
}\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains rhs, then use that as the new value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new value as an int. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000035" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par
}
}}
{\xe \v SetValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Attribute::SetValue (bool {\i rhs})}
}\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert rhs to a character array that contains the meaning of rhs, then use that as the new value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} This with be interpretted, then converted to "true" or "false" and used as the new value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000038" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par
}
}}
{\xe \v SetValue\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Attribute::SetValue (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i rhs})}
}\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of this. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new Value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if this is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000034" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par
}
}}
{\xe \v Value\:phys::xml::Attribute}
{\xe \v phys::xml::Attribute\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Attribute::Value () const}
}\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Value of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns A pointer to a const c-style array of the the character type (usually char or wchar_t) containing the value. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid returns "" if attribute is empty. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::AttributeIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}). }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef ptrdiff_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJV" }{}}{\fldrslt {\cs37\ul\cf2 difference_type}}}
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJW" }{}}{\fldrslt {\cs37\ul\cf2 value_type}}}
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJX" }{}}{\fldrslt {\cs37\ul\cf2 pointer}}}
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJY" }{}}{\fldrslt {\cs37\ul\cf2 reference}}}
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef std::bidirectional_iterator_tag {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJZ" }{}}{\fldrslt {\cs37\ul\cf2 iterator_category}}}
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKA" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 (){\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor, makes a blank iterator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKB" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &attr, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &GetParent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an iterator which points to the specified node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKC" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 &rhs) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} for equality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKD" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 &rhs) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKE" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deferences this Iterator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKF" }{}}{\fldrslt {\cs37\ul\cf2 operator->}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pointer the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this points to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKG" }{}}{\fldrslt {\cs37\ul\cf2 operator++}}}
 (){\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the iterator to the next member of the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKH" }{}}{\fldrslt {\cs37\ul\cf2 operator++}}}
 (int)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the iterator to the next member of the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKI" }{}}{\fldrslt {\cs37\ul\cf2 operator--}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKJ" }{}}{\fldrslt {\cs37\ul\cf2 operator--}}}
 (int)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Node}{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid This behaves very similar to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 xml::NodeIterator}}} \par
}}{
Definition at line 875 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AttributeIterator\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:AttributeIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::AttributeIterator (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i attr}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i GetParent})}
}\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an iterator which points to the specified node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GetParent} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that contains the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this iterator will point to. \par
{\i attr} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this iterator points to. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v operator!=\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 & {\i rhs}) const}
}\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The Right Hand Side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid False if the internal data stored in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} refers to is the same as the metadata in the other AttributeIterator's {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}, True otherwise. \par
}}}
{\xe \v operator*\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator* ()}
}\par
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deferences this Iterator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} reference to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} pointed at by this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}. \par
}}}
{\xe \v operator++\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator++ (int)}
}\par
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the iterator to the next member of the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}. \par
}}}
{\xe \v operator--\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator--}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator-- ()}
}\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}. \par
}}}
{\xe \v operator--\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator--}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator-- (int)}
}\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}. \par
}}}
{\xe \v operator->\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator-> ()}
}\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pointer the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this points to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} references. \par
}}}
{\xe \v operator==\:phys::xml::AttributeIterator}
{\xe \v phys::xml::AttributeIterator\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::AttributeIterator::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 & {\i rhs}) const}
}\par
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} for equality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The Right Hand Side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the internal data stored in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}} refers to is the same as the metadata in the other AttributeIterator's {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}, false otherwise. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AttributeStruct Class Reference\par \pard\plain 
{\tc\tcl2 \v AttributeStruct}
{\xe \v AttributeStruct}
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal data storage structure used in an Attribute. }}\par
{
{\f2 #include <xmldoc.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal data storage structure used in an Attribute. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not part of the API, subject to change without warning. \par
}\par}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Button Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Button}
{\xe \v phys::UI::Button}
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use as a button. }}\par
{
{\f2 #include <uibutton.h>}}\par
Inheritance diagram for phys::UI::Button:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d88/classphys_1_1UI_1_1Button.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLW" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLX" }{}}{\fldrslt {\cs37\ul\cf2 ~Button}}}
 (){\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLY" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLZ" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMA" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this button to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMB" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this button to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMC" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMD" }{}}{\fldrslt {\cs37\ul\cf2 IsTextButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this is a text button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACME" }{}}{\fldrslt {\cs37\ul\cf2 SetButtonCallback}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 ButtonCallback}}}
 *Call)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the callback for this button. See the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 ButtonCallback}}} class for more info. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMF" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the mouse is over this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMG" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stored value of whether or not the mouse is over the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMH" }{}}{\fldrslt {\cs37\ul\cf2 SetBackgroundColour}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background colour of the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMI" }{}}{\fldrslt {\cs37\ul\cf2 SetBackgroundSprite}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background image(if provided in the atlas) of the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMJ" }{}}{\fldrslt {\cs37\ul\cf2 SetHoveredSprite}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an alternate background image that will be applied when the mouse is over this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMK" }{}}{\fldrslt {\cs37\ul\cf2 SetUserSprite}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an alternate background image that is stored and can be quickly swapped with the active sprite. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACML" }{}}{\fldrslt {\cs37\ul\cf2 EnableUserSprite}}}
 (bool Enable)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables(or disables) the currently set User sprite. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMM" }{}}{\fldrslt {\cs37\ul\cf2 SetBorder}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables a border and sets it's colour. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMN" }{}}{\fldrslt {\cs37\ul\cf2 NoBorder}}}
 (){\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables any border set on this rectangle if one is currently set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMO" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMP" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMQ" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMR" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMS" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMT" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMU" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMV" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMW" }{}}{\fldrslt {\cs37\ul\cf2 SetRenderPriority}}}
 (UI::RenderPriority Priority)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual UI::RenderPriority {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMX" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Rectangle * {\b GorillaRectangle}{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\b Parent}{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Sprite * {\b NormalSprite}{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Sprite * {\b HoveredSprite}{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Sprite * {\b UserSprite}{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 ButtonCallback}}}
 * {\b Callback}{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b MouseHover}{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsText}{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelPosition}{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelSize}{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\b Name}{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use as a button. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlike rectangles and captions, this class can be interacted with by clicking. It is important to understand what you want your space to do when selecting the class to use. \par
}{
Definition at line 71 of file uibutton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Button\:phys::UI::Button}
{\xe \v phys::UI::Button\:Button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Button::Button ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the button. \par
{\i Position} The top left position of the button. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
{\i Layer} Pointer to the Layer that created this button. \par
}
}{
Definition at line 56 of file uibutton.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::Button}
{\xe \v phys::UI::Button\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Button::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the mouse is over this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether the mouse is over this button. \par
}}{
Definition at line 114 of file uibutton.cpp.}\par
}
{\xe \v EnableUserSprite\:phys::UI::Button}
{\xe \v phys::UI::Button\:EnableUserSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::EnableUserSprite (bool {\i Enable}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables(or disables) the currently set User sprite. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Enable} If true, this will swap the current sprite with the user sprite, if false it will swap the User sprite for the normal sprite. \par
}
}{
Definition at line 167 of file uibutton.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Button::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNK" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 206 of file uibutton.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Button::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this button. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNL" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 231 of file uibutton.cpp.}\par
}
{\xe \v GetMouseHover\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Button::GetMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stored value of whether or not the mouse is over the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does not perform any checks. If you want to do a manual check, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMF" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the stored value of whether or not the mouse is over the button. \par
}}{
Definition at line 138 of file uibutton.cpp.}\par
}
{\xe \v GetName\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::UI::Button::GetName (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name of this button. \par
}}{
Definition at line 99 of file uibutton.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Button::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 195 of file uibutton.cpp.}\par
}
{\xe \v GetRenderPriority\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UI::RenderPriority phys::UI::Button::GetRenderPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing this button's priority level. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 257 of file uibutton.cpp.}\par
}
{\xe \v GetSize\:phys::UI::Button}
{\xe \v phys::UI::Button\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Button::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this button. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 220 of file uibutton.cpp.}\par
}
{\xe \v IsTextButton\:phys::UI::Button}
{\xe \v phys::UI::Button\:IsTextButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Button::IsTextButton (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this is a text button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing whether or not this is a text button. \par
}}{
Definition at line 104 of file uibutton.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Button}
{\xe \v phys::UI::Button\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Button::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this button. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 84 of file uibutton.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 200 of file uibutton.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this button. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 225 of file uibutton.cpp.}\par
}
{\xe \v SetBackgroundColour\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetBackgroundColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetBackgroundColour (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background colour of the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} A colour value representing the colour to be set. \par
}
}{
Definition at line 143 of file uibutton.cpp.}\par
}
{\xe \v SetBackgroundSprite\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetBackgroundSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetBackgroundSprite (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background image(if provided in the atlas) of the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the sprite to set as the background. \par
}
}{
Definition at line 148 of file uibutton.cpp.}\par
}
{\xe \v SetBorder\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetBorder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetBorder (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables a border and sets it's colour. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} A colour value representing the colour to be set. \par
}
}{
Definition at line 177 of file uibutton.cpp.}\par
}
{\xe \v SetButtonCallback\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetButtonCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetButtonCallback ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 ButtonCallback}}}
 * {\i Call}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the callback for this button. See the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 ButtonCallback}}} class for more info. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You can pass in a null pointer to disable a callback. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Call} A pointer to the callback you wish to have set for this button. \par
}
}{
Definition at line 109 of file uibutton.cpp.}\par
}
{\xe \v SetHoveredSprite\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetHoveredSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetHoveredSprite (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an alternate background image that will be applied when the mouse is over this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the sprite to set as the alternate background. \par
}
}{
Definition at line 155 of file uibutton.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 187 of file uibutton.cpp.}\par
}
{\xe \v SetRenderPriority\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetRenderPriority (UI::RenderPriority {\i Priority}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default value for this is Medium. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Priority} The priority level to be used when rendering this button. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 237 of file uibutton.cpp.}\par
}
{\xe \v SetSize\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this button. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 212 of file uibutton.cpp.}\par
}
{\xe \v SetUserSprite\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetUserSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetUserSprite (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an alternate background image that is stored and can be quickly swapped with the active sprite. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the sprite to set as the alternate background. \par
}
}{
Definition at line 161 of file uibutton.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::Button}
{\xe \v phys::UI::Button\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Button::SetVisible (bool {\i Visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visible} Bool determining whether or not this button should be visible. \par
}
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::TextButton}}}
.}\par
{
Definition at line 79 of file uibutton.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uibutton.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uibutton.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::ButtonCallback Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::ButtonCallback}
{\xe \v phys::UI::ButtonCallback}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class provides customizable functionality to the button class. }}\par
{
{\f2 #include <uibutton.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 DoCallbackItems}}}
 ()=0{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The function called for this callback. This will be called every time the button is checked for mouse hover. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class provides customizable functionality to the button class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a pure virtual class that must be inherited from for use with specialized behaviors when working with buttons. \par
}{
Definition at line 183 of file uibutton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uibutton.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uibutton.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::ButtonListBox Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox}
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a widget for displaying a list of buttons in a box. }}\par
{
{\f2 #include <uibuttonlistbox.h>}}\par
Inheritance diagram for phys::UI::ButtonListBox:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dd7/classphys_1_1UI_1_1ButtonListBox.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 ButtonListBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 ScrollbarWidth, UI::ScrollbarStyle ScrollStyle, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNX" }{}}{\fldrslt {\cs37\ul\cf2 ~ButtonListBox}}}
 (){\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNY" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNZ" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOA" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOB" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOC" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOD" }{}}{\fldrslt {\cs37\ul\cf2 SetTemplateParameters}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the desired size and glyph set provided to all buttons created within this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOE" }{}}{\fldrslt {\cs37\ul\cf2 AddSelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &BackgroundSprite="", {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &TextLabel="")\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a selectable button to the list to be displayed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOF" }{}}{\fldrslt {\cs37\ul\cf2 GetSelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a button by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOG" }{}}{\fldrslt {\cs37\ul\cf2 DestroySelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOH" }{}}{\fldrslt {\cs37\ul\cf2 DestroySelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOI" }{}}{\fldrslt {\cs37\ul\cf2 SetSelectionDistance}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Dist)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance apart(and from the sides of box) the Selections will be from each other. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOJ" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoHideScroll}}}
 (bool AutoHide)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eanbles or disables the scrollbar autohide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOK" }{}}{\fldrslt {\cs37\ul\cf2 EnableBorderSelector}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the setting of a border on the button you select. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOL" }{}}{\fldrslt {\cs37\ul\cf2 DisableBorderSelector}}}
 (){\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables borders on currently selected buttons if one was enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOM" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACON" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOO" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOP" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOQ" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOR" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOS" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOT" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOU" }{}}{\fldrslt {\cs37\ul\cf2 GetSelected}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently selected button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOV" }{}}{\fldrslt {\cs37\ul\cf2 GetBoxBack}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the background of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOW" }{}}{\fldrslt {\cs37\ul\cf2 GetVertScroll}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scrollbar used within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOX" }{}}{\fldrslt {\cs37\ul\cf2 CalculateVisibleSelections}}}
 (){\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines how many items can be displayed in the box at once. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 DrawList}}}
 (){\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the list of Visible buttons and hides the rest. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false){\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with widget update/automation. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\b BoxBack}{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 VertScroll}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\b Selected}{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * > {\b Selections}{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * > {\b VisibleSelections}{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b AutoHideScroll}{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b LastScrollValue}{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b SelectionDist}{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b BorderWidth}{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b TGlyph}{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b NumVisible}{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b TSize}{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\b BorderColour}{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a widget for displaying a list of buttons in a box. \par
}{
Definition at line 60 of file uibuttonlistbox.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ButtonListBox\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:ButtonListBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::ButtonListBox::ButtonListBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i ScrollbarWidth}, UI::ScrollbarStyle {\i ScrollStyle}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
{\i Position} The position of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
{\i ScrollbarWidth} The relative(to screensize) width of the vertical scrollbar. If a horizontal scrollbar is needed it'll use the equal value in pixels(to avoid the stretched look. \par
{\i ScrollStyle} The style of the scrollbar you want for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} class for more information. \par
{\i Layer} The parent layer this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box belongs to. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000020" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Fourth instance of needing to include the namespace in the declaration seemingly needlessly. \par
}
}}\par
{
Definition at line 61 of file uibuttonlistbox.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddSelection\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:AddSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::ButtonListBox::AddSelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i BackgroundSprite} = {\f2 ""}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i TextLabel} = {\f2 ""}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a selectable button to the list to be displayed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i BackgroundSprite} Optional, name of the sprite to set as it's background. Ignored if the string is empty. \par
{\i TextLabel} Optional, will create a text button instead of a regular button and set it's text. Ignored if the string is empty. \par \par Note: If a Text button is created, you can't revert it to a regular button and vice versa. You'll have to destroy the selection and make a new one. In the case of having a text button, you can however still set it's text to an empty string. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created button. \par
}}{
Definition at line 292 of file uibuttonlistbox.cpp.}\par
}
{\xe \v CheckMouseHover\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::ButtonListBox::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box, false if it's not. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 249 of file uibuttonlistbox.cpp.}\par
}
{\xe \v DestroySelection\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:DestroySelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::DestroySelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\i ToBeDestroyed}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} A pointer to the button you want destroyed and removed from this list. \par
}
}{
Definition at line 325 of file uibuttonlistbox.cpp.}\par
}
{\xe \v DestroySelection\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:DestroySelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::DestroySelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i ToBeDestroyed}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} A string naming the button you want destroyed and removed from this list. \par
}
}{
Definition at line 339 of file uibuttonlistbox.cpp.}\par
}
{\xe \v EnableBorderSelector\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:EnableBorderSelector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::EnableBorderSelector (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the setting of a border on the button you select. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} The width of the border in pixels. \par
{\i Colour} The colour of the border. \par
}
}{
Definition at line 365 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ButtonListBox::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 400 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ButtonListBox::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 434 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetBoxBack\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetBoxBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * phys::UI::ButtonListBox::GetBoxBack (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the background of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the background of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Definition at line 444 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ButtonListBox::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 386 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetSelected\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::ButtonListBox::GetSelected (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently selected button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the currently selected button, or NULL if none are selected. \par
}}{
Definition at line 439 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetSelection\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::ButtonListBox::GetSelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a button by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the selectable button you want to get. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the named button. \par
}}{
Definition at line 312 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetSize\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ButtonListBox::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 417 of file uibuttonlistbox.cpp.}\par
}
{\xe \v GetVertScroll\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:GetVertScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * phys::UI::ButtonListBox::GetVertScroll (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scrollbar used within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the scrollbar of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Definition at line 449 of file uibuttonlistbox.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::ButtonListBox::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 224 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 391 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 422 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetAutoHideScroll\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetAutoHideScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetAutoHideScroll (bool {\i AutoHide}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eanbles or disables the scrollbar autohide. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AutoHide} A bool indicating whether or not to auto hide the scrollbar. \par
}
}{
Definition at line 358 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 377 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetSelectionDistance\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetSelectionDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetSelectionDistance (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Dist}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance apart(and from the sides of box) the Selections will be from each other. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function expects a relative value to the screen size(0.0 to 1.0). This value defaults to 0.025. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Dist} A relative value for the distance to be used when determining the positions of Selections. \par
}
}{
Definition at line 353 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetSize\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 405 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetTemplateParameters\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetTemplateParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetTemplateParameters ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the desired size and glyph set provided to all buttons created within this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function needs to be called before adding any selections to this widget. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} The size for all buttons in this widget. \par
{\i Glyph} The Glyph set to be used for any and all Text Buttons created. Glyphs are defined in your .gorilla file. \par
}
}{
Definition at line 282 of file uibuttonlistbox.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ButtonListBox::SetVisible (bool {\i visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box should be visible. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 214 of file uibuttonlistbox.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v VertScroll\:phys::UI::ButtonListBox}
{\xe \v phys::UI::ButtonListBox\:VertScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox::VertScroll}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000021" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Third instance of needing to include the namespace in the declaration seemingly needlessly. \par
}
}{
Definition at line 65 of file uibuttonlistbox.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uibuttonlistbox.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uibuttonlistbox.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Camera Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Camera}
{\xe \v phys::Camera}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the camera class. }}\par
{
{\f2 #include <camera.h>}}\par
Inheritance diagram for phys::Camera:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/df8/classphys_1_1Camera.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWD" }{}}{\fldrslt {\cs37\ul\cf2 ProjectionType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWE" }{}}{\fldrslt {\cs37\ul\cf2 Orthographic}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWF" }{}}{\fldrslt {\cs37\ul\cf2 Perspective}}}
 =  1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Values for storing how perspective should be interpretted. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 *Manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 (Ogre::Camera *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 *Manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Cam Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 ~Camera}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWJ" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the camera's set name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWK" }{}}{\fldrslt {\cs37\ul\cf2 SetCameraType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWD" }{}}{\fldrslt {\cs37\ul\cf2 ProjectionType}}}
 Type)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of projection to be used with this camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWD" }{}}{\fldrslt {\cs37\ul\cf2 Camera::ProjectionType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWL" }{}}{\fldrslt {\cs37\ul\cf2 GetCameraType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the type of projection used by the camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWM" }{}}{\fldrslt {\cs37\ul\cf2 SetOrthoWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Width, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Height)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the size of the Orthographic projection window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWN" }{}}{\fldrslt {\cs37\ul\cf2 SetOrthoWindowHeight}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Height)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the size of the Orthographic projection window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWO" }{}}{\fldrslt {\cs37\ul\cf2 SetOrthoWindowWidth}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Width)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the size of the Orthographic projection window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWP" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of a camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWQ" }{}}{\fldrslt {\cs37\ul\cf2 SetDirection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Direction)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Direction for the camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWR" }{}}{\fldrslt {\cs37\ul\cf2 SetOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Orientation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWS" }{}}{\fldrslt {\cs37\ul\cf2 SetNearClipDistance}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 NearDist)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the short range clip distance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWT" }{}}{\fldrslt {\cs37\ul\cf2 SetFarClipDistance}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 FarDist)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the long range clip distance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWU" }{}}{\fldrslt {\cs37\ul\cf2 SetAspectRatio}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Ratio)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the aspect ratio of the cameras veiw. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWV" }{}}{\fldrslt {\cs37\ul\cf2 LookAt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 TargetLoc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the camera faces. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWW" }{}}{\fldrslt {\cs37\ul\cf2 SetFixedYawAxis}}}
 (bool UseFixed, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Axis)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether to lock rotation around the Y axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWX" }{}}{\fldrslt {\cs37\ul\cf2 SetFixedYawAxis}}}
 (bool UseFixed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether to lock rotation around the Y axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWY" }{}}{\fldrslt {\cs37\ul\cf2 IsFixedYawEnabled}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is fixed yaw enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWZ" }{}}{\fldrslt {\cs37\ul\cf2 GetFixedYawAxis}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If fixed yaw is enabled, on which axis is yawing disabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXA" }{}}{\fldrslt {\cs37\ul\cf2 GetCameraToViewportRay}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Screenx, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Screeny) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} from the camera to the viewport. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXB" }{}}{\fldrslt {\cs37\ul\cf2 GetRelativeLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative location of the camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXC" }{}}{\fldrslt {\cs37\ul\cf2 GetGlobalLocation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the global/absolute location of the camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXD" }{}}{\fldrslt {\cs37\ul\cf2 GetOrientation}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the direction the camera is facing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 ZoomCamera}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Zoom)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Will zoom in or out the camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 ResetZoom}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the zoom level back to the default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Camera * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXG" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreCamera}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal camera this camera is based on. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Camera * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXH" }{}}{\fldrslt {\cs37\ul\cf2 Cam}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} used by the graphics Subsystem, that this class wraps. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXI" }{}}{\fldrslt {\cs37\ul\cf2 CamManager}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} manager that this camera is attached to. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b WorldNode}{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b CameraManager}{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}
 &PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXL" }{}}{\fldrslt {\cs37\ul\cf2 operator>>}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}
 &OneNode, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 &Ev)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Required to properly handle the complex web of objects created in ram. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the camera class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all the functionality needed to manipulate an individual camera that has been created. {{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000005" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Fix all the extra occurences of the word {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} in Function names on the camera. \par
}
}{
Definition at line 99 of file camera.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ProjectionType\:phys::Camera}
{\xe \v phys::Camera\:ProjectionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWD" }{}}{\fldrslt {\cs37\ul\cf2 phys::Camera::ProjectionType}}}
}
}\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Values for storing how perspective should be interpretted. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Orthographic\:phys::Camera}
{\xe \v phys::Camera\:Orthographic}
{\b {\i Orthographic{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not at all, objects at any distance are the same size. \par
}{\xe \v Perspective\:phys::Camera}
{\xe \v phys::Camera\:Perspective}
{\b {\i Perspective{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal perspective. \par
}}
\par
{
Definition at line 103 of file camera.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Camera\:phys::Camera}
{\xe \v phys::Camera\:Camera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Camera::Camera (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 * {\i Manager})}
}\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the basic constructor for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} class. \par
}{
Definition at line 47 of file camera.cpp.}\par
}
{\xe \v Camera\:phys::Camera}
{\xe \v phys::Camera\:Camera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Camera::Camera (Ogre::Camera * {\i Camera}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 * {\i Manager})}
}\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Cam Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is for internal use only and shouldn't be called manually. \par
}{
Definition at line 53 of file camera.cpp.}\par
}
{\xe \v ~Camera\:phys::Camera}
{\xe \v phys::Camera\:~Camera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Camera::~Camera (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class Destructor. \par
}{
Definition at line 68 of file camera.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetCameraToViewportRay\:phys::Camera}
{\xe \v phys::Camera\:GetCameraToViewportRay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 phys::Camera::GetCameraToViewportRay ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Screenx}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Screeny}) const}
}\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} from the camera to the viewport. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will cast a ray from the camera to the viewport and return it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Screenx} A Real representing the relative location on screen, on the x axis(0.0-1.0). \par
{\i Screeny} A Real representing the relative location on screen, on the y axis(0.0-1.0). \par
}
}{
Definition at line 193 of file camera.cpp.}\par
}
{\xe \v GetCameraType\:phys::Camera}
{\xe \v phys::Camera\:GetCameraType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWD" }{}}{\fldrslt {\cs37\ul\cf2 Camera::ProjectionType}}}
 phys::Camera::GetCameraType () const}
}\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the type of projection used by the camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A ProjectionType that will identify the kind of projection this camera uses. \par
}}{
Definition at line 92 of file camera.cpp.}\par
}
{\xe \v GetFixedYawAxis\:phys::Camera}
{\xe \v phys::Camera\:GetFixedYawAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Camera::GetFixedYawAxis () const}
}\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If fixed yaw is enabled, on which axis is yawing disabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} of 0s if disable, otherwise this return the Fixed Yaw Axis. \par
}}{
Definition at line 173 of file camera.cpp.}\par
}
{\xe \v GetGlobalLocation\:phys::Camera}
{\xe \v phys::Camera\:GetGlobalLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Camera::GetGlobalLocation () const}
}\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the global/absolute location of the camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} containing the location of this object as an offset from the global origin. \par
}}{
Definition at line 210 of file camera.cpp.}\par
}
{\xe \v GetName\:phys::Camera}
{\xe \v phys::Camera\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::Camera::GetName () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the camera's set name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the camera's name. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVX" }{}}{\fldrslt {\cs37\ul\cf2 phys::Attachable}}}
.}\par
{
Definition at line 73 of file camera.cpp.}\par
}
{\xe \v GetOgreCamera\:phys::Camera}
{\xe \v phys::Camera\:GetOgreCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Camera * phys::Camera::GetOgreCamera () const}
}\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal camera this camera is based on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} this camera is based on. \par
}\par}}{
Definition at line 235 of file camera.cpp.}\par
}
{\xe \v GetOrientation\:phys::Camera}
{\xe \v phys::Camera\:GetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Camera::GetOrientation () const}
}\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the direction the camera is facing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} representing how the camera is rotated. \par
}}{
Definition at line 215 of file camera.cpp.}\par
}
{\xe \v GetRelativeLocation\:phys::Camera}
{\xe \v phys::Camera\:GetRelativeLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Camera::GetRelativeLocation () const}
}\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative location of the camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the location of the camera, relative to any parent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} with the location of the camera as though the Parent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} were the origin. \par
}}{
Definition at line 205 of file camera.cpp.}\par
}
{\xe \v IsFixedYawEnabled\:phys::Camera}
{\xe \v phys::Camera\:IsFixedYawEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Camera::IsFixedYawEnabled () const}
}\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is fixed yaw enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if it is enable, such as the default setting, or false if it is not enabled. \par
}}{
Definition at line 170 of file camera.cpp.}\par
}
{\xe \v LookAt\:phys::Camera}
{\xe \v phys::Camera\:LookAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::LookAt ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i TargetLoc})}
}\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the camera faces. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the camera faces. Will also take orientation into account. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TargetLoc} The location in the game world to look at. \par
}
}{
Definition at line 152 of file camera.cpp.}\par
}
{\xe \v ResetZoom\:phys::Camera}
{\xe \v phys::Camera\:ResetZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::ResetZoom ()}
}\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the zoom level back to the default. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the zoom level back to normal. Note this function will only work if the camera is attached to a node. \par
}{
Definition at line 226 of file camera.cpp.}\par
}
{\xe \v SetAspectRatio\:phys::Camera}
{\xe \v phys::Camera\:SetAspectRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetAspectRatio ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Ratio})}
}\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the aspect ratio of the cameras veiw. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the aspect ratio between the width and height of the cameras viewing area. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Ratio} A Real that represents the aspect ratio, where Ratio = width / height. \par
}
}{
Definition at line 147 of file camera.cpp.}\par
}
{\xe \v SetCameraType\:phys::Camera}
{\xe \v phys::Camera\:SetCameraType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetCameraType ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWD" }{}}{\fldrslt {\cs37\ul\cf2 ProjectionType}}}
 {\i Type})}
}\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of projection to be used with this camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
By default, all cameras are enabled with Perspective projection. This is the standard 3-dimentional view anyone would expect in a 3D world. Orthographic projection is useful when displaying 2D worlds, or only 2 dimentions of a 3D world. It enables you to see the entire side of an object without regard for camera perspective. Perspective can be thought of as a pyramid, with the camera at the top of the cone. Orthographic would instead be a cube. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} The type of projection to be used. \par
}
}{
Definition at line 78 of file camera.cpp.}\par
}
{\xe \v SetDirection\:phys::Camera}
{\xe \v phys::Camera\:SetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetDirection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Direction})}
}\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Direction for the camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets which axis the camera will look down for rendering. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Direction} The vector3 representing the axis to be used. \par
}
}{
Definition at line 127 of file camera.cpp.}\par
}
{\xe \v SetFarClipDistance\:phys::Camera}
{\xe \v phys::Camera\:SetFarClipDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetFarClipDistance ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i FarDist})}
}\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the long range clip distance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance at which objects are considered too far to render. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i FarDist} A Real representing the distance. Note: This number directly corolates to the dimentions you provide in the constructor for the physgame. You should understand your games scale before setting this number. \par
}
}{
Definition at line 142 of file camera.cpp.}\par
}
{\xe \v SetFixedYawAxis\:phys::Camera}
{\xe \v phys::Camera\:SetFixedYawAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetFixedYawAxis (bool {\i UseFixed})}
}\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether to lock rotation around the Y axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will lock rotations around the Y axis. This function is automatically called on by the camera constructor to enable camera yawing. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i UseFixed} Enable or disable the locking of the axis. \par
}
}{
Definition at line 164 of file camera.cpp.}\par
}
{\xe \v SetFixedYawAxis\:phys::Camera}
{\xe \v phys::Camera\:SetFixedYawAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetFixedYawAxis (bool {\i UseFixed}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Axis})}
}\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether to lock rotation around the Y axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will lock rotations around the Y axis (or another axis if you specify). This function is automatically called on by the camera constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i UseFixed} Enable or disable the locking of the axis. \par
{\i Axis} The axis to lock, defaults to the Y axis. \par
}
}{
Definition at line 157 of file camera.cpp.}\par
}
{\xe \v SetLocation\:phys::Camera}
{\xe \v phys::Camera\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetLocation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of a camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location of the specified camera. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The new location for the camera. \par
}
}{
Definition at line 122 of file camera.cpp.}\par
}
{\xe \v SetNearClipDistance\:phys::Camera}
{\xe \v phys::Camera\:SetNearClipDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetNearClipDistance ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i NearDist})}
}\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the short range clip distance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance at which objects are considered too close to render. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i NearDist} A Real representing the distance. Note: This number directly corolates to the dimentions you provide in the constructor for the physgame. You should understand your games scale before setting this number. \par
}
}{
Definition at line 137 of file camera.cpp.}\par
}
{\xe \v SetOrientation\:phys::Camera}
{\xe \v phys::Camera\:SetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Orientation})}
}\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of the camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the orientation of the specified camera via a quaternion. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Orientation} The quaternion representing the new orientation. \par
}
}{
Definition at line 132 of file camera.cpp.}\par
}
{\xe \v SetOrthoWindow\:phys::Camera}
{\xe \v phys::Camera\:SetOrthoWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetOrthoWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Width}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Height})}
}\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the size of the Orthographic projection window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will change the aspect ratio of the screen, determined by the values passed in. To set the window size without changing the aspect ratio, call either the SetOrthoWindowHeight, or SetOrthoWindowWidth functions. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} The new width of the projection window. \par
{\i Height} The new height of the projection window. \par
}
}{
Definition at line 107 of file camera.cpp.}\par
}
{\xe \v SetOrthoWindowHeight\:phys::Camera}
{\xe \v phys::Camera\:SetOrthoWindowHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetOrthoWindowHeight ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Height})}
}\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the size of the Orthographic projection window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will not change the aspect ratio of the screen, unlike SetOrthoWindow. The aspect ratio will be preserved and the Width of the screen automatically recalculated based on the Height passed in. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Height} The new height of the projection window. \par
}
}{
Definition at line 112 of file camera.cpp.}\par
}
{\xe \v SetOrthoWindowWidth\:phys::Camera}
{\xe \v phys::Camera\:SetOrthoWindowWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::SetOrthoWindowWidth ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Width})}
}\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the size of the Orthographic projection window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will not change the aspect ratio of the screen, unlike SetOrthoWindow. The aspect ratio will be preserved and the Height of the screen automatically recalculated based on the Width passed in. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} The new width of the projection window. \par
}
}{
Definition at line 117 of file camera.cpp.}\par
}
{\xe \v ZoomCamera\:phys::Camera}
{\xe \v phys::Camera\:ZoomCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Camera::ZoomCamera ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Zoom})}
}\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Will zoom in or out the camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will zoom in the camera by the amount specified. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Zoom} A Real of how much to zoom in by. Note: This number directly corolates to the dimentions you provide in the constructor for the physgame. You should understand your games scale before setting this number. \par
}
}{
Definition at line 220 of file camera.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v operator>>\:phys::Camera}
{\xe \v phys::Camera\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}
& PHYS_LIB operator>> ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}
 & {\i OneNode}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 & {\i Ev}){\f2  [friend]}}
}\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Required to properly handle the complex web of objects created in ram. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Cam\:phys::Camera}
{\xe \v phys::Camera\:Cam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Camera* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Camera::Cam}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} used by the graphics Subsystem, that this class wraps. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 134 of file camera.h.}\par
}
{\xe \v CamManager\:phys::Camera}
{\xe \v phys::Camera\:CamManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXI" }{}}{\fldrslt {\cs37\ul\cf2 phys::Camera::CamManager}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} manager that this camera is attached to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 138 of file camera.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
camera.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
camera.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::CameraManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::CameraManager}
{\xe \v phys::CameraManager}
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager class for all camera functions. }}\par
{
{\f2 #include <cameramanager.h>}}\par
Inheritance diagram for phys::CameraManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d91/classphys_1_1CameraManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 SceneManagerIndex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXN" }{}}{\fldrslt {\cs37\ul\cf2 ~CameraManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXO" }{}}{\fldrslt {\cs37\ul\cf2 CreateDefaultCamera}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates (or recreates) the default camera for this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXP" }{}}{\fldrslt {\cs37\ul\cf2 GetDefaultCamera}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the default camera if it has been initialized. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXQ" }{}}{\fldrslt {\cs37\ul\cf2 CreateCamera}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a camera and returns a pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXR" }{}}{\fldrslt {\cs37\ul\cf2 GetCamera}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created camera by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 GetCamera}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created camera by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 GetNumCameras}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of cameras created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXU" }{}}{\fldrslt {\cs37\ul\cf2 ClearCameras}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes all cameras except for the first camera. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXV" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXW" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXX" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\b FindCamera} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Name){\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 phys::SceneManager}}}
 * {\b SManager}{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\b DefaultCamera}{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * > {\b Cameras}{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b GraphicsManager}{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b World}{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Camera}{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager class for all camera functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all the functionality of the use and manipulation of the camera. \par All functions that manipulate the camera will default to the default camera, so if you only use one camera you should never have to name the camera you want to use. \par This class should only be created after the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}} has been created. \par
}{
Definition at line 72 of file cameramanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CameraManager\:phys::CameraManager}
{\xe \v phys::CameraManager\:CameraManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::CameraManager::CameraManager ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i SceneManagerIndex})}
}\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the class constructor. This is automatcally called in the World.CreateRenderWindow() function and should never need to be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SceneManagerName} Name of the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}} for this camera manager to use. \par
{\i SManager} A pointer to the Scenemanager where you will be creating/manipulating all the cameras. \par
}
}{
Definition at line 47 of file cameramanager.cpp.}\par
}
{\xe \v ~CameraManager\:phys::CameraManager}
{\xe \v phys::CameraManager\:~CameraManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::CameraManager::~CameraManager (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The calss Destuctor \par
}{
Definition at line 55 of file cameramanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ClearCameras\:phys::CameraManager}
{\xe \v phys::CameraManager\:ClearCameras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::CameraManager::ClearCameras ()}
}\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes all cameras except for the first camera. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will clear the container of cameras. The default camera is not stored in this container however, so it is spared from this wipe. \par
}{
Definition at line 127 of file cameramanager.cpp.}\par
}
{\xe \v CreateCamera\:phys::CameraManager}
{\xe \v phys::CameraManager\:CreateCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * phys::CameraManager::CreateCamera (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a camera and returns a pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does the same as the other CreateCamera function but will also return a pointer to the camera class instead of a string(being the name of the camera). \par
}{
Definition at line 103 of file cameramanager.cpp.}\par
}
{\xe \v CreateDefaultCamera\:phys::CameraManager}
{\xe \v phys::CameraManager\:CreateDefaultCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * phys::CameraManager::CreateDefaultCamera ()}
}\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates (or recreates) the default camera for this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this function is called while there is a valid default camera already created, it will delete that camera. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created camera. \par
}}{
Definition at line 85 of file cameramanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::CameraManager}
{\xe \v phys::CameraManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::CameraManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class implements this for the sake of extension and compatibility. This function does nothing. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 143 of file cameramanager.cpp.}\par
}
{\xe \v GetCamera\:phys::CameraManager}
{\xe \v phys::CameraManager\:GetCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * phys::CameraManager::GetCamera (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created camera by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the camera of the specified name. \par
}}{
Definition at line 111 of file cameramanager.cpp.}\par
}
{\xe \v GetCamera\:phys::CameraManager}
{\xe \v phys::CameraManager\:GetCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * phys::CameraManager::GetCamera ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created camera by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the camera at the specified index. \par
}}{
Definition at line 117 of file cameramanager.cpp.}\par
}
{\xe \v GetDefaultCamera\:phys::CameraManager}
{\xe \v phys::CameraManager\:GetDefaultCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * phys::CameraManager::GetDefaultCamera ()}
}\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the default camera if it has been initialized. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the Default {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}} or a null point if it hasn't been created yet. \par
}}{
Definition at line 98 of file cameramanager.cpp.}\par
}
{\xe \v GetNumCameras\:phys::CameraManager}
{\xe \v phys::CameraManager\:GetNumCameras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::CameraManager::GetNumCameras ()}
}\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of cameras created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of cameras this manager is storing. \par
}}{
Definition at line 122 of file cameramanager.cpp.}\par
}
{\xe \v GetType\:phys::CameraManager}
{\xe \v phys::CameraManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::CameraManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::CameraManager. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 146 of file cameramanager.cpp.}\par
}
{\xe \v Initialize\:phys::CameraManager}
{\xe \v phys::CameraManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::CameraManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This specific initializor is unneeded, but we implement it for compatibility. It also exists in case a derived class wants to override it for some reason. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 140 of file cameramanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
cameramanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
cameramanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Caption Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Caption}
{\xe \v phys::UI::Caption}
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use with text. }}\par
{
{\f2 #include <uicaption.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPY" }{}}{\fldrslt {\cs37\ul\cf2 ~Caption}}}
 (){\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPZ" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQA" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQB" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this caption to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQC" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this caption to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQD" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the mouse is over this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQE" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stored value of whether or not the mouse is over the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQF" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQG" }{}}{\fldrslt {\cs37\ul\cf2 SetText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text displayed within the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 GetText}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the text displayed within the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQI" }{}}{\fldrslt {\cs37\ul\cf2 SetTextScale}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Scale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scaling to be applied to the text being rendered. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQJ" }{}}{\fldrslt {\cs37\ul\cf2 GetTextScale}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scaling currently being applied to the rendered text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQK" }{}}{\fldrslt {\cs37\ul\cf2 SetTextColour}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &TextColour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the text in this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQL" }{}}{\fldrslt {\cs37\ul\cf2 GetTextColour}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the colour for the text in this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 SetGlyphIndex}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 GlyphIndex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the glyph index to be used with this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQN" }{}}{\fldrslt {\cs37\ul\cf2 GetGlyphIndex}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the glyph index in use by this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQO" }{}}{\fldrslt {\cs37\ul\cf2 SetCursorOffset}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the number of pixels text should be offset from the side when rendering. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQP" }{}}{\fldrslt {\cs37\ul\cf2 GetCursorOffset}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of pixels text should be offset from the side when rendering. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQQ" }{}}{\fldrslt {\cs37\ul\cf2 SetBackgroundColour}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background colour of the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQR" }{}}{\fldrslt {\cs37\ul\cf2 SetBackgroundSprite}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background image(if provided in the atlas) of the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 HorizontallyAlign}}}
 (UI::TextHorizontalAlign Align)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQT" }{}}{\fldrslt {\cs37\ul\cf2 VerticallyAlign}}}
 (UI::TextVerticalAlign Align)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQU" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQV" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQW" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this caption in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQX" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this caption in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQY" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQZ" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this caption in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRB" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this caption in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRC" }{}}{\fldrslt {\cs37\ul\cf2 SetRenderPriority}}}
 (UI::RenderPriority Priority)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this caption should be rendered with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual UI::RenderPriority {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRD" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this caption should be rendered with. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Caption * {\b GorillaCaption}{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Rectangle * {\b GorillaRectangle}{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\b Parent}{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b Glyphs}{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b MouseHover}{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelPosition}{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelSize}{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\b Name}{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use with text. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlike a button, this class cannot be interacted with by clicking. It is important to understand what you want your space to do when selecting the class to use. \par \par Markup Texts and Captions are similar in that they both display text messages that can be altered readily, the primary difference between the two is that Captions are meant for small simple messages with background functionality built in, where as Markup Texts have no background functionality, but they use a light markup language to accomplish special effects with the text. \par
}{
Definition at line 73 of file uicaption.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Caption\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:Caption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Caption::Caption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this caption. \par
{\i Position} The top left position of the caption. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the caption. \par
{\i Layer} Pointer to the layer that created this caption. \par
}
}{
Definition at line 57 of file uicaption.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Caption::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the mouse is over this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether the mouse is over this caption. \par
}}{
Definition at line 104 of file uicaption.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Caption::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this caption in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this caption. \par
}}{
Definition at line 255 of file uicaption.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Caption::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this caption in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this caption. \par
}}{
Definition at line 284 of file uicaption.cpp.}\par
}
{\xe \v GetCursorOffset\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetCursorOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Caption::GetCursorOffset (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of pixels text should be offset from the side when rendering. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the number of pixels text is currently being offset from the side. \par
}}{
Definition at line 175 of file uicaption.cpp.}\par
}
{\xe \v GetGlyphIndex\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetGlyphIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Caption::GetGlyphIndex (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the glyph index in use by this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The glyph index is defined in your gorilla file. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Returns} a Whole representing the index of the glyph in use by this caption.. \par
}
}{
Definition at line 165 of file uicaption.cpp.}\par
}
{\xe \v GetMouseHover\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Caption::GetMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stored value of whether or not the mouse is over the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does not perform any checks. If you want to do a manual check, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQD" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the stored value of whether or not the mouse is over the caption. \par
}}{
Definition at line 118 of file uicaption.cpp.}\par
}
{\xe \v GetName\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::UI::Caption::GetName (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name of this caption. \par
}}{
Definition at line 123 of file uicaption.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Caption::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this caption. \par
}}{
Definition at line 242 of file uicaption.cpp.}\par
}
{\xe \v GetRenderPriority\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UI::RenderPriority phys::UI::Caption::GetRenderPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this caption should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing this caption's priority level. \par
}}{
Definition at line 311 of file uicaption.cpp.}\par
}
{\xe \v GetSize\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Caption::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this caption. \par
}}{
Definition at line 271 of file uicaption.cpp.}\par
}
{\xe \v GetText\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::UI::Caption::GetText (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the text displayed within the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the text being displayed. \par
}}{
Definition at line 133 of file uicaption.cpp.}\par
}
{\xe \v GetTextColour\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetTextColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::UI::Caption::GetTextColour (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the colour for the text in this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a colourvalue representing the currently set colour of the text in this caption. \par
}}{
Definition at line 153 of file uicaption.cpp.}\par
}
{\xe \v GetTextScale\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:GetTextScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::UI::Caption::GetTextScale (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scaling currently being applied to the rendered text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real value representing the scale applied to the text in this caption. <1.0 means smaller, >1.0 means larger. \par
}}{
Definition at line 143 of file uicaption.cpp.}\par
}
{\xe \v HorizontallyAlign\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:HorizontallyAlign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::HorizontallyAlign (UI::TextHorizontalAlign {\i Align}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value for this is UI::Txt_Middle. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Align} The enum value representing the horizontal alignment to be set. \par
}
}{
Definition at line 192 of file uicaption.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Caption::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this caption. \par
}}{
Definition at line 87 of file uicaption.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this caption in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this caption. \par
}
}{
Definition at line 247 of file uicaption.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this caption in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this caption. \par
}
}{
Definition at line 276 of file uicaption.cpp.}\par
}
{\xe \v SetBackgroundColour\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetBackgroundColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetBackgroundColour (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background colour of the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} A colour value representing the colour to be set. \par
}
}{
Definition at line 180 of file uicaption.cpp.}\par
}
{\xe \v SetBackgroundSprite\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetBackgroundSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetBackgroundSprite (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background image(if provided in the atlas) of the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the sprite to set as the background. \par
}
}{
Definition at line 185 of file uicaption.cpp.}\par
}
{\xe \v SetCursorOffset\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetCursorOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetCursorOffset (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Offset}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the number of pixels text should be offset from the side when rendering. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This doesn't apply when text is being rendered with a Middle alignment. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Offset} The number of pixels from the side text should be offset. \par
}
}{
Definition at line 170 of file uicaption.cpp.}\par
}
{\xe \v SetGlyphIndex\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetGlyphIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetGlyphIndex (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i GlyphIndex}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the glyph index to be used with this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The glyph index is defined in your gorilla file. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GlyphIndex} The index of the glyph to use with this caption. \par
}
}{
Definition at line 159 of file uicaption.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this caption. \par
}
}{
Definition at line 232 of file uicaption.cpp.}\par
}
{\xe \v SetRenderPriority\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetRenderPriority (UI::RenderPriority {\i Priority}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this caption should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default value for this is Medium. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Priority} The priority level to be used when rendering this caption. \par
}
}{
Definition at line 290 of file uicaption.cpp.}\par
}
{\xe \v SetSize\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this caption. \par
}
}{
Definition at line 261 of file uicaption.cpp.}\par
}
{\xe \v SetText\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Text}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text displayed within the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Text} The text to be displayed. \par
}
}{
Definition at line 128 of file uicaption.cpp.}\par
}
{\xe \v SetTextColour\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetTextColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetTextColour (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i TextColour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the text in this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TextColour} A colourvalue representing the desired colour. \par
}
}{
Definition at line 148 of file uicaption.cpp.}\par
}
{\xe \v SetTextScale\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetTextScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetTextScale ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Scale}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scaling to be applied to the text being rendered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Scale} A Real value representing the scale to be applied. <1.0 means smaller, >1.0 means larger. \par
}
}{
Definition at line 138 of file uicaption.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::SetVisible (bool {\i Visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visible} Bool determining whether or not this caption should be visible. \par
}
}{
Definition at line 81 of file uicaption.cpp.}\par
}
{\xe \v VerticallyAlign\:phys::UI::Caption}
{\xe \v phys::UI::Caption\:VerticallyAlign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Caption::VerticallyAlign (UI::TextVerticalAlign {\i Align}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value for this is UI::Txt_Center. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Align} The enum value representing the vertical alignment to be set. \par
}
}{
Definition at line 212 of file uicaption.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uicaption.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uicaption.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::CheckBox Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox}
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple widget for storing a bool value. }}\par
{
{\f2 #include <uicheckbox.h>}}\par
Inheritance diagram for phys::UI::CheckBox:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d10/classphys_1_1UI_1_1CheckBox.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRN" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &LabelText, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRO" }{}}{\fldrslt {\cs37\ul\cf2 ~CheckBox}}}
 (){\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRP" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRQ" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRR" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this checkbox to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRS" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this checkbox to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRT" }{}}{\fldrslt {\cs37\ul\cf2 IsChecked}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this checkbox is checked or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRU" }{}}{\fldrslt {\cs37\ul\cf2 ManualCheck}}}
 (bool Check)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually check or uncheck this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRV" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRW" }{}}{\fldrslt {\cs37\ul\cf2 SetLabelText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &LabelText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text label to be displayed with this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRX" }{}}{\fldrslt {\cs37\ul\cf2 GetLabelText}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently set label being displayed with this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRY" }{}}{\fldrslt {\cs37\ul\cf2 SetUncheckedSprite}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Unchecked, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Hovered="")\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the unchecked status sprite and an optional unchecked hovered sprite. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRZ" }{}}{\fldrslt {\cs37\ul\cf2 SetCheckedSprite}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Checked, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Hovered="")\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the checked status sprite and an optional checked hovered sprite. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSA" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSB" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSC" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSD" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSE" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSF" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSG" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this checkbox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSI" }{}}{\fldrslt {\cs37\ul\cf2 GetCheckBoxButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} this checkbox is based on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSJ" }{}}{\fldrslt {\cs37\ul\cf2 GetCheckBoxLabel}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the label for this checkbox. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b SetSpriteSet} (std::pair< std::string, std::string > &SpriteSet){\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false){\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with widget update/automation. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\b Box}{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * {\b Label}{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::pair< std::string, std::string > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 UncheckedSet}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::pair< std::string, std::string > {\b CheckedSet}{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b GlyphIndex}{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Checked}{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b CheckLock}{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b UIManager}{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple widget for storing a bool value. \par
}{
Definition at line 58 of file uicheckbox.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CheckBox\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:CheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::CheckBox::CheckBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i LabelText}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The dimensions provided {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the checkbox. \par
{\i Position} The top left position of the checkbox. \par
{\i Size} The size of the checkbox. \par
{\i Layer} Pointer to the Layer that created this checkbox. \par
}
}{
Definition at line 57 of file uicheckbox.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::CheckBox::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this checkbox, false if it's not. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 176 of file uicheckbox.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::CheckBox::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this checkbox. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 259 of file uicheckbox.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::CheckBox::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this checkbox. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 293 of file uicheckbox.cpp.}\par
}
{\xe \v GetCheckBoxButton\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetCheckBoxButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::CheckBox::GetCheckBoxButton ()}
}\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} this checkbox is based on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button this checkbox is based on. \par
}}{
Definition at line 298 of file uicheckbox.cpp.}\par
}
{\xe \v GetCheckBoxLabel\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetCheckBoxLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * phys::UI::CheckBox::GetCheckBoxLabel ()}
}\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the label for this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the label for this checkbox. \par
}}{
Definition at line 303 of file uicheckbox.cpp.}\par
}
{\xe \v GetLabelText\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetLabelText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::UI::CheckBox::GetLabelText (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently set label being displayed with this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the currently set label. If no label is set this will return an empty string. \par
}}{
Definition at line 203 of file uicheckbox.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::CheckBox::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this checkbox. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 242 of file uicheckbox.cpp.}\par
}
{\xe \v GetSize\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::CheckBox::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this checkbox. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 276 of file uicheckbox.cpp.}\par
}
{\xe \v IsChecked\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:IsChecked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::CheckBox::IsChecked (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this checkbox is checked or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing whether or not this checkbox is checked. \par
}}{
Definition at line 158 of file uicheckbox.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::CheckBox::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this checkbox. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 137 of file uicheckbox.cpp.}\par
}
{\xe \v ManualCheck\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:ManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::ManualCheck (bool {\i Check}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manually check or uncheck this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Check} The value to set the status of this checkbox. \par
}
}{
Definition at line 163 of file uicheckbox.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this checkbox. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 247 of file uicheckbox.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this checkbox. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 281 of file uicheckbox.cpp.}\par
}
{\xe \v SetCheckedSprite\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetCheckedSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetCheckedSprite ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Checked}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Hovered} = {\f2 ""}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the checked status sprite and an optional checked hovered sprite. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Unchecked} The name of the sprite in the Atlas you wish to set as the checked status sprite. \par
{\i Hovered} The name of the sprite in the Atlas you with to sed on the checked/hovered sprite. Leaving this to default or passing in a blank string will cause it to ignore this parameter. \par
}
}{
Definition at line 222 of file uicheckbox.cpp.}\par
}
{\xe \v SetLabelText\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetLabelText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetLabelText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i LabelText}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text label to be displayed with this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a label hasn't been set when this is called, this funtion will create a new one and set it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Label} The text message to display with this checkbox. \par
}
}{
Definition at line 190 of file uicheckbox.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this checkbox. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 230 of file uicheckbox.cpp.}\par
}
{\xe \v SetSize\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this checkbox. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 264 of file uicheckbox.cpp.}\par
}
{\xe \v SetUncheckedSprite\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetUncheckedSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetUncheckedSprite ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Unchecked}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Hovered} = {\f2 ""}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the unchecked status sprite and an optional unchecked hovered sprite. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Unchecked} The name of the sprite in the Atlas you wish to set as the unchecked status sprite. \par
{\i Hovered} The name of the sprite in the Atlas you with to sed on the unchecked/hovered sprite. Leaving this to default or passing in a blank string will cause it to ignore this parameter. \par
}
}{
Definition at line 214 of file uicheckbox.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::CheckBox::SetVisible (bool {\i visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this checkbox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this checkbox should be visible. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 129 of file uicheckbox.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v UncheckedSet\:phys::UI::CheckBox}
{\xe \v phys::UI::CheckBox\:UncheckedSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::pair<std::string,std::string> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox::UncheckedSet}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000022" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Fix the issue with all strings being const, so we can resume use of typedefs here. \par
}
}{
Definition at line 65 of file uicheckbox.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uicheckbox.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uicheckbox.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ColourValue Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ColourValue}
{\xe \v phys::ColourValue}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple class for holding 4 reals representing the colour any give object or lightsource can have. }}\par
{
{\f2 #include <colourvalue.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 red, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 green, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 blue)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-Alpha constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 red, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 green, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 blue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 alpha)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alpha constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYH" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 (const Ogre::ColourValue &OgreValues)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYI" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &OtherColour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYJ" }{}}{\fldrslt {\cs37\ul\cf2 ~ColourValue}}}
 (){\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::ColourValue {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYK" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreColourValue}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates and returns an Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} class with values equal to this one. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYL" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYM" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYN" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &OtherColour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 GetBlank}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing no colour. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYP" }{}}{\fldrslt {\cs37\ul\cf2 GetWhite}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour White. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYQ" }{}}{\fldrslt {\cs37\ul\cf2 GetBlack}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Black. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYR" }{}}{\fldrslt {\cs37\ul\cf2 GetRed}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Red. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYS" }{}}{\fldrslt {\cs37\ul\cf2 GetGreen}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Green. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYT" }{}}{\fldrslt {\cs37\ul\cf2 GetBlue}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Blue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYU" }{}}{\fldrslt {\cs37\ul\cf2 GetYellow}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Yellow. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYV" }{}}{\fldrslt {\cs37\ul\cf2 GetCyan}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Cyan. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYW" }{}}{\fldrslt {\cs37\ul\cf2 GetMagenta}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Magenta. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYX" }{}}{\fldrslt {\cs37\ul\cf2 Red}}}
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value from 0.0 to 1.0 representing the amount of red present in the colour. 1.0 if very red, 0.0 is no red. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYY" }{}}{\fldrslt {\cs37\ul\cf2 Green}}}
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value from 0.0 to 1.0 representing the amount of green present in the colour. 1.0 if very green, 0.0 is no green. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYZ" }{}}{\fldrslt {\cs37\ul\cf2 Blue}}}
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value from 0.0 to 1.0 representing the amount of blue present in the colour. 1.0 if very blue, 0.0 is no blue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 Alpha}}}
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value from 0.0 to 1.0 representing the transparency of the colours. 1.0 is opaque and 0.0 is clear. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a simple class for holding 4 reals representing the colour any give object or lightsource can have. \par
}{
Definition at line 59 of file colourvalue.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ColourValue\:phys::ColourValue}
{\xe \v phys::ColourValue\:ColourValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ColourValue::ColourValue ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i red}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i green}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i blue})}
}\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-Alpha constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor assumes the alpha value to be 1.0 (completely opaque). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i red} Real representing the amount of red present in the colour. \par
{\i green} Real representing the amount of green present in the colour. \par
{\i blue} Real representing the amount of blue present in the colour. \par
}
}{
Definition at line 50 of file colourvalue.cpp.}\par
}
{\xe \v ColourValue\:phys::ColourValue}
{\xe \v phys::ColourValue\:ColourValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ColourValue::ColourValue ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i red}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i green}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i blue}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i alpha})}
}\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alpha constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor allows you to set the alpha value. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i red} Real representing the amount of red present in the colour. \par
{\i green} Real representing the amount of green present in the colour. \par
{\i blue} Real representing the amount of blue present in the colour. \par
{\i alpha} Real representing the transparency of the colours. \par
}
}{
Definition at line 58 of file colourvalue.cpp.}\par
}
{\xe \v ColourValue\:phys::ColourValue}
{\xe \v phys::ColourValue\:ColourValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ColourValue::ColourValue (const Ogre::ColourValue & {\i OgreValues})}
}\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal use only. Constructs a colourvalue class from an ogre colourvalue. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OgreValues} The Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} class to base this class on. \par
}
}{
Definition at line 66 of file colourvalue.cpp.}\par
}
{\xe \v ColourValue\:phys::ColourValue}
{\xe \v phys::ColourValue\:ColourValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ColourValue::ColourValue (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i OtherColour})}
}\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OtherColour} \par
}
}{
Definition at line 74 of file colourvalue.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetBlack\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetBlack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetBlack (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Black. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 132 of file colourvalue.cpp.}\par
}
{\xe \v GetBlank\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetBlank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetBlank (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing no colour. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 120 of file colourvalue.cpp.}\par
}
{\xe \v GetBlue\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetBlue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetBlue (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Blue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 150 of file colourvalue.cpp.}\par
}
{\xe \v GetCyan\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetCyan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetCyan (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Cyan. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 162 of file colourvalue.cpp.}\par
}
{\xe \v GetGreen\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetGreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetGreen (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Green. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 144 of file colourvalue.cpp.}\par
}
{\xe \v GetMagenta\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetMagenta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetMagenta (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Magenta. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 168 of file colourvalue.cpp.}\par
}
{\xe \v GetOgreColourValue\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetOgreColourValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::ColourValue phys::ColourValue::GetOgreColourValue () const}
}\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates and returns an Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} class with values equal to this one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is intended for internal use only. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} class that has values equal to this one. \par
}}{
Definition at line 86 of file colourvalue.cpp.}\par
}
{\xe \v GetRed\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetRed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetRed (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Red. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 138 of file colourvalue.cpp.}\par
}
{\xe \v GetWhite\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetWhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetWhite (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour White. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 126 of file colourvalue.cpp.}\par
}
{\xe \v GetYellow\:phys::ColourValue}
{\xe \v phys::ColourValue\:GetYellow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::ColourValue::GetYellow (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the colour Yellow. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. \par
}}{
Definition at line 156 of file colourvalue.cpp.}\par
}
{\xe \v operator!=\:phys::ColourValue}
{\xe \v phys::ColourValue\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ColourValue::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour})}
}\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} This is another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} to compare with. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid False if the colors match perfectly, True otherwise \par
}}{
Definition at line 104 of file colourvalue.cpp.}\par
}
{\xe \v operator=\:phys::ColourValue}
{\xe \v phys::ColourValue\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ColourValue::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i OtherColour})}
}\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OtherColour} The colour values you want to overwrite this colour's values with. \par
}
}{
Definition at line 112 of file colourvalue.cpp.}\par
}
{\xe \v operator==\:phys::ColourValue}
{\xe \v phys::ColourValue\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ColourValue::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour})}
}\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} This is another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} to compare with. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the colors match perfectly, false otherwise \par
}}{
Definition at line 96 of file colourvalue.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
colourvalue.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
colourvalue.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::Document Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::Document}
{\xe \v phys::xml::Document}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root node of any xml hierarchy is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{
{\f2 #include <xmldoc.h>}}\par
Inheritance diagram for phys::xml::Document:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d44/classphys_1_1xml_1_1Document.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKY" }{}}{\fldrslt {\cs37\ul\cf2 Document}}}
 (){\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty document with just a root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKZ" }{}}{\fldrslt {\cs37\ul\cf2 ~Document}}}
 (){\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tears down a document, and incidentally invalidates all {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} handles to this document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLA" }{}}{\fldrslt {\cs37\ul\cf2 Reset}}}
 (){\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all nodes, leaving the empty document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLB" }{}}{\fldrslt {\cs37\ul\cf2 Reset}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}}
 &proto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all nodes, then copies the entire contents of the specified document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLC" }{}}{\fldrslt {\cs37\ul\cf2 Load}}}
 (std::basic_istream< char, std::char_traits< char > > &stream, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load XML from a stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLD" }{}}{\fldrslt {\cs37\ul\cf2 Load}}}
 (std::basic_istream< wchar_t, std::char_traits< wchar_t > > &stream, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load XML from a wide stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLE" }{}}{\fldrslt {\cs37\ul\cf2 Load}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *contents, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load XML from a Character array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLF" }{}}{\fldrslt {\cs37\ul\cf2 LoadFile}}}
 (const char *Path, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLG" }{}}{\fldrslt {\cs37\ul\cf2 LoadFile}}}
 (const wchar_t *Path, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLH" }{}}{\fldrslt {\cs37\ul\cf2 LoadBuffer}}}
 (const void *contents, size_t size, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from buffer. Copies/converts the buffer, so it may be deleted or changed after the function returns. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLI" }{}}{\fldrslt {\cs37\ul\cf2 LoadBufferInplace}}}
 (void *contents, size_t size, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLJ" }{}}{\fldrslt {\cs37\ul\cf2 LoadBufferInplaceOwn}}}
 (void *contents, size_t size, unsigned int options={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLK" }{}}{\fldrslt {\cs37\ul\cf2 Save}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}
 &WriterInstance, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML document to WriterInstance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLL" }{}}{\fldrslt {\cs37\ul\cf2 Save}}}
 (std::basic_ostream< char, std::char_traits< char > > &stream, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML document to a stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLM" }{}}{\fldrslt {\cs37\ul\cf2 Save}}}
 (std::basic_ostream< wchar_t, std::char_traits< wchar_t > > &stream, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML document to a stream of wide characters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLN" }{}}{\fldrslt {\cs37\ul\cf2 SaveFile}}}
 (const char *Path, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML to file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLO" }{}}{\fldrslt {\cs37\ul\cf2 SaveFile}}}
 (const wchar_t *Path, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("	"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML to file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLP" }{}}{\fldrslt {\cs37\ul\cf2 DocumentElement}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get document element. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root node of any xml hierarchy is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This has all the same features as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and include a few features for saving, loading, streaming and to a limited degree managing the document declaration. \par
}{
Definition at line 990 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DocumentElement\:phys::xml::Document}
{\xe \v phys::xml::Document\:DocumentElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Document::DocumentElement () const}
}\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get document element. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} that is the root element of the xml {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} \par
}}}
{\xe \v Load\:phys::xml::Document}
{\xe \v phys::xml::Document\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Document::Load (std::basic_istream< char, std::char_traits< char > > & {\i stream}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto})}
}\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load XML from a stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} An std::istream which has xml text in it. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v Load\:phys::xml::Document}
{\xe \v phys::xml::Document\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Document::Load (std::basic_istream< wchar_t, std::char_traits< wchar_t > > & {\i stream}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
})}
}\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load XML from a wide stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} An std::basic_istream which has xml wide character text in it. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v Load\:phys::xml::Document}
{\xe \v phys::xml::Document\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Document::Load (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i contents}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
})}
}\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load XML from a Character array. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contents} A pointer to the Null terminated array of Characters. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v LoadBuffer\:phys::xml::Document}
{\xe \v phys::xml::Document\:LoadBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Document::LoadBuffer (const void * {\i contents}, size_t {\i size}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto})}
}\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from buffer. Copies/converts the buffer, so it may be deleted or changed after the function returns. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contents} A pointer to buffer containing the xml document to be parsed, that must remain for the lifecycle of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 xml::Document}}}. \par
{\i size} The size of the buffer. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contents} A pointer to buffer containing the xml document to be parsed, that will remain unchanged. \par
{\i size} The size of the buffer. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v LoadBufferInplace\:phys::xml::Document}
{\xe \v phys::xml::Document\:LoadBufferInplace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Document::LoadBufferInplace (void * {\i contents}, size_t {\i size}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto})}
}\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You should ensure that buffer data will persist throughout the document's lifetime, and free the buffer memory manually once document is destroyed. \par
}}
{\xe \v LoadBufferInplaceOwn\:phys::xml::Document}
{\xe \v phys::xml::Document\:LoadBufferInplaceOwn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 phys::xml::Document::LoadBufferInplaceOwn (void * {\i contents}, size_t {\i size}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto})}
}\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You should allocate the buffer with pugixml allocation function; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 xml::Document}}} will free the buffer when it is no longer needed (you can not use it anymore). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contents} A pointer to buffer containing the xml document to be parsed. \par
{\i size} The size of the buffer. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v LoadFile\:phys::xml::Document}
{\xe \v phys::xml::Document\:LoadFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 phys::xml::Document::LoadFile (const char * {\i Path}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto})}
}\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Path} An c-style char array that contains the path and filename of the xml document to load. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v LoadFile\:phys::xml::Document}
{\xe \v phys::xml::Document\:LoadFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 phys::xml::Document::LoadFile (const wchar_t * {\i Path}, unsigned int {\i options} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 ParseDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto})}
}\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load document from file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Path} An c-style wide char array that contains the path and filename of the xml document to load. \par
{\i options} A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}} that stores the the outcome of attempting to load the document. \par
}}}
{\xe \v Reset\:phys::xml::Document}
{\xe \v phys::xml::Document\:Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Document::Reset (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}}
 & {\i proto})}
}\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all nodes, then copies the entire contents of the specified document. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} to copy. \par
}
}}
{\xe \v Save\:phys::xml::Document}
{\xe \v phys::xml::Document\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::xml::Document::Save (std::basic_ostream< wchar_t, std::char_traits< wchar_t > > & {\i stream}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}) const}
}\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML document to a stream of wide characters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} The output stream of wide characters to send the XML document to. \par
{\i indent} The Character(s) used to represent a tab in the output, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}}. \par
}
}}
{\xe \v Save\:phys::xml::Document}
{\xe \v phys::xml::Document\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::xml::Document::Save (std::basic_ostream< char, std::char_traits< char > > & {\i stream}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto}) const}
}\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML document to a stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} The output stream to send the XML document to. \par
{\i indent} The Character(s) used to represent a tab in the output, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}}. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto. \par
}
}}
{\xe \v Save\:phys::xml::Document}
{\xe \v phys::xml::Document\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::xml::Document::Save ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}
 & {\i WriterInstance}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto}) const}
}\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML document to WriterInstance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WriterInstance} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}} that will be used to output the xml text. \par
{\i indent} The Character(s) used to represent a tab in the output, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}}. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto. \par
}
}}
{\xe \v SaveFile\:phys::xml::Document}
{\xe \v phys::xml::Document\:SaveFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Document::SaveFile (const wchar_t * {\i Path}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("	")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto}) const}
}\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML to file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Path} A c-style array of wide chars that contain the filename (and any path) of the file to be output. \par
{\i indent} The Character(s) used to represent a tab in the output, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}}. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid False if the target file could not be opened for writing \par
}}}
{\xe \v SaveFile\:phys::xml::Document}
{\xe \v phys::xml::Document\:SaveFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Document::SaveFile (const char * {\i Path}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto}) const}
}\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save XML to file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Path} A c-style array of chars that contain the filename (and any path) of the file to be output. \par
{\i indent} The Character(s) used to represent a tab in the output, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}}. \par
{\i DocumentEncoding} What kind of text is in the stream, this defaults to Encoding::EncodingAuto. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid False if the target file could not be opened for writing \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventBase Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventBase}
{\xe \v phys::EventBase}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base class for all events. }}\par
{
{\f2 #include <eventbase.h>}}\par
Inheritance diagram for phys::EventBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d80/classphys_1_1EventBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZC" }{}}{\fldrslt {\cs37\ul\cf2 Collision}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZD" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZE" }{}}{\fldrslt {\cs37\ul\cf2 QuitMessage}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZF" }{}}{\fldrslt {\cs37\ul\cf2 RenderTime}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZG" }{}}{\fldrslt {\cs37\ul\cf2 UserInput}}}
, 
{\b Other}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZH" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will aid in identifying all classes that inherit from this class. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base class for all events. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All Events used in the Event Manager, will inherit from this. While not absolutely required by the game programmer to write their own events, it it could be useful. Instances of this class cannot be made, and all classes that inherit from this are expected to implement getEventType(). \par
}{
Definition at line 62 of file eventbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v EventType\:phys::EventBase}
{\xe \v phys::EventBase\:EventType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase::EventType}}}
}
}\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of values that can be used to identify Events. \par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Collision\:phys::EventBase}
{\xe \v phys::EventBase\:Collision}
{\b {\i Collision{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the Event is a Physics Collision Event \par
}{\xe \v GameWindow\:phys::EventBase}
{\xe \v phys::EventBase\:GameWindow}
{\b {\i GameWindow{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the Event is a Game Window Management Event \par
}{\xe \v QuitMessage\:phys::EventBase}
{\xe \v phys::EventBase\:QuitMessage}
{\b {\i QuitMessage{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the Event is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventQuit}}} \par
}{\xe \v RenderTime\:phys::EventBase}
{\xe \v phys::EventBase\:RenderTime}
{\b {\i RenderTime{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the Event is a PhysEventRenderTime \par
}{\xe \v UserInput\:phys::EventBase}
{\xe \v phys::EventBase\:UserInput}
{\b {\i UserInput{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the Event is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} \par
}}
\par
{
Definition at line 68 of file eventbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetType\:phys::EventBase}
{\xe \v phys::EventBase\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 phys::EventBase::GetType () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will aid in identifying all classes that inherit from this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All Classes derived form this calls will return an Event::EventType that correspond the the data/class type they actually are. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns an eventype that will correspend with the actual event type. This can be used on all Phys game provided class to safely cast a pointer to the correct event type. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZI" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventCollision}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventGameWindow}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventQuit}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventRenderTime}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventUserInput}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventbase.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventCollision Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventCollision}
{\xe \v phys::EventCollision}
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an event class used to track collsions in the physics world. }}\par
{
{\f2 #include <eventcollision.h>}}\par
Inheritance diagram for phys::EventCollision:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/de9/classphys_1_1EventCollision.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 (){\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZO" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *actora, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *actorb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 localAlocation, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 localBlocation, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 worldlocation, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 impulse)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZP" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZQ" }{}}{\fldrslt {\cs37\ul\cf2 ~EventCollision}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZI" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns EventType::Collision. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 WorldLocation}}}
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The location in the world where the collision occured. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 LocalALocation}}}
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The location in ActorA's local space where the collision occured. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZT" }{}}{\fldrslt {\cs37\ul\cf2 LocalBLocation}}}
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The location in ActorB's local space where the collision occured. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZU" }{}}{\fldrslt {\cs37\ul\cf2 Impulse}}}
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The amount of force of the collision. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 ActorA}}}
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The first Actor involved in the collision. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZW" }{}}{\fldrslt {\cs37\ul\cf2 ActorB}}}
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The second Actor invovled in the collision. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an event class used to track collsions in the physics world. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class will be used for tracking collisions in the physics world and will keep track of basic data related to the collision. \par
}{
Definition at line 55 of file eventcollision.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventCollision\:phys::EventCollision}
{\xe \v phys::EventCollision\:EventCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventCollision::EventCollision ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i actora}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i actorb}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i localAlocation}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i localBlocation}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i worldlocation}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i impulse})}
}\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will construct a basic event class with the minimum data needed. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i actora} The first Actor involved in the collision. \par
{\i actorb} The second Actor invovled in the collision. \par
{\i localAlocation} The location in ActorA's local space where the collision occured. \par
{\i localBlocation} The location in ActorB's local space where the collision occured. \par
{\i worldlocation} The location in the world where the collision occured. \par
{\i impulse} The amount of force of the collision. \par
}
}{
Definition at line 60 of file eventcollision.cpp.}\par
}
{\xe \v EventCollision\:phys::EventCollision}
{\xe \v phys::EventCollision\:EventCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventCollision::EventCollision (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}} to copy \par
}
}{
Definition at line 70 of file eventcollision.cpp.}\par
}
{\xe \v ~EventCollision\:phys::EventCollision}
{\xe \v phys::EventCollision\:~EventCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventCollision::~EventCollision (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Class Destructor. \par
}{
Definition at line 80 of file eventcollision.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetType\:phys::EventCollision}
{\xe \v phys::EventCollision\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 phys::EventCollision::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns EventType::Collision. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the kind of message this is, specifcally EventType::Collision. This method is inherited from phys::Event. . \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZH" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}}
.}\par
{
Definition at line 84 of file eventcollision.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventcollision.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventcollision.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventGameWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventGameWindow}
{\xe \v phys::EventGameWindow}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen. }}\par
{
{\f2 #include <eventgamewindow.h>}}\par
Inheritance diagram for phys::EventGameWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d0f/classphys_1_1EventGameWindow.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 GameWindowEventID}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAC" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_NONE}}}
 = 0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAD" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_FIRST}}}
 =  GAME_WINDOW_NONE, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAE" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_SHOWN}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAF" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_HIDDEN}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAG" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_EXPOSED}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAH" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_MOVED}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAI" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_RESIZED}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAJ" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_SIZE_CHANGED}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAK" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_MINIMIZED}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAL" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_MAXIMIZED}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAM" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_RESTORED}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAN" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_ENTER}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAO" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_LEAVE}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAP" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_FOCUS_GAINED}}}
 =  12, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAQ" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_FOCUS_LOST}}}
 =  13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAR" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_CLOSE}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAS" }{}}{\fldrslt {\cs37\ul\cf2 GAME_WINDOW_LAST}}}
 =  GAME_WINDOW_CLOSE
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to identify the kind of change that has happened to the game window. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAT" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 Raw_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} from a Rawevent. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAU" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 GameWindowEventID}}}
 GWEventID=GAME_WINDOW_NONE, int First=0, int Second=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} from manually assigned values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAV" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAW" }{}}{\fldrslt {\cs37\ul\cf2 ~EventGameWindow}}}
 (){\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructs this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZJ" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns EventType::GameWindow. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 GameWindowEventID}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAX" }{}}{\fldrslt {\cs37\ul\cf2 GetEventID}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
What just happened, what kind of event was it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAY" }{}}{\fldrslt {\cs37\ul\cf2 GetFirstEventData}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Where or how much happened, Get the first event dependent data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAZ" }{}}{\fldrslt {\cs37\ul\cf2 GetSecondEventData}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Where or how much happened, Get the second event dependent data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBA" }{}}{\fldrslt {\cs37\ul\cf2 IsEventIDValid}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to help determine if this Event is valid by checking the contents of the GameWindowEventID. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBB" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment of a this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBC" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality comparison of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBD" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 GameWindowEventID}}}
 &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality comparison of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}} and a GameWindowEventID. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBE" }{}}{\fldrslt {\cs37\ul\cf2 GameWindowEventIDToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow::GameWindowEventID}}}
 GWEventID)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts GameWindowEventID To Strings. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 Data}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds all internal data. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen. \par
}{
Definition at line 61 of file eventgamewindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v GameWindowEventID\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GameWindowEventID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventGameWindow::GameWindowEventID}}}
}
}\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to identify the kind of change that has happened to the game window. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v GAME_WINDOW_NONE\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_NONE}
{\b {\i GAME_WINDOW_NONE{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Never used \par
}{\xe \v GAME_WINDOW_FIRST\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_FIRST}
{\b {\i GAME_WINDOW_FIRST{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used only as the lower bounds of this enumeration \par
}{\xe \v GAME_WINDOW_SHOWN\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_SHOWN}
{\b {\i GAME_WINDOW_SHOWN{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been shown \par
}{\xe \v GAME_WINDOW_HIDDEN\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_HIDDEN}
{\b {\i GAME_WINDOW_HIDDEN{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been hidden \par
}{\xe \v GAME_WINDOW_EXPOSED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_EXPOSED}
{\b {\i GAME_WINDOW_EXPOSED{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been exposed and should be redrawn \par
}{\xe \v GAME_WINDOW_MOVED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_MOVED}
{\b {\i GAME_WINDOW_MOVED{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been moved to data1, data2 \par
}{\xe \v GAME_WINDOW_RESIZED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_RESIZED}
{\b {\i GAME_WINDOW_RESIZED{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been resized to data1xdata2 \par
}{\xe \v GAME_WINDOW_SIZE_CHANGED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_SIZE_CHANGED}
{\b {\i GAME_WINDOW_SIZE_CHANGED{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window size has changed, either as a result of an API call or through the system or user changing the window size. \par
}{\xe \v GAME_WINDOW_MINIMIZED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_MINIMIZED}
{\b {\i GAME_WINDOW_MINIMIZED{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been minimized \par
}{\xe \v GAME_WINDOW_MAXIMIZED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_MAXIMIZED}
{\b {\i GAME_WINDOW_MAXIMIZED{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been maximized \par
}{\xe \v GAME_WINDOW_RESTORED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_RESTORED}
{\b {\i GAME_WINDOW_RESTORED{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has been restored to normal size and position \par
}{\xe \v GAME_WINDOW_ENTER\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_ENTER}
{\b {\i GAME_WINDOW_ENTER{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has gained mouse focus \par
}{\xe \v GAME_WINDOW_LEAVE\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_LEAVE}
{\b {\i GAME_WINDOW_LEAVE{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has lost mouse focus \par
}{\xe \v GAME_WINDOW_FOCUS_GAINED\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_FOCUS_GAINED}
{\b {\i GAME_WINDOW_FOCUS_GAINED{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has gained keyboard focus \par
}{\xe \v GAME_WINDOW_FOCUS_LOST\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_FOCUS_LOST}
{\b {\i GAME_WINDOW_FOCUS_LOST{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window has lost keyboard focus \par
}{\xe \v GAME_WINDOW_CLOSE\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_CLOSE}
{\b {\i GAME_WINDOW_CLOSE{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window manager requests that the window be closed \par
}{\xe \v GAME_WINDOW_LAST\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GAME_WINDOW_LAST}
{\b {\i GAME_WINDOW_LAST{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used only as the Upper bounds of this enumeration \par
}}
\par
{
Definition at line 65 of file eventgamewindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventGameWindow\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:EventGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventGameWindow::EventGameWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 {\i Raw_}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} from a Rawevent. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Raw_} The RawEvent to decompose to use for the values of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} \par
}
}{
Definition at line 73 of file eventgamewindow.cpp.}\par
}
{\xe \v EventGameWindow\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:EventGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventGameWindow::EventGameWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow::GameWindowEventID}}}
 {\i GWEventID} = {\f2 GAME_WINDOW_NONE}, int {\i First} = {\f2 0}, int {\i Second} = {\f2 0}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} from manually assigned values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GWEventID} What kind of change happened \par
{\i First} A parameter that is dependant on the kind of change to the game window \par
{\i Second} A parameter that is dependant on the kind of change to the game window \par
}
}{
Definition at line 76 of file eventgamewindow.cpp.}\par
}
{\xe \v EventGameWindow\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:EventGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventGameWindow::EventGameWindow (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The Other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} to use in the creation on this \par
}
}{
Definition at line 79 of file eventgamewindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GameWindowEventIDToString\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GameWindowEventIDToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::EventGameWindow::GameWindowEventIDToString ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow::GameWindowEventID}}}
 {\i GWEventID}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts GameWindowEventID To Strings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GWEventID} the GameWindowEventID to get as a string \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a string containg the GameWindowEventID in a string as a developer would have typed it. \par
}}{
Definition at line 115 of file eventgamewindow.cpp.}\par
}
{\xe \v GetEventID\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GetEventID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow::GameWindowEventID}}}
 phys::EventGameWindow::GetEventID () const}
}\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
What just happened, what kind of event was it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A GameWindowEventID indicating what happened. \par
}}{
Definition at line 97 of file eventgamewindow.cpp.}\par
}
{\xe \v GetFirstEventData\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GetFirstEventData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::EventGameWindow::GetFirstEventData () const}
}\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Where or how much happened, Get the first event dependent data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An int with some details about the the event that happened.\par
}Currently this provides the x values for the new window locations in the event that a window moves, or it is resized. If moved it has the new location, if resized it has the new size. This may be used in places in the future. \par
}{
Definition at line 103 of file eventgamewindow.cpp.}\par
}
{\xe \v GetSecondEventData\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GetSecondEventData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::EventGameWindow::GetSecondEventData () const}
}\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Where or how much happened, Get the second event dependent data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently this provides the y values for the new window locations in the event that a window moves, or it is resized. If moved it has the new location, if resized it has the new size. This may be used in places in the future. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An int with some details about the the event that happened. \par
}}{
Definition at line 109 of file eventgamewindow.cpp.}\par
}
{\xe \v GetType\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 phys::EventGameWindow::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns EventType::GameWindow. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the kind of message this is, specifcally EventType::GameWindow . If this functions returns EventType::GameWindow, then and event pointer can safely be cast to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventGameWindow}}} . This method is inherited from phys::Event . \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZH" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}}
.}\par
{
Definition at line 86 of file eventgamewindow.cpp.}\par
}
{\xe \v IsEventIDValid\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:IsEventIDValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::EventGameWindow::IsEventIDValid () const}
}\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to help determine if this Event is valid by checking the contents of the GameWindowEventID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid True if the event if is between GAME_WINDOW_FIRST and GAME_WINDOW_LAST, false otherwise \par
}\par}}{
Definition at line 154 of file eventgamewindow.cpp.}\par
}
{\xe \v operator=\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventGameWindow::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment of a this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} to overwite this one. \par
}
}{
Definition at line 157 of file eventgamewindow.cpp.}\par
}
{\xe \v operator==\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::EventGameWindow::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 GameWindowEventID}}}
 & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality comparison of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}} and a GameWindowEventID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} the other GameWindowEventID to compare to the one stored in this. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the GameWindowEventID in this event matches the Other, false if otherwise. \par
}}{
Definition at line 172 of file eventgamewindow.cpp.}\par
}
{\xe \v operator==\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::EventGameWindow::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality comparison of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}} to compare to this one \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if identical, false if otherwise. \par
}}{
Definition at line 166 of file eventgamewindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Data\:phys::EventGameWindow}
{\xe \v phys::EventGameWindow\:Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindowData}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventGameWindow::Data}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds all internal data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 157 of file eventgamewindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventgamewindow.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventgamewindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventGameWindowData Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventGameWindowData}
{\xe \v phys::EventGameWindowData}
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used to keep private in one place that is actually private. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b EventGameWindowData} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow::GameWindowEventID}}}
 GWEventID, int First_, int Second_){\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow::GameWindowEventID}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZZ" }{}}{\fldrslt {\cs37\ul\cf2 EventID}}}
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
What kind of change happened to this game window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAA" }{}}{\fldrslt {\cs37\ul\cf2 First}}}
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
store a piece of information about the event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAB" }{}}{\fldrslt {\cs37\ul\cf2 Second}}}
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
store another piece of information about the event. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used to keep private in one place that is actually private. \par
}{
Definition at line 57 of file eventgamewindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventgamewindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventManager}
{\xe \v phys::EventManager}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for Events and facilitates the transfer of data. }}\par
{
{\f2 #include <eventmanager.h>}}\par
Inheritance diagram for phys::EventManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/dde/classphys_1_1EventManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 ~EventManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Deconstructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 DetectJoysticks}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Look for Joysticks that are hooked up to the system. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBI" }{}}{\fldrslt {\cs37\ul\cf2 GetRemainingEventCount}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a count of events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBJ" }{}}{\fldrslt {\cs37\ul\cf2 GetNextEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the Next event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBK" }{}}{\fldrslt {\cs37\ul\cf2 PopNextEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the Next event, and removes the Event from storage. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBL" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an Event From the que without looking at it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBM" }{}}{\fldrslt {\cs37\ul\cf2 AddEvent}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 *EventToAdd)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an event of any kind to the end of the Event Queue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBN" }{}}{\fldrslt {\cs37\ul\cf2 UpdateEvents}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pulls Events from the all the subsystems for use in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBO" }{}}{\fldrslt {\cs37\ul\cf2 GetNextCollisionEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Collision event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBP" }{}}{\fldrslt {\cs37\ul\cf2 PopNextCollisionEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Collision event and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBQ" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextCollisionEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First Collision Event From the que without looking at it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 * > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBR" }{}}{\fldrslt {\cs37\ul\cf2 GetAllCollisionEvents}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the Render {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}} events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBS" }{}}{\fldrslt {\cs37\ul\cf2 GetNextGameWindowEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBT" }{}}{\fldrslt {\cs37\ul\cf2 PopNextGameWindowEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} event and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBU" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextGameWindowEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} Event From the que without looking at it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 * > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBV" }{}}{\fldrslt {\cs37\ul\cf2 GetAllGameWindowEvents}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the Render {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}} events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBW" }{}}{\fldrslt {\cs37\ul\cf2 GetNextRenderTimeEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Rendertime event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 PopNextRenderTimeEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Rendertime event and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBY" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextRenderTimeEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First Rendertime Event From the que without looking at it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 * > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBZ" }{}}{\fldrslt {\cs37\ul\cf2 GetAllRenderTimeEvents}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the Render {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}} events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 GetNextUserInputEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next User Input event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCB" }{}}{\fldrslt {\cs37\ul\cf2 PopNextUserInputEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next User Input event and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCC" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextUserInputEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First User Input Event From the que without looking at it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 * > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCD" }{}}{\fldrslt {\cs37\ul\cf2 GetAllUserInputEvents}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the User Input events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 GetNextQuitEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 PopNextQuitEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextQuitEvent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} From the que without looking at it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
 * > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCH" }{}}{\fldrslt {\cs37\ul\cf2 GetAllQuitEvents}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the quit events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCI" }{}}{\fldrslt {\cs37\ul\cf2 GetNextSpecificEvent}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 SpecificType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next kind event of the Specified type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCJ" }{}}{\fldrslt {\cs37\ul\cf2 PopNextSpecificEvent}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 SpecificType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next kind event of the Specified type, and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCK" }{}}{\fldrslt {\cs37\ul\cf2 RemoveNextSpecificEvent}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 SpecificType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next kind event of the Specified type, and removes it from the Que. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCL" }{}}{\fldrslt {\cs37\ul\cf2 GetAllSpecificEvents}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 SpecificType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the specified events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCM" }{}}{\fldrslt {\cs37\ul\cf2 RemoveAllSpecificEvents}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 SpecificType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes all the events of the specified type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCN" }{}}{\fldrslt {\cs37\ul\cf2 AddPollingCheck}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 &InputToTryPolling)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates extra events each iteration of the main loop, based on user input polling. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCO" }{}}{\fldrslt {\cs37\ul\cf2 RemovePollingCheck}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 &InputToStopPolling)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes Events from the list(s) of what needs to be polled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCP" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCQ" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCR" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::ostream & {\b PHYS_LIB::operator<<} (std::ostream &stream, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
 &Mgr){\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::istream & {\b PHYS_LIB::operator>>} (std::istream &stream, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
 &Mgr){\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PHYS_LIB::operator>>} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node}}}
 &OneNode, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
 &Mgr){\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for Events and facilitates the transfer of data. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Event Manager Exists to passed important information about Gamestate from where it is generated to where it is needed. It is the Game Developers option whether they want to grab events directly using the get functions that have filters, or if they want to get all the events at once from a central location and dispatch form there. \par Since all User input comes in the form of events, this is also where user input Polling and optional input sources like Joysticks are controlled from. \par All of these event are stored in an internal Queue and order is preserved. So the First item In will be the First Out (FIFO). This is not strictly a FIFO buffer, there are a number of functions for getting of managing specific kinds of events. Generally these 'Filtered' management functions Still return the first of those kinds of event. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Delete pointers you get from this. Anything can create events and Put them here, and anything can get them out, This means the simple way to not cause memory leaks is to have the routines extracting the events delete the events. \par
Currently this is not thread safe, even though it should be. \par
}}{
Definition at line 127 of file eventmanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventManager\:phys::EventManager}
{\xe \v phys::EventManager\:EventManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventManager::EventManager ()}
}\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates an empty PhysEventManger\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000007" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: Make the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}} completely thread safe. IF this is completely thread safe, we can spawn numerous individual thread each accessing this and and the performance gain would almost scale directly with cpu core count increases. Look at boost scoped_lock \par
}
}{
Definition at line 199 of file eventmanager.cpp.}\par
}
{\xe \v ~EventManager\:phys::EventManager}
{\xe \v phys::EventManager\:~EventManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventManager::~EventManager ()}
}\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Deconstructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This deletes everything still in the event manager and tears it down. \par
}{
Definition at line 210 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddEvent\:phys::EventManager}
{\xe \v phys::EventManager\:AddEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::AddEvent ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * {\i EventToAdd})}
}\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an event of any kind to the end of the Event Queue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i EventToAdd} This is a pointer to an Event.\par
}
This adds the existing event to the Queue. Be careful this is not delete, and does not go out of scope. Deleting the Event is now the responsibilty of the code that pulls it out of Event Manager. \par
}{
Definition at line 252 of file eventmanager.cpp.}\par
}
{\xe \v AddPollingCheck\:phys::EventManager}
{\xe \v phys::EventManager\:AddPollingCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::AddPollingCheck (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\i InputToTryPolling})}
}\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates extra events each iteration of the main loop, based on user input polling. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InputToTryPolling} This accepts a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} and will try to watch for occurences like this one\par
}
This will trigger the input system to generate an event (or add to an exiting event) when polling for the given kind of event. Each Iteration of the main loop there will be a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} that created. That Event will Include all the normal metacodes for user input that happened, and it will also have a meta code for each time this function was called. The added metacode may be partialky ignored, the Metavalue is almost always ignored, and in a situation where the can only be one of a given input on a system, the ID is ignore and 0 is assumed. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Unsupported Polling Check on this Platform} When the metacode passed cannot be polled on this platform \par
}
}{
Definition at line 537 of file eventmanager.cpp.}\par
}
{\xe \v DetectJoysticks\:phys::EventManager}
{\xe \v phys::EventManager\:DetectJoysticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::DetectJoysticks ()}
}\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Look for Joysticks that are hooked up to the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently this will only find the first joystick. This only needs to be done once after the joystick has been connected and detected/configured by the operating system. Joystick events may not be added if this has not been called. The is called once at when the Event manager is contructed, but if the joystick was not connected yet then it might not be found. \par
}{
Definition at line 220 of file eventmanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::EventManager}
{\xe \v phys::EventManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class implements this for the sake of entension and compatibility this function does nothing. This is just empty during this round of refactoring, and this will get all the functionality that currently should be here, but is in the world \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 556 of file eventmanager.cpp.}\par
}
{\xe \v GetAllCollisionEvents\:phys::EventManager}
{\xe \v phys::EventManager\:GetAllCollisionEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 * > * phys::EventManager::GetAllCollisionEvents ()}
}\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the Render {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}} events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} Events then creates a new list and returns that. This runs in linear time relative to the amounts of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a list<EventCollision*> pointer which is this a subset of this classes event pointer list. Use this carefully, it can cause errors if used improperly. This list pointer must be deleted, but not the events in it. \par
}}{
Definition at line 469 of file eventmanager.cpp.}\par
}
{\xe \v GetAllGameWindowEvents\:phys::EventManager}
{\xe \v phys::EventManager\:GetAllGameWindowEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 * > * phys::EventManager::GetAllGameWindowEvents ()}
}\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the Render {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}} events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} Events then creates a new list and returns that. This runs in linear time relative to the amounts of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a list<EventGameWindow*> pointer which is this a subset of this classes event pointer list. Use this carefully, it can cause errors if used improperly. This list pointer must be deleted, but not the events in it. \par
}}{
Definition at line 485 of file eventmanager.cpp.}\par
}
{\xe \v GetAllQuitEvents\:phys::EventManager}
{\xe \v phys::EventManager\:GetAllQuitEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
 * > * phys::EventManager::GetAllQuitEvents ()}
}\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the quit events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} Events then creates a new list and returns that. This runs in linear time relative to the amounts of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Something is wrong if you have more than a few quit events. These should be checked for in each iteration of the main loop. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a std::list<EventQuit*> pointer which is this a subset of this classes event pointer list. Use this carefully, it can cause errors if used improperly. Additionally this list pointer must be deleted, but not the events in it. \par
}}{
Definition at line 531 of file eventmanager.cpp.}\par
}
{\xe \v GetAllRenderTimeEvents\:phys::EventManager}
{\xe \v phys::EventManager\:GetAllRenderTimeEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 * > * phys::EventManager::GetAllRenderTimeEvents ()}
}\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the Render {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}} events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}} Events then creates a new list and returns that. This runs in linear time relative to the amounts of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a list<EventRenderTime*> pointer which is this a subset of this classes event pointer list. Use this carefully, it can cause errors if used improperly. Additionally this list pointer must be deleted, but not the events in it. \par
}}{
Definition at line 500 of file eventmanager.cpp.}\par
}
{\xe \v GetAllSpecificEvents\:phys::EventManager}
{\xe \v phys::EventManager\:GetAllSpecificEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * > * phys::EventManager::GetAllSpecificEvents ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 {\i SpecificType})}
}\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the specified events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the events that are of the specified type in the event manager, then creates a new list and return that. This runs in linear time relative to the amounts of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The pointers contained in this list must be used carefully. Do not delete them, this will cause errors. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a std::list<EventBase*> pointer which is this a subset of this classes event pointer list. Use this carefully, it can cause errors if used improperly. Additionally this list pointer must be deleted, but not the events in it. \par
}}{
Definition at line 432 of file eventmanager.cpp.}\par
}
{\xe \v GetAllUserInputEvents\:phys::EventManager}
{\xe \v phys::EventManager\:GetAllUserInputEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 * > * phys::EventManager::GetAllUserInputEvents ()}
}\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a complete list of all the User Input events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} Events then creates a new list and returns that. This runs in linear time relative to the amounts of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a std::list<EventUserInput*> pointer which is this a subset of this classes event pointer list. Use this carefully, it can cause errors if used improperly. Additionally this list pointer must be deleted, but not the events in it. \par
}}{
Definition at line 515 of file eventmanager.cpp.}\par
}
{\xe \v GetNextCollisionEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextCollisionEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 * phys::EventManager::GetNextCollisionEvent ()}
}\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Collision event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next Collision event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no Collision events in the queue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 460 of file eventmanager.cpp.}\par
}
{\xe \v GetNextEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * phys::EventManager::GetNextEvent ()}
}\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the Next event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a pointer to the next PhysEvent. It is advisable to use this for performance reasons because it runs in constant time. However it does not return a specific kind of event, and must be cast in order to use the true content. This returns a pointer to 0 if there are no events in the queue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a PhysEvent, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 232 of file eventmanager.cpp.}\par
}
{\xe \v GetNextGameWindowEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextGameWindowEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 * phys::EventManager::GetNextGameWindowEvent ()}
}\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} events in the que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 476 of file eventmanager.cpp.}\par
}
{\xe \v GetNextQuitEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextQuitEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
 * phys::EventManager::GetNextQuitEvent ()}
}\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} events in the que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 522 of file eventmanager.cpp.}\par
}
{\xe \v GetNextRenderTimeEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextRenderTimeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 * phys::EventManager::GetNextRenderTimeEvent ()}
}\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Rendertime event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next Rendertime event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}} events in the que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 491 of file eventmanager.cpp.}\par
}
{\xe \v GetNextSpecificEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextSpecificEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * phys::EventManager::GetNextSpecificEvent ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 {\i SpecificType})}
}\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next kind event of the Specified type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SpecificType} This is a PhysEvent::EventType that defines the type you want this to work with\par
}
This and the other NextSpecificEvent functions are the core of the Event Filtering System. In general the other filtering functions call one of these and does very little work on their own. \par This performs a linear search starting with the oldest (first entered Events) and simply checks if it the of the correct type. Then this returns a pointer to the next event of the specified type, or returns a pointer to 0 if there are none of the correct pointers in the Que. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 394 of file eventmanager.cpp.}\par
}
{\xe \v GetNextUserInputEvent\:phys::EventManager}
{\xe \v phys::EventManager\:GetNextUserInputEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 * phys::EventManager::GetNextUserInputEvent ()}
}\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next User Input event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next User Input event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no User Input events in the que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 506 of file eventmanager.cpp.}\par
}
{\xe \v GetRemainingEventCount\:phys::EventManager}
{\xe \v phys::EventManager\:GetRemainingEventCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t phys::EventManager::GetRemainingEventCount ()}
}\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a count of events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a total count of all events stored in this PhysEventManager. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns an unsigned integer with the amount of of total events \par
}}{
Definition at line 229 of file eventmanager.cpp.}\par
}
{\xe \v GetType\:phys::EventManager}
{\xe \v phys::EventManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::EventManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::EventManager \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 559 of file eventmanager.cpp.}\par
}
{\xe \v Initialize\:phys::EventManager}
{\xe \v phys::EventManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This specific initializor is unneeded, but we implement it for compatibility. It also exists in case a derived class wants to override it for some reason \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 553 of file eventmanager.cpp.}\par
}
{\xe \v PopNextCollisionEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextCollisionEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 EventCollision}}}
 * phys::EventManager::PopNextCollisionEvent ()}
}\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Collision event and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next Collision event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no Collision events in the que. This also removes the returned pointer form the Queue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a PhysEventRenderTime, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 463 of file eventmanager.cpp.}\par
}
{\xe \v PopNextEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * phys::EventManager::PopNextEvent ()}
}\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the Next event, and removes the Event from storage. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This functions just like GetNextEvent , except that it also removes the item from the internal storage of the PhysEventManager. This returns a pointer to 0 if there are no events in the que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a PhysEvent, that will need to be deleted once it has been used. \par
}}{
Definition at line 240 of file eventmanager.cpp.}\par
}
{\xe \v PopNextGameWindowEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextGameWindowEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 EventGameWindow}}}
 * phys::EventManager::PopNextGameWindowEvent ()}
}\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} event and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} events in the que. This also removes the returned pointer form the Que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a PhysEventRenderTime, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 479 of file eventmanager.cpp.}\par
}
{\xe \v PopNextQuitEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextQuitEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}
 * phys::EventManager::PopNextQuitEvent ()}
}\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} events in the que. This also removes the returned pointer form the Que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 525 of file eventmanager.cpp.}\par
}
{\xe \v PopNextRenderTimeEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextRenderTimeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 * phys::EventManager::PopNextRenderTimeEvent ()}
}\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next Rendertime event and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next Rendertime event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no rendertime events in the que. This also removes the returned pointer form the Que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 494 of file eventmanager.cpp.}\par
}
{\xe \v PopNextSpecificEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextSpecificEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * phys::EventManager::PopNextSpecificEvent ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 {\i SpecificType})}
}\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next kind event of the Specified type, and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SpecificType} This is a PhysEvent::EventType that defines the type you want this to work with\par
}
This is just like GetNextSpecificEvent(PhysEvent::EventType SpecificType) but it also removes the item from the Que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 408 of file eventmanager.cpp.}\par
}
{\xe \v PopNextUserInputEvent\:phys::EventManager}
{\xe \v phys::EventManager\:PopNextUserInputEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 * phys::EventManager::PopNextUserInputEvent ()}
}\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next User Input event and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Filtered event management function returns a pointer to the next User Input event. It is inadvisable to use this for performance reasons because it runs in linear time relative to the amount of events. However, it will return an immediately usable pointer for case where an extreme level of performance is not required. This returns a pointer to 0 if there are no User Input events in the que. This also removes the returned pointer form the Que. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}, that still needs to be removed from the event manager and deleted. \par
}}{
Definition at line 509 of file eventmanager.cpp.}\par
}
{\xe \v RemoveAllSpecificEvents\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveAllSpecificEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveAllSpecificEvents ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 {\i SpecificType})}
}\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes all the events of the specified type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This finds all the events that are of the specified type in the event manager, then removes them. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This does not delete the events. This is a memory leak unless used with GetAllSpecificEvents so that the events can be tracked indeendantly, and deleted. \par
}}{
Definition at line 446 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextCollisionEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextCollisionEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextCollisionEvent ()}
}\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First Collision Event From the que without looking at it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This together with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBO" }{}}{\fldrslt {\cs37\ul\cf2 GetNextCollisionEvent()}}} are the pretty much same as call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBP" }{}}{\fldrslt {\cs37\ul\cf2 PopNextCollisionEvent()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBO" }{}}{\fldrslt {\cs37\ul\cf2 GetNextCollisionEvent()}}} and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a queue could. And with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 466 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextEvent ()}
}\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an Event From the que without looking at it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This together with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBJ" }{}}{\fldrslt {\cs37\ul\cf2 GetNextEvent()}}} are the same as call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBK" }{}}{\fldrslt {\cs37\ul\cf2 PopNextEvent()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBJ" }{}}{\fldrslt {\cs37\ul\cf2 GetNextEvent()}}} and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a que could. Any with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 249 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextGameWindowEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextGameWindowEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextGameWindowEvent ()}
}\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} Event From the que without looking at it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This together with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBS" }{}}{\fldrslt {\cs37\ul\cf2 GetNextGameWindowEvent()}}} are the pretty much same as call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBT" }{}}{\fldrslt {\cs37\ul\cf2 PopNextGameWindowEvent()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBS" }{}}{\fldrslt {\cs37\ul\cf2 GetNextGameWindowEvent()}}} and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a queue could. And with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 482 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextQuitEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextQuitEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextQuitEvent ()}
}\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} From the que without looking at it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This together with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 GetNextQuitEvent()}}} are the pretty much same as call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 PopNextQuitEvent()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 GetNextQuitEvent()}}} and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a queue could. And with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 528 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextRenderTimeEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextRenderTimeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextRenderTimeEvent ()}
}\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First Rendertime Event From the que without looking at it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This together with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBW" }{}}{\fldrslt {\cs37\ul\cf2 GetNextRenderTimeEvent()}}} are the pretty much same as call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 PopNextRenderTimeEvent()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBW" }{}}{\fldrslt {\cs37\ul\cf2 GetNextRenderTimeEvent()}}} and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a queue could. And with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 497 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextSpecificEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextSpecificEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextSpecificEvent ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 {\i SpecificType})}
}\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to the Next kind event of the Specified type, and removes it from the Que. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SpecificType} This is a PhysEvent::EventType that defines the type you want this to work with\par
}
This is just like PopNextSpecificEvent(PhysEvent::EventType SpecificType) but exept it doesn't bother with any of the needed structure involved with returning data, and just removes the specific event from the Queue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call GetNextSpecificEvent(PhysEvent::EventType SpecificType) and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a queue could. And with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 423 of file eventmanager.cpp.}\par
}
{\xe \v RemoveNextUserInputEvent\:phys::EventManager}
{\xe \v phys::EventManager\:RemoveNextUserInputEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemoveNextUserInputEvent ()}
}\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the First User Input Event From the que without looking at it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This together with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 GetNextUserInputEvent()}}} are the pretty much same as call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCB" }{}}{\fldrslt {\cs37\ul\cf2 PopNextUserInputEvent()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If you did not call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 GetNextUserInputEvent()}}} and haven't deleted or stored, or somehow dealt with this pointer, then this is a memory leak. Don't use this unless you are certain you have taken care of the pointer appropriately \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} can throw any STL exception a queue could. And with likely throw some kind of except if called when there are no Events in the Que. \par
}
}{
Definition at line 512 of file eventmanager.cpp.}\par
}
{\xe \v RemovePollingCheck\:phys::EventManager}
{\xe \v phys::EventManager\:RemovePollingCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::RemovePollingCheck (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\i InputToStopPolling})}
}\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes Events from the list(s) of what needs to be polled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InputToStopPolling} This accepts a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} and will try to Remove Watches like this one\par
}
This will remove any check for polling that share the same inputcode and ID. This {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Polling check not present} Is thrown \par
}
}{
Definition at line 547 of file eventmanager.cpp.}\par
}
{\xe \v UpdateEvents\:phys::EventManager}
{\xe \v phys::EventManager\:UpdateEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventManager::UpdateEvents ()}
}\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pulls Events from the all the subsystems for use in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The work this function does is already performed in the main loop. This only really needs to be used If a game developer chooses to use his own main loop. This adds system events, like {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 EventQuit}}} and Other Windows manager events, and if any user input event actions, this generates one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} that stores everythin that happened. \par
}{
Definition at line 255 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventmanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventmanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::internal::EventManagerInternalData Struct Reference\par \pard\plain 
{\tc\tcl2 \v phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to increase encapsulation, just a bit. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 \{ {\b Polling} = 1, 
{\b Keypress}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The kinds of data that can be stored in Manual Check. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::map< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 >::iterator {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKZ" }{}}{\fldrslt {\cs37\ul\cf2 ManualCheckIterator}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLA" }{}}{\fldrslt {\cs37\ul\cf2 AddInputCodeToManualCheck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 OneCode, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 _PollingCheck)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds one type of polling check. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLB" }{}}{\fldrslt {\cs37\ul\cf2 AddInputCodeToManualCheck}}}
 (int OneCode, int _PollingCheck)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds one type of polling check where the data is only available as Ints. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLC" }{}}{\fldrslt {\cs37\ul\cf2 AddMetaCodesToManualCheck}}}
 (vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > Transport, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 _PollingCheck)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to insert Codes into the list of items to be manually checked. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLD" }{}}{\fldrslt {\cs37\ul\cf2 RemoveInputCodeToManualCheck}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 &OneCode, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 _PollingCheck)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes one type of polling check. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLE" }{}}{\fldrslt {\cs37\ul\cf2 RemoveMetaCodesToManualCheck}}}
 (vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > Transport, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 _PollingCheck)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove Items form the internal manual check list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLF" }{}}{\fldrslt {\cs37\ul\cf2 EventManagerInternalData}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor, it only inits pointers to 0. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLG" }{}}{\fldrslt {\cs37\ul\cf2 EventQ}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Queue that all the events get stored in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLH" }{}}{\fldrslt {\cs37\ul\cf2 ManualCheck}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A unified polling and event repeater the Inputcode is the kind of event to check for each frame. The PollingType is used to control what can turn on and off the pollingcheck check. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_Joystick * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLI" }{}}{\fldrslt {\cs37\ul\cf2 Joy0}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will identify the main Joystick. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to increase encapsulation, just a bit. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 93 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Typedef Documentation\par
\pard\plain 
{\xe \v ManualCheckIterator\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:ManualCheckIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::map<{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
>::iterator {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::EventManagerInternalData::ManualCheckIterator}}}
}
}\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 114 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v PollingType\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:PollingType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::EventManagerInternalData::PollingType}}}
}
}\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The kinds of data that can be stored in Manual Check. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 101 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventManagerInternalData\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:EventManagerInternalData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::internal::EventManagerInternalData::EventManagerInternalData (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor, it only inits pointers to 0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 188 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddInputCodeToManualCheck\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:AddInputCodeToManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::EventManagerInternalData::AddInputCodeToManualCheck ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\i OneCode}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 {\i _PollingCheck}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds one type of polling check. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i OneCode} The code that will be check for each frame, under the new condition \par
{\i _PollingCheck} This is inserted into a new polling check or it is bitwise or'ed into an existing one, and this will trigger other parts of the code to insert event later on \par
}
\par}}{
Definition at line 120 of file eventmanager.cpp.}\par
}
{\xe \v AddInputCodeToManualCheck\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:AddInputCodeToManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::EventManagerInternalData::AddInputCodeToManualCheck (int {\i OneCode}, int {\i _PollingCheck}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds one type of polling check where the data is only available as Ints. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i OneCode} The code that will be check for each frame, under the new condition \par
{\i _PollingCheck} This is inserted into a new polling check or it is bitwise or'ed into an existing one, and this will trigger other parts of the code to insert event later on \par
}
\par}}{
Definition at line 135 of file eventmanager.cpp.}\par
}
{\xe \v AddMetaCodesToManualCheck\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:AddMetaCodesToManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::EventManagerInternalData::AddMetaCodesToManualCheck (vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > {\i Transport}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 {\i _PollingCheck}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to insert Codes into the list of items to be manually checked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i Transport} A vector of every Meta that may need to be added to the list \par
{\i _PollingCheck} This is inserted into a new polling check or it is bitwise or'ed into an existing one, and this will trigger other parts of the code to insert event later on \par
}
\par}}{
Definition at line 147 of file eventmanager.cpp.}\par
}
{\xe \v RemoveInputCodeToManualCheck\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:RemoveInputCodeToManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::EventManagerInternalData::RemoveInputCodeToManualCheck (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 & {\i OneCode}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 {\i _PollingCheck}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes one type of polling check. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i OneCode} The code that will no longer be checked each frame, under the given condition \par
{\i _PollingCheck} If this matches via bitwise or with the kind of polling check check stored for the existing InputCode then the it will be removed. \par
}
\par}}{
Definition at line 160 of file eventmanager.cpp.}\par
}
{\xe \v RemoveMetaCodesToManualCheck\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:RemoveMetaCodesToManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::EventManagerInternalData::RemoveMetaCodesToManualCheck (vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > {\i Transport}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
 {\i _PollingCheck}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove Items form the internal manual check list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i Transport} A vector of every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} that may need to be removed to the list \par
{\i _PollingCheck} If this matches via bitwise or with the kind of polling check check stored for the existing InputCode then the it will be removed. \par
}
\par}}{
Definition at line 176 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v EventQ\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:EventQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list<{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 EventBase}}}
*> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLG" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::EventManagerInternalData::EventQ}}}
}
}\par
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Queue that all the events get stored in. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 97 of file eventmanager.cpp.}\par
}
{\xe \v Joy0\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:Joy0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_Joystick* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLI" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::EventManagerInternalData::Joy0}}}
}
}\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will identify the main Joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 184 of file eventmanager.cpp.}\par
}
{\xe \v ManualCheck\:phys::internal::EventManagerInternalData}
{\xe \v phys::internal::EventManagerInternalData\:ManualCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map<{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKY" }{}}{\fldrslt {\cs37\ul\cf2 PollingType}}}
> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLH" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::EventManagerInternalData::ManualCheck}}}
}
}\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A unified polling and event repeater the Inputcode is the kind of event to check for each frame. The PollingType is used to control what can turn on and off the pollingcheck check. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 111 of file eventmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventmanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventQuit Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventQuit}
{\xe \v phys::EventQuit}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen. }}\par
{
{\f2 #include <eventquit.h>}}\par
Inheritance diagram for phys::EventQuit:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dea/classphys_1_1EventQuit.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns EventType::QuitMessage. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to convey the message that quitting needs to happen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores not data other than the fact that this is a Quit event. This means that either an underlying system like the OS or a service has requested a quit, or the application has manually put a quit message in the queue to signal that a graceful shutdown needs to occur. \par
}{
Definition at line 63 of file eventquit.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetType\:phys::EventQuit}
{\xe \v phys::EventQuit\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 phys::EventQuit::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns EventType::QuitMessage. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the kind of message this is, specifcally EventType::QuitMessage . If this functions returns EventType::QuitMessage, then and event pointer can safely be cast to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventQuit}}} . This method is inherited from phys::Event . \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZH" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}}
.}\par
{
Definition at line 52 of file eventquit.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventquit.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventquit.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventRenderTime Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventRenderTime}
{\xe \v phys::EventRenderTime}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This communicates the amount of time since the world was rendered. }}\par
{
{\f2 #include <eventrendertime.h>}}\par
Inheritance diagram for phys::EventRenderTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d8b/classphys_1_1EventRenderTime.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCV" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Milliseconds=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns that this event is a EventType::RenderTime. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCW" }{}}{\fldrslt {\cs37\ul\cf2 getMilliSecondsSinceLastFrame}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the a floating point value with the amount of time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCX" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 &rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This communicates the amount of time since the world was rendered. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores in milliseconds the amount of time since the last rendering of the world. \par
}{
Definition at line 61 of file eventrendertime.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventRenderTime\:phys::EventRenderTime}
{\xe \v phys::EventRenderTime\:EventRenderTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventRenderTime::EventRenderTime ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Milliseconds} = {\f2 0})}
}\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the only way to set the time {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Milliseconds} As it says, the amount of milliseconds since the last rendering \par
}
}{
Definition at line 55 of file eventrendertime.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getMilliSecondsSinceLastFrame\:phys::EventRenderTime}
{\xe \v phys::EventRenderTime\:getMilliSecondsSinceLastFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::EventRenderTime::getMilliSecondsSinceLastFrame () const}
}\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the a floating point value with the amount of time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the a floating point value with the amount of time. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A floating point value with the amount of time. \par
}}{
Definition at line 65 of file eventrendertime.cpp.}\par
}
{\xe \v GetType\:phys::EventRenderTime}
{\xe \v phys::EventRenderTime\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 phys::EventRenderTime::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns that this event is a EventType::RenderTime. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is primarily for the benefit of sorting thorugh event pointers. If this functions returns EventType::RenderTime, then and event pointer can safely be cast to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventRenderTime}}} . This method is inherited from phys::Event . \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZH" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}}
.}\par
{
Definition at line 60 of file eventrendertime.cpp.}\par
}
{\xe \v operator=\:phys::EventRenderTime}
{\xe \v phys::EventRenderTime\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventRenderTime::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 EventRenderTime}}}
 & {\i rhs})}
}\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} the Right Hand object in the assignment operator \par
}
}{
Definition at line 70 of file eventrendertime.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventrendertime.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventrendertime.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::EventUserInput Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::EventUserInput}
{\xe \v phys::EventUserInput}
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for MetaCodes that is used in the physEventManager. }}\par
{
{\f2 #include <eventuserinput.h>}}\par
Inheritance diagram for phys::EventUserInput:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df5/classphys_1_1EventUserInput.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCZ" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 &Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single Data Point constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDA" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}
 (const vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > &Codes_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multi Data Point constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 ~EventUserInput}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default desstructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaCode}}}
 (const unsigned int &Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single Data Point constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDD" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaCodeCount}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves a count of the stored Metacodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 AddCode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 &Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 AddCode}}}
 (const int &MetaValue_, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 &Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Created From Raw Values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 AddCodes}}}
 (const vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > &Codes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add Several MetaCodes from a vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 AddCodesFromRawEvent}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 &RawEvent_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds all possible MetaCodes that can be created from the given RawEvent. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 EraseCode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 &Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a specific code from storage. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 EraseCode}}}
 (const unsigned int &Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a specific code from storage. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the type of this event. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDL" }{}}{\fldrslt {\cs37\ul\cf2 AddCode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 &RawEvent_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} created from a RawEvent. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container for MetaCodes that is used in the physEventManager. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} is the container for information about how a user enters data and commands into a program. By Default one is inserted into event manager the with all the user input from each run of the main loop. These can be manually inserted into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}} to simulate input from other sources. If setup properly this can allow computer controlled characters to use the same interface players, allowing for more realistic response from them. \par \par This is implemented by inheriting from std::vector. Any feature of std::vector can be used to interact with the metacodes stored within. Using Iterators is great way to quickly and easily get what you need from this. For the most part any extra functions on this are for seamless interaction with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}, or to convert incoming data into a more usable form. \par
}{
Definition at line 101 of file eventuserinput.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventUserInput\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:EventUserInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventUserInput::EventUserInput ()}
}\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a perfectly functional, but empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}. \par
}{
Definition at line 69 of file eventuserinput.cpp.}\par
}
{\xe \v EventUserInput\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:EventUserInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventUserInput::EventUserInput (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\i Code_})}
}\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single Data Point constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Code_} This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} will be added to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} during creation.\par
}
This creates a functional {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} which already contains one metacode. \par
}{
Definition at line 72 of file eventuserinput.cpp.}\par
}
{\xe \v EventUserInput\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:EventUserInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventUserInput::EventUserInput (const vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > & {\i Codes_})}
}\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multi Data Point constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Codes_} The MetaCodes in this vecotor will be added to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} during creation.\par
}
This creates a ready to use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}} which already contains all the metacodes included. \par
}{
Definition at line 75 of file eventuserinput.cpp.}\par
}
{\xe \v ~EventUserInput\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:~EventUserInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::EventUserInput::~EventUserInput (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default desstructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This tears down the \par
}{
Definition at line 78 of file eventuserinput.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddCode\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:AddCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 phys::EventUserInput::AddCode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 & {\i RawEvent_}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} created from a RawEvent. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i RawEvent_} The RawEvent which will be translated into exactly One {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}\par
}
This will add {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} to this event which will be create from a RawEvent which can produce Exactly one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. This is used by engine internals, it is recommended to not use this in game code. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Do not use this without reading and fully understanding the warnings on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDM" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::MetaCode(const RawEvent &RawEvent_)}}} . This function has all the same Restrictions. If game code is using RawEvents at all, the game logic should be scrutinized carefully, there is probably something wrong, but if it must it should use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput::AddCodesFromRawEvent}}} instead, as it can make the needed determinations automatically and in a platform agnostic way. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a const reference to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} that was Added. This reference is valid for the lifetime of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}. \par
}}{
Definition at line 93 of file eventuserinput.cpp.}\par
}
{\xe \v AddCode\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:AddCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 phys::EventUserInput::AddCode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\i Code_})}
}\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Code_} The User Input {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} tobe added\par
}
This adds an existing metacode to this event. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a const reference to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} that was Added. This reference is valid for the lifetime of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}. \par
}}{
Definition at line 87 of file eventuserinput.cpp.}\par
}
{\xe \v AddCode\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:AddCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 phys::EventUserInput::AddCode (const int & {\i MetaValue_}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 & {\i Code_})}
}\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Created From Raw Values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MetaValue_} The MetaValue that will be in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} \par
{\i Code_} The InputCode that will be in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}\par
}
This creates metacode a metacode and adds it to this event. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a const reference to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} that was Added. This reference is valid for the lifetime of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 EventUserInput}}}. \par
}}{
Definition at line 99 of file eventuserinput.cpp.}\par
}
{\xe \v AddCodes\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:AddCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventUserInput::AddCodes (const vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > & {\i Codes})}
}\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add Several MetaCodes from a vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Codes} A vector of MetaCodes to be added to this event\par
}
This adds several existing metacodes to this event. \par
}{
Definition at line 105 of file eventuserinput.cpp.}\par
}
{\xe \v AddCodesFromRawEvent\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:AddCodesFromRawEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 > phys::EventUserInput::AddCodesFromRawEvent (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 & {\i RawEvent_})}
}\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds all possible MetaCodes that can be created from the given RawEvent. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i RawEvent_} The RawEvent which will be translated into a group of metacodes and added to this\par
}
This will add {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} to this event which will be create from a RawEvent which can produce Exactly one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. This is used by engine internals, it is recommended to not use this in game code. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If game code is using RawEvents at all, the game logic should be scrutinized carefully, there is probably something wrong, but if it must them this is the correct function to use. This will work same on a all platforms. However, the binary format of the Rawevent could chnage meaning you would have to recompile the game code to work with new version of the engine \par This Function is currently incomplete, and does not yet process all events such as joysticks events and some mouse events. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid this returns a complete set of all the MetaCodes added. \par
}}{
Definition at line 130 of file eventuserinput.cpp.}\par
}
{\xe \v EraseCode\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:EraseCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventUserInput::EraseCode (const unsigned int & {\i Index})}
}\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a specific code from storage. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Index} This is the location to removed from\par
}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} at and only at the given Index will be deleted. \par
}{
Definition at line 124 of file eventuserinput.cpp.}\par
}
{\xe \v EraseCode\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:EraseCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::EventUserInput::EraseCode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\i Code_})}
}\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a specific code from storage. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Code_} This will search for all matching copies of this\par
}
All MetaCodes that are equal to Code_ will simply be erased. \par
}{
Definition at line 111 of file eventuserinput.cpp.}\par
}
{\xe \v GetMetaCode\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:GetMetaCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & phys::EventUserInput::GetMetaCode (const unsigned int & {\i Index})}
}\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single Data Point constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Index The requested {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} to return.\par
}This function simply retrieves the requested {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. It can throw standard Out of bounds exceptions if attemped to reference a negative item or an item with Index higher than what exists \par This is useful for accessing each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} stored in this physUserInputEvent. \par
}{
Definition at line 81 of file eventuserinput.cpp.}\par
}
{\xe \v GetMetaCodeCount\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:GetMetaCodeCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t phys::EventUserInput::GetMetaCodeCount ()}
}\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves a count of the stored Metacodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The amount of codes stored in this physEventUserInput.\par
}Retrieves a count of the stored Metacodes. Synonym for vector::size(); \par
}{
Definition at line 84 of file eventuserinput.cpp.}\par
}
{\xe \v GetType\:phys::EventUserInput}
{\xe \v phys::EventUserInput\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 EventBase::EventType}}}
 phys::EventUserInput::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the type of this event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns EventType::UserInput \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZH" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventBase}}}
.}\par
{
Definition at line 127 of file eventuserinput.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventuserinput.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
eventuserinput.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Exception Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Exception}
{\xe \v phys::Exception}
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the exception thrown by most physgame system that can throw exceptions. }}\par
{
{\f2 #include <exception.h>}}\par
Inheritance diagram for phys::Exception:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d47/classphys_1_1Exception.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDN" }{}}{\fldrslt {\cs37\ul\cf2 Exception}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Message="", bool Logged_=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDO" }{}}{\fldrslt {\cs37\ul\cf2 what}}}
 ()  throw ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the error message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 HasBeenLogged}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Has this exception been on a trip through the Logger? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDQ" }{}}{\fldrslt {\cs37\ul\cf2 SetLogged}}}
 (){\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the logged bit. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the exception thrown by most physgame system that can throw exceptions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In general they work like std::exception, but also track whether they have been logged yet. \par
}{
Definition at line 57 of file exception.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Exception\:phys::Exception}
{\xe \v phys::Exception\:Exception}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Exception::Exception (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Message} = {\f2 ""}, bool {\i Logged_} = {\f2 false})}
}\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Message} The Error you want stored in the exception. \par
{\i Logged_} Has this exception already been sent to tthe logger \par
}
}{
Definition at line 48 of file exception.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v HasBeenLogged\:phys::Exception}
{\xe \v phys::Exception\:HasBeenLogged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Exception::HasBeenLogged ()}
}\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Has this exception been on a trip through the Logger? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A bool storing true if it has and false if it has not. \par
}}{
Definition at line 53 of file exception.cpp.}\par
}
{\xe \v what\:phys::Exception}
{\xe \v phys::Exception\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::Exception::what ()  throw (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the error message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a string that is the stored error message. \par
}}{
Definition at line 58 of file exception.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
exception.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
exception.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ExtendedTimer Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enhanced timer class that can store and track many units of time. }}\par
{
{\f2 #include <extendedtimer.h>}}\par
Inheritance diagram for phys::ExtendedTimer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d7c/classphys_1_1ExtendedTimer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 TimeStruct}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDY" }{}}{\fldrslt {\cs37\ul\cf2 Current}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDZ" }{}}{\fldrslt {\cs37\ul\cf2 Goal}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEA" }{}}{\fldrslt {\cs37\ul\cf2 Initial}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal time struct to be used... \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEB" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABED" }{}}{\fldrslt {\cs37\ul\cf2 ~ExtendedTimer}}}
 (){\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEE" }{}}{\fldrslt {\cs37\ul\cf2 Reset}}}
 (){\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current values to their initial values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEF" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoReset}}}
 (const bool AutoReset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether or not the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} should reset if it reaches it's goal. \par Ex. If a stopwatch reaches 0. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEG" }{}}{\fldrslt {\cs37\ul\cf2 SetMicroseconds}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 MS, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Microseconds of the specified struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 SetMilliseconds}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 MS, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Milliseconds of the specified struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 SetSeconds}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 Sec, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Seconds of the specified struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEJ" }{}}{\fldrslt {\cs37\ul\cf2 SetMinutes}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 Min, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Minutes of the specified struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEK" }{}}{\fldrslt {\cs37\ul\cf2 SetHours}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 Hr, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Hours of the specified struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEL" }{}}{\fldrslt {\cs37\ul\cf2 SetDays}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 Day, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Days of the specified struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEM" }{}}{\fldrslt {\cs37\ul\cf2 GetMilliseconds}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Millisecond count. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEN" }{}}{\fldrslt {\cs37\ul\cf2 GetSeconds}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Second count. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEO" }{}}{\fldrslt {\cs37\ul\cf2 GetMinutes}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Minute count. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEP" }{}}{\fldrslt {\cs37\ul\cf2 GetHours}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Hour count. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEQ" }{}}{\fldrslt {\cs37\ul\cf2 GetDays}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct=ExtendedTimer::Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Day count. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}
 & {\b GetStruct} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Update} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b UpdateAsNormal} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b UpdateAsStopWatch} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckMicroSeconds} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckMilliSeconds} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckSeconds} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckMinutes} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckHours} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckDays} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CheckAll} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 Struct){\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b CompareCurrentAndGoal} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 Current, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 Goal){\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b GoalReached} (){\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}
 {\b CurrentTime}{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}
 {\b GoalTime}{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}
 {\b InitialTime}{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enhanced timer class that can store and track many units of time. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This timer class should be used only for longer periods, such as tracking game uptime. For shorter periods of time look at the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}} class. \par
}{
Definition at line 72 of file extendedtimer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v TimeStruct\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:TimeStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 phys::ExtendedTimer::TimeStruct}}}
}
}\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal time struct to be used... }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Current\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:Current}
{\b {\i Current{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current description. \par
}{\xe \v Goal\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:Goal}
{\b {\i Goal{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Goal description. \par
}{\xe \v Initial\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:Initial}
{\b {\i Initial{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial description. \par
}}
\par
{
Definition at line 76 of file extendedtimer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExtendedTimer\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:ExtendedTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ExtendedTimer::ExtendedTimer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 {\i style})}
}\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Style} The styling/type of timer to be constructed. \par
}
}{
Definition at line 45 of file extendedtimer.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetDays\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:GetDays}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 phys::ExtendedTimer::GetDays (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Day count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an Integer representing the current Day count of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. \par
}}{
Definition at line 362 of file extendedtimer.cpp.}\par
}
{\xe \v GetHours\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:GetHours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 phys::ExtendedTimer::GetHours (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Hour count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an Integer representing the current Hour count of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. \par
}}{
Definition at line 357 of file extendedtimer.cpp.}\par
}
{\xe \v GetMilliseconds\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:GetMilliseconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 phys::ExtendedTimer::GetMilliseconds (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Millisecond count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an Integer representing the current Millisecond count of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. \par
}}{
Definition at line 342 of file extendedtimer.cpp.}\par
}
{\xe \v GetMinutes\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:GetMinutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 phys::ExtendedTimer::GetMinutes (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Minute count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an Integer representing the current Minute count of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. \par
}}{
Definition at line 352 of file extendedtimer.cpp.}\par
}
{\xe \v GetSeconds\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:GetSeconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 phys::ExtendedTimer::GetSeconds (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current internal Second count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an Integer representing the current Second count of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. \par
}}{
Definition at line 347 of file extendedtimer.cpp.}\par
}
{\xe \v SetAutoReset\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetAutoReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetAutoReset (const bool {\i AutoReset}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether or not the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} should reset if it reaches it's goal. \par Ex. If a stopwatch reaches 0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}}{
Definition at line 289 of file extendedtimer.cpp.}\par
}
{\xe \v SetDays\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetDays}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetDays ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\i Day}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Days of the specified struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Day} The number of Days to set. \par
}
}{
Definition at line 336 of file extendedtimer.cpp.}\par
}
{\xe \v SetHours\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetHours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetHours ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\i Hr}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Hours of the specified struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a number greater then 23 is passed in, it will be reduced to 23. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Hr} The number of Hours to set. \par
}
}{
Definition at line 329 of file extendedtimer.cpp.}\par
}
{\xe \v SetMicroseconds\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetMicroseconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetMicroseconds ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\i MS}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Microseconds of the specified struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a number greater then 999 is passed in, it will be reduced to 999. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MS} The number of Microseconds to set. \par
}
}{
Definition at line 295 of file extendedtimer.cpp.}\par
}
{\xe \v SetMilliseconds\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetMilliseconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetMilliseconds ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\i MS}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Milliseconds of the specified struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a number greater then 999 is passed in, it will be reduced to 999. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MS} The number of Milliseconds to set. \par
}
}{
Definition at line 302 of file extendedtimer.cpp.}\par
}
{\xe \v SetMinutes\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetMinutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetMinutes ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\i Min}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Minutes of the specified struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a number greater then 59 is passed in, it will be reduced to 59. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Min} The number of Minutes to set. \par
}
}{
Definition at line 321 of file extendedtimer.cpp.}\par
}
{\xe \v SetSeconds\:phys::ExtendedTimer}
{\xe \v phys::ExtendedTimer\:SetSeconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 & phys::ExtendedTimer::SetSeconds ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\i Sec}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer::TimeStruct}}}
 {\i Struct} = {\f2 ExtendedTimer::Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the value for Seconds of the specified struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a number greater then 59 is passed in, it will be reduced to 59. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Sec} The number of Seconds to set. \par
}
}{
Definition at line 312 of file extendedtimer.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
extendedtimer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
extendedtimer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::GameWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::GameWindow}
{\xe \v phys::GameWindow}
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing game windows. }}\par
{
{\f2 #include <gamewindow.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFH" }{}}{\fldrslt {\cs37\ul\cf2 WindowFlags}}}
 \{ {\b WF_Fullscreen} =  1, 
{\b WF_Hidden} =  2, 
{\b WF_VsyncEnabled} =  4, 
{\b WF_FSAA_2} =  8, 
{\b WF_FSAA_4} =  16, 
{\b WF_FSAA_8} =  32, 
{\b WF_FSAA_16} =  64, 
{\b WF_Resizeable} =  128, 
{\b WF_Minimized} =  256, 
{\b WF_Maximized} =  512, 
{\b WF_Borderless} =  1024
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of potential options for configuring a game window during construction. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFI" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &WindowCaption, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFJ" }{}}{\fldrslt {\cs37\ul\cf2 ~GameWindow}}}
 (){\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFK" }{}}{\fldrslt {\cs37\ul\cf2 CreateViewport}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 *ViewportCamera, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &ZOrder=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an additional {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}} within a created render window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 GetViewport}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a viewport by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 GetNumViewports}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of viewports within this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFN" }{}}{\fldrslt {\cs37\ul\cf2 DestroyViewport}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a viewport within this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 GetSettings}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current window settings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 setFullscreen}}}
 (const bool &Fullscreen)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Fullscreen Setting. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFQ" }{}}{\fldrslt {\cs37\ul\cf2 getFullscreen}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Fullscreen Setting. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFP" }{}}{\fldrslt {\cs37\ul\cf2 setRenderHeight}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Height. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 getRenderHeight}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Height of the Rendering Area. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 setRenderWidth}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Width. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 getRenderWidth}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Width of the Rendering Area. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFR" }{}}{\fldrslt {\cs37\ul\cf2 setRenderResolution}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the X and Y Resolution at the same time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFT" }{}}{\fldrslt {\cs37\ul\cf2 setRenderOptions}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 &NewSettings)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the X Resolution, Y Resolution, and fullscreen at the same time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFU" }{}}{\fldrslt {\cs37\ul\cf2 GetLastFPS}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the FPS based on the last frame rendered. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFV" }{}}{\fldrslt {\cs37\ul\cf2 GetAverageFPS}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Average FPS. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFW" }{}}{\fldrslt {\cs37\ul\cf2 GetBestFPS}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Best FPS. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 GetWorstFPS}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Worst FPS. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFY" }{}}{\fldrslt {\cs37\ul\cf2 GetBestFrameTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the shortest amount of time it's taken to render a frame. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 GetWorstFrameTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the longest amount of time it's taken to render a frame. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::RenderWindow * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGA" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreWindowPointer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get a pointer to the Ogre RenderWindow. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_Window * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGB" }{}}{\fldrslt {\cs37\ul\cf2 GetSDLWindowPointer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get a pointer to the SDL Window. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CreateGameWindow} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &WindowCaption, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Flags){\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CorrectViewportAndCamera} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Index){\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b IsLargerThenDesktop} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height){\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::RenderWindow * {\b OgreWindow}{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

SDL_Window * {\b SDLWindow}{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 {\b Settings}{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * > {\b Viewports}{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}
 * {\b Manager}{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing game windows. \par
}{
Definition at line 63 of file gamewindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v WindowFlags\:phys::GameWindow}
{\xe \v phys::GameWindow\:WindowFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFH" }{}}{\fldrslt {\cs37\ul\cf2 phys::GameWindow::WindowFlags}}}
}
}\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of potential options for configuring a game window during construction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brief descriptions of the values are as follows: \par WF_Fullscreen: This enables fullscreen on the window. \par WF_Hidden: This hides the window so that it isn't visible. \par WF_VsyncEnabled: This enables vsync for the window. \par WF_FSAA_2: Enables Fullscreen Anti-Aliasing level 2 for the window. \par WF_FSAA_4: Enables Fullscreen Anti-Aliasing level 4 for the window. \par WF_FSAA_8: Enables Fullscreen Anti-Aliasing level 8 for the window. \par WF_FSAA_16: Enables Fullscreen Anti-Aliasing level 16 for the window. \par WF_Resizeable: Creates a window with resizable borders, otherwise it is fixed size. \par WF_Minimized: Minimizes the window to the task bar immediately after construction. \par WF_Maximized: Maximizes the window immediately after construction. \par WF_Borderless: Removes all window decorations from the window(titlebar, borders, etc.). \par \par
}{
Definition at line 80 of file gamewindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GameWindow\:phys::GameWindow}
{\xe \v phys::GameWindow\:GameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GameWindow::GameWindow (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i WindowCaption}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Height}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Flags})}
}\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WindowCaption} The caption to be set in the window titlebar. \par
{\i Width} The desired width in pixels. \par
{\i Height} The desired height in pixels. \par
{\i Flags} Additional misc parameters, see WindowFlags enum for more info. \par
}
}{
Definition at line 47 of file gamewindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateViewport\:phys::GameWindow}
{\xe \v phys::GameWindow\:CreateViewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * phys::GameWindow::CreateViewport ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\i ViewportCamera}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i ZOrder} = {\f2 0})}
}\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an additional {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}} within a created render window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i VeiwportCamera} The camera that is to be attached to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}. \par
{\i ZOrder} The render order of this viewport relative to other viewports in this window. 0 means it'll use the current viewport count to determine the ZOrder. \par
}
}{
Definition at line 147 of file gamewindow.cpp.}\par
}
{\xe \v DestroyViewport\:phys::GameWindow}
{\xe \v phys::GameWindow\:DestroyViewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GameWindow::DestroyViewport ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a viewport within this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} The viewport that will be destroyed. \par
}
}{
Definition at line 165 of file gamewindow.cpp.}\par
}
{\xe \v GetAverageFPS\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetAverageFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GameWindow::GetAverageFPS ()}
}\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Average FPS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the average framerate. \par
}}{
Definition at line 314 of file gamewindow.cpp.}\par
}
{\xe \v GetBestFPS\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetBestFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GameWindow::GetBestFPS ()}
}\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Best FPS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the best framerate. \par
}}{
Definition at line 319 of file gamewindow.cpp.}\par
}
{\xe \v GetBestFrameTime\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetBestFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GameWindow::GetBestFrameTime ()}
}\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the shortest amount of time it's taken to render a frame. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the best time for rendering a frame. \par
}}{
Definition at line 329 of file gamewindow.cpp.}\par
}
{\xe \v getFullscreen\:phys::GameWindow}
{\xe \v phys::GameWindow\:getFullscreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::GameWindow::getFullscreen () const}
}\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Fullscreen Setting. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Fullscreen Setting \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool, true if fullscreen is set, false otherwise \par
}}{
Definition at line 186 of file gamewindow.cpp.}\par
}
{\xe \v GetLastFPS\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetLastFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GameWindow::GetLastFPS ()}
}\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the FPS based on the last frame rendered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This essentially determines how many frames could be rendered if all frames within a second rendered at the same speed. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the framerate. \par
}}{
Definition at line 309 of file gamewindow.cpp.}\par
}
{\xe \v GetNumViewports\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetNumViewports}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::GameWindow::GetNumViewports ()}
}\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of viewports within this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the number of viewports within this window. \par
}}{
Definition at line 160 of file gamewindow.cpp.}\par
}
{\xe \v GetOgreWindowPointer\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetOgreWindowPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::RenderWindow * phys::GameWindow::GetOgreWindowPointer ()}
}\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get a pointer to the Ogre RenderWindow. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Ogre RenderWindow class in use. \par
}\par}}{
Definition at line 339 of file gamewindow.cpp.}\par
}
{\xe \v getRenderHeight\:phys::GameWindow}
{\xe \v phys::GameWindow\:getRenderHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::GameWindow::getRenderHeight () const}
}\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Height of the Rendering Area. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Height of the Rendering Area \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the Height of the Rendering Area \par
}}{
Definition at line 236 of file gamewindow.cpp.}\par
}
{\xe \v getRenderWidth\:phys::GameWindow}
{\xe \v phys::GameWindow\:getRenderWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::GameWindow::getRenderWidth () const}
}\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Width of the Rendering Area. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Width of the Rendering Area \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the Width of the Rendering Area \par
}}{
Definition at line 241 of file gamewindow.cpp.}\par
}
{\xe \v GetSDLWindowPointer\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetSDLWindowPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_Window * phys::GameWindow::GetSDLWindowPointer ()}
}\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get a pointer to the SDL Window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the SDL Window class in use. \par
}\par}}{
Definition at line 344 of file gamewindow.cpp.}\par
}
{\xe \v GetSettings\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 & phys::GameWindow::GetSettings ()}
}\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current window settings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Returns} a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}} struct with the current window settings. \par
}
}{
Definition at line 178 of file gamewindow.cpp.}\par
}
{\xe \v GetViewport\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetViewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * phys::GameWindow::GetViewport (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Index})}
}\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a viewport by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the viewport requested. \par
}}{
Definition at line 155 of file gamewindow.cpp.}\par
}
{\xe \v GetWorstFPS\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetWorstFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GameWindow::GetWorstFPS ()}
}\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Worst FPS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the worst framerate. \par
}}{
Definition at line 324 of file gamewindow.cpp.}\par
}
{\xe \v GetWorstFrameTime\:phys::GameWindow}
{\xe \v phys::GameWindow\:GetWorstFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GameWindow::GetWorstFrameTime ()}
}\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the longest amount of time it's taken to render a frame. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the worst time for rendering a frame. \par
}}{
Definition at line 334 of file gamewindow.cpp.}\par
}
{\xe \v setFullscreen\:phys::GameWindow}
{\xe \v phys::GameWindow\:setFullscreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GameWindow::setFullscreen (const bool & {\i Fullscreen})}
}\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Fullscreen Setting. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Fullscreen Setting {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Fullscreen} This accepts a bool. True for fullscreen, false for windowed \par
}
}{
Definition at line 192 of file gamewindow.cpp.}\par
}
{\xe \v setRenderHeight\:phys::GameWindow}
{\xe \v phys::GameWindow\:setRenderHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GameWindow::setRenderHeight (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Height})}
}\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Height. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Render Height inside the window in windowed mode, set the resolution of the screen in fullscreen {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Height} This accepts a Whole. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000008" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: Need to attempt to update resolution here \par
}
}}\par
{
Definition at line 246 of file gamewindow.cpp.}\par
}
{\xe \v setRenderOptions\:phys::GameWindow}
{\xe \v phys::GameWindow\:setRenderOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GameWindow::setRenderOptions (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 & {\i NewSettings})}
}\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the X Resolution, Y Resolution, and fullscreen at the same time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This should be useful in situations where it is not possible to update all of the options separately. \par
}{
Definition at line 301 of file gamewindow.cpp.}\par
}
{\xe \v setRenderResolution\:phys::GameWindow}
{\xe \v phys::GameWindow\:setRenderResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GameWindow::setRenderResolution (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Height})}
}\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes the X and Y Resolution at the same time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This should be useful in situations where it is not possible to update the width and height separately. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} The new desired Width for the rendering area as a whole number \par
{\i Height} The new desired Width for the rendering area as a whole number \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000010" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: Need to attempt to update resolution here \par
}
}}\par
{
Definition at line 260 of file gamewindow.cpp.}\par
}
{\xe \v setRenderWidth\:phys::GameWindow}
{\xe \v phys::GameWindow\:setRenderWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GameWindow::setRenderWidth (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Width})}
}\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Width. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Render Width inside the window in windowed mode, set the resolution of the screen in fullscreen {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} This accepts a Whole. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000009" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: Need to attempt to update resolution here \par
}
}}\par
{
Definition at line 253 of file gamewindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
gamewindow.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
gamewindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::GraphicsManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::GraphicsManager}
{\xe \v phys::GraphicsManager}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to store basic graphics setting for the user. }}\par
{
{\f2 #include <graphicsmanager.h>}}\par
Inheritance diagram for phys::GraphicsManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d63/classphys_1_1GraphicsManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGL" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height, const bool &FullScreen)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Versatile Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGM" }{}}{\fldrslt {\cs37\ul\cf2 ~GraphicsManager}}}
 (){\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 CreateGameWindow}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &WindowCaption, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Height, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new game window to be rendered to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGO" }{}}{\fldrslt {\cs37\ul\cf2 GetGameWindow}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a game window by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGP" }{}}{\fldrslt {\cs37\ul\cf2 GetNumGameWindows}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of game windows within this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGQ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyGameWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a created game window by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 DestroyAllGameWindows}}}
 (bool ExcludePrimary=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys every game window created. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 GetPrimaryGameWindow}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the primary(first) game window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGT" }{}}{\fldrslt {\cs37\ul\cf2 GetDesktopSettings}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the desktop display settings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGU" }{}}{\fldrslt {\cs37\ul\cf2 HasSDLBeenInitialized}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not SDL has been started. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGV" }{}}{\fldrslt {\cs37\ul\cf2 HasOgreBeenInitialized}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not Ogre has been started. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGW" }{}}{\fldrslt {\cs37\ul\cf2 ShowGraphicsSettingDialog}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Shows an Engine Generated Configuration Screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGX" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderSystemName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of the render system in current use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 GetSupportedResolutions}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector containing all the resolutions supported by this render system on the current hardware. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 > * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGZ" }{}}{\fldrslt {\cs37\ul\cf2 GetSupportedDevices}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector containing all the devices supported by this render system on the current hardware. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHA" }{}}{\fldrslt {\cs37\ul\cf2 ResetRenderTimer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the Render timer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where the rendering takes place. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHD" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 PostMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is derived from and uses the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}} to perform the the post main loop callbacks. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to store basic graphics setting for the user. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores x/y resolution, fullscreen and in the future other settings. This is intended to make it easy for developers to pass/move around complex graphics settings. We hope to eventually include other items like shader settings, rendering API, and maybe other settings too. \par
}{
Definition at line 69 of file graphicsmanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GraphicsManager\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GraphicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GraphicsManager::GraphicsManager ()}
}\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a basic Graphics Settings with resolution 640x480 with fullscreen set to false \par
}{
Definition at line 56 of file graphicsmanager.cpp.}\par
}
{\xe \v GraphicsManager\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GraphicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GraphicsManager::GraphicsManager (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Height}, const bool & {\i FullScreen})}
}\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Versatile Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Width} The desired width. \par
{\i Height} The desired height. \par
{\i FullScreen} True if fullscreen, false if not.\par
}
This creates a Graphics Settings with resolution and fullscreen passed into to it that will be used when creating the primary window if one isn't already created when this manager in initialized. Be careful that the settings selected are appropriate. Many mobile devices do not support windows, and many screens do not support arbitrary resolutions in fullscreen mode. \par
}{
Definition at line 63 of file graphicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateGameWindow\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:CreateGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * phys::GraphicsManager::CreateGameWindow (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i WindowCaption}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Height}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Flags})}
}\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new game window to be rendered to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WindowCaption} The caption to be set in the window titlebar. \par
{\i Width} The desired width in pixels. \par
{\i Height} The desired height in pixels. \par
{\i Flags} Additional misc parameters, see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}} class for more info. \par
}
}{
Definition at line 147 of file graphicsmanager.cpp.}\par
}
{\xe \v DestroyAllGameWindows\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:DestroyAllGameWindows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GraphicsManager::DestroyAllGameWindows (bool {\i ExcludePrimary} = {\f2 true})}
}\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys every game window created. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ExcludePrimary} Whether or not you want to spare the primary window created. \par
}
}{
Definition at line 187 of file graphicsmanager.cpp.}\par
}
{\xe \v DestroyGameWindow\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:DestroyGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GraphicsManager::DestroyGameWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a created game window by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WindowIndex} The index of the window to be destroyed. \par
}
}{
Definition at line 174 of file graphicsmanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GraphicsManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where the rendering takes place. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This does the rendering for the game using all the actors in the actormanager. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 292 of file graphicsmanager.cpp.}\par
}
{\xe \v GetDesktopSettings\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetDesktopSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 & phys::GraphicsManager::GetDesktopSettings ()}
}\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the desktop display settings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Returns} a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}} struct with the desktop display settings. \par
}
}{
Definition at line 205 of file graphicsmanager.cpp.}\par
}
{\xe \v GetGameWindow\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * phys::GraphicsManager::GetGameWindow (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Index})}
}\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a game window by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the game window requested. \par
}}{
Definition at line 164 of file graphicsmanager.cpp.}\par
}
{\xe \v GetNumGameWindows\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetNumGameWindows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::GraphicsManager::GetNumGameWindows ()}
}\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of game windows within this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the number of game windows within this manager. \par
}}{
Definition at line 169 of file graphicsmanager.cpp.}\par
}
{\xe \v GetPrimaryGameWindow\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetPrimaryGameWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * phys::GraphicsManager::GetPrimaryGameWindow ()}
}\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the primary(first) game window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the primary game window. \par
}}{
Definition at line 200 of file graphicsmanager.cpp.}\par
}
{\xe \v GetRenderSystemName\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetRenderSystemName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::GraphicsManager::GetRenderSystemName ()}
}\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of the render system in current use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name of the current render system. \par
}}{
Definition at line 235 of file graphicsmanager.cpp.}\par
}
{\xe \v GetSupportedDevices\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetSupportedDevices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 > * phys::GraphicsManager::GetSupportedDevices ()}
}\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector containing all the devices supported by this render system on the current hardware. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This vector is populated when the manager gets initialized. Calling on it before then will give you an empty vector. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Const Pointer to the vector storing all the supported devices. \par
}}{
Definition at line 248 of file graphicsmanager.cpp.}\par
}
{\xe \v GetSupportedResolutions\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetSupportedResolutions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 > * phys::GraphicsManager::GetSupportedResolutions ()}
}\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector containing all the resolutions supported by this render system on the current hardware. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This vector is populated when the manager gets initialized. Calling on it before then will give you an empty vector. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Const Pointer to the vector storing all the supported resolutions. \par
}}{
Definition at line 243 of file graphicsmanager.cpp.}\par
}
{\xe \v GetType\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::GraphicsManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::GraphicsManager \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 313 of file graphicsmanager.cpp.}\par
}
{\xe \v HasOgreBeenInitialized\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:HasOgreBeenInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::GraphicsManager::HasOgreBeenInitialized ()}
}\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not Ogre has been started. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether or not Ogre has been initialized yet. \par
}}{
Definition at line 215 of file graphicsmanager.cpp.}\par
}
{\xe \v HasSDLBeenInitialized\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:HasSDLBeenInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::GraphicsManager::HasSDLBeenInitialized ()}
}\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not SDL has been started. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether or not SDL has been initialized yet. \par
}}{
Definition at line 210 of file graphicsmanager.cpp.}\par
}
{\xe \v Initialize\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GraphicsManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This specific initializor is unneeded, but we implement it for compatibility. It also exists in case a derived class wants to override it for some reason \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 259 of file graphicsmanager.cpp.}\par
}
{\xe \v PostMainLoopItems\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:PostMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::GraphicsManager::PostMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is derived from and uses the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}} to perform the the post main loop callbacks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a true or false depending on what the callback returns \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 316 of file graphicsmanager.cpp.}\par
}
{\xe \v ResetRenderTimer\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:ResetRenderTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GraphicsManager::ResetRenderTimer (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the Render timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function should not be called unless you know exactly what you are doing. This will reset the timer keeping track of game frame times, and thus can disrupt functionality of the mainloop. \par
}{
Definition at line 253 of file graphicsmanager.cpp.}\par
}
{\xe \v ShowGraphicsSettingDialog\:phys::GraphicsManager}
{\xe \v phys::GraphicsManager\:ShowGraphicsSettingDialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::GraphicsManager::ShowGraphicsSettingDialog ()}
}\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Shows an Engine Generated Configuration Screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This could look like and could offer just about any option to the user. It is loosely expected to show Graphical Configuration options, like Vsync and Resolution, But it might ask some really silly stuff. I think this would be fine for smaller simpler apps Which have no other way to configure such things, but any sizable project should develop their own way to expose and manage user settings. \par
}{
Definition at line 223 of file graphicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
graphicsmanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
graphicsmanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::GraphicsSettings Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::GraphicsSettings}
{\xe \v phys::GraphicsSettings}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores all the possible configuration options the graphics manager supports. }}\par
{
{\f2 #include <graphicsmanager.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHG" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 (){\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 & {\b operator=} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsSettings}}}
 &GS){\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHI" }{}}{\fldrslt {\cs37\ul\cf2 RenderHeight}}}
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores the Height of the renderwindow. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHJ" }{}}{\fldrslt {\cs37\ul\cf2 RenderWidth}}}
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores the Width of the renderwindow. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RefreshRate}}}
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores the device refresh rate in Hz. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 Fullscreen}}}
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the desired state of whether the window is fullscreen or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHM" }{}}{\fldrslt {\cs37\ul\cf2 VSync}}}
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the desired state of whether to enable VSync or not. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This stores all the possible configuration options the graphics manager supports. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The graphics manager stores one of these for all of it's configuration options, additionally one can be created and passed into the manager to set all the configuration options at once. \par
}{
Definition at line 55 of file graphicssettings.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
graphicssettings.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::GravityField Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::GravityField}
{\xe \v phys::GravityField}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity field implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class. }}\par
{
{\f2 #include <areaeffect.h>}}\par
Inheritance diagram for phys::GravityField:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d8a/classphys_1_1GravityField.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 GravityField}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 ~GravityField}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUO" }{}}{\fldrslt {\cs37\ul\cf2 ApplyEffect}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the effect this field has to object inside. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 SetFieldGravity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Gravity)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity force for this field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 GetFieldGravity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gravity of this field. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 Grav}}}
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The stored value for this fields gravity. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity field implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is not a gravity well, where gravity is pulling to one point. Instead this class uniformly pulls gravity in one direction that is different from the world gravity. \par
}{
Definition at line 256 of file areaeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GravityField\:phys::GravityField}
{\xe \v phys::GravityField\:GravityField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GravityField::GravityField (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic initialization constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the field. \par
{\i Location} The location of the AE field. \par
}
}{
Definition at line 515 of file areaeffect.cpp.}\par
}
{\xe \v ~GravityField\:phys::GravityField}
{\xe \v phys::GravityField\:~GravityField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GravityField::~GravityField ()}
}\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. \par
}{
Definition at line 519 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyEffect\:phys::GravityField}
{\xe \v phys::GravityField\:ApplyEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GravityField::ApplyEffect (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the effect this field has to object inside. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function defines the behavior for the class. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASS" }{}}{\fldrslt {\cs37\ul\cf2 phys::AreaEffect}}}
.}\par
{
Definition at line 523 of file areaeffect.cpp.}\par
}
{\xe \v GetFieldGravity\:phys::GravityField}
{\xe \v phys::GravityField\:GetFieldGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::GravityField::GetFieldGravity ()}
}\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gravity of this field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the strength and direction of gravity this field has. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector3 representing the force and direction of gravity this field has. \par
}}{
Definition at line 552 of file areaeffect.cpp.}\par
}
{\xe \v SetFieldGravity\:phys::GravityField}
{\xe \v phys::GravityField\:SetFieldGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GravityField::SetFieldGravity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Gravity})}
}\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity force for this field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the strength and direction of gravity this field will have. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Gravity} The vector3 representing the force and direction of gravity this field will have. \par
}
}{
Definition at line 547 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::GravityWell Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::GravityWell}
{\xe \v phys::GravityWell}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity well implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class. }}\par
{
{\f2 #include <areaeffect.h>}}\par
Inheritance diagram for phys::GravityWell:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d21/classphys_1_1GravityWell.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 AttenuationStyle}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 GW_Att_None}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUZ" }{}}{\fldrslt {\cs37\ul\cf2 GW_Att_Linear}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVA" }{}}{\fldrslt {\cs37\ul\cf2 GW_Att_Quadratic}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These values represent the kind of attenuation applied to the field strength over a distance. None is the default, where the force is constant in all area's of the field. Linear is where the force applied drops by the attenuation value times the distance (strength - (attenuation amount * distance to AE center)). Quadratic is where the force applied drops by the attenuation value times the distance squared (strength - (attenuation amount * distance to AE center * distance to AE center)). \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVB" }{}}{\fldrslt {\cs37\ul\cf2 GravityWell}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVC" }{}}{\fldrslt {\cs37\ul\cf2 ~GravityWell}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 ApplyEffect}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the effect this field has to object inside. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVD" }{}}{\fldrslt {\cs37\ul\cf2 SetFieldStrength}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 FieldStrength)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the strenth of the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVE" }{}}{\fldrslt {\cs37\ul\cf2 GetFieldStrength}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the strength of the field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVF" }{}}{\fldrslt {\cs37\ul\cf2 SetAllowWorldGravity}}}
 (bool WorldGravity)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether or not world gravity should be removed for objects in this field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVG" }{}}{\fldrslt {\cs37\ul\cf2 GetAllowWorldGravity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not world gravity is is removed for objects inside this field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVH" }{}}{\fldrslt {\cs37\ul\cf2 SetAttenuation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Amount, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 AttenuationStyle}}}
 Style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the attenuation for this field. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 AttenuationStyle}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVI" }{}}{\fldrslt {\cs37\ul\cf2 GetAttenuationStyle}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Style of attenuation applied. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVJ" }{}}{\fldrslt {\cs37\ul\cf2 GetAttenuationAmount}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the amount force is attenuated over distance. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 Strength}}}
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The amount of force exerted on other objects. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 AllowWorldGrav}}}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should world gravity ne ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 AttenuationStyle}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 AttenStyle}}}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How does gravity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVN" }{}}{\fldrslt {\cs37\ul\cf2 AttenAmount}}}
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
how much does the Gravity attenuate. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a gravity well implementation of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}} class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is not a gravity field, where gravity only pulls in one direction. Instead this class will always pull objects inside it towards the field center. \par This class works best with sphere's, but can be made to work with any shape. \par
}{
Definition at line 291 of file areaeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AttenuationStyle\:phys::GravityWell}
{\xe \v phys::GravityWell\:AttenuationStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 phys::GravityWell::AttenuationStyle}}}
}
}\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These values represent the kind of attenuation applied to the field strength over a distance. None is the default, where the force is constant in all area's of the field. Linear is where the force applied drops by the attenuation value times the distance (strength - (attenuation amount * distance to AE center)). Quadratic is where the force applied drops by the attenuation value times the distance squared (strength - (attenuation amount * distance to AE center * distance to AE center)). }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v GW_Att_None\:phys::GravityWell}
{\xe \v phys::GravityWell\:GW_Att_None}
{\b {\i GW_Att_None{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No Attentuation, Equal strength through. \par
}{\xe \v GW_Att_Linear\:phys::GravityWell}
{\xe \v phys::GravityWell\:GW_Att_Linear}
{\b {\i GW_Att_Linear{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linear attentuation, Strength weaker farther from center. \par
}{\xe \v GW_Att_Quadratic\:phys::GravityWell}
{\xe \v phys::GravityWell\:GW_Att_Quadratic}
{\b {\i GW_Att_Quadratic{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quadratic/Exponential Attentuation, similar to real gravity, it tapers of more the further from the center you get. \par
}}
\par
{
Definition at line 300 of file areaeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GravityWell\:phys::GravityWell}
{\xe \v phys::GravityWell\:GravityWell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GravityWell::GravityWell (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic initialization constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the field. \par
{\i Location} The location of the AE field. \par
}
}{
Definition at line 560 of file areaeffect.cpp.}\par
}
{\xe \v ~GravityWell\:phys::GravityWell}
{\xe \v phys::GravityWell\:~GravityWell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::GravityWell::~GravityWell ()}
}\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. \par
}{
Definition at line 569 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyEffect\:phys::GravityWell}
{\xe \v phys::GravityWell\:ApplyEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GravityWell::ApplyEffect (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the effect this field has to object inside. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function defines the behavior for the class. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASS" }{}}{\fldrslt {\cs37\ul\cf2 phys::AreaEffect}}}
.}\par
{
Definition at line 573 of file areaeffect.cpp.}\par
}
{\xe \v GetAllowWorldGravity\:phys::GravityWell}
{\xe \v phys::GravityWell\:GetAllowWorldGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::GravityWell::GetAllowWorldGravity (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether or not world gravity is is removed for objects inside this field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether objects inside are affected by world gravity. \par
}}{
Definition at line 654 of file areaeffect.cpp.}\par
}
{\xe \v GetAttenuationAmount\:phys::GravityWell}
{\xe \v phys::GravityWell\:GetAttenuationAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GravityWell::GetAttenuationAmount (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the amount force is attenuated over distance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVH" }{}}{\fldrslt {\cs37\ul\cf2 SetAttenuation()}}} for more details. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real value \par
}}{
Definition at line 670 of file areaeffect.cpp.}\par
}
{\xe \v GetAttenuationStyle\:phys::GravityWell}
{\xe \v phys::GravityWell\:GetAttenuationStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 GravityWell::AttenuationStyle}}}
 phys::GravityWell::GetAttenuationStyle (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Style of attenuation applied. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See the AttenuationStyle enum for more details. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the style of attenuation currently being used by this field. \par
}}{
Definition at line 665 of file areaeffect.cpp.}\par
}
{\xe \v GetFieldStrength\:phys::GravityWell}
{\xe \v phys::GravityWell\:GetFieldStrength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::GravityWell::GetFieldStrength (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the strength of the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real representing the value that is being multiplied by the direction to determine force appied to objects. \par
}}{
Definition at line 644 of file areaeffect.cpp.}\par
}
{\xe \v SetAllowWorldGravity\:phys::GravityWell}
{\xe \v phys::GravityWell\:SetAllowWorldGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GravityWell::SetAllowWorldGravity (bool {\i WorldGravity}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether or not world gravity should be removed for objects in this field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarks:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Changing this value while the field is in the world and active is not recommended. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WorldGravity} If true, then forces exerted by this field will be added to the world gravity, otherwise world gravity for objects inside will be set to zero. \par
}
}{
Definition at line 649 of file areaeffect.cpp.}\par
}
{\xe \v SetAttenuation\:phys::GravityWell}
{\xe \v phys::GravityWell\:SetAttenuation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GravityWell::SetAttenuation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Amount}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 AttenuationStyle}}}
 {\i Style}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the attenuation for this field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Amount} The amount of force that is dropped off per 1 unit of distance objects are from the AE center. \par
{\i Style} The style of attenuation to apply, see the AttenuationStyle enum for more details. \par
}
}{
Definition at line 659 of file areaeffect.cpp.}\par
}
{\xe \v SetFieldStrength\:phys::GravityWell}
{\xe \v phys::GravityWell\:SetFieldStrength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::GravityWell::SetFieldStrength (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i FieldStrength}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the strenth of the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The direction of the field is based on the current position of the object in the field. Once that direction is calculated it will be multiplied by this value to determine the force the field will apply to the object. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i FieldStrength} The strength the field will have when exerting force onto other objects. \par
}
}{
Definition at line 639 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::InputQueryTool Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::InputQueryTool}
{\xe \v phys::InputQueryTool}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of utilities for getting input information. }}\par
{
{\f2 #include <inputquerytool.h>}}\par
Inheritance diagram for phys::InputQueryTool:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d96/classphys_1_1InputQueryTool.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHO" }{}}{\fldrslt {\cs37\ul\cf2 ~InputQueryTool}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHP" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseX}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the X coordinate of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHQ" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseY}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the Y coordinate of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 GetJoystickAxis}}}
 (short unsigned int Axis)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Gets the value of the given joystick axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseCoordinates}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets a vector2 containing both X and Y coordinates of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 GetMousePrevFrameOffset}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the offset location of the mouse since the previous frame. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 GetRawMetaValue}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 AnyCode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get an unfiltered uninterpretted version of the value for an user input. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 IsMouseButtonPushed}}}
 (short unsigned int MouseButton)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether a specific Mouse button is pushed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHW" }{}}{\fldrslt {\cs37\ul\cf2 IsJoystickButtonPushed}}}
 (short unsigned int JoyStickButton)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether a specific Joystick button is pushed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsJoystickHatPushedInDirection} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::DirectionalMotionState}}}
 WhichWay, bool IsVertical){\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 IsKeyboardButtonPushed}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 KeyboardButton)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether a specific Keyboard button is pushed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIB" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseButtonState}}}
 (short unsigned int MouseButton)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button state of the provided mouse button ID. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIC" }{}}{\fldrslt {\cs37\ul\cf2 GetKeyboardButtonState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 KeyboardButton)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button state of the provided keyboard button ID. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::DirectionalMotionState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABID" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseWheelState}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the mouse wheel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIE" }{}}{\fldrslt {\cs37\ul\cf2 GatherEvents}}}
 (bool ClearEventsFromEventMgr=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gathers any user-input/event data that might be queryed. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< int > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 CodeCache}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A place to store which keys and mouse buttons are pressed or not. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of utilities for getting input information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is useful for quickly and easily getting common input information. This does so by querying the event manager when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIE" }{}}{\fldrslt {\cs37\ul\cf2 GatherEvents()}}} is called, and storing all of the results in an vector, array or similar structure. All of the functions except {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIE" }{}}{\fldrslt {\cs37\ul\cf2 GatherEvents()}}} run in constant time because of this. Having this remove the read events from the event manager can reduce time spent working on user input events to focus on other events. \par
}{
Definition at line 63 of file inputquerytool.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InputQueryTool\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:InputQueryTool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::InputQueryTool::InputQueryTool ()}
}\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}} ready to run queries on the input. \par
}{
Definition at line 45 of file inputquerytool.cpp.}\par
}
{\xe \v ~InputQueryTool\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:~InputQueryTool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::InputQueryTool::~InputQueryTool ()}
}\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes everything in the input query tool. \par
}{
Definition at line 48 of file inputquerytool.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GatherEvents\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GatherEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::InputQueryTool::GatherEvents (bool {\i ClearEventsFromEventMgr} = {\f2 false})}
}\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gathers any user-input/event data that might be queryed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This should be called periodcally (ideally in the post user input callback) to allow this to gather data from the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} 's event manager. When called this will drop prior event data and any relevant queries will come from this new data. At the caller's discretion this method can properly delete any events pulled from the event manager. \par \par This runs in linear time relative to the events in the event manager. This will usually be a trivial amount if this is run each iteration and excess events are removed (either by this method or some other form of event cleanup) {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ClearEventsFromEventMgr} If set to true, This method will properly remove any events it pulls from the event manager. \par
}
}{
Definition at line 92 of file inputquerytool.cpp.}\par
}
{\xe \v GetJoystickAxis\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetJoystickAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::InputQueryTool::GetJoystickAxis (short unsigned int {\i Axis})}
}\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Gets the value of the given joystick axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Axis} The index of the axis that you want \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An integer with the Value of the joystick axis \par
}}{
Definition at line 55 of file inputquerytool.cpp.}\par
}
{\xe \v GetKeyboardButtonState\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetKeyboardButtonState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}
 phys::InputQueryTool::GetKeyboardButtonState ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\i KeyboardButton})}
}\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button state of the provided keyboard button ID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i KeyboardButton} The Input code for the keyboard button you wish to query. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a button state enum representing the button state. \par
}}{
Definition at line 86 of file inputquerytool.cpp.}\par
}
{\xe \v GetMouseButtonState\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetMouseButtonState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}
 phys::InputQueryTool::GetMouseButtonState (short unsigned int {\i MouseButton})}
}\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button state of the provided mouse button ID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MouseButton} The mouse button ID(up to 16) you wish to query.\par
}
Far from all mice have 16 buttons, be sure you know how many buttons the mouse has As this function doesn't perform that check. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a button state enum representing the button state. \par
}}{
Definition at line 84 of file inputquerytool.cpp.}\par
}
{\xe \v GetMouseCoordinates\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetMouseCoordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::InputQueryTool::GetMouseCoordinates ()}
}\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets a vector2 containing both X and Y coordinates of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If precision is important then you should use the individual coordinate fetching functions instead. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} containing Reals to represent both mouse coordinates. \par
}}{
Definition at line 59 of file inputquerytool.cpp.}\par
}
{\xe \v GetMousePrevFrameOffset\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetMousePrevFrameOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::InputQueryTool::GetMousePrevFrameOffset ()}
}\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the offset location of the mouse since the previous frame. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} is only accurate if this class gathers events every frame. Avoid calling this function otherwise. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a vector2 that stores how the mouse has moved since the previous frame. \par
}}{
Definition at line 61 of file inputquerytool.cpp.}\par
}
{\xe \v GetMouseWheelState\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetMouseWheelState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::DirectionalMotionState}}}
 phys::InputQueryTool::GetMouseWheelState ()}
}\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the mouse wheel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing the current state of the mouse wheel. \par
}}{
Definition at line 89 of file inputquerytool.cpp.}\par
}
{\xe \v GetMouseX\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetMouseX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::InputQueryTool::GetMouseX ()}
}\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the X coordinate of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a Whole number which represents the X coordinate of the mouse. \par
}}{
Definition at line 51 of file inputquerytool.cpp.}\par
}
{\xe \v GetMouseY\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetMouseY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::InputQueryTool::GetMouseY ()}
}\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the Y coordinate of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a Whole number which represents the Y coordinate of the mouse. \par
}}{
Definition at line 53 of file inputquerytool.cpp.}\par
}
{\xe \v GetRawMetaValue\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:GetRawMetaValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::InputQueryTool::GetRawMetaValue ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\i AnyCode})}
}\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get an unfiltered uninterpretted version of the value for an user input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AnyCode} The InputCode to retrieve the value for \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An int which may or may not correspond to a ButtonState, MouseWheelState, or some other Value. \par
}}{
Definition at line 64 of file inputquerytool.cpp.}\par
}
{\xe \v IsJoystickButtonPushed\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:IsJoystickButtonPushed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::InputQueryTool::IsJoystickButtonPushed (short unsigned int {\i JoyStickButton})}
}\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether a specific Joystick button is pushed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs in constant time and returns a true is the requested Joystick button is pressed. Buttons that are being pressed are considered pressed, and buttons that are being lifted are considered unpressed. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i JoyStickButton} This is the Joystick button that is being checked \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which is set to true if the requested button is pressed or held down, and false otherwise. \par
}}{
Definition at line 69 of file inputquerytool.cpp.}\par
}
{\xe \v IsKeyboardButtonPushed\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:IsKeyboardButtonPushed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::InputQueryTool::IsKeyboardButtonPushed ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\i KeyboardButton})}
}\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether a specific Keyboard button is pushed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs in constant time and returns a true is the requested mouse button is pressed. Buttons that are being pressed are considered pressed, and buttons that are being lifted are considered unpressed. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i KeyboardButton} This is the button that is being checked. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which is set to true if the requested button is pressed or held down, and false otherwise. \par
}}{
Definition at line 71 of file inputquerytool.cpp.}\par
}
{\xe \v IsMouseButtonPushed\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:IsMouseButtonPushed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::InputQueryTool::IsMouseButtonPushed (short unsigned int {\i MouseButton})}
}\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether a specific Mouse button is pushed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs in constant time and returns a true is the requested mouse button is pressed. Buttons that are being pressed are considered pressed, and buttons that are being lifted are considered unpressed. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MouseButton} This is the mouse button that is being checked \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which is set to true if the requested button is pressed or held down, and false otherwise. \par
}}{
Definition at line 67 of file inputquerytool.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v CodeCache\:phys::InputQueryTool}
{\xe \v phys::InputQueryTool\:CodeCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<int> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 phys::InputQueryTool::CodeCache}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A place to store which keys and mouse buttons are pressed or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid In the constructor we force the insertion INPUTEVENT_LAST \par}}{
Definition at line 69 of file inputquerytool.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
inputquerytool.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
inputquerytool.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::debug::InternalDebugDrawer Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to draw wireframse for the Physics subsystem. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKM" }{}}{\fldrslt {\cs37\ul\cf2 InternalDebugDrawer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}
 *ParentWorld_, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 WireFrameCount_=2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKN" }{}}{\fldrslt {\cs37\ul\cf2 ~InternalDebugDrawer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKO" }{}}{\fldrslt {\cs37\ul\cf2 drawLine}}}
 (const btVector3 &from, const btVector3 &to, const btVector3 &color)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will prepare a line segment for being drawn. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKP" }{}}{\fldrslt {\cs37\ul\cf2 PrepareForRendering}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This add all the rendering information to the graphics subsystem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKQ" }{}}{\fldrslt {\cs37\ul\cf2 SetWireFrameCount}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 WireFrameCount_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the amount of previous wireframes to leave visible. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKR" }{}}{\fldrslt {\cs37\ul\cf2 GetWireFrameCount}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the amount of wireframes to be drawn. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKS" }{}}{\fldrslt {\cs37\ul\cf2 drawContactPoint}}}
 (const btVector3 &PointOnB, const btVector3 &normalOnB, btScalar distance, int lifeTime, const btVector3 &color)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently Unused. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKT" }{}}{\fldrslt {\cs37\ul\cf2 reportErrorWarning}}}
 (const char *warningString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used by the physics subsystem to report errors using the renderer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKU" }{}}{\fldrslt {\cs37\ul\cf2 draw3dText}}}
 (const btVector3 &location, const char *textString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently Unused. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKV" }{}}{\fldrslt {\cs37\ul\cf2 setDebugMode}}}
 (int debugMode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to decide how much the debug render should draw. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKW" }{}}{\fldrslt {\cs37\ul\cf2 getDebugMode}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will return the current debug mode. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to draw wireframse for the Physics subsystem. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 76 of file physicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalDebugDrawer\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:InternalDebugDrawer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::debug::InternalDebugDrawer::InternalDebugDrawer ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}
 * {\i ParentWorld_}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i WireFrameCount_} = {\f2 2})}
}\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i ParentWorld_} This is a Pointer to the world to be rendered \par
{\i WireFrameCount_} This sets the amount of previous Wireframes to be rendered, see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKQ" }{}}{\fldrslt {\cs37\ul\cf2 InternalDebugDrawer::SetWireFrameCount}}} for details.\par
}
This creates a basic Debug Drawer which works with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} that was passed. With a new \par}}{
Definition at line 175 of file physicsmanager.cpp.}\par
}
{\xe \v ~InternalDebugDrawer\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:~InternalDebugDrawer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::debug::InternalDebugDrawer::~InternalDebugDrawer ()}
}\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This deletes all the Wireframes and will stop wireframe rendering \par}}{
Definition at line 186 of file physicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw3dText\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:draw3dText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::draw3dText (const btVector3 & {\i location}, const char * {\i textString}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently Unused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Currently Unused {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i location} Currently Unused \par
{\i textString} Currently Unused \par
}
\par}}{
Definition at line 218 of file physicsmanager.cpp.}\par
}
{\xe \v drawContactPoint\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:drawContactPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::drawContactPoint (const btVector3 & {\i PointOnB}, const btVector3 & {\i normalOnB}, btScalar {\i distance}, int {\i lifeTime}, const btVector3 & {\i color}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently Unused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Currently Unused {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i PointOnB} Currently Unused \par
{\i normalOnB} Currently Unused \par
{\i distance} Currently Unused \par
{\i lifeTime} Currently Unused \par
{\i color} Currently Unused \par
}
\par}}{
Definition at line 207 of file physicsmanager.cpp.}\par
}
{\xe \v drawLine\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:drawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::drawLine (const btVector3 & {\i from}, const btVector3 & {\i to}, const btVector3 & {\i color}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will prepare a line segment for being drawn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This adds the points for a line to the internal list of points to be rendered. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i from} The first point of the line \par
{\i to} The second point of the line \par
{\i color} Currently ignored \par
}
\par}}{
Definition at line 195 of file physicsmanager.cpp.}\par
}
{\xe \v getDebugMode\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:getDebugMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::debug::InternalDebugDrawer::getDebugMode () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will return the current debug mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Currently this can only return btIDebugDraw::DBG_NoDebug or btIDebugDraw::DBG_DrawWireframe \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns the Current debug mode, currently either btIDebugDraw::DBG_NoDebug or btIDebugDraw::DBG_DrawWireframe \par
}\par}}{
Definition at line 226 of file physicsmanager.cpp.}\par
}
{\xe \v GetWireFrameCount\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:GetWireFrameCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::debug::InternalDebugDrawer::GetWireFrameCount (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the amount of wireframes to be drawn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns either 2 or the amount last set by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKQ" }{}}{\fldrslt {\cs37\ul\cf2 InternalDebugDrawer::SetWireFrameCount}}} . \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This returns a whole number with the wireframe limit. \par
}\par}}{
Definition at line 255 of file physicsmanager.cpp.}\par
}
{\xe \v PrepareForRendering\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:PrepareForRendering}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::PrepareForRendering (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This add all the rendering information to the graphics subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This sends all the points in the list of lines to the rendering subsystem(currently ogre), where they will stay until deleted \par}}{
Definition at line 231 of file physicsmanager.cpp.}\par
}
{\xe \v reportErrorWarning\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:reportErrorWarning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::reportErrorWarning (const char * {\i warningString}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used by the physics subsystem to report errors using the renderer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid We *Believe* that this is used by the physics subsystem to report errors about rendering to the developer/user. As such, we Have redirected all input from this function to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 World::Log}}} function. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i warningString} We *Believe* These are messagesfrom the physics subsystem, and that this should not directly called otherwise \par
}
\par}}{
Definition at line 212 of file physicsmanager.cpp.}\par
}
{\xe \v setDebugMode\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:setDebugMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::setDebugMode (int {\i debugMode}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to decide how much the debug render should draw. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Currently this accepts btIDebugDraw::DBG_NoDebug or btIDebugDraw::DBG_DrawWireframe and setting these will either start or stop Wireframe rendering. All other btIDebugDraw values are ignored. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i debugMode} An Int which contains either btIDebugDraw::DBG_NoDebug or btIDebugDraw::DBG_DrawWireframe \par
}
\par}}{
Definition at line 221 of file physicsmanager.cpp.}\par
}
{\xe \v SetWireFrameCount\:phys::debug::InternalDebugDrawer}
{\xe \v phys::debug::InternalDebugDrawer\:SetWireFrameCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::debug::InternalDebugDrawer::SetWireFrameCount ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i WireFrameCount_}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the amount of previous wireframes to leave visible. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will limit the amount of previous wireframes drawn. Setting this will cause all the extra wireframes to be deleted {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKP" }{}}{\fldrslt {\cs37\ul\cf2 InternalDebugDrawer::PrepareForRendering()}}} is next called, which should happen just before everything is rendered. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i WireFrameCount_} This is a whole number which is limit. \par
}
\par}}{
Definition at line 250 of file physicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physicsmanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Light Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Light}
{\xe \v phys::Light}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the class used for dynamic lighting within the scene. }}\par
{
{\f2 #include <light.h>}}\par
Inheritance diagram for phys::Light:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/df1/classphys_1_1Light.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 LightType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 Directional}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABII" }{}}{\fldrslt {\cs37\ul\cf2 Point}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIJ" }{}}{\fldrslt {\cs37\ul\cf2 Spotlight}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
What kind of light Source. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIK" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 (Ogre::Light *light, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIM" }{}}{\fldrslt {\cs37\ul\cf2 ~Light}}}
 (){\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIN" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIO" }{}}{\fldrslt {\cs37\ul\cf2 SetType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 Light::LightType}}}
 Type)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of light this light is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIP" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location from where the light will originate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIQ" }{}}{\fldrslt {\cs37\ul\cf2 SetDirection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Direction)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the light will originate from. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIR" }{}}{\fldrslt {\cs37\ul\cf2 SetDiffuseColour}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Red, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Green, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Blue)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Diffuse light from this source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIS" }{}}{\fldrslt {\cs37\ul\cf2 SetDiffuseColour}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Diffuse light from this source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIT" }{}}{\fldrslt {\cs37\ul\cf2 SetSpecularColour}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Red, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Green, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Blue)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Specular light from this source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIU" }{}}{\fldrslt {\cs37\ul\cf2 SetSpecularColour}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Specular light from this source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 SetAttenuation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Range, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Constant, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Linear, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Quadratic)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the factors for the attenuation formula applied to this light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 SetSpotlightRange}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 InnerAngle, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 OuterAngle, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Falloff=1.0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the cone of light emitted by a spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 SetSpotlightInnerAngle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 InnerAngle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Inner angle of the cone of light emitted by a spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 SetSpotlightOuterAngle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 OuterAngle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Outer angle of the cone of light emitted by a spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIZ" }{}}{\fldrslt {\cs37\ul\cf2 SetSpotlightFalloff}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Falloff)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the rate of falloff of the cone of light emitted by a spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 SetPowerScale}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Power)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the lights power scale. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 Light::LightType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of light that this light is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJC" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current location of the light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJD" }{}}{\fldrslt {\cs37\ul\cf2 GetDirection}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently set direction of the light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJE" }{}}{\fldrslt {\cs37\ul\cf2 GetDiffuseColour}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current colour of the diffuse light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJF" }{}}{\fldrslt {\cs37\ul\cf2 GetSpecularColour}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current colour of the specular light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJG" }{}}{\fldrslt {\cs37\ul\cf2 GetAttenuationRange}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the absolute range of attenuation in world units. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJH" }{}}{\fldrslt {\cs37\ul\cf2 GetAttenuationConstant}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the constant factor of the attenuation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJI" }{}}{\fldrslt {\cs37\ul\cf2 GetAttenuationLinear}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the linear factor of the attentuation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJJ" }{}}{\fldrslt {\cs37\ul\cf2 GetAttenuationQuadric}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the quadric factor of the attenuation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJK" }{}}{\fldrslt {\cs37\ul\cf2 GetSpotlightInnerAngle}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Inner angle of the cone of light emitted by this spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJL" }{}}{\fldrslt {\cs37\ul\cf2 GetSpotlightOuterAngle}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Outer angle of the cone of light emitted by this spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJM" }{}}{\fldrslt {\cs37\ul\cf2 GetSpotlightFalloff}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the rate of falloff of the cone of light emitted by this spotlight. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 GetPowerScale}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the lights power scale. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::Light * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJO" }{}}{\fldrslt {\cs37\ul\cf2 OgreLight}}}
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ogre light this class gets it's functionality from. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJP" }{}}{\fldrslt {\cs37\ul\cf2 Manager}}}
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the manager that created this class. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b WorldNode}{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the class used for dynamic lighting within the scene. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamic lights come in 3 flavors: \par Directional - Used to simulate light from a very distant source. Doesn't need a location, only a direction. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}} will hit all objects accordingly from that direction. \par Point - Used to simulate local light sources that emit light in all directions. Doesn't need a direction, just a position. \par Spotlight - Used to simulate local light sources that emit light in one direction, such as a flashlight. Needs both a position and direction. In addition needs values for falloff. \par Note: If attaching a light to a node, all transform information(position and orientation) becomes relative to the nodes transform. \par
}{
Definition at line 71 of file light.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LightType\:phys::Light}
{\xe \v phys::Light\:LightType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 phys::Light::LightType}}}
}
}\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
What kind of light Source. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Directional\:phys::Light}
{\xe \v phys::Light\:Directional}
{\b {\i Directional{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
From one direction, like sunlight. \par
}{\xe \v Point\:phys::Light}
{\xe \v phys::Light\:Point}
{\b {\i Point{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
From a point in space, like a Torch, campfire, muzzle flash, Mutant Fireflies, bonfires, light bulbs, non-hooded lantern, the DnD D20 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}} spell, explosions, and scotch tape separating from the roll in a unlit vacuum. There may be other uses, be creative. \par
}{\xe \v Spotlight\:phys::Light}
{\xe \v phys::Light\:Spotlight}
{\b {\i Spotlight{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
From a point emanating in a cone, like a flashlight, hooded lantern, really bright computer screens, flood lights, older style space heaters, Concert lights, camera flashes, etc... \par
}}
\par
{
Definition at line 75 of file light.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Light\:phys::Light}
{\xe \v phys::Light\:Light}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Light::Light (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\i manager})}
}\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this light. \par
{\i manager} Pointer to the manager that this light is to be used in. \par
}
}{
Definition at line 45 of file light.cpp.}\par
}
{\xe \v Light\:phys::Light}
{\xe \v phys::Light\:Light}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Light::Light (Ogre::Light * {\i light}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\i manager})}
}\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor should not be called on manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i light} The Ogre light this class is based on. \par
{\i manager} Pointer to the manager that this light is to be used in. \par
}
}{
Definition at line 52 of file light.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetAttenuationConstant\:phys::Light}
{\xe \v phys::Light\:GetAttenuationConstant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetAttenuationConstant () const}
}\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the constant factor of the attenuation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the constant factor of attenuation. \par
}}{
Definition at line 203 of file light.cpp.}\par
}
{\xe \v GetAttenuationLinear\:phys::Light}
{\xe \v phys::Light\:GetAttenuationLinear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetAttenuationLinear () const}
}\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the linear factor of the attentuation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the linear factor of attenuation. \par
}}{
Definition at line 208 of file light.cpp.}\par
}
{\xe \v GetAttenuationQuadric\:phys::Light}
{\xe \v phys::Light\:GetAttenuationQuadric}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetAttenuationQuadric () const}
}\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the quadric factor of the attenuation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the quadric factor of attenuation. \par
}}{
Definition at line 213 of file light.cpp.}\par
}
{\xe \v GetAttenuationRange\:phys::Light}
{\xe \v phys::Light\:GetAttenuationRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetAttenuationRange () const}
}\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the absolute range of attenuation in world units. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the absolute range of attenuation. \par
}}{
Definition at line 198 of file light.cpp.}\par
}
{\xe \v GetDiffuseColour\:phys::Light}
{\xe \v phys::Light\:GetDiffuseColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::Light::GetDiffuseColour () const}
}\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current colour of the diffuse light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a colourvalue representing the currently set Diffuse light. \par
}}{
Definition at line 186 of file light.cpp.}\par
}
{\xe \v GetDirection\:phys::Light}
{\xe \v phys::Light\:GetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Light::GetDirection () const}
}\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently set direction of the light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector3 representing the set direction of the light. \par
}}{
Definition at line 180 of file light.cpp.}\par
}
{\xe \v GetName\:phys::Light}
{\xe \v phys::Light\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::Light::GetName () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name given to this light. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVX" }{}}{\fldrslt {\cs37\ul\cf2 phys::Attachable}}}
.}\par
{
Definition at line 64 of file light.cpp.}\par
}
{\xe \v GetPosition\:phys::Light}
{\xe \v phys::Light\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Light::GetPosition () const}
}\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current location of the light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector3 representing the location of the light. \par
}}{
Definition at line 174 of file light.cpp.}\par
}
{\xe \v GetPowerScale\:phys::Light}
{\xe \v phys::Light\:GetPowerScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetPowerScale () const}
}\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the lights power scale. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the power scale of the light. \par
}}{
Definition at line 233 of file light.cpp.}\par
}
{\xe \v GetSpecularColour\:phys::Light}
{\xe \v phys::Light\:GetSpecularColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 phys::Light::GetSpecularColour () const}
}\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current colour of the specular light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a colourvalue representing the currently set Specular light. \par
}}{
Definition at line 192 of file light.cpp.}\par
}
{\xe \v GetSpotlightFalloff\:phys::Light}
{\xe \v phys::Light\:GetSpotlightFalloff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetSpotlightFalloff () const}
}\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the rate of falloff of the cone of light emitted by this spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the falloff of the cone of light. \par
}}{
Definition at line 228 of file light.cpp.}\par
}
{\xe \v GetSpotlightInnerAngle\:phys::Light}
{\xe \v phys::Light\:GetSpotlightInnerAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetSpotlightInnerAngle () const}
}\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Inner angle of the cone of light emitted by this spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the inner angle of this spotlight, in radians. \par
}}{
Definition at line 218 of file light.cpp.}\par
}
{\xe \v GetSpotlightOuterAngle\:phys::Light}
{\xe \v phys::Light\:GetSpotlightOuterAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Light::GetSpotlightOuterAngle () const}
}\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Outer angle of the cone of light emitted by this spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the outer angle of this spotlight, in radians. \par
}}{
Definition at line 223 of file light.cpp.}\par
}
{\xe \v GetType\:phys::Light}
{\xe \v phys::Light\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 Light::LightType}}}
 phys::Light::GetType () const}
}\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of light that this light is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value for this lights type. \par
}}{
Definition at line 153 of file light.cpp.}\par
}
{\xe \v SetAttenuation\:phys::Light}
{\xe \v phys::Light\:SetAttenuation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetAttenuation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Range}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Constant}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Linear}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Quadratic})}
}\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the factors for the attenuation formula applied to this light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is only necessary when using a spotlight or point type of light. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Range} The absolute range of the light in world units. Objects beyond this range will not be influenced by this light. \par
{\i Constant} The constant of the attenuation, ranging from 0.0 to 1.0. 1.0 means never attenuate, 0.0 is complete attenuation. \par
{\i Linear} The linear factor of the attentuation, ranging from 0.0 to 1.0. 1.0 means attenuate evenly over the distance. \par
{\i Quadratic} The Quadratic factor of the attenuation. This value adds curvature to the attenuation. \par
}
}{
Definition at line 119 of file light.cpp.}\par
}
{\xe \v SetDiffuseColour\:phys::Light}
{\xe \v phys::Light\:SetDiffuseColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetDiffuseColour ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Red}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Green}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Blue})}
}\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Diffuse light from this source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When rendering the final color of an object values of the colours of 3 types of lights are taken into account. The 3 types are: Diffuse, Specular, and Ambient. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Red} Real in the range of 0.0 to 1.0 determining the amount of red in the colour. \par
{\i Red} green in the range of 0.0 to 1.0 determining the amount of green in the colour. \par
{\i Red} blue in the range of 0.0 to 1.0 determining the amount of blue in the colour. \par
}
}{
Definition at line 99 of file light.cpp.}\par
}
{\xe \v SetDiffuseColour\:phys::Light}
{\xe \v phys::Light\:SetDiffuseColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetDiffuseColour ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour})}
}\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Diffuse light from this source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This allows the setting of Diffuse color by a premade {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the color of the light to be set. \par
}
}{
Definition at line 104 of file light.cpp.}\par
}
{\xe \v SetDirection\:phys::Light}
{\xe \v phys::Light\:SetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetDirection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Direction})}
}\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the light will originate from. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Direction} A vector3 representing the direction the light will come from. \par
}
}{
Definition at line 94 of file light.cpp.}\par
}
{\xe \v SetPosition\:phys::Light}
{\xe \v phys::Light\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetPosition ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the location from where the light will originate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector3 representing the location to set the light. \par
}
}{
Definition at line 89 of file light.cpp.}\par
}
{\xe \v SetPowerScale\:phys::Light}
{\xe \v phys::Light\:SetPowerScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetPowerScale ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Power})}
}\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the lights power scale. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The power scale of the light is a scaling factor indicating the relative power of the light. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Power} Real representing the factor by which to scale the power of the light. \par
}
}{
Definition at line 148 of file light.cpp.}\par
}
{\xe \v SetSpecularColour\:phys::Light}
{\xe \v phys::Light\:SetSpecularColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetSpecularColour ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Red}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Green}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Blue})}
}\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Specular light from this source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When rendering the final color of an object values of the colours of 3 types of lights are taken into account. The 3 types are: Diffuse, Specular, and Ambient. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Red} Real in the range of 0.0 to 1.0 determining the amount of red in the colour. \par
{\i Red} green in the range of 0.0 to 1.0 determining the amount of green in the colour. \par
{\i Red} blue in the range of 0.0 to 1.0 determining the amount of blue in the colour. \par
}
}{
Definition at line 109 of file light.cpp.}\par
}
{\xe \v SetSpecularColour\:phys::Light}
{\xe \v phys::Light\:SetSpecularColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetSpecularColour ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour})}
}\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colour for the Specular light from this source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This allows the setting of Specular color by a premade {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}} representing the color of the light to be set. \par
}
}{
Definition at line 114 of file light.cpp.}\par
}
{\xe \v SetSpotlightFalloff\:phys::Light}
{\xe \v phys::Light\:SetSpotlightFalloff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetSpotlightFalloff ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Falloff})}
}\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the rate of falloff of the cone of light emitted by a spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Falloff} The rate of falloff between the inner and outer cones. 1.0 means linear falloff. Less means slower falloff and higher means faster falloff. \par
}
}{
Definition at line 143 of file light.cpp.}\par
}
{\xe \v SetSpotlightInnerAngle\:phys::Light}
{\xe \v phys::Light\:SetSpotlightInnerAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetSpotlightInnerAngle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i InnerAngle})}
}\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Inner angle of the cone of light emitted by a spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InnerAngle} Angle of the inner cone. \par
}
}{
Definition at line 131 of file light.cpp.}\par
}
{\xe \v SetSpotlightOuterAngle\:phys::Light}
{\xe \v phys::Light\:SetSpotlightOuterAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetSpotlightOuterAngle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i OuterAngle})}
}\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Outer angle of the cone of light emitted by a spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OuterAngle} Angle of the outer cone. \par
}
}{
Definition at line 137 of file light.cpp.}\par
}
{\xe \v SetSpotlightRange\:phys::Light}
{\xe \v phys::Light\:SetSpotlightRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetSpotlightRange ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i InnerAngle}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i OuterAngle}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Falloff} = {\f2 1.0})}
}\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the cone of light emitted by a spotlight. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
InnerAngle and OuterAngle should be input as Radians. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InnerAngle} Angle of the inner cone. \par
{\i OuterAngle} Angle of the outer cone. \par
{\i Falloff} The rate of falloff between the inner and outer cones. 1.0 means linear falloff. Less means slower falloff and higher means faster falloff. \par
}
}{
Definition at line 124 of file light.cpp.}\par
}
{\xe \v SetType\:phys::Light}
{\xe \v phys::Light\:SetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Light::SetType ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 Light::LightType}}}
 {\i Type})}
}\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of light this light is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The light types are listed with the class info. Types are Directional, Point, and Spotlight. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} The enum value representing the type of light this is. \par
}
}{
Definition at line 69 of file light.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
light.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
light.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::internal::Line3D Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::internal::Line3D}
{\xe \v phys::internal::Line3D}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does the bulk of the work that that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup}}} performs. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLJ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}}
 (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLK" }{}}{\fldrslt {\cs37\ul\cf2 ~Line3D}}}
 (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLL" }{}}{\fldrslt {\cs37\ul\cf2 addPoint}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &p)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds a point to the list of what should be rendered. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLM" }{}}{\fldrslt {\cs37\ul\cf2 getPoint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 index) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access a specific point by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLN" }{}}{\fldrslt {\cs37\ul\cf2 getNumPoints}}}
 (void) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How many points are in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLO" }{}}{\fldrslt {\cs37\ul\cf2 updatePoint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 index, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change an existing point. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 drawLine}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &start, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &end)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds two points. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLP" }{}}{\fldrslt {\cs37\ul\cf2 drawLines}}}
 (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renders this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLQ" }{}}{\fldrslt {\cs37\ul\cf2 getSquaredViewDepth}}}
 (const Ogre::Camera *cam) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not Used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLR" }{}}{\fldrslt {\cs37\ul\cf2 getBoundingRadius}}}
 (void) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How big would a circle need to be to encapsulate this. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const Ogre::Quaternion & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLS" }{}}{\fldrslt {\cs37\ul\cf2 getWorldOrientation}}}
 (void) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets how rotated this is currently. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLT" }{}}{\fldrslt {\cs37\ul\cf2 getWorldPosition}}}
 (void) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position of this Line3d. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLU" }{}}{\fldrslt {\cs37\ul\cf2 mPoints}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a vector which stores the point data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLV" }{}}{\fldrslt {\cs37\ul\cf2 mDrawn}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This indicates whether or not the the line have been done yet. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does the bulk of the work that that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup}}} performs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 phys::LineGroup}}} is a simple wrapper around this to perform precise low level interactions with Ogre, the rendering subsystem. This uses too much stuff from ogre to use publicly. so we need to hide it here in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALE" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal}}} namespace. \par}}{
Definition at line 69 of file linegroup.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Line3D\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:Line3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::internal::Line3D::Line3D (void)}
}\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This creates an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}}. \par}}{
Definition at line 150 of file linegroup.cpp.}\par
}
{\xe \v ~Line3D\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:~Line3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::internal::Line3D::~Line3D (void)}
}\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This safely tears down the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}}. \par}}{
Definition at line 158 of file linegroup.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addPoint\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:addPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::Line3D::addPoint (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i p})}
}\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds a point to the list of what should be rendered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i p} The point to be added. \par
}
\par}}{
Definition at line 163 of file linegroup.cpp.}\par
}
{\xe \v drawLine\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:drawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::Line3D::drawLine (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i start}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i end})}
}\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds two points. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This adds to points, to guarantee that a specific line segment is drawn. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i start} The first point to be added \par
{\i end} The first point to be added \par
}
\par}}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000012" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: when using this function there should be a break in the line segment rendering. Not sure abot the best way to implement that, but it should happen \par
}
}}\par
{
Definition at line 187 of file linegroup.cpp.}\par
}
{\xe \v drawLines\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:drawLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::Line3D::drawLines (void)}
}\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renders this. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This does the actual rendering. \par}}{
Definition at line 199 of file linegroup.cpp.}\par
}
{\xe \v getBoundingRadius\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:getBoundingRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::internal::Line3D::getBoundingRadius (void) const}
}\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How big would a circle need to be to encapsulate this. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the radius the a circle would need to have to surround this line group. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This returns a real number which indicates the radius. \par
}\par}}{
Definition at line 274 of file linegroup.cpp.}\par
}
{\xe \v getNumPoints\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:getNumPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::internal::Line3D::getNumPoints (void) const}
}\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How many points are in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This returns the amount of points stored in this class. \par
}\par}}{
Definition at line 175 of file linegroup.cpp.}\par
}
{\xe \v getPoint\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:getPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & phys::internal::Line3D::getPoint ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i index}) const}
}\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access a specific point by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This really does just access the underlying vector. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This Returns the specific {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} requested. \par
}\par}}{
Definition at line 168 of file linegroup.cpp.}\par
}
{\xe \v getSquaredViewDepth\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:getSquaredViewDepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::internal::Line3D::getSquaredViewDepth (const Ogre::Camera * {\i cam}) const}
}\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not Used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not Used {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i cam} Not Used \par
}
\par}}{
Definition at line 263 of file linegroup.cpp.}\par
}
{\xe \v getWorldOrientation\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:getWorldOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const Ogre::Quaternion & phys::internal::Line3D::getWorldOrientation (void) const{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets how rotated this is currently. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a quaternion with the rotation \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Is a Ogre::Quaternion which stores the rotation information of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 Line3D}}} \par
}\par}}{
Definition at line 286 of file linegroup.cpp.}\par
}
{\xe \v getWorldPosition\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:getWorldPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
& phys::internal::Line3D::getWorldPosition (void) const{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position of this Line3d. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} with the Position relative to the world Origin \par
}\par}}}
{\xe \v updatePoint\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:updatePoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::internal::Line3D::updatePoint ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i index}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i value})}
}\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change an existing point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This replaces a point specified by index with a new point {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i index} The index of the point to replace. \par
{\i value} A point to replace the existing point with \par
}
\par}}{
Definition at line 180 of file linegroup.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mDrawn\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:mDrawn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLV" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::Line3D::mDrawn}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This indicates whether or not the the line have been done yet. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 147 of file linegroup.cpp.}\par
}
{\xe \v mPoints\:phys::internal::Line3D}
{\xe \v phys::internal::Line3D\:mPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLU" }{}}{\fldrslt {\cs37\ul\cf2 phys::internal::Line3D::mPoints}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a vector which stores the point data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 143 of file linegroup.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
linegroup.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::LineGroup Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::LineGroup}
{\xe \v phys::LineGroup}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a group of consectutive line segments to be rendered together. }}\par
{
{\f2 #include <linegroup.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 LineGroup}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *Parent_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 ~LineGroup}}}
 (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 addPoint}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &p)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This add Either a start pointing, or a line segment to the next point. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJT" }{}}{\fldrslt {\cs37\ul\cf2 getPoint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 index) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access points by order they were added. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 getNumPoints}}}
 (void) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of points used to define Line Segments. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJV" }{}}{\fldrslt {\cs37\ul\cf2 updatePoint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 index, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This changes a specific point. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 drawLine}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &start, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &end)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds Two points to the list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 drawLines}}}
 (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renders the line segment chain. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 PrepareForRendering}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This assists in the rendering process. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJX" }{}}{\fldrslt {\cs37\ul\cf2 getBoundingRadius}}}
 (void) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How big would a circle need to be to encapsulate this. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a group of consectutive line segments to be rendered together. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class stores a listing of points and renders thems as one object into the world provided. \par
}{
Definition at line 62 of file linegroup.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LineGroup\:phys::LineGroup}
{\xe \v phys::LineGroup\:LineGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::LineGroup::LineGroup ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i Parent_})}
}\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000013" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: This class really should support rotation, the underlying implementation does. \par
}
This creates a basic, empty, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 LineGroup}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Parent_} This is a pointer to the world to render to. \par
}
}{
Definition at line 301 of file linegroup.cpp.}\par
}
{\xe \v ~LineGroup\:phys::LineGroup}
{\xe \v phys::LineGroup\:~LineGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::LineGroup::~LineGroup (void)}
}\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This safely tears down, and removes from the graphics system the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 LineGroup}}} \par
}{
Definition at line 307 of file linegroup.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addPoint\:phys::LineGroup}
{\xe \v phys::LineGroup\:addPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::LineGroup::addPoint (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i p})}
}\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This add Either a start pointing, or a line segment to the next point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds a point that will be rendered as the endpoint of a line {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i p} The Point to be added. \par
}
}{
Definition at line 312 of file linegroup.cpp.}\par
}
{\xe \v drawLine\:phys::LineGroup}
{\xe \v phys::LineGroup\:drawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::LineGroup::drawLine (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i start}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i end})}
}\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds Two points to the list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This could add 2 line segments, be it simply adds two lines to the list, but if you don't care then this is an easy way to guarantee that a specific line segment be rendered. {{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000014" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: In the future we will add a break in the line segment chain when this is called. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i start} The first point to be added \par
{\i end} The first point to be added \par
}
}{
Definition at line 333 of file linegroup.cpp.}\par
}
{\xe \v drawLines\:phys::LineGroup}
{\xe \v phys::LineGroup\:drawLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::LineGroup::drawLines (void)}
}\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renders the line segment chain. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This send the Line segment information to the rending subsystem. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 PrepareForRendering()}}} should be called first {{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000015" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: PrepareForRendering should be rolled into drawLines, but this cannot happen until the physics debug rendererin gets more attention. \par
}
}{
Definition at line 340 of file linegroup.cpp.}\par
}
{\xe \v getBoundingRadius\:phys::LineGroup}
{\xe \v phys::LineGroup\:getBoundingRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::LineGroup::getBoundingRadius (void) const}
}\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How big would a circle need to be to encapsulate this. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the radius the a circle would need to have to surround this line group. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a real number which indicates the radius. \par
}}{
Definition at line 345 of file linegroup.cpp.}\par
}
{\xe \v getNumPoints\:phys::LineGroup}
{\xe \v phys::LineGroup\:getNumPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::LineGroup::getNumPoints (void) const}
}\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of points used to define Line Segments. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This return the amount of points and therefore line segments. There will always be one more point Than line segments. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Whole Number which indicates the amount of points. \par
}}{
Definition at line 323 of file linegroup.cpp.}\par
}
{\xe \v getPoint\:phys::LineGroup}
{\xe \v phys::LineGroup\:getPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::LineGroup::getPoint ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i index}) const}
}\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access points by order they were added. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the point indicated by index. They start at 0, and increment from there {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i index} A Whole number which indicates which point to retrieve. \par
}
}{
Definition at line 317 of file linegroup.cpp.}\par
}
{\xe \v PrepareForRendering\:phys::LineGroup}
{\xe \v phys::LineGroup\:PrepareForRendering}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::LineGroup::PrepareForRendering ()}
}\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This assists in the rendering process. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sends some of the data to the rendering subsystem to aid drawLines \par
}{
Definition at line 350 of file linegroup.cpp.}\par
}
{\xe \v updatePoint\:phys::LineGroup}
{\xe \v phys::LineGroup\:updatePoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::LineGroup::updatePoint ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i index}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i value})}
}\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This changes a specific point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This replaces a point specified by index with a new point {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i index} The index of the point to replace. \par
{\i value} A point to replace the existing point with \par
}
}{
Definition at line 328 of file linegroup.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
linegroup.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
linegroup.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::LineList Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::LineList}
{\xe \v phys::UI::LineList}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an object comprised of a series of lines. }}\par
{
{\f2 #include <uilinelist.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACST" }{}}{\fldrslt {\cs37\ul\cf2 LineList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSU" }{}}{\fldrslt {\cs37\ul\cf2 ~LineList}}}
 (){\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSV" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSW" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSX" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this rectangle to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSY" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this rectangle to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSZ" }{}}{\fldrslt {\cs37\ul\cf2 Begin}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Thickness, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new line list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTA" }{}}{\fldrslt {\cs37\ul\cf2 AddPoint}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 X, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via 2 reals. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTB" }{}}{\fldrslt {\cs37\ul\cf2 AddPoint}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via a vector2. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTC" }{}}{\fldrslt {\cs37\ul\cf2 AddActualPoint}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 X, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via 2 reals. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTD" }{}}{\fldrslt {\cs37\ul\cf2 AddActualPoint}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via a vector2. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTE" }{}}{\fldrslt {\cs37\ul\cf2 End}}}
 (bool Closed=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finalizes the list and prepares it for rendering. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTF" }{}}{\fldrslt {\cs37\ul\cf2 SetRenderPriority}}}
 (UI::RenderPriority Priority)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual UI::RenderPriority {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTG" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::LineList * {\b GLineList}{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\b Parent}{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an object comprised of a series of lines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class isn't an object, but rather just a series of lines. As such it doesn't have a position or size. The position functions exist only to create additional points for the lines to connect. \par
}{
Definition at line 66 of file uilinelist.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LineList\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:LineList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::LineList::LineList ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Layer} Pointer to the parent Layer that created this rectangle. \par
}
}{
Definition at line 55 of file uilinelist.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddActualPoint\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:AddActualPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::AddActualPoint (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i X}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Y})}
}\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via 2 reals. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i X} Coordinate on the X vector. \par
{\i Y} Coordinate on the Y vector. \par
}
}{
Definition at line 103 of file uilinelist.cpp.}\par
}
{\xe \v AddActualPoint\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:AddActualPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::AddActualPoint (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via a vector2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the position on screen. \par
}
}{
Definition at line 108 of file uilinelist.cpp.}\par
}
{\xe \v AddPoint\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:AddPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::AddPoint (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i X}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Y})}
}\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via 2 reals. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i X} Relative coordinate on the X vector. \par
{\i Y} Relative coordinate on the Y vector. \par
}
}{
Definition at line 93 of file uilinelist.cpp.}\par
}
{\xe \v AddPoint\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:AddPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::AddPoint (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new point/line to the list via a vector2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position on screen. \par
}
}{
Definition at line 98 of file uilinelist.cpp.}\par
}
{\xe \v Begin\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:Begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::Begin ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Thickness}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour})}
}\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new line list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this function is called while lines have already been defined, it will clear the current list of lines and start a new list. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Thickness} The thickness of the line to draw in pixels. \par
{\i Colour} The colour of the line. \par
}
}{
Definition at line 88 of file uilinelist.cpp.}\par
}
{\xe \v End\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::End (bool {\i Closed} = {\f2 false})}
}\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finalizes the list and prepares it for rendering. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Closed} Whether or not the line list connects back to it's starting position. If true this will create one last line connecting the last provided position with the first. \par
}
}{
Definition at line 113 of file uilinelist.cpp.}\par
}
{\xe \v GetRenderPriority\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:GetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UI::RenderPriority phys::UI::LineList::GetRenderPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing this button's priority level. \par
}}{
Definition at line 138 of file uilinelist.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::LineList::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this rectangle. \par
}}{
Definition at line 73 of file uilinelist.cpp.}\par
}
{\xe \v SetRenderPriority\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:SetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::SetRenderPriority (UI::RenderPriority {\i Priority}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default value for this is Medium. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Priority} The priority level to be used when rendering this button. \par
}
}{
Definition at line 118 of file uilinelist.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::LineList}
{\xe \v phys::UI::LineList\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::LineList::SetVisible (bool {\i Visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visible} Bool determining whether or not this rectangle should be visible. \par
}
}{
Definition at line 68 of file uilinelist.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uilinelist.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uilinelist.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::ListBox Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::ListBox}
{\xe \v phys::UI::ListBox}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a widget for displaying a list of captions in a box. }}\par
{
{\f2 #include <uilistbox.h>}}\par
Inheritance diagram for phys::UI::ListBox:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d28/classphys_1_1UI_1_1ListBox.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 ListBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 ScrollbarWidth, UI::ScrollbarStyle ScrollStyle, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTK" }{}}{\fldrslt {\cs37\ul\cf2 ~ListBox}}}
 (){\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTL" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTN" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this List Box to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTO" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this List Box to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 SetBasicTemplateParameters}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the desired size and glyph set provided to all captions created within this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTR" }{}}{\fldrslt {\cs37\ul\cf2 SetMoreTemplateParameters}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &TextColour={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
(0.0, 0.0, 0.0, 1.0), const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &BackgroundColour={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
(1.0, 1.0, 1.0, 1.0), UI::TextHorizontalAlign HorAlign=UI::Txt_Middle, UI::TextVerticalAlign VertAlign=UI::Txt_Center)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets additional optional perameters to the creation of each caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTS" }{}}{\fldrslt {\cs37\ul\cf2 AddSelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Text, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &BackgroundSprite="")\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a selectable caption to the list to be displayed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTT" }{}}{\fldrslt {\cs37\ul\cf2 GetSelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a caption by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTU" }{}}{\fldrslt {\cs37\ul\cf2 DestroySelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTV" }{}}{\fldrslt {\cs37\ul\cf2 DestroySelection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTW" }{}}{\fldrslt {\cs37\ul\cf2 SetSelectionDistance}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Dist)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance apart(and from the sides of box) the Selections will be from each other. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTX" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoHideScroll}}}
 (bool AutoHide)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eanbles or disables the scrollbar autohide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTY" }{}}{\fldrslt {\cs37\ul\cf2 EnableBackgroundSelector}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the setting of a background colour or sprite on the caption you select. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTZ" }{}}{\fldrslt {\cs37\ul\cf2 DisableBackgroundSelector}}}
 (){\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables borders on currently selected buttons if one was enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUA" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUB" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUC" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUD" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUE" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUF" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUG" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUI" }{}}{\fldrslt {\cs37\ul\cf2 GetSelected}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently selected caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUJ" }{}}{\fldrslt {\cs37\ul\cf2 GetBoxBack}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the background of this List Box. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUK" }{}}{\fldrslt {\cs37\ul\cf2 GetVertScroll}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scrollbar used within this List Box. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUL" }{}}{\fldrslt {\cs37\ul\cf2 CalculateVisibleSelections}}}
 (){\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines how many items can be displayed in the box at once. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUM" }{}}{\fldrslt {\cs37\ul\cf2 DrawList}}}
 (){\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the list of Visible buttons and hides the rest. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUN" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false){\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with widget update/automation. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\b BoxBack}{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGP" }{}}{\fldrslt {\cs37\ul\cf2 VertScroll}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\b Selected}{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\b HoveredCaption}{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * > {\b Selections}{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * > {\b VisibleSelections}{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b AutoHideScroll}{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b LastScrollValue}{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b SelectionDist}{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b NumVisible}{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UI::TextHorizontalAlign {\b THAlign}{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UI::TextVerticalAlign {\b TVAlign}{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b TGlyph}{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b TSize}{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\b TTColour}{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\b TBGColour}{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 {\b SelectColour}{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a widget for displaying a list of captions in a box. \par
}{
Definition at line 61 of file uilistbox.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ListBox\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:ListBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::ListBox::ListBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i ScrollbarWidth}, UI::ScrollbarStyle {\i ScrollStyle}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the List Box. \par
{\i Position} The position of the List Box. \par
{\i Size} The size of the List Box. \par
{\i ScrollbarWidth} The relative(to screensize) width of the vertical scrollbar. If a horizontal scrollbar is needed it'll use the equal value in pixels(to avoid the stretched look. \par
{\i ScrollStyle} The style of the scrollbar you want for this List Box. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} class for more information. \par
{\i Layer} The parent layer this List Box belongs to. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000023" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Fourth instance of needing to include the namespace in the declaration seemingly needlessly. \par
}
}}\par
{
Definition at line 60 of file uilistbox.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddSelection\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:AddSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * phys::UI::ListBox::AddSelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Text}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i BackgroundSprite} = {\f2 ""}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a selectable caption to the list to be displayed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a colour other then white was set as the template and you try to set a background sprite, it will attempt to blend the colour and sprite. Pure white colour will cause the sprite to look normal. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} A name for the selection. \par
{\i Text} The text to be displayed within the created caption. \par
{\i BackgroundSprite} Optional, name of the sprite to set as it's background. Ignored if the string is empty. \par
}
}{
Definition at line 302 of file uilistbox.cpp.}\par
}
{\xe \v CheckMouseHover\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::ListBox::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this List Box, false if it's not. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 251 of file uilistbox.cpp.}\par
}
{\xe \v DestroySelection\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:DestroySelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::DestroySelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\i ToBeDestroyed}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} A pointer to the caption you want destroyed and removed from this list. \par
}
}{
Definition at line 332 of file uilistbox.cpp.}\par
}
{\xe \v DestroySelection\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:DestroySelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::DestroySelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i ToBeDestroyed}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a selectable caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} A string naming the caption you want destroyed and removed from this list. \par
}
}{
Definition at line 346 of file uilistbox.cpp.}\par
}
{\xe \v EnableBackgroundSelector\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:EnableBackgroundSelector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::EnableBackgroundSelector (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the setting of a background colour or sprite on the caption you select. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The background colour of captions default to white. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} The colour of the border. \par
}
}{
Definition at line 372 of file uilistbox.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ListBox::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 405 of file uilistbox.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ListBox::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 439 of file uilistbox.cpp.}\par
}
{\xe \v GetBoxBack\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetBoxBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * phys::UI::ListBox::GetBoxBack (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the background of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the background of this List Box. \par
}}{
Definition at line 449 of file uilistbox.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ListBox::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 391 of file uilistbox.cpp.}\par
}
{\xe \v GetSelected\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * phys::UI::ListBox::GetSelected (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently selected caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the currently selected caption, or NULL if none are selected. \par
}}{
Definition at line 444 of file uilistbox.cpp.}\par
}
{\xe \v GetSelection\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * phys::UI::ListBox::GetSelection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a caption by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the selectable caption you want to get. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the named caption. \par
}}{
Definition at line 319 of file uilistbox.cpp.}\par
}
{\xe \v GetSize\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::ListBox::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 422 of file uilistbox.cpp.}\par
}
{\xe \v GetVertScroll\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:GetVertScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * phys::UI::ListBox::GetVertScroll (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scrollbar used within this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the scrollbar of this List Box. \par
}}{
Definition at line 454 of file uilistbox.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::ListBox::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this List Box. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 226 of file uilistbox.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 396 of file uilistbox.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 427 of file uilistbox.cpp.}\par
}
{\xe \v SetAutoHideScroll\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetAutoHideScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetAutoHideScroll (bool {\i AutoHide}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eanbles or disables the scrollbar autohide. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AutoHide} A bool indicating whether or not to auto hide the scrollbar. \par
}
}{
Definition at line 365 of file uilistbox.cpp.}\par
}
{\xe \v SetBasicTemplateParameters\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetBasicTemplateParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetBasicTemplateParameters ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the desired size and glyph set provided to all captions created within this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function needs to be called before adding any selections to this widget. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} The size for all captions in this widget. \par
{\i Glyph} The Glyph set to be used for all captions created. Glyphs are defined in your .gorilla file. \par
}
}{
Definition at line 284 of file uilistbox.cpp.}\par
}
{\xe \v SetMoreTemplateParameters\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetMoreTemplateParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetMoreTemplateParameters (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i TextColour} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
(0.0,0.0,0.0,1.0)}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i BackgroundColour} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
(1.0,1.0,1.0,1.0)}, UI::TextHorizontalAlign {\i HorAlign} = {\f2 UI::Txt_Middle}, UI::TextVerticalAlign {\i VertAlign} = {\f2 UI::Txt_Center}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets additional optional perameters to the creation of each caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does not need to be called before creating captions, but if you plan to use this, it would be a good idea to call this function prior to any creation. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TextColour} The Colour of the text. \par
{\i BackgroundColour} The colour to set for the captions background. \par
{\i HorAlign} The horizontal text alignment. This defaults to UI::Middle. \par
{\i VertAlign} The Vertical text alignment. This defaults to UI::Center. \par
}
}{
Definition at line 294 of file uilistbox.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 382 of file uilistbox.cpp.}\par
}
{\xe \v SetSelectionDistance\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetSelectionDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetSelectionDistance (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Dist}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance apart(and from the sides of box) the Selections will be from each other. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function expects a relative value to the screen size(0.0 to 1.0). This value defaults to 0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Dist} A relative value for the distance to be used when determining the positions of Selections. \par
}
}{
Definition at line 360 of file uilistbox.cpp.}\par
}
{\xe \v SetSize\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this List Box. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 410 of file uilistbox.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::ListBox::SetVisible (bool {\i visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this List Box. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this List Box should be visible. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 216 of file uilistbox.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v VertScroll\:phys::UI::ListBox}
{\xe \v phys::UI::ListBox\:VertScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox::VertScroll}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000024" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Third instance of needing to include the namespace in the declaration seemingly needlessly. \par
}
}{
Definition at line 66 of file uilistbox.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uilistbox.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uilistbox.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ManagerBase Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ManagerBase}
{\xe \v phys::ManagerBase}
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} Managers inherit. }}\par
{
{\f2 #include <managerbase.h>}}\par
Inheritance diagram for phys::ManagerBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/de3/classphys_1_1ManagerBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 \{ {\b ActorContainerBase}, 
{\b CameraManager}, 
{\b EventManager}, 
{\b GraphicsManager}, 
{\b PhysicsManager}, 
{\b ResourceManager}, 
{\b SceneManager}, 
{\b SoundManager}, 
{\b TimerManager}, 
{\b UIManager}, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJY" }{}}{\fldrslt {\cs37\ul\cf2 UserCreated}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of Manager TypeNames. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef bool(* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 )(){\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This makes working with Callback function pointer a bit easier. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKA" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 (){\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKB" }{}}{\fldrslt {\cs37\ul\cf2 ~ManagerBase}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure Items requiring other Managers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQM" }{}}{\fldrslt {\cs37\ul\cf2 GetGameWorld}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this manager is working with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQQ" }{}}{\fldrslt {\cs37\ul\cf2 SetGameWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *GameWorld_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} that this Manager works with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 SetPreMainLoopItems}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 PreMainCallback)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This assigns a function to be the callback function to run prior to the main loop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKD" }{}}{\fldrslt {\cs37\ul\cf2 PreMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs any callback that is required before the mainloop items are run. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKE" }{}}{\fldrslt {\cs37\ul\cf2 GetPreMainLoopItems}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the Callback that would be called before the main loop items. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKF" }{}}{\fldrslt {\cs37\ul\cf2 ErasePreMainLoopItems}}}
 (){\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This simply calls {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 SetPreMainLoopItems()}}} passing it 0. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main loop calls this once per frame. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKG" }{}}{\fldrslt {\cs37\ul\cf2 SetPostMainLoopItems}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 PostMainCallback)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This assigns a function to be the callback function to run prior to the main loop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 PostMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs any callback that is required after the mainloop items are run. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKH" }{}}{\fldrslt {\cs37\ul\cf2 GetPostMainLoopItems}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the Callback that would be called before the main loop items. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKI" }{}}{\fldrslt {\cs37\ul\cf2 ErasePostMainLoopItems}}}
 (){\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This simply calls {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKG" }{}}{\fldrslt {\cs37\ul\cf2 SetPostMainLoopItems()}}} passing it 0. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual short int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKJ" }{}}{\fldrslt {\cs37\ul\cf2 GetPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the Priority of this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKK" }{}}{\fldrslt {\cs37\ul\cf2 SetPriority}}}
 (short int Priority_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the Priority of this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 GetTypeName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Allows any manager to be sent to a stream. Primarily used for logging. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKM" }{}}{\fldrslt {\cs37\ul\cf2 GameWorld}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actual pointer to the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 PreMainLoop}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a function pointer to the function that should be called before running Main Loop Items. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKO" }{}}{\fldrslt {\cs37\ul\cf2 PostMainLoop}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a function pointer to the function that should be called after running Main Loop Items. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKP" }{}}{\fldrslt {\cs37\ul\cf2 Priority}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a weighting used by the main loop to decide what order the managers should be called in. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class from which all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} Managers inherit. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a base set of functions that Managers are all expected to implement. \par
}{
Definition at line 58 of file managerbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ManagerTypeName\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:ManagerTypeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase::ManagerTypeName}}}
}
}\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A listing of Manager TypeNames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These will be returned by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::GetType()}}}, and will allow code using this to determine what type of Manager class they are working with and use this information to more safely cast to the correct manager if needed. \par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v UserCreated\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:UserCreated}
{\b {\i UserCreated{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is what User created managers that do not derive from any other managers are expected to use to prevent confusion with game internals. \par
}}
\par
{
Definition at line 66 of file managerbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~ManagerBase\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:~ManagerBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ManagerBase::~ManagerBase (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is actuall \par
}{
Definition at line 70 of file managerbase.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DoMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ManagerBase::DoMainLoopItems (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main loop calls this once per frame. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where each manager is expected to put anything that needs to be run each iteration of the main loop \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQE" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXW" }{}}{\fldrslt {\cs37\ul\cf2 phys::CameraManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::PhysicsManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ResourceManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 phys::SceneManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKT" }{}}{\fldrslt {\cs37\ul\cf2 phys::SoundManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKU" }{}}{\fldrslt {\cs37\ul\cf2 phys::TimerManager}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIManager}}}
.}\par
}
{\xe \v GetGameWorld\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * phys::ManagerBase::GetGameWorld () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this manager is working with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}* that is the same as the one store in this Manager \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQN" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
{
Definition at line 64 of file managerbase.cpp.}\par
}
{\xe \v GetPostMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GetPostMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}}
 phys::ManagerBase::GetPostMainLoopItems () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the Callback that would be called before the main loop items. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}} which is a p ointer to the callback function that will be called after the main loop items \par
}}{
Definition at line 104 of file managerbase.cpp.}\par
}
{\xe \v GetPreMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GetPreMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}}
 phys::ManagerBase::GetPreMainLoopItems () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the Callback that would be called before the main loop items. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}} which is a pointer to the callback function that will be called before the main loop items \par
}}{
Definition at line 85 of file managerbase.cpp.}\par
}
{\xe \v GetPriority\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GetPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short int phys::ManagerBase::GetPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the Priority of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This has no Set counterpart to allow the changing of a manager's priority. This is expected to be set by the manager, or expose a safe method to change it at that level. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a short int that represents the priority of the manager. Lower is executed first. \par
}}{
Definition at line 153 of file managerbase.cpp.}\par
}
{\xe \v GetType\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 phys::ManagerBase::GetType () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to make using and casting from Manager base easier. With this is is possible to cast from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}} to the correct Manager Type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a ManagerTypeName to identify what this can be safely cast to. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXX" }{}}{\fldrslt {\cs37\ul\cf2 phys::CameraManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCR" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHD" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::PhysicsManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKX" }{}}{\fldrslt {\cs37\ul\cf2 phys::ResourceManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 phys::SceneManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::SoundManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 phys::TimerManager}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIManager}}}
.}\par
}
{\xe \v GetTypeName\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GetTypeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string phys::ManagerBase::GetTypeName ()}
}\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Allows any manager to be sent to a stream. Primarily used for logging. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a std::ostream& that contains the name, and maybe some data for the the streammed manager. \par
}}{
Definition at line 110 of file managerbase.cpp.}\par
}
{\xe \v Initialize\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::ManagerBase::Initialize (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure Items requiring other Managers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If you are using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} this is called when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::World::GameInit()}}} is called. It is expected that by the time this is called either ManagerBase::ManagerBase(World*) or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQQ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::SetGameWorld(World*)}}} will have been called. This is where all configuration that requires atleast one other manager on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} to exist.\par\par Yes we know it is spelled wrong, but are Zs cooler anyway. \par
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXV" }{}}{\fldrslt {\cs37\ul\cf2 phys::CameraManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCP" }{}}{\fldrslt {\cs37\ul\cf2 phys::EventManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 phys::PhysicsManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 phys::ResourceManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 phys::SceneManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 phys::SoundManager}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 phys::TimerManager}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIManager}}}
.}\par
}
{\xe \v PostMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:PostMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ManagerBase::PostMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs any callback that is required after the mainloop items are run. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will return whatever the callback returns, which is true to end the main loop after this frame, or true to continue it. If no callback is set this simply returns true, as to not interupt the mainloop. \par This is a great Function to override in Manager classes where the complexity of callbacks is not required. This would make coding items that need to be performed at specific times easier. If you do that, it would be a good idea to call this version of the function, just in case a callback is set. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a false to end the main loop, or a true if the main loop should continue. \par
}}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 phys::GraphicsManager}}}
.}\par
{
Definition at line 95 of file managerbase.cpp.}\par
}
{\xe \v PreMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:PreMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ManagerBase::PreMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This runs any callback that is required before the mainloop items are run. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will return whatever the callback returns, which is true to end the main loop after this frame, or true to continue it. If no callback is set this simply returns true, as to not interupt the mainloop. \par This is a great Function to override in Manager classes where the complexity of callbacks is not required. This would make coding items that need to be performed at specific times easier. If you do that, it would be a good idea to call this version of the function, just in case a callback is set. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a false to end the main loop, or a true if the main loop should continue. \par
}}{
Definition at line 76 of file managerbase.cpp.}\par
}
{\xe \v SetGameWorld\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:SetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ManagerBase::SetGameWorld ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\i GameWorld_}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} that this Manager works with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It is expected that this won't change very much, and for some managers changing this at the wrong time could cause some very fundamental problems. In fact, managers should be designed so that they can swapped out. For example swapping out event managers could allow for a swift re-mapping of game controls when a game switches modes.\par\par For managers that can be moved it is expected that this function will change the pointer on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} for the appropriate manager to point to this manager. This simplifies the calls that will naturally come next. To detach a Manager from the world pass this method a NULL pointer. If the manager cannot be removed or detached it should throw and exception using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 World::LogAndThrow}}}, and it must not fail to attach to a world (that means it must internally handle all exception raised by the attaching process or throw an "Unrecoverable Error") \par
}{
Reimplemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerBase}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQX" }{}}{\fldrslt {\cs37\ul\cf2 phys::ActorContainerVector}}}
.}\par
{
Definition at line 67 of file managerbase.cpp.}\par
}
{\xe \v SetPostMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:SetPostMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ManagerBase::SetPostMainLoopItems ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}}
 {\i PostMainCallback}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This assigns a function to be the callback function to run prior to the main loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i PostMainCallback} This is a pointer to a function that returns a bool and accepts no arguments, this is in the form of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}}. If SetPosMainLoopItems is passed 0, NULL or a null pointer, the callback will be forgetten and will not attempt to be called. \par
}
}{
Definition at line 92 of file managerbase.cpp.}\par
}
{\xe \v SetPreMainLoopItems\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:SetPreMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ManagerBase::SetPreMainLoopItems ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}}
 {\i PreMainCallback}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This assigns a function to be the callback function to run prior to the main loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i PreMainCallback} This is a pointer to a function that returns a bool and accepts no arguments, this is in the form of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Callback}}}. If SetPreMainLoopItems is passed 0, NULL or a null pointer, the callback will be forgetten and will not attempt to be called. \par
}
}{
Definition at line 73 of file managerbase.cpp.}\par
}
{\xe \v SetPriority\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:SetPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ManagerBase::SetPriority (short int {\i Priority_}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the Priority of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This has no Set counterpart to allow the changing of a manager's priority. This is expected to be set by the manager, or expose a safe method to change it at that level. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a short int that represents the priority of the manager. Lower is executed first. \par
}}{
Definition at line 158 of file managerbase.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v GameWorld\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:GameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKM" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase::GameWorld}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actual pointer to the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 192 of file managerbase.h.}\par
}
{\xe \v PostMainLoop\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:PostMainLoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKO" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase::PostMainLoop}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a function pointer to the function that should be called after running Main Loop Items. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 200 of file managerbase.h.}\par
}
{\xe \v PreMainLoop\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:PreMainLoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJZ" }{}}{\fldrslt {\cs37\ul\cf2 Callback}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase::PreMainLoop}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a function pointer to the function that should be called before running Main Loop Items. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 196 of file managerbase.h.}\par
}
{\xe \v Priority\:phys::ManagerBase}
{\xe \v phys::ManagerBase\:Priority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase::Priority}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a weighting used by the main loop to decide what order the managers should be called in. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A lower number gets called earlier in the Main loop. By default rendering the graphics occurs at priority 0. \par
}{
Definition at line 205 of file managerbase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
managerbase.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
managerbase.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::MarkupText Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText}
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for use with specialized text display. }}\par
{
{\f2 #include <uimarkuptext.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVE" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVF" }{}}{\fldrslt {\cs37\ul\cf2 ~MarkupText}}}
 (){\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVG" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVH" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVI" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this markup text to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVJ" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this markup text to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVK" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVL" }{}}{\fldrslt {\cs37\ul\cf2 SetText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text displayed within the markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVM" }{}}{\fldrslt {\cs37\ul\cf2 GetText}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the text displayed within the markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVN" }{}}{\fldrslt {\cs37\ul\cf2 SetTextScale}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Scale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scaling to be applied to the text being rendered. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVO" }{}}{\fldrslt {\cs37\ul\cf2 GetTextScale}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scaling currently being applied to the rendered text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVP" }{}}{\fldrslt {\cs37\ul\cf2 SetDefaultGlyphIndex}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 DefaultGlyphIndex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Default glyph index to be used with this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVQ" }{}}{\fldrslt {\cs37\ul\cf2 GetDefaultGlyphIndex}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Default glyph index in use by this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVR" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVS" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVT" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this markup text in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVU" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this markup text in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVV" }{}}{\fldrslt {\cs37\ul\cf2 SetMaxSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum relative size of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVW" }{}}{\fldrslt {\cs37\ul\cf2 GetMaxSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the maximum relative size of this markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVX" }{}}{\fldrslt {\cs37\ul\cf2 SetMaxActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum size of this markup text in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVY" }{}}{\fldrslt {\cs37\ul\cf2 GetMaxActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the maximum size of this markup text in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVZ" }{}}{\fldrslt {\cs37\ul\cf2 SetRenderPriority}}}
 (UI::RenderPriority Priority)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this markup text should be rendered with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual UI::RenderPriority {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWA" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this markup text should be rendered with. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::MarkupText * {\b GMarkup}{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\b Parent}{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b Glyphs}{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelPosition}{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelSize}{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\b Name}{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class for use with specialized text display. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Markup Texts and Captions are similar in that they both display text messages that can be altered readily, the primary difference between the two is that Captions are meant for small simple messages with background functionality built in, where as Markup Texts have no background functionality, but they use a light markup language to accomplish special effects with the text. \par
}{
Definition at line 69 of file uimarkuptext.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MarkupText\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:MarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::MarkupText::MarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of this markup text. \par
{\i Position} The top left position of the markup text. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the markup text. \par
{\i Layer} Pointer to the layer that created this markup text. \par
}
}{
Definition at line 55 of file uimarkuptext.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetActualPosition\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::MarkupText::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this markup text in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this markup text. \par
}}{
Definition at line 187 of file uimarkuptext.cpp.}\par
}
{\xe \v GetDefaultGlyphIndex\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetDefaultGlyphIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::MarkupText::GetDefaultGlyphIndex (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Default glyph index in use by this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The glyph index is defined in your gorilla file. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the index of the glyph in use by this markup text. \par
}}{
Definition at line 123 of file uimarkuptext.cpp.}\par
}
{\xe \v GetMaxActualSize\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetMaxActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::MarkupText::GetMaxActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the maximum size of this markup text in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the maximum size of this markup text. \par
}}{
Definition at line 213 of file uimarkuptext.cpp.}\par
}
{\xe \v GetMaxSize\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetMaxSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::MarkupText::GetMaxSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the maximum relative size of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the maximum size of this markup text. \par
}}{
Definition at line 201 of file uimarkuptext.cpp.}\par
}
{\xe \v GetName\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & phys::UI::MarkupText::GetName (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name of this markup text. \par
}}{
Definition at line 92 of file uimarkuptext.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::MarkupText::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this markup text. \par
}}{
Definition at line 176 of file uimarkuptext.cpp.}\par
}
{\xe \v GetRenderPriority\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UI::RenderPriority phys::UI::MarkupText::GetRenderPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this markup text should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing this markup text's priority level. \par
}}{
Definition at line 239 of file uimarkuptext.cpp.}\par
}
{\xe \v GetText\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::UI::MarkupText::GetText (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the text displayed within the markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the text being displayed. \par
}}{
Definition at line 102 of file uimarkuptext.cpp.}\par
}
{\xe \v GetTextScale\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:GetTextScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::UI::MarkupText::GetTextScale (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scaling currently being applied to the rendered text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real value representing the scale applied to the text in this caption. <1.0 means smaller, >1.0 means larger. \par
}}{
Definition at line 112 of file uimarkuptext.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::MarkupText::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this markup text. \par
}}{
Definition at line 77 of file uimarkuptext.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this markup text in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this markup text. \par
}
}{
Definition at line 181 of file uimarkuptext.cpp.}\par
}
{\xe \v SetDefaultGlyphIndex\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetDefaultGlyphIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetDefaultGlyphIndex (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i DefaultGlyphIndex}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Default glyph index to be used with this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The glyph index is defined in your gorilla file. This class can change which glyph is uses with it's markup language. This simply defines which to use when one isn't specified. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i DefaultGlyphIndex} The index of the glyph to use with this markup text. \par
}
}{
Definition at line 117 of file uimarkuptext.cpp.}\par
}
{\xe \v SetMaxActualSize\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetMaxActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetMaxActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum size of this markup text in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the maximum size of this markup text. \par
}
}{
Definition at line 206 of file uimarkuptext.cpp.}\par
}
{\xe \v SetMaxSize\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetMaxSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetMaxSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum relative size of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the maximum size of this markup text. \par
}
}{
Definition at line 193 of file uimarkuptext.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this markup text. \par
}
}{
Definition at line 168 of file uimarkuptext.cpp.}\par
}
{\xe \v SetRenderPriority\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetRenderPriority (UI::RenderPriority {\i Priority}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this markup text should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default value for this is Medium. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Priority} The priority level to be used when rendering this markup text. \par
}
}{
Definition at line 219 of file uimarkuptext.cpp.}\par
}
{\xe \v SetText\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Text}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text displayed within the markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Text} The text to be displayed. \par
}
}{
Definition at line 97 of file uimarkuptext.cpp.}\par
}
{\xe \v SetTextScale\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetTextScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetTextScale ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Scale}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scaling to be applied to the text being rendered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Scale} A Real value representing the scale to be applied. <1.0 means smaller, >1.0 means larger. \par
}
}{
Definition at line 107 of file uimarkuptext.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::MarkupText}
{\xe \v phys::UI::MarkupText\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MarkupText::SetVisible (bool {\i Visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visible} Bool determining whether or not this markup text should be visible. \par
}
}{
Definition at line 72 of file uimarkuptext.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimarkuptext.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimarkuptext.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Menu Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Menu}
{\xe \v phys::UI::Menu}
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a control mechanism for multiple windows in a heirarchy. }}\par
{
{\f2 #include <uimenu.h>}}\par
Inheritance diagram for phys::UI::Menu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/dd3/classphys_1_1UI_1_1Menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWI" }{}}{\fldrslt {\cs37\ul\cf2 Menu}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWJ" }{}}{\fldrslt {\cs37\ul\cf2 ~Menu}}}
 (){\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWK" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWL" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWM" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this menu to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWN" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this menu to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWO" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoHideSubWindows}}}
 (bool AutoHide)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets autohiding of sub-windows. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWP" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWQ" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWR" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWS" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWT" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWU" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWV" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWW" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWX" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWY" }{}}{\fldrslt {\cs37\ul\cf2 GetRootWindow}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Root window of this menu. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWZ" }{}}{\fldrslt {\cs37\ul\cf2 GetTopWindow}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current window at the top of the stack. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXA" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false){\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with widget update/automation. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\b RootWindow}{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * > {\b MenuStack}{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b HideSubWindows}{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a control mechanism for multiple windows in a heirarchy. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class controls the presentation and order of different windows, useful for creating menu systems, be it a game main menu, or in-game menu. \par \par Also it should be noted that since this is just a control system for other classes, it doesn't have a position or size like other classes. Instead when you call those functions to set or get the position or size, you'll be working with the current top level window. \par
}{
Definition at line 63 of file uimenu.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Menu\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:Menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Menu::Menu ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the window. \par
{\i Position} The position of the window. \par
{\i Size} The size of the window. \par
{\i Layer} The parent layer this window belongs to. \par
}
}{
Definition at line 55 of file uimenu.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Menu::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this menu, false if it's not. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 174 of file uimenu.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Menu::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this menu. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 202 of file uimenu.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Menu::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this menu. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 222 of file uimenu.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Menu::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this menu. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 192 of file uimenu.cpp.}\par
}
{\xe \v GetRootWindow\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:GetRootWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::Menu::GetRootWindow (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Root window of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Root window of this menu. \par
}}{
Definition at line 227 of file uimenu.cpp.}\par
}
{\xe \v GetSize\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Menu::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this menu. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 212 of file uimenu.cpp.}\par
}
{\xe \v GetTopWindow\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:GetTopWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::Menu::GetTopWindow (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current window at the top of the stack. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the window currently at the top of the stack. \par
}}{
Definition at line 232 of file uimenu.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Menu::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this menu. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 136 of file uimenu.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Menu::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this menu. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 197 of file uimenu.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Menu::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this menu. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 217 of file uimenu.cpp.}\par
}
{\xe \v SetAutoHideSubWindows\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:SetAutoHideSubWindows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Menu::SetAutoHideSubWindows (bool {\i AutoHide}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets autohiding of sub-windows. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AutoHide} Whether or not sub-windows should auto-hide when a new window is added to the stack. \par
}
}{
Definition at line 169 of file uimenu.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Menu::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this menu. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 187 of file uimenu.cpp.}\par
}
{\xe \v SetSize\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Menu::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this menu. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 207 of file uimenu.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::Menu}
{\xe \v phys::UI::Menu\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Menu::SetVisible (bool {\i visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this menu should be visible. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 122 of file uimenu.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimenu.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimenu.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::MenuWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is an extended version of the window class for use exclusively with the menu widget. }}\par
{
{\f2 #include <uimenuwindow.h>}}\par
Inheritance diagram for phys::UI::MenuWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d07/classphys_1_1UI_1_1MenuWindow.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXE" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 UI::Menu}}}
 *TheMenu, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXF" }{}}{\fldrslt {\cs37\ul\cf2 ~MenuWindow}}}
 (){\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXG" }{}}{\fldrslt {\cs37\ul\cf2 GetParentWindow}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the parent window of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXH" }{}}{\fldrslt {\cs37\ul\cf2 CreateBackButton}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a back button for this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXI" }{}}{\fldrslt {\cs37\ul\cf2 GetBackButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the back button of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXJ" }{}}{\fldrslt {\cs37\ul\cf2 CreateAccessorButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a button to be used for accessing child windows. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXK" }{}}{\fldrslt {\cs37\ul\cf2 GetAccessorButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Accessor button by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXL" }{}}{\fldrslt {\cs37\ul\cf2 GetWindowOfAccessButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 *Accessor)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}} corresponding to the access button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXM" }{}}{\fldrslt {\cs37\ul\cf2 CreateChildMenuWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 *Accessor)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a child window to this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXN" }{}}{\fldrslt {\cs37\ul\cf2 GetChildMenuWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created menu window by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXO" }{}}{\fldrslt {\cs37\ul\cf2 GetChildMenuWindow}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created menu window by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXP" }{}}{\fldrslt {\cs37\ul\cf2 GetNumChildMenuWindows}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of menu windows created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXQ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyChildMenuWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a menu window. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\b ParentWindow}{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 UI::Menu}}}
 * {\b MasterMenu}{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\b BackButton}{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< std::pair< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 *, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * > > {\b ChildWindows}{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is an extended version of the window class for use exclusively with the menu widget. \par
}{
Definition at line 60 of file uimenuwindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MenuWindow\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:MenuWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::MenuWindow::MenuWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 UI::Menu}}}
 * {\i TheMenu}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the window. \par
{\i Position} The position of the window. \par
{\i Size} The size of the window. \par
{\i TheMenu} The menu this window belongs to. \par
{\i Layer} The parent layer this window belongs to. \par
}
}{
Definition at line 52 of file uimenuwindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateAccessorButton\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:CreateAccessorButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::MenuWindow::CreateAccessorButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a button to be used for accessing child windows. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created button. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the button. \par
{\i Position} The position of the button. \par
{\i Size} The size of the button. \par
}
}{
Definition at line 93 of file uimenuwindow.cpp.}\par
}
{\xe \v CreateBackButton\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:CreateBackButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::MenuWindow::CreateBackButton (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a back button for this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The name is autogenerated to be the name of the window + "back". This function will do nothing if the back button has already been created. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created Back {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
}}{
Definition at line 75 of file uimenuwindow.cpp.}\par
}
{\xe \v CreateChildMenuWindow\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:CreateChildMenuWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::MenuWindow::CreateChildMenuWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\i Accessor}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a child window to this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created child window. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the window. \par
{\i Position} The position of the window. \par
{\i Size} The size of the window. \par
}
}{
Definition at line 129 of file uimenuwindow.cpp.}\par
}
{\xe \v DestroyChildMenuWindow\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:DestroyChildMenuWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::MenuWindow::DestroyChildMenuWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * {\i ToBeDestroyed}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a menu window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the menu window you want destroyed. \par
}
}{
Definition at line 169 of file uimenuwindow.cpp.}\par
}
{\xe \v GetAccessorButton\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetAccessorButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::MenuWindow::GetAccessorButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Accessor button by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the named accessor button. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the accessor button you want to find. \par
}
}{
Definition at line 103 of file uimenuwindow.cpp.}\par
}
{\xe \v GetBackButton\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetBackButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::MenuWindow::GetBackButton (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the back button of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Back {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}, or NULL if it hasn't been created. \par
}}{
Definition at line 88 of file uimenuwindow.cpp.}\par
}
{\xe \v GetChildMenuWindow\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetChildMenuWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::MenuWindow::GetChildMenuWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created menu window by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the menu window of the specified name. \par
}}{
Definition at line 146 of file uimenuwindow.cpp.}\par
}
{\xe \v GetChildMenuWindow\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetChildMenuWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::MenuWindow::GetChildMenuWindow (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created menu window by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the menu window at the specified index. \par
}}{
Definition at line 159 of file uimenuwindow.cpp.}\par
}
{\xe \v GetNumChildMenuWindows\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetNumChildMenuWindows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::MenuWindow::GetNumChildMenuWindows (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of menu windows created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of menu windows this class is storing. \par
}}{
Definition at line 164 of file uimenuwindow.cpp.}\par
}
{\xe \v GetParentWindow\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetParentWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::MenuWindow::GetParentWindow (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the parent window of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the parent window of this window, or NULL if this is the root window. \par
}}{
Definition at line 70 of file uimenuwindow.cpp.}\par
}
{\xe \v GetWindowOfAccessButton\:phys::UI::MenuWindow}
{\xe \v phys::UI::MenuWindow\:GetWindowOfAccessButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 MenuWindow}}}
 * phys::UI::MenuWindow::GetWindowOfAccessButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\i Accessor}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}} corresponding to the access button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Accessor} Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} of which you want to get the window for. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 Menu}}} window the button provided accesses. \par
}}{
Definition at line 116 of file uimenuwindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimenuwindow.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimenuwindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::MeshGenerator Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::MeshGenerator}
{\xe \v phys::MeshGenerator}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class allows the creation of graphical meshes from code. }}\par
{
{\f2 #include <meshgenerator.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLI" }{}}{\fldrslt {\cs37\ul\cf2 MeshGenerator}}}
 (){\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLJ" }{}}{\fldrslt {\cs37\ul\cf2 ~MeshGenerator}}}
 (){\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLK" }{}}{\fldrslt {\cs37\ul\cf2 CreateBoxMesh}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MeshName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MaterialName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &HalfExtents)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a box graphical mesh which can be used for actors. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLL" }{}}{\fldrslt {\cs37\ul\cf2 CreateCylinderMesh}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MeshName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MaterialName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &HalfExtents, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &AxisOrientation, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &CircleRes=16, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &Segments=1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cylinder graphical mesh which can be used for actors. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLM" }{}}{\fldrslt {\cs37\ul\cf2 CreateSphereMesh}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MeshName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &MaterialName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Radius, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Rings=16, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Segments=16)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere graphical mesh which can be used for actors. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class allows the creation of graphical meshes from code. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All meshes created by this class aren't retured, but are instead added to the list of meshes which can be referenced and used. Simply use the same Mesh Name used to create the mesh when creating an actor or having to specify a mesh. \par
}{
Definition at line 55 of file meshgenerator.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateBoxMesh\:phys::MeshGenerator}
{\xe \v phys::MeshGenerator\:CreateBoxMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::MeshGenerator::CreateBoxMesh (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MeshName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MaterialName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i HalfExtents}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a box graphical mesh which can be used for actors. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MeshName} The name for the mesh which will be created. Use this to reference the mesh when creating other objects that need a mesh. \par
{\i MaterialName} The name of the material script which will be applied to this mesh. \par
{\i HalfExtents} Half of the full dimentions of the final object in world units. This allows the objects origin to be it's center. \par
}
}{
Definition at line 84 of file meshgenerator.cpp.}\par
}
{\xe \v CreateCylinderMesh\:phys::MeshGenerator}
{\xe \v phys::MeshGenerator\:CreateCylinderMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::MeshGenerator::CreateCylinderMesh (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MeshName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MaterialName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i HalfExtents}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i AxisOrientation}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i CircleRes} = {\f2 16}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i Segments} = {\f2 1}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cylinder graphical mesh which can be used for actors. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MeshName} The name for the mesh which will be created. Use this to reference the mesh when creating other objects that need a mesh. \par
{\i MaterialName} The name of the material script which will be applied to this mesh. \par
{\i HalfExtents} Half of the full dimentions of the final object in world units. This allows the objects origin to be it's center. \par
{\i AxisOrientation} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing which axis the cylinder should be aligned on. Should be one of the three: (1,0,0), (0,1,0), (0,0,1). \par
{\i CircleRes} The number of segments the circle should be comprised of. Determines the "resolution" of the cylinder. \par
{\i Segments} Optional parameter to specify the number of segments the cylinder should be comprised of. Mostly just useful if a special material is made for his. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start of MIT(Ogre Proceadural) License ///\par
End of MIT(Ogre Proceadural) License /// \par
}}\par
{
Definition at line 139 of file meshgenerator.cpp.}\par
}
{\xe \v CreateSphereMesh\:phys::MeshGenerator}
{\xe \v phys::MeshGenerator\:CreateSphereMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::MeshGenerator::CreateSphereMesh (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MeshName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i MaterialName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Radius}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Rings} = {\f2 16}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Segments} = {\f2 16}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sphere graphical mesh which can be used for actors. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MeshName} The name for the mesh which will be created. Use this to reference the mesh when creating other objects that need a mesh. \par
{\i MaterialName} The name of the material script which will be applied to this mesh. \par
{\i Radius} The radius to generate the sphere with in world units. \par
{\i Rings} The number of horizontal rings the sphere is to be comprised of. This along with the segments parameter controls the overall resolution of the sphere. Less then 16 is not recommended. \par
{\i Segments} The number of vertical rings the sphere is to be comprised of. This along with the rings parameter controls the overall resolution of the sphere. Less then 16 is not recommended. \par
}
}{
Definition at line 238 of file meshgenerator.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
meshgenerator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
meshgenerator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::MetaCode Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::MetaCode}
{\xe \v phys::MetaCode}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Determines the kind of user input. }}\par
{
{\f2 #include <metacode.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 InputCode}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 KEY_FIRST}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLO" }{}}{\fldrslt {\cs37\ul\cf2 KEY_UNKNOWN}}}
 =  0, 
{\b KEY_A} =  4, 
{\b KEY_B} =  5, 
{\b KEY_C} =  6, 
{\b KEY_D} =  7, 
{\b KEY_E} =  8, 
{\b KEY_F} =  9, 
{\b KEY_G} =  10, 
{\b KEY_H} =  11, 
{\b KEY_I} =  12, 
{\b KEY_J} =  13, 
{\b KEY_K} =  14, 
{\b KEY_L} =  15, 
{\b KEY_M} =  16, 
{\b KEY_N} =  17, 
{\b KEY_O} =  18, 
{\b KEY_P} =  19, 
{\b KEY_Q} =  20, 
{\b KEY_R} =  21, 
{\b KEY_S} =  22, 
{\b KEY_T} =  23, 
{\b KEY_U} =  24, 
{\b KEY_V} =  25, 
{\b KEY_W} =  26, 
{\b KEY_X} =  27, 
{\b KEY_Y} =  28, 
{\b KEY_Z} =  29, 
{\b KEY_1} =  30, 
{\b KEY_2} =  31, 
{\b KEY_3} =  32, 
{\b KEY_4} =  33, 
{\b KEY_5} =  34, 
{\b KEY_6} =  35, 
{\b KEY_7} =  36, 
{\b KEY_8} =  37, 
{\b KEY_9} =  38, 
{\b KEY_0} =  39, 
{\b KEY_RETURN} =  40, 
{\b KEY_ESCAPE} =  41, 
{\b KEY_BACKSPACE} =  42, 
{\b KEY_TAB} =  43, 
{\b KEY_SPACE} =  44, 
{\b KEY_MINUS} =  45, 
{\b KEY_EQUALS} =  46, 
{\b KEY_LEFTBRACKET} =  47, 
{\b KEY_RIGHTBRACKET} =  48, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLP" }{}}{\fldrslt {\cs37\ul\cf2 KEY_BACKSLASH}}}
 =  49, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLQ" }{}}{\fldrslt {\cs37\ul\cf2 KEY_NONUSHASH}}}
 =  50, 
{\b KEY_SEMICOLON} =  51, 
{\b KEY_APOSTROPHE} =  52, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 KEY_GRAVE}}}
 =  53, 
{\b KEY_COMMA} =  54, 
{\b KEY_PERIOD} =  55, 
{\b KEY_SLASH} =  56, 
{\b KEY_CAPSLOCK} =  57, 
{\b KEY_F1} =  58, 
{\b KEY_F2} =  59, 
{\b KEY_F3} =  60, 
{\b KEY_F4} =  61, 
{\b KEY_F5} =  62, 
{\b KEY_F6} =  63, 
{\b KEY_F7} =  64, 
{\b KEY_F8} =  65, 
{\b KEY_F9} =  66, 
{\b KEY_F10} =  67, 
{\b KEY_F11} =  68, 
{\b KEY_F12} =  69, 
{\b KEY_PRINTSCREEN} =  70, 
{\b KEY_SCROLLLOCK} =  71, 
{\b KEY_PAUSE} =  72, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLS" }{}}{\fldrslt {\cs37\ul\cf2 KEY_INSERT}}}
 =  73, 
{\b KEY_HOME} =  74, 
{\b KEY_PAGEUP} =  75, 
{\b KEY_DELETE} =  76, 
{\b KEY_END} =  77, 
{\b KEY_PAGEDOWN} =  78, 
{\b KEY_RIGHT} =  79, 
{\b KEY_LEFT} =  80, 
{\b KEY_DOWN} =  81, 
{\b KEY_UP} =  82, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 KEY_NUMLOCKCLEAR}}}
 =  83, 
{\b KEY_KP_DIVIDE} =  84, 
{\b KEY_KP_MULTIPLY} =  85, 
{\b KEY_KP_MINUS} =  86, 
{\b KEY_KP_PLUS} =  87, 
{\b KEY_KP_ENTER} =  88, 
{\b KEY_KP_1} =  89, 
{\b KEY_KP_2} =  90, 
{\b KEY_KP_3} =  91, 
{\b KEY_KP_4} =  92, 
{\b KEY_KP_5} =  93, 
{\b KEY_KP_6} =  94, 
{\b KEY_KP_7} =  95, 
{\b KEY_KP_8} =  96, 
{\b KEY_KP_9} =  97, 
{\b KEY_KP_0} =  98, 
{\b KEY_KP_PERIOD} =  99, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLU" }{}}{\fldrslt {\cs37\ul\cf2 KEY_NONUSBACKSLASH}}}
 =  100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 KEY_APPLICATION}}}
 =  101, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLW" }{}}{\fldrslt {\cs37\ul\cf2 KEY_POWER}}}
 =  102, 
{\b KEY_KP_EQUALS} =  103, 
{\b KEY_F13} =  104, 
{\b KEY_F14} =  105, 
{\b KEY_F15} =  106, 
{\b KEY_F16} =  107, 
{\b KEY_F17} =  108, 
{\b KEY_F18} =  109, 
{\b KEY_F19} =  110, 
{\b KEY_F20} =  111, 
{\b KEY_F21} =  112, 
{\b KEY_F22} =  113, 
{\b KEY_F23} =  114, 
{\b KEY_F24} =  115, 
{\b KEY_EXECUTE} =  116, 
{\b KEY_HELP} =  117, 
{\b KEY_MENU} =  118, 
{\b KEY_SELECT} =  119, 
{\b KEY_STOP} =  120, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLX" }{}}{\fldrslt {\cs37\ul\cf2 KEY_AGAIN}}}
 =  121, 
{\b KEY_UNDO} =  122, 
{\b KEY_CUT} =  123, 
{\b KEY_COPY} =  124, 
{\b KEY_PASTE} =  125, 
{\b KEY_FIND} =  126, 
{\b KEY_MUTE} =  127, 
{\b KEY_VOLUMEUP} =  128, 
{\b KEY_VOLUMEDOWN} =  129, 
{\b KEY_KP_COMMA} =  133, 
{\b KEY_KP_EQUALSAS400} =  134, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLY" }{}}{\fldrslt {\cs37\ul\cf2 KEY_INTERNATIONAL1}}}
 =  135, 
{\b KEY_INTERNATIONAL2} =  136, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 KEY_INTERNATIONAL3}}}
 =  137, 
{\b KEY_INTERNATIONAL4} =  138, 
{\b KEY_INTERNATIONAL5} =  139, 
{\b KEY_INTERNATIONAL6} =  140, 
{\b KEY_INTERNATIONAL7} =  141, 
{\b KEY_INTERNATIONAL8} =  142, 
{\b KEY_INTERNATIONAL9} =  143, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG1}}}
 =  144, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMB" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG2}}}
 =  145, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMC" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG3}}}
 =  146, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMD" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG4}}}
 =  147, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABME" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG5}}}
 =  148, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMF" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG6}}}
 =  149, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG7}}}
 =  150, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMH" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG8}}}
 =  151, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMI" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LANG9}}}
 =  152, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMJ" }{}}{\fldrslt {\cs37\ul\cf2 KEY_ALTERASE}}}
 =  153, 
{\b KEY_SYSREQ} =  154, 
{\b KEY_CANCEL} =  155, 
{\b KEY_CLEAR} =  156, 
{\b KEY_PRIOR} =  157, 
{\b KEY_RETURN2} =  158, 
{\b KEY_SEPARATOR} =  159, 
{\b KEY_OUT} =  160, 
{\b KEY_OPER} =  161, 
{\b KEY_CLEARAGAIN} =  162, 
{\b KEY_CRSEL} =  163, 
{\b KEY_EXSEL} =  164, 
{\b KEY_KP_00} =  176, 
{\b KEY_KP_000} =  177, 
{\b KEY_THOUSANDSSEPARATOR} =  178, 
{\b KEY_DECIMALSEPARATOR} =  179, 
{\b KEY_CURRENCYUNIT} =  180, 
{\b KEY_CURRENCYSUBUNIT} =  181, 
{\b KEY_KP_LEFTPAREN} =  182, 
{\b KEY_KP_RIGHTPAREN} =  183, 
{\b KEY_KP_LEFTBRACE} =  184, 
{\b KEY_KP_RIGHTBRACE} =  185, 
{\b KEY_KP_TAB} =  186, 
{\b KEY_KP_BACKSPACE} =  187, 
{\b KEY_KP_A} =  188, 
{\b KEY_KP_B} =  189, 
{\b KEY_KP_C} =  190, 
{\b KEY_KP_D} =  191, 
{\b KEY_KP_E} =  192, 
{\b KEY_KP_F} =  193, 
{\b KEY_KP_XOR} =  194, 
{\b KEY_KP_POWER} =  195, 
{\b KEY_KP_PERCENT} =  196, 
{\b KEY_KP_LESS} =  197, 
{\b KEY_KP_GREATER} =  198, 
{\b KEY_KP_AMPERSAND} =  199, 
{\b KEY_KP_DBLAMPERSAND} =  200, 
{\b KEY_KP_VERTICALBAR} =  201, 
{\b KEY_KP_DBLVERTICALBAR} =  202, 
{\b KEY_KP_COLON} =  203, 
{\b KEY_KP_HASH} =  204, 
{\b KEY_KP_SPACE} =  205, 
{\b KEY_KP_AT} =  206, 
{\b KEY_KP_EXCLAM} =  207, 
{\b KEY_KP_MEMSTORE} =  208, 
{\b KEY_KP_MEMRECALL} =  209, 
{\b KEY_KP_MEMCLEAR} =  210, 
{\b KEY_KP_MEMADD} =  211, 
{\b KEY_KP_MEMSUBTRACT} =  212, 
{\b KEY_KP_MEMMULTIPLY} =  213, 
{\b KEY_KP_MEMDIVIDE} =  214, 
{\b KEY_KP_PLUSMINUS} =  215, 
{\b KEY_KP_CLEAR} =  216, 
{\b KEY_KP_CLEARENTRY} =  217, 
{\b KEY_KP_BINARY} =  218, 
{\b KEY_KP_OCTAL} =  219, 
{\b KEY_KP_DECIMAL} =  220, 
{\b KEY_KP_HEXADECIMAL} =  221, 
{\b KEY_LCTRL} =  224, 
{\b KEY_LSHIFT} =  225, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMK" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LALT}}}
 =  226, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABML" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LSUPER}}}
 =  227, 
{\b KEY_RCTRL} =  228, 
{\b KEY_RSHIFT} =  229, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMM" }{}}{\fldrslt {\cs37\ul\cf2 KEY_RALT}}}
 =  230, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMN" }{}}{\fldrslt {\cs37\ul\cf2 KEY_RSUPER}}}
 =  231, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMO" }{}}{\fldrslt {\cs37\ul\cf2 KEY_MODE}}}
 =  257, 
{\b KEY_AUDIONEXT} =  258, 
{\b KEY_AUDIOPREV} =  259, 
{\b KEY_AUDIOSTOP} =  260, 
{\b KEY_AUDIOPLAY} =  261, 
{\b KEY_AUDIOMUTE} =  262, 
{\b KEY_MEDIASELECT} =  263, 
{\b KEY_WWW} =  264, 
{\b KEY_MAIL} =  265, 
{\b KEY_CALCULATOR} =  266, 
{\b KEY_COMPUTER} =  267, 
{\b KEY_AC_SEARCH} =  268, 
{\b KEY_AC_HOME} =  269, 
{\b KEY_AC_BACK} =  270, 
{\b KEY_AC_FORWARD} =  271, 
{\b KEY_AC_STOP} =  272, 
{\b KEY_AC_REFRESH} =  273, 
{\b KEY_AC_BOOKMARKS} =  274, 
{\b KEY_BRIGHTNESSDOWN} =  275, 
{\b KEY_BRIGHTNESSUP} =  276, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMP" }{}}{\fldrslt {\cs37\ul\cf2 KEY_DISPLAYSWITCH}}}
 =  277, 
{\b KEY_KBDILLUMTOGGLE} =  278, 
{\b KEY_KBDILLUMDOWN} =  279, 
{\b KEY_KBDILLUMUP} =  280, 
{\b KEY_EJECT} =  281, 
{\b KEY_SLEEP} =  282, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMQ" }{}}{\fldrslt {\cs37\ul\cf2 KEY_LAST}}}
 =  379, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMR" }{}}{\fldrslt {\cs37\ul\cf2 MOUSE_FIRST}}}
 =  380, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMS" }{}}{\fldrslt {\cs37\ul\cf2 MOUSEBUTTON}}}
 =  380, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMT" }{}}{\fldrslt {\cs37\ul\cf2 MOUSEBUTTON_FIRST}}}
 =  381, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMU" }{}}{\fldrslt {\cs37\ul\cf2 MOUSEBUTTON_1}}}
 =  381, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 MOUSEBUTTON_2}}}
 =  382, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMW" }{}}{\fldrslt {\cs37\ul\cf2 MOUSEBUTTON_3}}}
 =  383, 
{\b MOUSEBUTTON_4} =  384, 
{\b MOUSEBUTTON_5} =  385, 
{\b MOUSEBUTTON_6} =  386, 
{\b MOUSEBUTTON_7} =  387, 
{\b MOUSEBUTTON_8} =  388, 
{\b MOUSEBUTTON_9} =  389, 
{\b MOUSEBUTTON_10} =  390, 
{\b MOUSEBUTTON_11} =  391, 
{\b MOUSEBUTTON_12} =  392, 
{\b MOUSEBUTTON_13} =  393, 
{\b MOUSEBUTTON_14} =  394, 
{\b MOUSEBUTTON_15} =  395, 
{\b MOUSEBUTTON_16} =  396, 
{\b MOUSEBUTTON_17} =  397, 
{\b MOUSEBUTTON_18} =  398, 
{\b MOUSEBUTTON_19} =  399, 
{\b MOUSEBUTTON_20} =  400, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMX" }{}}{\fldrslt {\cs37\ul\cf2 MOUSEBUTTON_LAST}}}
 =  400, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMY" }{}}{\fldrslt {\cs37\ul\cf2 INPUTEVENT_FIRST}}}
 =  401, 
{\b MOUSEABSOLUTEVERTICAL} =  402, 
{\b MOUSEABSOLUTEHORIZONTAL} =  403, 
{\b MOUSEVERTICAL} =  404, 
{\b MOUSEHORIZONTAL} =  405, 
{\b MOUSEWHEELVERTICAL} =  406, 
{\b MOUSEWHEELHORIZONTAL} =  407, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 MOUSE_LAST}}}
 =  410, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNA" }{}}{\fldrslt {\cs37\ul\cf2 MOTION_FIRST}}}
 =  420, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNB" }{}}{\fldrslt {\cs37\ul\cf2 MOTION_LAST}}}
 =  429, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 MULTITOUCH_FIRST}}}
 =  440, 
{\b MULTITOUCH_ACTION} =  441, 
{\b MULTITOUCH_GESTURE} =  442, 
{\b MULTITOUCH_PINCH} =  443, 
{\b MULTITOUCH_STRETCH} =  444, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABND" }{}}{\fldrslt {\cs37\ul\cf2 MULTITOUCH_LAST}}}
 =  449, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICK_FIRST}}}
 =  450, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICKBUTTON}}}
 =  450, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICKBUTTON_FIRST}}}
 =  451, 
{\b JOYSTICKBUTTON_1} =  451, 
{\b JOYSTICKBUTTON_2} =  452, 
{\b JOYSTICKBUTTON_3} =  453, 
{\b JOYSTICKBUTTON_4} =  454, 
{\b JOYSTICKBUTTON_5} =  455, 
{\b JOYSTICKBUTTON_6} =  456, 
{\b JOYSTICKBUTTON_7} =  457, 
{\b JOYSTICKBUTTON_8} =  458, 
{\b JOYSTICKBUTTON_9} =  459, 
{\b JOYSTICKBUTTON_10} =  460, 
{\b JOYSTICKBUTTON_11} =  461, 
{\b JOYSTICKBUTTON_12} =  462, 
{\b JOYSTICKBUTTON_13} =  463, 
{\b JOYSTICKBUTTON_14} =  464, 
{\b JOYSTICKBUTTON_15} =  465, 
{\b JOYSTICKBUTTON_16} =  466, 
{\b JOYSTICKBUTTON_17} =  467, 
{\b JOYSTICKBUTTON_18} =  468, 
{\b JOYSTICKBUTTON_19} =  469, 
{\b JOYSTICKBUTTON_20} =  470, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNH" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICKBUTTON_LAST}}}
 =  470, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICKAXIS}}}
 =  480, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICKAXIS_FIRST}}}
 =  481, 
{\b JOYSTICKAXIS_1} =  481, 
{\b JOYSTICKAXIS_2} =  482, 
{\b JOYSTICKAXIS_3} =  483, 
{\b JOYSTICKAXIS_4} =  484, 
{\b JOYSTICKAXIS_5} =  485, 
{\b JOYSTICKAXIS_6} =  486, 
{\b JOYSTICKAXIS_7} =  487, 
{\b JOYSTICKAXIS_8} =  488, 
{\b JOYSTICKAXIS_9} =  489, 
{\b JOYSTICKAXIS_10} =  490, 
{\b JOYSTICKAXIS_11} =  491, 
{\b JOYSTICKAXIS_12} =  492, 
{\b JOYSTICKAXIS_13} =  493, 
{\b JOYSTICKAXIS_14} =  494, 
{\b JOYSTICKAXIS_15} =  495, 
{\b JOYSTICKAXIS_16} =  496, 
{\b JOYSTICKAXIS_17} =  497, 
{\b JOYSTICKAXIS_18} =  498, 
{\b JOYSTICKAXIS_19} =  499, 
{\b JOYSTICKAXIS_20} =  500, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICKAXIS_LAST}}}
 =  500, 
{\b JOYSTICKBALL_VERTICAL} =  501, 
{\b JOYSTICKBALL_HORIZONTAL} =  502, 
{\b JOYSTICKHAT_1_VERTICAL} =  505, 
{\b JOYSTICKHAT_1_HORIZONTAL} =  506, 
{\b JOYSTICKHAT_2_VERTICAL} =  507, 
{\b JOYSTICKHAT_2_HORIZONTAL} =  508, 
{\b JOYSTICKHAT_3_VERTICAL} =  509, 
{\b JOYSTICKHAT_3_HORIZONTAL} =  510, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNL" }{}}{\fldrslt {\cs37\ul\cf2 JOYSTICK_LAST}}}
 =  512, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNM" }{}}{\fldrslt {\cs37\ul\cf2 INPUTEVENT_LAST}}}
 =  1024
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The InputCode enum defines all the posible types of inputs. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 ButtonState}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNN" }{}}{\fldrslt {\cs37\ul\cf2 BUTTON_LIFTING}}}
 =  -1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNO" }{}}{\fldrslt {\cs37\ul\cf2 BUTTON_UP}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNP" }{}}{\fldrslt {\cs37\ul\cf2 BUTTON_PRESSING}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 BUTTON_DOWN}}}
 =  2
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Optional listing of value that can be used in a metacode to represent the information of a button press. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 DirectionalMotionState}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNR" }{}}{\fldrslt {\cs37\ul\cf2 DIRECTIONALMOTION_UPLEFT}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNS" }{}}{\fldrslt {\cs37\ul\cf2 DIRECTIONALMOTION_UNCHANGED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNT" }{}}{\fldrslt {\cs37\ul\cf2 DIRECTIONALMOTION_DOWNRIGHT}}}
 =  -1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Optional listing of values that can be used in a metacode Indicate spin, digital or binary travel in a directionl. \par
}}}
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Usage page 0x0C\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
 These values are mapped from usage page 0x0C (USB consumer page). \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Walther keys\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
 These are values that Christian Walther added (for mac keyboard?). \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNW" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNX" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 (const int &MetaValue_, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 &Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDM" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 &RawEvent_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Heavy Lifting Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 GetCode}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Returns the Inputcode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNZ" }{}}{\fldrslt {\cs37\ul\cf2 SetCode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 &Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Sets The InputCode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOA" }{}}{\fldrslt {\cs37\ul\cf2 SetCode}}}
 (int Code_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Sets The InputCode using an int. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOB" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaValue}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Returns the MetaValue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaValueAsButtonState}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the MetaValue as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::DirectionalMotionState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOD" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaValueAsDirectionalMotionState}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the MetaValue as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}:: }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOE" }{}}{\fldrslt {\cs37\ul\cf2 SetMetaValue}}}
 (const int &MetaValue_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Sets The MetaValue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOF" }{}}{\fldrslt {\cs37\ul\cf2 IsKeyboardButton}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent a state of a keyboard key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOG" }{}}{\fldrslt {\cs37\ul\cf2 IsAltKey}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Alt key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOH" }{}}{\fldrslt {\cs37\ul\cf2 IsCtrlKey}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Ctrl key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 IsShiftKey}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Shift key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOJ" }{}}{\fldrslt {\cs37\ul\cf2 IsSuperKey}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Super key (Windows logo key, Apple logo key, etc...). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 IsMouseButton}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent a state of a Mouse button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOL" }{}}{\fldrslt {\cs37\ul\cf2 IsPollable}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this metacode a pollable event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 IsJoyStickEvent}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent a state of a Joystick Event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 IsOtherInputEvent}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent some other (non-keyboard and non-mouse button). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOO" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 &other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two MetaCodes for equality. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOP" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseButtonCode}}}
 (short unsigned int ButtonNumber)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts a int and returns the InputCode for the Corresponding Mouse button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOQ" }{}}{\fldrslt {\cs37\ul\cf2 GetJoystickButtonCode}}}
 (short unsigned int ButtonNumber)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts a int and returns the InputCode for the Corresponding Joystick button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOR" }{}}{\fldrslt {\cs37\ul\cf2 GetJoystickAxisCode}}}
 (short unsigned int AxisNumber)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts a int and returns the InputCode for the Corresponding Joystick Axis. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Determines the kind of user input. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Metacode contains the data that is passed around with an input event. It stores one type of button press or analog representation (Mouse move, joystick tilt, wheel spin, etc...). If it is an analog representation it will also store how far or how it is pushed, pressed, rotated, or whatever. Several of these can be used in combination to represent button combinations, or complex input combinations (like portions of fighter game moves). \par
}{
Definition at line 89 of file metacode.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ButtonState\:phys::MetaCode}
{\xe \v phys::MetaCode\:ButtonState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 phys::MetaCode::ButtonState}}}
}
}\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Optional listing of value that can be used in a metacode to represent the information of a button press. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is optional set of values that can make working with buttons easier. The values the engine pass via the the event manager will all use these whereever appropriate. \par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v BUTTON_LIFTING\:phys::MetaCode}
{\xe \v phys::MetaCode\:BUTTON_LIFTING}
{\b {\i BUTTON_LIFTING{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used when the key stops being pressed. \par
}{\xe \v BUTTON_UP\:phys::MetaCode}
{\xe \v phys::MetaCode\:BUTTON_UP}
{\b {\i BUTTON_UP{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default state of a key. \par
}{\xe \v BUTTON_PRESSING\:phys::MetaCode}
{\xe \v phys::MetaCode\:BUTTON_PRESSING}
{\b {\i BUTTON_PRESSING{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used at the exact point in time that a key goes from unpressed to pressed. \par
}{\xe \v BUTTON_DOWN\:phys::MetaCode}
{\xe \v phys::MetaCode\:BUTTON_DOWN}
{\b {\i BUTTON_DOWN{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used the entire time a key is down. \par
}}
\par
{
Definition at line 553 of file metacode.h.}\par
}
{\xe \v DirectionalMotionState\:phys::MetaCode}
{\xe \v phys::MetaCode\:DirectionalMotionState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 phys::MetaCode::DirectionalMotionState}}}
}
}\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Optional listing of values that can be used in a metacode Indicate spin, digital or binary travel in a directionl. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is optional set of values that can make working with the MouseWheel, Joystick hats and other items that can be moved along 1 axis in two dirctions easier. The values the engine pass via the the event manager will all use these whereever appropriate. \par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DIRECTIONALMOTION_UPLEFT\:phys::MetaCode}
{\xe \v phys::MetaCode\:DIRECTIONALMOTION_UPLEFT}
{\b {\i DIRECTIONALMOTION_UPLEFT{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optionally Used when the device is spun/moved up or to the left as a MetaValue \par
}{\xe \v DIRECTIONALMOTION_UNCHANGED\:phys::MetaCode}
{\xe \v phys::MetaCode\:DIRECTIONALMOTION_UNCHANGED}
{\b {\i DIRECTIONALMOTION_UNCHANGED{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This really isn't used in normal situations, but if a mousewheel or joyhat event is ever needed when the device is unmoved \par
}{\xe \v DIRECTIONALMOTION_DOWNRIGHT\:phys::MetaCode}
{\xe \v phys::MetaCode\:DIRECTIONALMOTION_DOWNRIGHT}
{\b {\i DIRECTIONALMOTION_DOWNRIGHT{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optionally Used when the MouseWheel/Joyhat is spun Down/Right as a Meta Code \par
}}
\par
{
Definition at line 564 of file metacode.h.}\par
}
{\xe \v InputCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:InputCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 phys::MetaCode::InputCode}}}
}
}\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The InputCode enum defines all the posible types of inputs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It has one entry for each key on a most keyboards. Then it has an entry for most mouse and joystick input methods. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Once upon a time, this partially matched with ascii. It doesn't anymore. \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v KEY_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_FIRST}
{\b {\i KEY_FIRST{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KEY_FIRST Same Value as KEY_UNKOWN, is Guaranteed to be the lowest value of any key. \par
}{\xe \v KEY_UNKNOWN\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_UNKNOWN}
{\b {\i KEY_UNKNOWN{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KEY_UNKNOWN This is used for unsupported keys or keys that are not in Unicode. \par
}{\xe \v KEY_BACKSLASH\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_BACKSLASH}
{\b {\i KEY_BACKSLASH{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Located at the lower left of the return key on ISO keyboards and at the right end of the QWERTY row on ANSI keyboards. Produces REVERSE SOLIDUS (backslash) and VERTICAL LINE in a US layout, REVERSE SOLIDUS and VERTICAL LINE in a UK Mac layout, NUMBER SIGN and TILDE in a UK Windows layout, DOLLAR SIGN and POUND SIGN in a Swiss German layout, NUMBER SIGN and APOSTROPHE in a German layout, GRAVE ACCENT and POUND SIGN in a French Mac layout, and ASTERISK and MICRO SIGN in a French Windows layout. \par
}{\xe \v KEY_NONUSHASH\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_NONUSHASH}
{\b {\i KEY_NONUSHASH{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO USB keyboards actually use this code instead of 49 for the same key, but all OSes I've seen treat the two codes identically. So, as an implementor, unless your keyboard generates both of those codes and your OS treats them differently, you should generate KEY_BACKSLASH instead of this code. As a user, you should not rely on this code because SDL will never generate it with most (all?) keyboards. \par
}{\xe \v KEY_GRAVE\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_GRAVE}
{\b {\i KEY_GRAVE{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Located in the top left corner (on both ANSI and ISO keyboards). Produces GRAVE ACCENT and TILDE in a US Windows layout and in US and UK Mac layouts on ANSI keyboards, GRAVE ACCENT and NOT SIGN in a UK Windows layout, SECTION SIGN and PLUS-MINUS SIGN in US and UK Mac layouts on ISO keyboards, SECTION SIGN and DEGREE SIGN in a Swiss German layout (Mac: only on ISO keyboards), CIRCUMFLEX ACCENT and DEGREE SIGN in a German layout (Mac: only on ISO keyboards), SUPERSCRIPT TWO and TILDE in a French Windows layout, COMMERCIAL AT and NUMBER SIGN in a French Mac layout on ISO keyboards, and LESS-THAN SIGN and GREATER-THAN SIGN in a Swiss German, German, or French Mac layout on ANSI keyboards. \par
}{\xe \v KEY_INSERT\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_INSERT}
{\b {\i KEY_INSERT{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
insert on PC, help on some Mac keyboards (but does send code 73, not 117) \par
}{\xe \v KEY_NUMLOCKCLEAR\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_NUMLOCKCLEAR}
{\b {\i KEY_NUMLOCKCLEAR{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
num lock on PC, clear on Mac keyboards \par
}{\xe \v KEY_NONUSBACKSLASH\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_NONUSBACKSLASH}
{\b {\i KEY_NONUSBACKSLASH{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the additional key that ISO keyboards have over ANSI ones, located between left shift and Y. Produces GRAVE ACCENT and TILDE in a US or UK Mac layout, REVERSE SOLIDUS (backslash) and VERTICAL LINE in a US or UK Windows layout, and LESS-THAN SIGN and GREATER-THAN SIGN in a Swiss German, German, or French layout. \par
}{\xe \v KEY_APPLICATION\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_APPLICATION}
{\b {\i KEY_APPLICATION{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
windows contextual menu, compose \par
}{\xe \v KEY_POWER\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_POWER}
{\b {\i KEY_POWER{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The USB document says this is a status flag, not a physical key - but some Mac keyboards do have a power key. \par
}{\xe \v KEY_AGAIN\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_AGAIN}
{\b {\i KEY_AGAIN{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
redo \par
}{\xe \v KEY_INTERNATIONAL1\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_INTERNATIONAL1}
{\b {\i KEY_INTERNATIONAL1{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used on Asian keyboards, see footnotes in USB doc \par
}{\xe \v KEY_INTERNATIONAL3\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_INTERNATIONAL3}
{\b {\i KEY_INTERNATIONAL3{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Yen \par
}{\xe \v KEY_LANG1\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG1}
{\b {\i KEY_LANG1{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hangul/English toggle \par
}{\xe \v KEY_LANG2\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG2}
{\b {\i KEY_LANG2{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hanja conversion \par
}{\xe \v KEY_LANG3\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG3}
{\b {\i KEY_LANG3{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Katakana \par
}{\xe \v KEY_LANG4\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG4}
{\b {\i KEY_LANG4{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hiragana \par
}{\xe \v KEY_LANG5\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG5}
{\b {\i KEY_LANG5{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zenkaku/Hankaku \par
}{\xe \v KEY_LANG6\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG6}
{\b {\i KEY_LANG6{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reserved \par
}{\xe \v KEY_LANG7\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG7}
{\b {\i KEY_LANG7{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reserved \par
}{\xe \v KEY_LANG8\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG8}
{\b {\i KEY_LANG8{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reserved \par
}{\xe \v KEY_LANG9\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LANG9}
{\b {\i KEY_LANG9{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reserved \par
}{\xe \v KEY_ALTERASE\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_ALTERASE}
{\b {\i KEY_ALTERASE{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase-Eaze \par
}{\xe \v KEY_LALT\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LALT}
{\b {\i KEY_LALT{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
alt, option \par
}{\xe \v KEY_LSUPER\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LSUPER}
{\b {\i KEY_LSUPER{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
windows, command (apple), meta \par
}{\xe \v KEY_RALT\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_RALT}
{\b {\i KEY_RALT{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
alt gr, option \par
}{\xe \v KEY_RSUPER\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_RSUPER}
{\b {\i KEY_RSUPER{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
windows, command (apple), meta \par
}{\xe \v KEY_MODE\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_MODE}
{\b {\i KEY_MODE{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I'm not sure if this is really not covered by any of the above, but since there's a special KMOD_MODE for it I'm adding it here \par
}{\xe \v KEY_DISPLAYSWITCH\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_DISPLAYSWITCH}
{\b {\i KEY_DISPLAYSWITCH{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
display mirroring/dual display switch, video mode switch \par
}{\xe \v KEY_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:KEY_LAST}
{\b {\i KEY_LAST{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last Keyboard InputCode, all Keys values will be less than this, and all Events will be larger than that. \par
}{\xe \v MOUSE_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSE_FIRST}
{\b {\i MOUSE_FIRST{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The First Mouse event, all Mouse Event values will be more than this. \par
}{\xe \v MOUSEBUTTON\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSEBUTTON}
{\b {\i MOUSEBUTTON{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the generic Some mouse button code. You can add the number of the mouse button to this and you will get the approriate code. Example (MOUSEBUTTON_1 == MOUSEBUTTON + 1). \par
}{\xe \v MOUSEBUTTON_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSEBUTTON_FIRST}
{\b {\i MOUSEBUTTON_FIRST{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the lowest mouse button value, all mice values will be larger of equal to this. \par
}{\xe \v MOUSEBUTTON_1\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSEBUTTON_1}
{\b {\i MOUSEBUTTON_1{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Most commonly left click. \par
}{\xe \v MOUSEBUTTON_2\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSEBUTTON_2}
{\b {\i MOUSEBUTTON_2{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Most Commonly Right click. \par
}{\xe \v MOUSEBUTTON_3\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSEBUTTON_3}
{\b {\i MOUSEBUTTON_3{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Most commonly middle click. \par
}{\xe \v MOUSEBUTTON_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSEBUTTON_LAST}
{\b {\i MOUSEBUTTON_LAST{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Last mouse button event, all mouse button event will be lower or equal to this. \par
}{\xe \v INPUTEVENT_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:INPUTEVENT_FIRST}
{\b {\i INPUTEVENT_FIRST{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The First non-button event, all Mouse and keyboard button values will be Less than this. \par
}{\xe \v MOUSE_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOUSE_LAST}
{\b {\i MOUSE_LAST{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last MouseEvent Code, all Mouse events will be less than this. \par
}{\xe \v MOTION_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOTION_FIRST}
{\b {\i MOTION_FIRST{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The first Motion event. \par
}{\xe \v MOTION_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MOTION_LAST}
{\b {\i MOTION_LAST{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last Motion event. \par
}{\xe \v MULTITOUCH_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MULTITOUCH_FIRST}
{\b {\i MULTITOUCH_FIRST{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The first Multi Touch event. \par
}{\xe \v MULTITOUCH_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:MULTITOUCH_LAST}
{\b {\i MULTITOUCH_LAST{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last Multi Touch event. \par
}{\xe \v JOYSTICK_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICK_FIRST}
{\b {\i JOYSTICK_FIRST{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The First JoyStick event, all Joystick Event values will be more than this. \par
}{\xe \v JOYSTICKBUTTON\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICKBUTTON}
{\b {\i JOYSTICKBUTTON{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the generic Some stickbutton button code. You can add the number of the jpystick button to this and you will get the approriate code. Example (JOYSTICKBUTTON_1 == JOYSTICKBUTTON + 1). \par
}{\xe \v JOYSTICKBUTTON_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICKBUTTON_FIRST}
{\b {\i JOYSTICKBUTTON_FIRST{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the lowest Joystick button value, all joystickbutton values will be larger of equal to this. \par
}{\xe \v JOYSTICKBUTTON_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICKBUTTON_LAST}
{\b {\i JOYSTICKBUTTON_LAST{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Last Joystick button event, all joystick button event will be lower or equal to this. \par
}{\xe \v JOYSTICKAXIS\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICKAXIS}
{\b {\i JOYSTICKAXIS{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the generic joystick axis code. You can add the number of the joystick axis to this and you will get the approriate code. Example (JOYSTICKAXIS_1 == JOYSTICKAXIS + 1). \par
}{\xe \v JOYSTICKAXIS_FIRST\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICKAXIS_FIRST}
{\b {\i JOYSTICKAXIS_FIRST{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the lowest Joystick axis value, all jpystick values will be larger of equal to this. \par
}{\xe \v JOYSTICKAXIS_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICKAXIS_LAST}
{\b {\i JOYSTICKAXIS_LAST{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Last Joystick axis event, all joystick axis event will be lower or equal to this. \par
}{\xe \v JOYSTICK_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:JOYSTICK_LAST}
{\b {\i JOYSTICK_LAST{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last JoyStick Input Code, all JoyStick events will be less than this. \par
}{\xe \v INPUTEVENT_LAST\:phys::MetaCode}
{\xe \v phys::MetaCode\:INPUTEVENT_LAST}
{\b {\i INPUTEVENT_LAST{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last Input Code, all event codes will be less than this. \par
}}
\par
{
Definition at line 98 of file metacode.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MetaCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:MetaCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::MetaCode::MetaCode ()}
}\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets nothing on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} and leaves it completely unassigned. Accessing a data member could cause problems \par
}{
Definition at line 68 of file metacode.cpp.}\par
}
{\xe \v MetaCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:MetaCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::MetaCode::MetaCode (const int & {\i MetaValue_}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 & {\i Code_})}
}\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets all values in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}, leaving it in completely ready state. This is the ideal constructor for simulating user input. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MetaValue_} How much is something moving, tilting, rotating or whatever. For buttons a positive value is pushed, and a negative value is becoming unpressed, and 0 is unpressed. \par
{\i Code_} Which key or which type of input was pressed. Sqeaky, thinks this has partial unicode support. \par
}
}{
Definition at line 71 of file metacode.cpp.}\par
}
{\xe \v MetaCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:MetaCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::MetaCode::MetaCode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 RawEvent}}}
 & {\i RawEvent_})}
}\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Heavy Lifting Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This contructor accepts a RawEvent from the input event subsystem internal to the engine. This converts all the required information from the lower level format and store what is needed in the event that is created. This is used heavily by engine internals. \par This constructor expects to receive a type of RawEvent that can be converted into exactly one kind of Metacode. Depending on the User input subsystem, this could be all RawEvents, or even just some RawEvents. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i RawEvent which creates Multiple Metacodes inserted into Metacode} - Thrown when passed a certain (system dependant) incorrect type of RawEvent. \par
{\i Unknown User Input Inserted into Metacode} - Thrown when receiving either a corrupt, improperly handle, or unsupported RawEvent. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid We recomend against using this Constructor, because the binary format of RawEvent could change if the input event SubSystem Changes. In that event you would have to recompile your application to get it working with a new version of physgame. Using this function in Game code removes any gaurantees of Game Code Portability. \par
}}{
Definition at line 76 of file metacode.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 phys::MetaCode::GetCode () const}
}\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Returns the Inputcode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Value can be use to determine what keyboard button has been pressed, or what specific kind of Joystick or mouse event has occurred. This value can be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNZ" }{}}{\fldrslt {\cs37\ul\cf2 SetCode}}}  . \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the input code for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} \par
}}{
Definition at line 185 of file metacode.cpp.}\par
}
{\xe \v GetJoystickAxisCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetJoystickAxisCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 phys::MetaCode::GetJoystickAxisCode (short unsigned int {\i AxisNumber}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts a int and returns the InputCode for the Corresponding Joystick Axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AxisNumber} The number of the button you want the code for \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid When passed 0 this returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::JOYSTICKAXIS}}}, otherwise this returns MetaCode::JOYSTICKAXIS_X where X is the number that was passed in \par
}}{
Definition at line 221 of file metacode.cpp.}\par
}
{\xe \v GetJoystickButtonCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetJoystickButtonCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 phys::MetaCode::GetJoystickButtonCode (short unsigned int {\i ButtonNumber}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts a int and returns the InputCode for the Corresponding Joystick button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ButtonerNumber} The number of the button you want the code for \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid When passed 0 this returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::JOYSTICKBUTTON}}}, otherwise this returns MetaCode::JOYSTICKBUTTON_X where X is the number that was passed in \par
}}{
Definition at line 213 of file metacode.cpp.}\par
}
{\xe \v GetMetaValue\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetMetaValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::MetaCode::GetMetaValue () const}
}\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Returns the MetaValue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The MetaValue can be use to determine how far something is tilted, pushed, rotated, or other analog value. This value can be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOE" }{}}{\fldrslt {\cs37\ul\cf2 SetMetaValue}}}  . \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the input code for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. This could return any number inside a range (depending on hardware and configuration) to represent how tilted a joystick or how much a mouse moved. \par
}}{
Definition at line 180 of file metacode.cpp.}\par
}
{\xe \v GetMetaValueAsButtonState\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetMetaValueAsButtonState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}
 phys::MetaCode::GetMetaValueAsButtonState () const}
}\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the MetaValue as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::ButtonState}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the appropriate button state or throws an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Exception}}} if an invalid button state is stored in the MetaValue \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} throws a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Exception}}} if the MetaValue is less than BUTTON_LIFTING or greater than BUTTON_DOWN. \par
}
}{
Definition at line 158 of file metacode.cpp.}\par
}
{\xe \v GetMetaValueAsDirectionalMotionState\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetMetaValueAsDirectionalMotionState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::DirectionalMotionState}}}
 phys::MetaCode::GetMetaValueAsDirectionalMotionState () const}
}\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the MetaValue as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}:: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the appropriate MouseWheel state or throws an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Exception}}} if an invalid state is stored in the MetaValue \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i This} throws a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Exception}}} if the MetaValue is less than MOUSEWHEEL_DOWN or greater than MOUSEWHEEL_UP. \par
}
}{
Definition at line 168 of file metacode.cpp.}\par
}
{\xe \v GetMouseButtonCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:GetMouseButtonCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 phys::MetaCode::GetMouseButtonCode (short unsigned int {\i ButtonNumber}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts a int and returns the InputCode for the Corresponding Mouse button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ButtonerNumber} The number of the button you want the code for \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid When passed 0 this returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMS" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::MOUSEBUTTON}}}, otherwise this returns MetaCode::MOUSEBUTTON_X where X is the number that was passed in \par
}}{
Definition at line 205 of file metacode.cpp.}\par
}
{\xe \v IsAltKey\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsAltKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsAltKey () const}
}\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Alt key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a either keyboard Alt key. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is a left or right Alt key. \par
}}{
Definition at line 232 of file metacode.cpp.}\par
}
{\xe \v IsCtrlKey\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsCtrlKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsCtrlKey () const}
}\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Ctrl key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a either keyboard Ctrl key. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is a left or right Ctrl key. \par
}}{
Definition at line 235 of file metacode.cpp.}\par
}
{\xe \v IsJoyStickEvent\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsJoyStickEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsJoyStickEvent () const}
}\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent a state of a Joystick Event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a joystick button being twisted, tilted, up, polled, down, pressed, or lifted, or whatever else you can do to a joystick. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is between JOYSTICK_FIRST and JOYSTICK_LAST. \par
}}{
Definition at line 250 of file metacode.cpp.}\par
}
{\xe \v IsKeyboardButton\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsKeyboardButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsKeyboardButton () const}
}\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent a state of a keyboard key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a keyboard key being up, polled, down, pressed, or lifted. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is keyboard event. \par
}}{
Definition at line 229 of file metacode.cpp.}\par
}
{\xe \v IsMouseButton\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsMouseButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsMouseButton () const}
}\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent a state of a Mouse button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a mouse button being up, polled, down, pressed, or lifted. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is MOUSEBUTTON_X event. \par
}}{
Definition at line 244 of file metacode.cpp.}\par
}
{\xe \v IsOtherInputEvent\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsOtherInputEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsOtherInputEvent () const}
}\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} Represent some other (non-keyboard and non-mouse button). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to any being up, polled, down, pressed, or lifted. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is between INPUTEVENT_FIRST and INPUTEVENT_LAST. \par
}}{
Definition at line 253 of file metacode.cpp.}\par
}
{\xe \v IsPollable\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsPollable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsPollable () const}
}\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this metacode a pollable event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid if this metacode stores a Keyboard button, Mouse Button or joystick button, then this is a pollable event \par
}}{
Definition at line 247 of file metacode.cpp.}\par
}
{\xe \v IsShiftKey\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsShiftKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsShiftKey () const}
}\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Shift key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a either keyboard Shift key. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is a left or right Shift key. \par
}}{
Definition at line 238 of file metacode.cpp.}\par
}
{\xe \v IsSuperKey\:phys::MetaCode}
{\xe \v phys::MetaCode\:IsSuperKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::IsSuperKey () const}
}\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this a left or right Super key (Windows logo key, Apple logo key, etc...). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}} pertains to a either keyboard Super key. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a bool which will be true if this is a left or right Super key. \par
}}{
Definition at line 241 of file metacode.cpp.}\par
}
{\xe \v operator==\:phys::MetaCode}
{\xe \v phys::MetaCode\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::MetaCode::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}
 & {\i other}) const}
}\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two MetaCodes for equality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns true if the MetaValue and Code are the Same, this ignores ID. \par
}{
Definition at line 259 of file metacode.cpp.}\par
}
{\xe \v SetCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:SetCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::MetaCode::SetCode (int {\i Code_})}
}\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Sets The InputCode using an int. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will cast an int into an InputCode. Be careful, it is possible to put impossible or ridiculous values, in with this. For example Accidentally stuffing in the result of MOUSEBUTTON + 22 looks like it would give you MOUSEBUTTON_22. But that Doesn't exist, at the time of this writing you would get MOUSEABSOLUTEVERTICAL. Be careful, or skip this alltogether and use one of the provided functions that do the math for you like {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Code_} The value you want the stored code to become. \par
}
}{
Definition at line 200 of file metacode.cpp.}\par
}
{\xe \v SetCode\:phys::MetaCode}
{\xe \v phys::MetaCode\:SetCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::MetaCode::SetCode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode::InputCode}}}
 & {\i Code_})}
}\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Sets The InputCode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 GetCode}}}  to see exactly what the Code is. This will Set the code stored in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. This value can be retrieved with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 GetCode}}}  . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Code_} The value you want the stored code to become. \par
}
}{
Definition at line 195 of file metacode.cpp.}\par
}
{\xe \v SetMetaValue\:phys::MetaCode}
{\xe \v phys::MetaCode\:SetMetaValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::MetaCode::SetMetaValue (const int & {\i MetaValue_})}
}\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Sets The MetaValue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOB" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaValue}}}  to see exactly what the MetaValue is. This will set the MetaValue stored in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 MetaCode}}}. This value can be retrieved with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOB" }{}}{\fldrslt {\cs37\ul\cf2 GetMetaValue}}}  . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MetaValue_} The value you want the stored MetaValue to become. No bounds checking will be done. You can supply a completely invalid value if you choose to. \par
}
}{
Definition at line 190 of file metacode.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
metacode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
metacode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::Node Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::Node}
{\xe \v phys::xml::Node}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating nodes in DOM tree. }}\par
{
{\f2 #include <xmldoc.h>}}\par
Inheritance diagram for phys::xml::Node:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d0a/classphys_1_1xml_1_1Node.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGI" }{}}{\fldrslt {\cs37\ul\cf2 iterator}}}
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An iterator for child Nodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGJ" }{}}{\fldrslt {\cs37\ul\cf2 attribute_iterator}}}
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An iterator for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} members on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGK" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 (){\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. Constructs an empty node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGL" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
 *p)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs node from internal pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGM" }{}}{\fldrslt {\cs37\ul\cf2 operator unspecified_bool_type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGN" }{}}{\fldrslt {\cs37\ul\cf2 operator!}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this node the opposite of it's normal boolean value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGO" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check equality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGP" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGQ" }{}}{\fldrslt {\cs37\ul\cf2 operator<}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGR" }{}}{\fldrslt {\cs37\ul\cf2 operator>}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGS" }{}}{\fldrslt {\cs37\ul\cf2 operator<=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGT" }{}}{\fldrslt {\cs37\ul\cf2 operator>=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &r) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGU" }{}}{\fldrslt {\cs37\ul\cf2 Empty}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this storing anything at all? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGV" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identify what kind of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGW" }{}}{\fldrslt {\cs37\ul\cf2 Name}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGX" }{}}{\fldrslt {\cs37\ul\cf2 Value}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Value of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGY" }{}}{\fldrslt {\cs37\ul\cf2 GetFirstAttribute}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGZ" }{}}{\fldrslt {\cs37\ul\cf2 GetLastAttribute}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Last {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHA" }{}}{\fldrslt {\cs37\ul\cf2 GetFirstChild}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the first child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHB" }{}}{\fldrslt {\cs37\ul\cf2 GetLastChild}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the last child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHC" }{}}{\fldrslt {\cs37\ul\cf2 GetNextSibling}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the next sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHD" }{}}{\fldrslt {\cs37\ul\cf2 GetPreviousSibling}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the previous sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHE" }{}}{\fldrslt {\cs37\ul\cf2 GetParent}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the parent of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHF" }{}}{\fldrslt {\cs37\ul\cf2 GetRoot}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or the most base {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} containing this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHG" }{}}{\fldrslt {\cs37\ul\cf2 GetChild}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to get a child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a given name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHH" }{}}{\fldrslt {\cs37\ul\cf2 GetAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to get an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a given name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHI" }{}}{\fldrslt {\cs37\ul\cf2 GetNextSibling}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the next sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a matching name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHJ" }{}}{\fldrslt {\cs37\ul\cf2 GetPreviousSibling}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the first previous sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a matching name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHK" }{}}{\fldrslt {\cs37\ul\cf2 ChildValue}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the value of this(or a child's) Nodes PCDATA child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHL" }{}}{\fldrslt {\cs37\ul\cf2 ChildValue}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the PCDATA of a given child. The same a calling "GetChild(Name).ChildValue()". }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHM" }{}}{\fldrslt {\cs37\ul\cf2 SetName}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 SetValue}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of this. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHN" }{}}{\fldrslt {\cs37\ul\cf2 AppendAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it at the end of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHO" }{}}{\fldrslt {\cs37\ul\cf2 PrependAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it at the begining of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHP" }{}}{\fldrslt {\cs37\ul\cf2 InsertAttributeAfter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &attr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it into the list of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHQ" }{}}{\fldrslt {\cs37\ul\cf2 InsertAttributeBefore}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &attr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it into the list of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHR" }{}}{\fldrslt {\cs37\ul\cf2 AppendCopy}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &proto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy at the end of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHS" }{}}{\fldrslt {\cs37\ul\cf2 PrependCopy}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &proto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy at the beginning of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHT" }{}}{\fldrslt {\cs37\ul\cf2 InsertCopyAfter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &proto, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &attr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy into the list of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHU" }{}}{\fldrslt {\cs37\ul\cf2 InsertCopyBefore}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &proto, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &attr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy into the list of this Nodes attributes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHZ" }{}}{\fldrslt {\cs37\ul\cf2 AppendChild}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 Type=NodeElement)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHV" }{}}{\fldrslt {\cs37\ul\cf2 PrependChild}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 Type=NodeElement)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one, and puts at the beginning of the Child Nodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 InsertChildAfter}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 Type, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one, and puts at the middle of the Child Nodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 InsertChildBefore}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 Type, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one, and puts at the middle of the Child Nodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHW" }{}}{\fldrslt {\cs37\ul\cf2 AppendChild}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 PrependChild}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name at the beginning of the children. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHX" }{}}{\fldrslt {\cs37\ul\cf2 InsertChildAfter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name at the middle of the children. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHY" }{}}{\fldrslt {\cs37\ul\cf2 InsertChildBefore}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name at the middle of the children. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHZ" }{}}{\fldrslt {\cs37\ul\cf2 AppendCopy}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &proto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy at the end of the list of this Nodes Childrem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIA" }{}}{\fldrslt {\cs37\ul\cf2 PrependCopy}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &proto)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy at the start of the list of this Nodes Childrem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIB" }{}}{\fldrslt {\cs37\ul\cf2 InsertCopyAfter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &proto, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy in the middle the list of this Nodes Childrem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIC" }{}}{\fldrslt {\cs37\ul\cf2 InsertCopyBefore}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &proto, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy in the middle the list of this Nodes Childrem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADID" }{}}{\fldrslt {\cs37\ul\cf2 RemoveAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &a)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIE" }{}}{\fldrslt {\cs37\ul\cf2 RemoveAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} as specified by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIF" }{}}{\fldrslt {\cs37\ul\cf2 RemoveChild}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &n)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove specified child element. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIG" }{}}{\fldrslt {\cs37\ul\cf2 RemoveChild}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove child element as specified by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Predicate > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIH" }{}}{\fldrslt {\cs37\ul\cf2 FindAttribute}}}
 (Predicate pred) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} using a function to check each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} individually. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Predicate > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADII" }{}}{\fldrslt {\cs37\ul\cf2 FindChild}}}
 (Predicate pred) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for an child ( only direct children ) {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} using a function to check each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} individually. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Predicate > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIJ" }{}}{\fldrslt {\cs37\ul\cf2 FindNode}}}
 (Predicate pred) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} descended from this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} using a function to check each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} individually. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIK" }{}}{\fldrslt {\cs37\ul\cf2 FindChildbyAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *AttrName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *AttrValue) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} by an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} it has. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIL" }{}}{\fldrslt {\cs37\ul\cf2 FindChildbyAttribute}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *AttrName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *AttrValue) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} by an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} it has. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIM" }{}}{\fldrslt {\cs37\ul\cf2 Path}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 delimiter= '/') const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the absolute path to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 FirstElementByPath}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Path, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 delimiter= '/') const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for a node by Path consisting of node names and . or .. elements. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIN" }{}}{\fldrslt {\cs37\ul\cf2 Traverse}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker}}}
 &walker)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIO" }{}}{\fldrslt {\cs37\ul\cf2 FindSingleNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *query, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 *variables=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select single node by evaluating an XPath query. Returns first node from the resulting node set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIP" }{}}{\fldrslt {\cs37\ul\cf2 FindSingleNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}}
 &query) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select single node by evaluating an XPath query. Returns first node from the resulting node set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIQ" }{}}{\fldrslt {\cs37\ul\cf2 FindNodes}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *query, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 *variables=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a group of nodes by evaluating an XPath query. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIR" }{}}{\fldrslt {\cs37\ul\cf2 FindNodes}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}}
 &query) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a group of nodes by evaluating an XPath query. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Print}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}
 &WriterInstance, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto, unsigned int Depth=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output the XML document using a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIS" }{}}{\fldrslt {\cs37\ul\cf2 Print}}}
 (std::basic_ostream< char, std::char_traits< char > > &os, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 DocumentEncoding=EncodingAuto, unsigned int Depth=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output the XML document using a Output Stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIT" }{}}{\fldrslt {\cs37\ul\cf2 Print}}}
 (std::basic_ostream< wchar_t, std::char_traits< wchar_t > > &os, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *indent=XML_TEXT("\\t"), unsigned int flags={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
, unsigned int Depth=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output the XML document using a Output Stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 iterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIU" }{}}{\fldrslt {\cs37\ul\cf2 begin}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a Child node iterator that references the first child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 iterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIV" }{}}{\fldrslt {\cs37\ul\cf2 end}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a Child node iterator that references one past the last child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 attribute_iterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIW" }{}}{\fldrslt {\cs37\ul\cf2 attributes_begin}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator that references the first {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 attribute_iterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIX" }{}}{\fldrslt {\cs37\ul\cf2 attributes_end}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator that references the one past the last {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ptrdiff_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIY" }{}}{\fldrslt {\cs37\ul\cf2 OffSetDebug}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get node Offset in parsed file/string (in char_t units) for debugging purposes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIZ" }{}}{\fldrslt {\cs37\ul\cf2 HashValue}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get hash Value (unique for handles to the same object). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJA" }{}}{\fldrslt {\cs37\ul\cf2 InternalObject}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get internal pointer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
 *Node::* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJB" }{}}{\fldrslt {\cs37\ul\cf2 unspecified_bool_type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used when testing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} as a bool. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJC" }{}}{\fldrslt {\cs37\ul\cf2 _GetRoot}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores pointers to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} data and some metadata. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b AttributeIterator}{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b NodeIterator}{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating nodes in DOM tree. \par
}{
Definition at line 468 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Typedef Documentation\par
\pard\plain 
{\xe \v unspecified_bool_type\:phys::xml::Node}
{\xe \v phys::xml::Node\:unspecified_bool_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
* Node::* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::unspecified_bool_type}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used when testing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} as a bool. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 478 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Node\:phys::xml::Node}
{\xe \v phys::xml::Node\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Node ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}}
 * {\i p}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs node from internal pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i p} An internal node pointer. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AppendAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:AppendAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 phys::xml::Node::AppendAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it at the end of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the New attribute to be created\par
}
This attempts to create an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it at the end of the list of attribute on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v AppendChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:AppendChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::AppendChild ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 {\i Type} = {\f2 NodeElement})}
}\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} The NodeType of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be added to list of child Nodes. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} representing the freshly added {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000041" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par
}
}}
{\xe \v AppendChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:AppendChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::AppendChild (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be created.\par
}
Calls {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHZ" }{}}{\fldrslt {\cs37\ul\cf2 Node::AppendChild(NodeType)}}} ; using NodeElement as the NodeType. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The desired {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v AppendCopy\:phys::xml::Node}
{\xe \v phys::xml::Node\:AppendCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 phys::xml::Node::AppendCopy (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i proto})}
}\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy at the end of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The attribute to be copied.\par
}
This attempts to create a copy of an attribute {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it at the end of the list of attribute on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v AppendCopy\:phys::xml::Node}
{\xe \v phys::xml::Node\:AppendCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::AppendCopy (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i proto})}
}\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy at the end of the list of this Nodes Childrem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be copied. If this is emptry, no work is performed. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The copied {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v attributes_begin\:phys::xml::Node}
{\xe \v phys::xml::Node\:attributes_begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::attributes_begin () const}
}\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator that references the first {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Node::Iterator that reference the first child node. \par
}}}
{\xe \v attributes_end\:phys::xml::Node}
{\xe \v phys::xml::Node\:attributes_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::attributes_end () const}
}\par
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator that references the one past the last {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Node::Iterator that reference the last {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}}}
{\xe \v begin\:phys::xml::Node}
{\xe \v phys::xml::Node\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::begin () const}
}\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a Child node iterator that references the first child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Node::Iterator that reference the first child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}}}
{\xe \v ChildValue\:phys::xml::Node}
{\xe \v phys::xml::Node\:ChildValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::ChildValue () const}
}\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the value of this(or a child's) Nodes PCDATA child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this node represents "<node>Some text in the PCDATA field, that is actually represent by a node</node>", then this would return "Some text in the PCDATA field, that is actually represent by a node". This will iterate through child Nodes from until it finds a PCDATA node or fails \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will return the Value of the first available PCDATA node. \par
}}}
{\xe \v ChildValue\:phys::xml::Node}
{\xe \v phys::xml::Node\:ChildValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::ChildValue (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}) const}
}\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the PCDATA of a given child. The same a calling "GetChild(Name).ChildValue()". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The Name of the desired child node. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This will return the Value of the first available matching PCDATA node. \par
}}}
{\xe \v Empty\:phys::xml::Node}
{\xe \v phys::xml::Node\:Empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Empty () const}
}\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this storing anything at all? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  is storing nothing. False if it is storing anything. \par
}}}
{\xe \v end\:phys::xml::Node}
{\xe \v phys::xml::Node\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::end () const}
}\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a Child node iterator that references one past the last child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Node::Iterator that reference the last child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}}}
{\xe \v FindAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Predicate > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 phys::xml::Node::FindAttribute (Predicate {\i pred}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} using a function to check each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} individually. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pred} a pointer to a function that accepts an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}, and returns bool.\par
}
This iterates through each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this node, from begining to end and calls the Predicate function passing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} to it. If the Predicate returns true the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} it was just passed is returned. If Precdicate never returns true, it is called on every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and a blank {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is returned. The Predicate is never called with a null value. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the first {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that causes Predicate to return true. \par
}}{
Definition at line 674 of file xml.h.}\par
}
{\xe \v FindChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Predicate > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::FindChild (Predicate {\i pred}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for an child ( only direct children ) {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} using a function to check each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} individually. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pred} a pointer to a function that accepts an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and returns bool.\par
}
This iterates through all immediate children of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and calls the Predicate function passing a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to it. If the Predicate returns true the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} it was just passed is returned. If Predicate never returns true, it is called on every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and a blank {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is returned. The Predicate is never called with a null value. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the first {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that causes Predicate to return true. \par
}}{
Definition at line 692 of file xml.h.}\par
}
{\xe \v FindChildbyAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindChildbyAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::FindChildbyAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i AttrName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i AttrValue}) const}
}\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} by an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} it has. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
{\i AttrName} The name of the matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. \par
{\i AttrValue} The value of the matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}.\par
}
Any Null pointers instead of character arrays passed in will cause undefined behavior. All Matching is Case sensitive. \par
}}
{\xe \v FindChildbyAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindChildbyAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::FindChildbyAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i AttrName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i AttrValue}) const}
}\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} by an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} it has. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AttrName} The name of the matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. \par
{\i AttrValue} The value of the matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}.\par
}
Any Null pointers instead of character arrays passed in will cause undefined behavior. All Matching is Case sensitive. \par
}}
{\xe \v FindNode\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Predicate > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::FindNode (Predicate {\i pred}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} descended from this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} using a function to check each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} individually. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pred} a pointer to a function that accepts an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and returns bool.\par
}
This iterates through all children of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and their children ( and so on), and calls the Predicate function passing each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to it. This iterates through all Nodes using a depth first algorithm. If the Predicate returns true the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} it was just passed is returned. If Predicate never returns true, it is called on every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and a blank {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is returned. The Predicate is never called with a null value. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns the first {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that causes Predicate to return true. \par
}}{
Definition at line 710 of file xml.h.}\par
}
{\xe \v FindNodes\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 phys::xml::Node::FindNodes (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}}
 & {\i query}) const}
}\par
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a group of nodes by evaluating an XPath query. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i query} The XPath query {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} class instance. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}} with the Matchs of the XPath query. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i query} The XPath query {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} class instance. \par
}
}}
{\xe \v FindNodes\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 phys::xml::Node::FindNodes (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i query}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 * {\i variables} = {\f2 0}) const}
}\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a group of nodes by evaluating an XPath query. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i query} The XPath query as a c-string to be evaluated. \par
{\i variables} undocumented. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}} with the Matchs of the XPath query. \par
}}}
{\xe \v FindSingleNode\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindSingleNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::FindSingleNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}}
 & {\i query}) const}
}\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select single node by evaluating an XPath query. Returns first node from the resulting node set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i query} The XPath query {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} class instance. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} The first matching XPath node. \par
}}}
{\xe \v FindSingleNode\:phys::xml::Node}
{\xe \v phys::xml::Node\:FindSingleNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::FindSingleNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i query}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 * {\i variables} = {\f2 0}) const}
}\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select single node by evaluating an XPath query. Returns first node from the resulting node set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i query} The XPath query as a c-string to be evaluated. \par
{\i variables} undocumented. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} The first matching XPath node. \par
}}}
{\xe \v FirstElementByPath\:phys::xml::Node}
{\xe \v phys::xml::Node\:FirstElementByPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::FirstElementByPath (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Path}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 {\i delimiter} = {\f2 '/'}) const}
}\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for a node by Path consisting of node names and . or .. elements. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000050" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Investigate this more deeply. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Path} The path to search for. \par
{\i delimiter} The character to use as a pathname separator, this defaults to '/'. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, of an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}) const}
}\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to get an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a given name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the desired {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that represents the first matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on failure. \par
}}}
{\xe \v GetChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetChild (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}) const}
}\par
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to get a child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a given name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the desired child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents the first desired child, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetFirstAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetFirstAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetFirstAttribute () const}
}\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This attempts to return the First {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  in this node, if it cannot it returns an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . \par
}}}
{\xe \v GetFirstChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetFirstChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetFirstChild () const}
}\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the first child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the First child node if it exists, otherwise it return an empty node. \par
}}}
{\xe \v GetLastAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetLastAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetLastAttribute () const}
}\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Last {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This attempts to return the Last {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}  in this node, if it cannot it returns an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} . \par
}}}
{\xe \v GetLastChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetLastChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetLastChild () const}
}\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the last child {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the last child node if it exists, otherwise it return an empty node. \par
}}}
{\xe \v GetNextSibling\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetNextSibling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetNextSibling () const}
}\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the next sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sibling of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that shares the same parent. If this is and the sibling nodes are valid, this retrieves that {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, otherwise this return an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents a sibling, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetNextSibling\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetNextSibling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::GetNextSibling (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}) const}
}\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the next sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a matching name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} A c-string that has the name of the node you to find.\par
}
A sibling of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that shares the same parent. If this is and the sibling nodes are valid, this iterates through Nodes until a sibling with a Matching name is found or all siblings are checked. If a Match is found this retrieves that {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, otherwise this return an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents a sibling with a matching name, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetParent\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetParent () const}
}\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the parent of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents the parent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetPreviousSibling\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetPreviousSibling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::GetPreviousSibling () const}
}\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the previous sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sibling of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that shares the same parent. If this is and the sibling nodes are valid, this retrieves that {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, otherwise this return an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents a sibling, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetPreviousSibling\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetPreviousSibling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::GetPreviousSibling (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}) const}
}\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the first previous sibling of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} with a matching name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} A c-string that has the name of the node you to find.\par
}
A sibling of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that shares the same parent. If this is and the sibling nodes are valid, this iterates through Nodes until a sibling with a Matching name is found or all siblings are checked. If a Match is found this retrieves that {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, otherwise this return an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents a sibling with a matching name, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v GetRoot\:phys::xml::Node}
{\xe \v phys::xml::Node\:GetRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::GetRoot () const}
}\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to retrieve the root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or the most base {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} containing this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that represents the root of the XML document, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. If there are multiple roots this attempts to retrieve the appropriate one. \par
}}}
{\xe \v HashValue\:phys::xml::Node}
{\xe \v phys::xml::Node\:HashValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::HashValue () const}
}\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get hash Value (unique for handles to the same object). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid ptrdiff_t \par
}{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A size_t that uniquely identifies this node. \par
}\par}}}
{\xe \v InsertAttributeAfter\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertAttributeAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::InsertAttributeAfter (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i attr})}
}\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it into the list of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the New attribute to be created \par
{\i attr} An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that represents an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and is just before where you want the new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}.\par
}
This attempts to create an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it in the list of attributes, Just after another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}, on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v InsertAttributeBefore\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertAttributeBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::InsertAttributeBefore (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i attr})}
}\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it into the list of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the New attribute to be created \par
{\i attr} An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that represents an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and is just after where you want the new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}.\par
}
This attempts to create an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it in the list of attributes, Just before another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}, on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v InsertChildAfter\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertChildAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::InsertChildAfter ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 {\i Type}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one, and puts at the middle of the Child Nodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000048" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} The NodeType of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be added, just after another specific node. \par
{\i node} The specific node to add the new one after. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} representing the freshly added {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} if there was an error. \par
}}}
{\xe \v InsertChildAfter\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertChildAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::InsertChildAfter (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name at the middle of the children. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be created. \par
{\i node} The node just before were the Create node is to be placed.\par
}
Calls Node::InsertChildAfter(NodeType, Node); using NodeElement as the NodeType. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The desired {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v InsertChildBefore\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertChildBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::InsertChildBefore ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 {\i Type}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one, and puts at the middle of the Child Nodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} The NodeType of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be added, just before another specific node. \par
{\i node} The specific node to add the new one before. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} representing the freshly added {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000042" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par
}
}}
{\xe \v InsertChildBefore\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertChildBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::InsertChildBefore (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name at the middle of the children. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calls {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHV" }{}}{\fldrslt {\cs37\ul\cf2 Node::PrependChild(NodeType)}}} ; using NodeElement as the NodeType. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The desired {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be created. \par
{\i node} The node just after were the Create node is to be placed. \par
}
}}
{\xe \v InsertCopyAfter\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertCopyAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 phys::xml::Node::InsertCopyAfter (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i proto}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i attr})}
}\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy into the list of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The attribute to be copied. \par
{\i attr} An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that represents an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and is just before where you want the new copy of proto.\par
}
This attempts to create a copy of an attribute {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it in the middle of the list of attributes, just after a selected attribute, on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v InsertCopyAfter\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertCopyAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::InsertCopyAfter (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i proto}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy in the middle the list of this Nodes Childrem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be copied. If this is emptry, no work is performed. \par
{\i node} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} just before the desired place in the list of children to insert the copied node. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The copied {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v InsertCopyBefore\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertCopyBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::InsertCopyBefore (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i proto}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i attr})}
}\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy into the list of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The attribute to be copied. \par
{\i attr} An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} that represents an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, and is just after where you want the new copy of proto.\par
}
This attempts to create a copy of an attribute {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it in the middle of the list of attributes, just before a selected attribute, on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v InsertCopyBefore\:phys::xml::Node}
{\xe \v phys::xml::Node\:InsertCopyBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::InsertCopyBefore (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i proto}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy in the middle the list of this Nodes Childrem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be copied. If this is emptry, no work is performed. \par
{\i node} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} just after the desired place in the list of children to insert the copied node. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The copied {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v InternalObject\:phys::xml::Node}
{\xe \v phys::xml::Node\:InternalObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::InternalObject () const}
}\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get internal pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A NodeStruct* that points to the internal data of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} \par
}\par}}}
{\xe \v Name\:phys::xml::Node}
{\xe \v phys::xml::Node\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Name () const}
}\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns A pointer to a const c-style array of the the character type (usually char or wchar_t) containing the name. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid returns "" if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
}}}
{\xe \v OffSetDebug\:phys::xml::Node}
{\xe \v phys::xml::Node\:OffSetDebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::OffSetDebug () const}
}\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get node Offset in parsed file/string (in char_t units) for debugging purposes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}}
{\xe \v operator unspecified_bool_type\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator unspecified_bool_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJB" }{}}{\fldrslt {\cs37\ul\cf2 unspecified_bool_type}}}
 () const}
}\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the internal data is set and false otherwise. \par
}}}
{\xe \v operator!\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator!}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator! () const}
}\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this node the opposite of it's normal boolean value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is described in the PugiXML source a a workaround for a borland c++ issue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns false if the internal pointer {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 NodeStruct}}} is set and true otherwise. \par
}}}
{\xe \v operator!=\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if any of the internal values don't match between this and the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} . \par
}}}
{\xe \v operator<\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator< (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  is greater than this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v operator<=\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator<= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  is greater than or equal to this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v operator==\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check equality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if all the internal values match between this and the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}}}
{\xe \v operator>\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator> (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  is less than this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v operator>=\:phys::xml::Node}
{\xe \v phys::xml::Node\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::operator>= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i r}) const}
}\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares the internal values to check for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  this is being compared to.\par
}
Many of the internal values are pointers, and it is the addresses of these that are being compared. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns True if the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}  is less than or equal to this one as per sequential comparison of internal pointers. \par
}}}
{\xe \v Path\:phys::xml::Node}
{\xe \v phys::xml::Node\:Path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Path ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 {\i delimiter} = {\f2 '/'}) const}
}\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the absolute path to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i delimiter} The character to use as a pathname separator, this defaults to '/'. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A String containing an path \par
}}}
{\xe \v PrependAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:PrependAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::PrependAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts it at the begining of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the New attribute to be created\par
}
This attempts to create an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it at the beginning of the list of attributes on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v PrependChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:PrependChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::PrependChild (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an element {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} as a child of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, with the given name at the beginning of the children. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000049" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not all nodes can be added to other nodes, we need to figure it out and put it here. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be created. \par
}
}}
{\xe \v PrependChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:PrependChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::PrependChild ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 {\i Type} = {\f2 NodeElement})}
}\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and makes it a child of this one, and puts at the beginning of the Child Nodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Type} The NodeType of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be added to the beginning list of child Nodes. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} representing the freshly added {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} if there was an error. \par
}}}
{\xe \v PrependCopy\:phys::xml::Node}
{\xe \v phys::xml::Node\:PrependCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 phys::xml::Node::PrependCopy (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i proto})}
}\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and puts the copy at the beginning of this Nodes attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The attribute to be copied.\par
}
This attempts to create a copy of an attribute {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} and stick it at the beginning of the list of attribute on the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. This will fail and return an Empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is neither an Element nor a Declaration. This will fail and return an empty attribute if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} or an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} on Failure. \par
}}}
{\xe \v PrependCopy\:phys::xml::Node}
{\xe \v phys::xml::Node\:PrependCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 phys::xml::Node::PrependCopy (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i proto})}
}\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} and puts the copy at the start of the list of this Nodes Childrem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proto} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to be copied. If this is emptry, no work is performed. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The copied {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}}}
{\xe \v Print\:phys::xml::Node}
{\xe \v phys::xml::Node\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::xml::Node::Print ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}
 & {\i WriterInstance}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto}, unsigned int {\i Depth} = {\f2 0}) const}
}\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output the XML document using a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WriterInstance} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}} that will be used to output the xml text. \par
{\i indent} The Character(s) used to represent a tab in the output, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}}. \par
{\i DocumentEncoding} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 xml::Encoding}}} of the document, whichs defaults to EncodingAuto \par
{\i Depth} This defaults to 0. The amount of times to prepend the indentation to the beginning of each output line.\par
}
This will never write a Byte Order Mark(BOM), and will default to not outputing a document declaration. \par
}}
{\xe \v Print\:phys::xml::Node}
{\xe \v phys::xml::Node\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::xml::Node::Print (std::basic_ostream< wchar_t, std::char_traits< wchar_t > > & {\i os}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, unsigned int {\i Depth} = {\f2 0}) const}
}\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output the XML document using a Output Stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i os} An output stream to send xml text to. \par
{\i indent} The Character(s) used to represent a tab in the outpput, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}} \par
{\i Depth} This defaults to 0. The amount of times to prepend the indentation to the beginning of each output line.\par
}
This will never write a Byte Order Mark(BOM), and will default to not outputing a document declaration. \par
}}
{\xe \v Print\:phys::xml::Node}
{\xe \v phys::xml::Node\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::xml::Node::Print (std::basic_ostream< char, std::char_traits< char > > & {\i os}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i indent} = {\f2 XML_TEXT("\\t")}, unsigned int {\i flags} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 FormatDefault}}}
}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\i DocumentEncoding} = {\f2 EncodingAuto}, unsigned int {\i Depth} = {\f2 0}) const}
}\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output the XML document using a Output Stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i os} An output stream to send xml text to. \par
{\i indent} The Character(s) used to represent a tab in the outpput, this defaults to one tab character. \par
{\i flags} The output format flags, this is a bitfield that defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 xml::FormatDefault}}} \par
{\i DocumentEncoding} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 xml::Encoding}}} of the document, whichs defaults to EncodingAuto \par
{\i Depth} This defaults to 0. The amount of times to prepend the indentation to the beginning of each output line.\par
}
This will never write a Byte Order Mark(BOM), and will default to not outputing a document declaration. \par
}}
{\xe \v RemoveAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:RemoveAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::RemoveAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} as specified by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} to remove. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the removal was successful, false otherwise. \par
}}}
{\xe \v RemoveAttribute\:phys::xml::Node}
{\xe \v phys::xml::Node\:RemoveAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::RemoveAttribute (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i a})}
}\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calls Node::InsertChildBefore(NodeType, Node); using NodeElement as the NodeType. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The desired {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on success, an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} to look for. If the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} doesn't belong to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} then this will fail \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the removal was successful, false otherwise \par
}}}
{\xe \v RemoveChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:RemoveChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::RemoveChild (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i n})}
}\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove specified child element. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to look for. If the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} doesn't belong to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} then this will fail \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the removal was successful, false otherwise \par
}}}
{\xe \v RemoveChild\:phys::xml::Node}
{\xe \v phys::xml::Node\:RemoveChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Node::RemoveChild (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove child element as specified by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} to remove. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the removal was successful, false otherwise \par
}}}
{\xe \v SetName\:phys::xml::Node}
{\xe \v phys::xml::Node\:SetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::SetName (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i rhs})}
}\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The desired name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} cannot store a name or there is not enough memory. \par
}}}
{\xe \v SetValue\:phys::xml::Node}
{\xe \v phys::xml::Node\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::Node::SetValue (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i rhs})}
}\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of this. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The new Value. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if successful, returns false if this is empty or there is not enough memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000040" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid update this to make the error return code redundant and use an exception instead. \par
Review for possiblity of buffer overflow. \par
}
}}
{\xe \v Traverse\:phys::xml::Node}
{\xe \v phys::xml::Node\:Traverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Traverse ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker}}}
 & {\i walker})}
}\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i walker} Any class that fully implement xml::Treewalker. This is where the algorithm to be run is located. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if every descendant {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} was iterated through, false if it didn't go through every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 xml::TreeWalker}}} \par
}}}
{\xe \v Type\:phys::xml::Node}
{\xe \v phys::xml::Node\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Type () const}
}\par
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identify what kind of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}  identifying this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, or o/NULL if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
}}}
{\xe \v Value\:phys::xml::Node}
{\xe \v phys::xml::Node\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::Node::Value () const}
}\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Value of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns A pointer to a const c-style array of the the character type (usually char or wchar_t) containing the value. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid returns "" if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is empty. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _GetRoot\:phys::xml::Node}
{\xe \v phys::xml::Node\:_GetRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJC" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node::_GetRoot}}}
{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores pointers to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} data and some metadata. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 474 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::NodeIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Child node iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}). }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef ptrdiff_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJF" }{}}{\fldrslt {\cs37\ul\cf2 difference_type}}}
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJG" }{}}{\fldrslt {\cs37\ul\cf2 value_type}}}
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJH" }{}}{\fldrslt {\cs37\ul\cf2 pointer}}}
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJI" }{}}{\fldrslt {\cs37\ul\cf2 reference}}}
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef std::bidirectional_iterator_tag {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJJ" }{}}{\fldrslt {\cs37\ul\cf2 iterator_category}}}
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An Iterator trait. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJK" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 (){\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor, makes a blank iterator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJL" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an iterator which points to the specified node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJM" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 &rhs) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} for equality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJN" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 &rhs) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} for inequality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJO" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deferences this Iterator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJP" }{}}{\fldrslt {\cs37\ul\cf2 operator->}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pointer the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this points to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJQ" }{}}{\fldrslt {\cs37\ul\cf2 operator++}}}
 (){\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the iterator to the next member of the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJR" }{}}{\fldrslt {\cs37\ul\cf2 operator++}}}
 (int)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the iterator to the next member of the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJS" }{}}{\fldrslt {\cs37\ul\cf2 operator--}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJT" }{}}{\fldrslt {\cs37\ul\cf2 operator--}}}
 (int)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Node}{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Child node iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIU" }{}}{\fldrslt {\cs37\ul\cf2 Node::begin()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIW" }{}}{\fldrslt {\cs37\ul\cf2 Node::attributes_begin()}}} return iterators that point to the first node/attribute, respectively; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIV" }{}}{\fldrslt {\cs37\ul\cf2 Node::end()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIX" }{}}{\fldrslt {\cs37\ul\cf2 Node::attributes_end()}}} return past-the-end iterator for node/attribute list, respectively - this iterator can't be dereferenced, but decrementing it results in an iterator pointing to the last element in the list (except for empty lists, where decrementing past-the-end iterator results in undefined behavior). Past-the-end iterator is commonly used as a termination value for iteration loops. If you want to get an iterator that points to an existing handle, you can construct the iterator with the handle as a single constructor argument, like so: xml_node_iterator(node). For xml_attribute_iterator, you'll have to provide both an attribute and its parent node.\par\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIU" }{}}{\fldrslt {\cs37\ul\cf2 Node::begin()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIV" }{}}{\fldrslt {\cs37\ul\cf2 Node::end()}}} return equal iterators if called on null {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}; such iterators can't be dereferenced. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIW" }{}}{\fldrslt {\cs37\ul\cf2 Node::attributes_begin()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIX" }{}}{\fldrslt {\cs37\ul\cf2 Node::attributes_end()}}} behave the same way. For correct iterator usage this means that child node/attribute collections of null nodes appear to be empty.\par\par Both types of iterators have bidirectional iterator semantics (i.e. they can be incremented and decremented, but efficient random access is not supported) and support all usual iterator operations - comparison, dereference, etc. The iterators are invalidated if the node/attribute objects they're pointing to are removed from the tree; adding nodes/attributes does not invalidate any iterators. \par
}{
Definition at line 833 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NodeIterator\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:NodeIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::NodeIterator (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an iterator which points to the specified node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i node} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that this iterator will point to. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v operator!=\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 & {\i rhs}) const}
}\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The Right Hand Side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid False if the internal data stored in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} refers to is the same as the metadata in the other NodeIterator's {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, True otherwise. \par
}}}
{\xe \v operator*\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator* ()}
}\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deferences this Iterator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} reference to the node pointed at by this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}. \par
}}}
{\xe \v operator++\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator++ (int)}
}\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the iterator to the next member of the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}. \par
}}}
{\xe \v operator--\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator--}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator-- ()}
}\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}. \par
}}}
{\xe \v operator--\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator--}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator-- (int)}
}\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the iterator to the next member of the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}. \par
}}}
{\xe \v operator->\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator-> ()}
}\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pointer the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this points to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} references. \par
}}}
{\xe \v operator==\:phys::xml::NodeIterator}
{\xe \v phys::xml::NodeIterator\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::NodeIterator::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}}
 & {\i rhs}) const}
}\par
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} to another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} for equality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rhs} The Right Hand Side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the internal data stored in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 NodeIterator}}} refers to is the same as the metadata in the other NodeIterator's {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}, false otherwise. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodeStruct Class Reference\par \pard\plain 
{\tc\tcl2 \v NodeStruct}
{\xe \v NodeStruct}
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal data storage structure used in a Node. }}\par
{
{\f2 #include <xmldoc.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The internal data storage structure used in a Node. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Not part of the API, subject to change without warning. \par
}\par}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ObjectReference Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ObjectReference}
{\xe \v phys::ObjectReference}
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a small class used to store a reference to a world object. }}\par
{
{\f2 #include <objectreference.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 ObjectReference}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 WorldObjectType}}}
 &TheType, void *TheObject)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 ~ObjectReference}}}
 (){\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 WorldObjectType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of object this class references. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOV" }{}}{\fldrslt {\cs37\ul\cf2 GetObject}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the object this class references. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 WorldObjectType}}}
 {\b Type}{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b Object}{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a small class used to store a reference to a world object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is primarily used with internal structures. \par
}{
Definition at line 53 of file objectreference.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ObjectReference\:phys::ObjectReference}
{\xe \v phys::ObjectReference\:ObjectReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ObjectReference::ObjectReference (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 WorldObjectType}}}
 & {\i TheType}, void * {\i TheObject}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TheType} The type of object this class is storing. \par
{\i TheObject} The object to be stored. \par
}
}{
Definition at line 62 of file objectreference.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetObject\:phys::ObjectReference}
{\xe \v phys::ObjectReference\:GetObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* phys::ObjectReference::GetObject (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the object this class references. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a void pointer pointing to the object this class references. \par
}}{
Definition at line 71 of file objectreference.h.}\par
}
{\xe \v GetType\:phys::ObjectReference}
{\xe \v phys::ObjectReference\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 WorldObjectType}}}
 phys::ObjectReference::GetType (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of object this class references. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value indicating what type of object this class references. \par
}}{
Definition at line 68 of file objectreference.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
objectreference.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::ParseResult Struct Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::ParseResult}
{\xe \v phys::xml::ParseResult}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All the information needed to troubleshoot a Parsing error. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKS" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult}}}
 (){\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor, initializes object to failed state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKT" }{}}{\fldrslt {\cs37\ul\cf2 operator bool}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cast to bool operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKU" }{}}{\fldrslt {\cs37\ul\cf2 Description}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text description of the error situation, if any exists. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 ParseStatus}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKV" }{}}{\fldrslt {\cs37\ul\cf2 Status}}}
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parsing status ( see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 ParseStatus}}}  ). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ptrdiff_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKW" }{}}{\fldrslt {\cs37\ul\cf2 Offset}}}
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Last parsed offset (in char_t units from start of input data). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKX" }{}}{\fldrslt {\cs37\ul\cf2 DocumentEncoding}}}
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source document encoding ( see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 Encoding}}}  ). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All the information needed to troubleshoot a Parsing error. \par
}{
Definition at line 966 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Description\:phys::xml::ParseResult}
{\xe \v phys::xml::ParseResult\:Description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* phys::xml::ParseResult::Description () const}
}\par
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text description of the error situation, if any exists. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A const char* with a brief error description based on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKV" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult::Status}}} \par
}}}
{\xe \v operator bool\:phys::xml::ParseResult}
{\xe \v phys::xml::ParseResult\:operator bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::ParseResult::operator bool () const}
}\par
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cast to bool operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns true if the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKV" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult::Status}}} member is set to ParseStatus::StatusOk, otherwise this returns false. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ParticleEffect Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ParticleEffect}
{\xe \v phys::ParticleEffect}
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions. }}\par
{
{\f2 #include <particleeffect.h>}}\par
Inheritance diagram for phys::ParticleEffect:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d69/classphys_1_1ParticleEffect.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Template, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOZ" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 (Ogre::ParticleSystem *System, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPA" }{}}{\fldrslt {\cs37\ul\cf2 ~ParticleEffect}}}
 (){\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this particle effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPC" }{}}{\fldrslt {\cs37\ul\cf2 EnableParticleEffect}}}
 (){\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the particle effect, allowing it to render. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPD" }{}}{\fldrslt {\cs37\ul\cf2 DisableParticleEffect}}}
 (){\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the particle effect, preventing it from rendering. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::ParticleSystem * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPE" }{}}{\fldrslt {\cs37\ul\cf2 OgreParticle}}}
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the ogre ParticleSystem from which this class gets it's functionality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::SceneNode * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 OgreNode}}}
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the ogre Scenenode to which this object is attached. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPG" }{}}{\fldrslt {\cs37\ul\cf2 Manager}}}
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the manager that created this class. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b WorldNode}{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Particle effects are loaded from particle scripts which are contained in particle files(*.particle). \par Note: If attaching a particle effect to a node, all transform information(position and orientation) becomes relative to the nodes transform. \par
}{
Definition at line 64 of file particleeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ParticleEffect\:phys::ParticleEffect}
{\xe \v phys::ParticleEffect\:ParticleEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ParticleEffect::ParticleEffect (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Template}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\i manager})}
}\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this particle effect. \par
{\i Template} Name of the particle script to be used in creating this particle effect. \par
{\i manager} Pointer to the manager that this particle effect is to be used in. \par
}
}{
Definition at line 45 of file particleeffect.cpp.}\par
}
{\xe \v ParticleEffect\:phys::ParticleEffect}
{\xe \v phys::ParticleEffect\:ParticleEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ParticleEffect::ParticleEffect (Ogre::ParticleSystem * {\i System}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\i manager})}
}\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor should not be called on manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i System} Pointer to the Ogre ParticleSystem this class is based on. \par
{\i manager} Pointer to the manager that this particle effect is to be used in. \par
}
}{
Definition at line 55 of file particleeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetName\:phys::ParticleEffect}
{\xe \v phys::ParticleEffect\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::ParticleEffect::GetName () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this particle effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name given to this particle effect. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVX" }{}}{\fldrslt {\cs37\ul\cf2 phys::Attachable}}}
.}\par
{
Definition at line 71 of file particleeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
particleeffect.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
particleeffect.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::PhysicsManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::PhysicsManager}
{\xe \v phys::PhysicsManager}
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the Physics Related functions. }}\par
{
{\f2 #include <physicsmanager.h>}}\par
Inheritance diagram for phys::PhysicsManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/dcc/classphys_1_1PhysicsManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPI" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPJ" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &GeographyLowerBounds_, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &GeographyUpperbounds_, const unsigned short int &MaxPhysicsProxies_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This configures the Physics Manager to work with the Graphic settings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKQ" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Physics stepping during the main loop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPK" }{}}{\fldrslt {\cs37\ul\cf2 ~PhysicsManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPL" }{}}{\fldrslt {\cs37\ul\cf2 SetGravity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 pgrav)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPM" }{}}{\fldrslt {\cs37\ul\cf2 GetGravity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gravity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPN" }{}}{\fldrslt {\cs37\ul\cf2 SetSoftGravity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 sgrav)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity for soft bodies. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPO" }{}}{\fldrslt {\cs37\ul\cf2 GetSoftGravity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the soft body gravity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPP" }{}}{\fldrslt {\cs37\ul\cf2 SetIndividualGravity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 igrav)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity to be applied to a single object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPQ" }{}}{\fldrslt {\cs37\ul\cf2 SetDebugPhysicsRendering}}}
 (int ToBeEnabled)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables and Disables Physics Debug Drawing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPR" }{}}{\fldrslt {\cs37\ul\cf2 GetDebugPhysicsRendering}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is Physics Debug Drawing currently enabled? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPS" }{}}{\fldrslt {\cs37\ul\cf2 SetDebugPhysicsWireCount}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 WireFrameCount_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How many Wireframes do you want drawn from previous events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPT" }{}}{\fldrslt {\cs37\ul\cf2 GetDebugPhysicsWireCount}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets how many WireFrames are being drawn. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPU" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &TimeElapsed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This does all the work reuired for the main loop to process physics. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPV" }{}}{\fldrslt {\cs37\ul\cf2 GetActorOffset}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 &OffsetInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the offset between a point and an actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPW" }{}}{\fldrslt {\cs37\ul\cf2 AddConstraint}}}
 (TypedConstraint *Constraint)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a constraint to the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RemoveConstraint}}}
 (TypedConstraint *Constraint)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a constraint from the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 StorePhysicsShape}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &ShapeName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an already generated physics shape. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPZ" }{}}{\fldrslt {\cs37\ul\cf2 ApplyPhysicsShape}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &ShapeName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies a previously stored shape. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQA" }{}}{\fldrslt {\cs37\ul\cf2 AddAreaEffect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 *AE)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an area effect to the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQB" }{}}{\fldrslt {\cs37\ul\cf2 RemoveAreaEffect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 *AE)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an area effect from the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQC" }{}}{\fldrslt {\cs37\ul\cf2 GetAreaEffect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Area Effect by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQD" }{}}{\fldrslt {\cs37\ul\cf2 SetCollisionParams}}}
 (const unsigned short int Age, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Force)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Collision Parameters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQE" }{}}{\fldrslt {\cs37\ul\cf2 GetCollisionAge}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Collision Age limit. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 GetImpulse}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Collision Impulse limit. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
btSoftRigidDynamicsWorld * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 GetPhysicsWorldPointer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a pointer to the bullet physics world. This is for internal use only. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKW" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the Physics Related functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a place for storing items related to Debug physics drawing, Adding constraints, screwing with gravity and doing other physics Related features. \par
}{
Definition at line 79 of file physicsmanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PhysicsManager\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:PhysicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::PhysicsManager::PhysicsManager ()}
}\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor will assign some sane default values and will create a physics world that can be used immediately \par
}{
Definition at line 265 of file physicsmanager.cpp.}\par
}
{\xe \v PhysicsManager\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:PhysicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::PhysicsManager::PhysicsManager (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i GeographyLowerBounds_}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i GeographyUpperbounds_}, const unsigned short int & {\i MaxPhysicsProxies_})}
}\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor will assign some sane default values and will create a physics world that can be used immediately {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GeographyLowerBounds_} This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} will loosely represent the lower right conrer of the world \par
{\i GeographyUpperbounds_} This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} will loosely represent the upper left conrer of the world \par
{\i MaxPhysicsProxies_} This approximates the maximum amount of items allowed in the physics world \par
}
}{
Definition at line 270 of file physicsmanager.cpp.}\par
}
{\xe \v ~PhysicsManager\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:~PhysicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::PhysicsManager::~PhysicsManager (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This deletes all those crazy pointers that Bullet, the physics subsystem need. \par
}{
Definition at line 275 of file physicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddAreaEffect\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:AddAreaEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::AddAreaEffect ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 * {\i AE})}
}\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an area effect to the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an area effect to the world so that it can/will take effect. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AE} The area effect to be added. \par
}
}{
Definition at line 513 of file physicsmanager.cpp.}\par
}
{\xe \v AddConstraint\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:AddConstraint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::AddConstraint (TypedConstraint * {\i Constraint})}
}\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a constraint to the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the constraint to the world so that it can/will take effect. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Constraint} The constraint to be added. \par
}
}{
Definition at line 503 of file physicsmanager.cpp.}\par
}
{\xe \v ApplyPhysicsShape\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:ApplyPhysicsShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::ApplyPhysicsShape ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i ShapeName})}
}\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies a previously stored shape. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will take a stored shape and apply it to the actor provided. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Actor} The actor to which you want to apply the shape. \par
{\i ShapeName} The name of the shape you wish to have applied to the actor. \par
}
}{
Definition at line 561 of file physicsmanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Physics stepping during the main loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This increments the the physics world the required amount to keep it in sync with the Graphics/Timing. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 347 of file physicsmanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::DoMainLoopItems (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i TimeElapsed})}
}\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This does all the work reuired for the main loop to process physics. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TimeElapsed} This is a real that represents the amount of time we need to simulate \par
}
}{
Definition at line 352 of file physicsmanager.cpp.}\par
}
{\xe \v GetActorOffset\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetActorOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::PhysicsManager::GetActorOffset (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 & {\i OffsetInfo})}
}\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the offset between a point and an actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the offset between the specified world point and the specified actors center of mass. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OffsetInfo} The vector and actor to compare for offset data. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the actors offset from the world point. \par
}}{
Definition at line 490 of file physicsmanager.cpp.}\par
}
{\xe \v GetAreaEffect\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetAreaEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 * phys::PhysicsManager::GetAreaEffect ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Name})}
}\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Area Effect by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the named area effect if it is stored. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the area effect to find. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the named area effect. \par
}}{
Definition at line 531 of file physicsmanager.cpp.}\par
}
{\xe \v GetCollisionAge\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetCollisionAge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short int phys::PhysicsManager::GetCollisionAge ()}
}\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Collision Age limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the CollisionAge used in filtering out collision contacts used to make events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will return the number of physics ticks the collision has to have existed to be used. \par
}}{
Definition at line 573 of file physicsmanager.cpp.}\par
}
{\xe \v GetDebugPhysicsRendering\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetDebugPhysicsRendering}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::PhysicsManager::GetDebugPhysicsRendering ()}
}\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is Physics Debug Drawing currently enabled? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
lets you check if Physics Debug Drawing is enabled or not. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1 for it is on, and 0 for it is not. The may be other options later for selectively cnacking certain features \par
}}{
Definition at line 465 of file physicsmanager.cpp.}\par
}
{\xe \v GetDebugPhysicsWireCount\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetDebugPhysicsWireCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::PhysicsManager::GetDebugPhysicsWireCount ()}
}\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets how many WireFrames are being drawn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will tell you how many frames worth of previous in game events are being drawn. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns either 2 or the last amount passed into World::SetDebugPhysicsWireCount . \par
}}{
Definition at line 480 of file physicsmanager.cpp.}\par
}
{\xe \v GetGravity\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::PhysicsManager::GetGravity ()}
}\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gravity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently set world gravity. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the currently set world gravity. \par
}}{
Definition at line 426 of file physicsmanager.cpp.}\par
}
{\xe \v GetImpulse\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetImpulse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::PhysicsManager::GetImpulse ()}
}\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Collision Impulse limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Collision Impulse used in filtering out collision contacts used to make events. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will return the lower limit of the allowed force of the collision to generate an event. \par
}}{
Definition at line 578 of file physicsmanager.cpp.}\par
}
{\xe \v GetPhysicsWorldPointer\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetPhysicsWorldPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btSoftRigidDynamicsWorld * phys::PhysicsManager::GetPhysicsWorldPointer ()}
}\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a pointer to the bullet physics world. This is for internal use only. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 485 of file physicsmanager.cpp.}\par
}
{\xe \v GetSoftGravity\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetSoftGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::PhysicsManager::GetSoftGravity ()}
}\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the soft body gravity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the currently set soft body world gravity. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the currently set soft body world gravity. \par
}}{
Definition at line 437 of file physicsmanager.cpp.}\par
}
{\xe \v GetType\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::PhysicsManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::PhysicsManager \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 584 of file physicsmanager.cpp.}\par
}
{\xe \v Initialize\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This configures the Physics Manager to work with the Graphic settings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This configures the Physics manager to work with the existing graphics settings. This must be called before the physics manager is used, but after the graphics have been initialized \par
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000018" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Possibly restructure this so that it'll detect ogre first, preventing a crash. At current this makes the physics manager depend on the graphicsmanager. \par
}
}}\par
{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 338 of file physicsmanager.cpp.}\par
}
{\xe \v RemoveAreaEffect\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:RemoveAreaEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::RemoveAreaEffect ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 AreaEffect}}}
 * {\i AE})}
}\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an area effect from the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an area effect from the world so that it will have no effect. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i AE} The area effect to be removed. \par
}
}{
Definition at line 519 of file physicsmanager.cpp.}\par
}
{\xe \v RemoveConstraint\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:RemoveConstraint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::RemoveConstraint (TypedConstraint * {\i Constraint})}
}\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a constraint from the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a constraint from the world so that it will have no effect. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Constraint} The constraint to be removed. \par
}
}{
Definition at line 508 of file physicsmanager.cpp.}\par
}
{\xe \v SetCollisionParams\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:SetCollisionParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::SetCollisionParams (const unsigned short int {\i Age}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Force})}
}\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Collision Parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Collision Age and Force Filters used in filtering out collision contacts used to make events. The lower these numbers, the more events will be generated. \par These numbers both default to 1. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Age} The number of physics ticks the collision has to have existed to be used. Usually you want 1 or 2. Default: 1 \par
{\i Force} The amount of force applied in the collision to filter by. This amount can vary more then the other param based on what you need. Default: 1.0 \par
}
}{
Definition at line 567 of file physicsmanager.cpp.}\par
}
{\xe \v SetDebugPhysicsRendering\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:SetDebugPhysicsRendering}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::SetDebugPhysicsRendering (int {\i ToBeEnabled})}
}\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables and Disables Physics Debug Drawing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables and Disables Physics Debug Drawing using default wireframes. This will force renderings that match the physics subsytem pixel for pixel. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeEnabled} 1 to turn it on, 0 to turn it off. There may be other options in the future, to enable fine tuned control \par
}
}{
Definition at line 455 of file physicsmanager.cpp.}\par
}
{\xe \v SetDebugPhysicsWireCount\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:SetDebugPhysicsWireCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::SetDebugPhysicsWireCount ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i WireFrameCount_})}
}\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How many Wireframes do you want drawn from previous events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Each frame of the action gets its own wire frame, and how many of those back did you want to see? To see a minimal amount set this to 2, as the first wireframe is commonly entirely inside the the rendered 3d mesh. You can use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 World::GetTargetFrameTime()}}} In conjunction with this to specify an amout of seconds worth of wireframes. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WireFrameCount_} This is a whole number that is the amount of wire frames you wan to see. Don't forget to be mindful of the framerate, Any amount more than just a few seconds worth can be cumbersome. \par
}
}{
Definition at line 475 of file physicsmanager.cpp.}\par
}
{\xe \v SetGravity\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:SetGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::SetGravity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i pgrav})}
}\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the strength and direction of gravity within the world. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pgrav} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the strength and direction of gravity. \par
}
}{
Definition at line 421 of file physicsmanager.cpp.}\par
}
{\xe \v SetIndividualGravity\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:SetIndividualGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::SetIndividualGravity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i igrav})}
}\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity to be applied to a single object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does not change the global gravity, only how gravity behaves for this specific object. Note: This function only works on ActorRigid's. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Actor} The actor whos gravity is to be changed. \par
{\i igrav} The value of the gravity to be applied. \par
}
}{
Definition at line 443 of file physicsmanager.cpp.}\par
}
{\xe \v SetSoftGravity\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:SetSoftGravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::SetSoftGravity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i sgrav})}
}\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gravity for soft bodies. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gravity for soft bodies is stored separately from rigid bodies. So if you plan to use soft bodies in your game/simulation you need to call this function otherwise they won't fall. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sgrav} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} representing the strength and direction of gravity. \par
}
}{
Definition at line 432 of file physicsmanager.cpp.}\par
}
{\xe \v StorePhysicsShape\:phys::PhysicsManager}
{\xe \v phys::PhysicsManager\:StorePhysicsShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::PhysicsManager::StorePhysicsShape ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i ShapeName})}
}\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an already generated physics shape. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will take an actors physics shape and store it for re-use in other actors, in case a shape is able to be re-used by other actors. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Actor} The actor from which to store the shape. \par
{\i ShapeName} The name you wish to assign to the shape being stored. \par
}
}{
Definition at line 555 of file physicsmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physicsmanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physicsmanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Plane Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Plane}
{\xe \v phys::Plane}
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a flat infinite slice of the game world. }}\par
{
{\f2 #include <plane.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQI" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQJ" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Normal_, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Distance_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thorough constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQK" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 (Ogre::Plane Plane_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compatibily constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQL" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &rkPoint0, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &rkPoint1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &rkPoint2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triangle constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Plane {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQM" }{}}{\fldrslt {\cs37\ul\cf2 GetOgrePlane}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Ogre::Plane that contains this Plane's information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 ExtractOgrePlane}}}
 (const Ogre::Plane &Plane2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}} to match the Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQO" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const Ogre::Plane &Plane2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The assignment operator from Ogre::Plane to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 phys::Plane}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQP" }{}}{\fldrslt {\cs37\ul\cf2 Normal}}}
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rotation of the plane. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 Distance}}}
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How from from the origin the plane is. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a flat infinite slice of the game world. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Normal value represents how rotated the plane will be, and The Distance with represent how far you need to move down a line perpendicular to the plane, (ie the normal, which is defined by the Normal value) from the Origin. \par
}{
Definition at line 62 of file plane.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Plane\:phys::Plane}
{\xe \v phys::Plane\:Plane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Plane::Plane ()}
}\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This create a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}} with gimbals 0,0,0 and 0 distance from the Origin \par
}{
Definition at line 58 of file plane.cpp.}\par
}
{\xe \v Plane\:phys::Plane}
{\xe \v phys::Plane\:Plane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Plane::Plane ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Normal_}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Distance_})}
}\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thorough constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This accepts 2 Vector3s and uses them to build the ray {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Normal_} The rotation of the plane \par
{\i Distance_} Distance from origin to the plane \par
}
}{
Definition at line 61 of file plane.cpp.}\par
}
{\xe \v Plane\:phys::Plane}
{\xe \v phys::Plane\:Plane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Plane::Plane (Ogre::Plane {\i Plane_}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compatibily constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This accepts an Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}, (graphics subsystem) to make this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Plane_} This is the Ogre::Plane \par
}
}{
Definition at line 64 of file plane.cpp.}\par
}
{\xe \v Plane\:phys::Plane}
{\xe \v phys::Plane\:Plane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Plane::Plane (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i rkPoint0}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i rkPoint1}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i rkPoint2})}
}\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triangle constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This determines the plane the triangle this resides on and uses that plane here {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rkPoint0} This is one point in the triangle \par
{\i rkPoint1} This is another point in the triangle \par
{\i rkPoint2} This is one point in the triangle \par
}
}{
Definition at line 67 of file plane.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExtractOgrePlane\:phys::Plane}
{\xe \v phys::Plane\:ExtractOgrePlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Plane::ExtractOgrePlane (const Ogre::Plane & {\i Plane2})}
}\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}} to match the Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to aid interopability, this will result in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}} exactly matching the Ogre::Plane {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Plane2} The Ogre::Plane to copy \par
}
}{
Definition at line 81 of file plane.cpp.}\par
}
{\xe \v GetOgrePlane\:phys::Plane}
{\xe \v phys::Plane\:GetOgrePlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Plane phys::Plane::GetOgrePlane () const}
}\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Ogre::Plane that contains this Plane's information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to aid interopability, this will return a fresh Ogre::Plane with the same data as this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}} \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns an Ogre::Plnae that contains the same information as this Plane's information \par
}}{
Definition at line 78 of file plane.cpp.}\par
}
{\xe \v operator=\:phys::Plane}
{\xe \v phys::Plane\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Plane::operator= (const Ogre::Plane & {\i Plane2})}
}\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The assignment operator from Ogre::Plane to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 phys::Plane}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this simply call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 phys::Plane::ExtractOgrePlane}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Plane2} The Ogre::Plane to take data from. \par
}
}{
Definition at line 87 of file plane.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
plane.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
plane.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Quaternion Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Quaternion}
{\xe \v phys::Quaternion}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about rotation in 3d space. }}\par
{
{\f2 #include <quaternion.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQR" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blank Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &x, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &y, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &z, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &w)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQT" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 (const btQuaternion &Theirs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQU" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 (const Ogre::Quaternion &Theirs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
btQuaternion {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletQuaternion}}}
 (bool normalize=false) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Bullet quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQX" }{}}{\fldrslt {\cs37\ul\cf2 ExtractBulletQuaternion}}}
 (const btQuaternion &Ours)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Bullet quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Quaternion {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreQuaternion}}}
 (bool normalize=false) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Ogre quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQZ" }{}}{\fldrslt {\cs37\ul\cf2 ExtractOgreQuaternion}}}
 (const Ogre::Quaternion &Ours)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Ogre quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRB" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const Ogre::Quaternion &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRC" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const btQuaternion &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRD" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRE" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const Ogre::Quaternion &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRF" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const btQuaternion &Other) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRG" }{}}{\fldrslt {\cs37\ul\cf2 operator+=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 operator+=}}}
 (const Ogre::Quaternion &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRI" }{}}{\fldrslt {\cs37\ul\cf2 operator+=}}}
 (const btQuaternion &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRJ" }{}}{\fldrslt {\cs37\ul\cf2 operator-=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRK" }{}}{\fldrslt {\cs37\ul\cf2 operator-=}}}
 (const Ogre::Quaternion &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 operator-=}}}
 (const btQuaternion &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRM" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const Ogre::Quaternion &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator from Ogre::Quaternion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRO" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const btQuaternion &Other)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator from btQuaternion. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRP" }{}}{\fldrslt {\cs37\ul\cf2 X}}}
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotation on the X Axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRQ" }{}}{\fldrslt {\cs37\ul\cf2 Y}}}
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotation on the Y Axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 Z}}}
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotation on the Z Axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 W}}}
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotation on the W Axis. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about rotation in 3d space. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to store information about rotation in 3d space. The X, Y and Z are used to identify a ray from the origin (0,0,0), about which W represents an amount of rotation. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid The Documentation for this class needs to be revised. It describes 2 mutually exclusive means of storing \par
}}{
Definition at line 63 of file quaternion.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Quaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:Quaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Quaternion::Quaternion ()}
}\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blank Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic no-initialization constructor. \par
}{
Definition at line 52 of file quaternion.cpp.}\par
}
{\xe \v Quaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:Quaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Quaternion::Quaternion (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i x}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i y}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i z}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i w})}
}\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all four axis' of rotation. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Rotation on the X Axis. \par
{\i y} Rotation on the Y Axis. \par
{\i z} Rotation on the Z Axis. \par
{\i w} Rotation on the W Axis. \par
}
}{
Definition at line 60 of file quaternion.cpp.}\par
}
{\xe \v Quaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:Quaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Quaternion::Quaternion (const btQuaternion & {\i Theirs}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all values to match the Bullet quaternion. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Theirs} The quaternion to be copied to make this quaternion. \par
}
}{
Definition at line 68 of file quaternion.cpp.}\par
}
{\xe \v Quaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:Quaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Quaternion::Quaternion (const Ogre::Quaternion & {\i Theirs}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all values to match the Ogre quaternion. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Theirs} The quaternion to be copied to make this quaternion. \par
}
}{
Definition at line 71 of file quaternion.cpp.}\par
}
{\xe \v Quaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:Quaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Quaternion::Quaternion (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to copy \par
}
}{
Definition at line 74 of file quaternion.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExtractBulletQuaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:ExtractBulletQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Quaternion::ExtractBulletQuaternion (const btQuaternion & {\i Ours})}
}\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Bullet quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will copy the values stored in an existing Bullet quaternion and set the values of this class to be the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Ours} The quaternion to be extracted. \par
}
}{
Definition at line 97 of file quaternion.cpp.}\par
}
{\xe \v ExtractOgreQuaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:ExtractOgreQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Quaternion::ExtractOgreQuaternion (const Ogre::Quaternion & {\i Ours})}
}\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Ogre quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will copy the values stored in an existing Ogre quaternion and set the values of this class to be the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Ours} The quaternion to be extracted. \par
}
}{
Definition at line 117 of file quaternion.cpp.}\par
}
{\xe \v GetBulletQuaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:GetBulletQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btQuaternion phys::Quaternion::GetBulletQuaternion (bool {\i normalize} = {\f2 false}) const}
}\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Bullet quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Bullet quaternion with values equal to this class and returns it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i normalize} Whether or not you want this function to normalize the quaternion for you. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A btQuaternion that has the same contents as this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. \par
}}{
Definition at line 85 of file quaternion.cpp.}\par
}
{\xe \v GetOgreQuaternion\:phys::Quaternion}
{\xe \v phys::Quaternion\:GetOgreQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Quaternion phys::Quaternion::GetOgreQuaternion (bool {\i normalize} = {\f2 false}) const}
}\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Ogre quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Ogre quaternion with values equal to this class and returns it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i normalize} Whether or not you want this function to normalize the quaternion for you. \par
}
}{
Definition at line 105 of file quaternion.cpp.}\par
}
{\xe \v operator+\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Quaternion::operator+ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to add to this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the sum. \par
}}{
Definition at line 128 of file quaternion.cpp.}\par
}
{\xe \v operator+\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Quaternion::operator+ (const Ogre::Quaternion & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to add to this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the sum. \par
}}{
Definition at line 131 of file quaternion.cpp.}\par
}
{\xe \v operator+\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Quaternion::operator+ (const btQuaternion & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to add to this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the sum. \par
}}{
Definition at line 134 of file quaternion.cpp.}\par
}
{\xe \v operator+=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator+= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to add to this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the sum. \par
}}{
Definition at line 149 of file quaternion.cpp.}\par
}
{\xe \v operator+=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator+= (const Ogre::Quaternion & {\i Other})}
}\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to add to this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the sum. \par
}}{
Definition at line 158 of file quaternion.cpp.}\par
}
{\xe \v operator+=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator+= (const btQuaternion & {\i Other})}
}\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to add to this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the sum. \par
}}{
Definition at line 167 of file quaternion.cpp.}\par
}
{\xe \v operator-\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Quaternion::operator- (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to subtract from this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the difference. \par
}}{
Definition at line 137 of file quaternion.cpp.}\par
}
{\xe \v operator-\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Quaternion::operator- (const Ogre::Quaternion & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to subtract from this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the difference. \par
}}{
Definition at line 140 of file quaternion.cpp.}\par
}
{\xe \v operator-\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::Quaternion::operator- (const btQuaternion & {\i Other}) const}
}\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to subtract from this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the difference. \par
}}{
Definition at line 143 of file quaternion.cpp.}\par
}
{\xe \v operator-=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator-= (const btQuaternion & {\i Other})}
}\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and btQuaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to subtract from this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the difference. \par
}}{
Definition at line 194 of file quaternion.cpp.}\par
}
{\xe \v operator-=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator-= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to subtract from this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the difference. \par
}}{
Definition at line 176 of file quaternion.cpp.}\par
}
{\xe \v operator-=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator-= (const Ogre::Quaternion & {\i Other})}
}\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrementing operator with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} and Ogre::Quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Other} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} to subtract from this one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}} with the difference. \par
}}{
Definition at line 185 of file quaternion.cpp.}\par
}
{\xe \v operator=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator= (const btQuaternion & {\i Other})}
}\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator from btQuaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Other The other quaternion to overwrite this one. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} after being assigned fresh values. \par
}}{
Definition at line 213 of file quaternion.cpp.}\par
}
{\xe \v operator=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator= (const Ogre::Quaternion & {\i Other})}
}\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator from Ogre::Quaternion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Other The other quaternion to overwrite this one. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} after being assigned fresh values. \par
}}{
Definition at line 219 of file quaternion.cpp.}\par
}
{\xe \v operator=\:phys::Quaternion}
{\xe \v phys::Quaternion\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 & phys::Quaternion::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}
 & {\i Other})}
}\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 phys::Quaternion}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Other The other quaternion to overwrite this one. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} after being assigned fresh values. \par
}}{
Definition at line 205 of file quaternion.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
quaternion.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
quaternion.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Ray Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Ray}
{\xe \v phys::Ray}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to indicate a line with one end. }}\par
{
{\f2 #include <ray.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRT" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRU" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 From_, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 To_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thorough constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRV" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 (Ogre::Ray Ray2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compatibily constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Ray {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRW" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreRay}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Ogre::Ray that contains this Rays information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRX" }{}}{\fldrslt {\cs37\ul\cf2 Length}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Measures the distance distance of this ray. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 GetNormal}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the normal for this ray. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRY" }{}}{\fldrslt {\cs37\ul\cf2 Normalize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turns this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} into its own normal. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRZ" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a ray lengthened by the given multiple. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSA" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a ray scaled by the given divisor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSB" }{}}{\fldrslt {\cs37\ul\cf2 operator*=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This lengthens the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} by the given multiple. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSC" }{}}{\fldrslt {\cs37\ul\cf2 operator/=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This scales the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} by the given divisor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSD" }{}}{\fldrslt {\cs37\ul\cf2 From}}}
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The origin point of the Vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSE" }{}}{\fldrslt {\cs37\ul\cf2 To}}}
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A point on the line of the ray. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to indicate a line with one end. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently this is just a collection of two vector3s with a couple of constructors. \par
}{
Definition at line 60 of file ray.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Ray\:phys::Ray}
{\xe \v phys::Ray\:Ray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Ray::Ray ()}
}\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This create a ray starting at 0,0,0 pointing to 0,1,0, \par
}{
Definition at line 58 of file ray.cpp.}\par
}
{\xe \v Ray\:phys::Ray}
{\xe \v phys::Ray\:Ray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Ray::Ray ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i From_}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i To_})}
}\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thorough constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This accepts 2 Vector3s and uses them to build the ray {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i From_} The origin fo the new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} \par
{\i To_} A point along the line for the destination line. \par
}
}{
Definition at line 63 of file ray.cpp.}\par
}
{\xe \v Ray\:phys::Ray}
{\xe \v phys::Ray\:Ray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Ray::Ray (Ogre::Ray {\i Ray2})}
}\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compatibily constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This accepts an Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}, (graphics subsystem) to make ray {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Ray2} This is the Ogre::Ray \par
}
}{
Definition at line 69 of file ray.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetNormal\:phys::Ray}
{\xe \v phys::Ray\:GetNormal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 phys::Ray::GetNormal () const}
}\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the normal for this ray. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get a ray that is 1 unit in length with the same From point as this ray, pointing in the same direction as this ray. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid At a ray that is the normal for this array \par
}}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000019" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid discuss the merits throwing an error here. \par
}
}}\par
{
Definition at line 97 of file ray.cpp.}\par
}
{\xe \v GetOgreRay\:phys::Ray}
{\xe \v phys::Ray\:GetOgreRay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Ray phys::Ray::GetOgreRay () const}
}\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an Ogre::Ray that contains this Rays information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to aid interopability, this will return afresh Ogre::Ray with the same data as this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns an Ogre::Ray that contains the same information as this rays information \par
}}{
Definition at line 78 of file ray.cpp.}\par
}
{\xe \v Length\:phys::Ray}
{\xe \v phys::Ray\:Length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Ray::Length () const}
}\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Measures the distance distance of this ray. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This uses the distance method of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} to determine the current length of this ray. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a real value which contains the length \par
}}{
Definition at line 92 of file ray.cpp.}\par
}
{\xe \v Normalize\:phys::Ray}
{\xe \v phys::Ray\:Normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Ray::Normalize ()}
}\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turns this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} into its own normal. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will change the ray to be exactly 1 unit long, but pointing the same direction. \par
}{
Definition at line 110 of file ray.cpp.}\par
}
{\xe \v operator*\:phys::Ray}
{\xe \v phys::Ray\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 phys::Ray::operator* (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar}) const}
}\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a ray lengthened by the given multiple. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a ray changed in length by the amount in the scalar. Specifically this subracts the From value out of the To value, then multiplies the To value by the scalar, then adds the from value back in. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a copy of the ray scaled by the requested amount. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} The amount to multiply by. \par
}
}{
Definition at line 124 of file ray.cpp.}\par
}
{\xe \v operator*=\:phys::Ray}
{\xe \v phys::Ray\:operator*=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Ray::operator*= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar})}
}\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This lengthens the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} by the given multiple. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This ray ischanged in length by the amount in the scalar. Specifically this subracts the From value out of the To value, then multiplies the To value by the scalar, then adds the from value back in. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} The amount to multiply by. \par
}
}{
Definition at line 140 of file ray.cpp.}\par
}
{\xe \v operator/\:phys::Ray}
{\xe \v phys::Ray\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 phys::Ray::operator/ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar}) const}
}\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns a ray scaled by the given divisor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns an ray divided in length by the amount in the scalar. Specifically this subracts the From value out of the To value, then divides the To value by the scalar, then adds the from value back in. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a copy of the ray scaled by the requested amount. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} The amount to divide by. \par
}
}{
Definition at line 132 of file ray.cpp.}\par
}
{\xe \v operator/=\:phys::Ray}
{\xe \v phys::Ray\:operator/=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Ray::operator/= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar})}
}\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This scales the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} by the given divisor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This ray is divided in length by the amount in the scalar. Specifically this subracts the From value out of the To value, then divides the To value by the scalar, then adds the from value back in. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} The amount to divide by. \par
}
}{
Definition at line 145 of file ray.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
ray.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
ray.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Rectangle Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle}
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use with background sprites and colours. }}\par
{
{\f2 #include <uirectangle.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXV" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXW" }{}}{\fldrslt {\cs37\ul\cf2 ~Rectangle}}}
 (){\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXX" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXY" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXZ" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this rectangle to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYA" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this rectangle to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYB" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the mouse is over this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYC" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stored value of whether or not the mouse is over the rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYD" }{}}{\fldrslt {\cs37\ul\cf2 SetBackgroundColour}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background colour of the rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYE" }{}}{\fldrslt {\cs37\ul\cf2 SetBackgroundSprite}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background image(if provided in the atlas) of the rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYF" }{}}{\fldrslt {\cs37\ul\cf2 SetBorder}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 &Colour)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables a border and sets it's colour. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYG" }{}}{\fldrslt {\cs37\ul\cf2 NoBorder}}}
 (){\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables any border set on this rectangle if one is currently set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYH" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYI" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYJ" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this rectangle in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYK" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this rectangle in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYL" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYM" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYN" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this rectangle in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYO" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this rectangle in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYP" }{}}{\fldrslt {\cs37\ul\cf2 SetRenderPriority}}}
 (UI::RenderPriority Priority)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual UI::RenderPriority {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYQ" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Rectangle * {\b GRectangle}{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\b Parent}{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelPosition}{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelSize}{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b MouseHover}{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class, specifically for use with background sprites and colours. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlike a button, this class cannot be interacted with by clicking. It is important to understand what you want your space to do when selecting the class to use. \par
}{
Definition at line 68 of file uirectangle.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Rectangle\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:Rectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Rectangle::Rectangle (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The top left position of the rectangle. \par
{\i Size} The size of the rectangle. \par
{\i Layer} Pointer to the parent Layer that created this rectangle. \par
}
}{
Definition at line 57 of file uirectangle.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Rectangle::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the mouse is over this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool indicating whether the mouse is over this rectangle. \par
}}{
Definition at line 94 of file uirectangle.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Rectangle::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this rectangle in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this rectangle. \par
}}{
Definition at line 151 of file uirectangle.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Rectangle::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this rectangle in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this rectangle. \par
}}{
Definition at line 176 of file uirectangle.cpp.}\par
}
{\xe \v GetMouseHover\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:GetMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Rectangle::GetMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stored value of whether or not the mouse is over the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does not perform any checks. If you want to do a manual check, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYB" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the stored value of whether or not the mouse is over the rectangle. \par
}}{
Definition at line 108 of file uirectangle.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Rectangle::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this rectangle. \par
}}{
Definition at line 141 of file uirectangle.cpp.}\par
}
{\xe \v GetRenderPriority\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:GetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UI::RenderPriority phys::UI::Rectangle::GetRenderPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing this button's priority level. \par
}}{
Definition at line 202 of file uirectangle.cpp.}\par
}
{\xe \v GetSize\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Rectangle::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this rectangle. \par
}}{
Definition at line 165 of file uirectangle.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Rectangle::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this rectangle. \par
}}{
Definition at line 79 of file uirectangle.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this rectangle in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this rectangle. \par
}
}{
Definition at line 146 of file uirectangle.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this rectangle in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this rectangle. \par
}
}{
Definition at line 170 of file uirectangle.cpp.}\par
}
{\xe \v SetBackgroundColour\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetBackgroundColour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetBackgroundColour (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background colour of the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} A colour value representing the colour to be set. \par
}
}{
Definition at line 113 of file uirectangle.cpp.}\par
}
{\xe \v SetBackgroundSprite\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetBackgroundSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetBackgroundSprite (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the background image(if provided in the atlas) of the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the sprite to set as the background. \par
}
}{
Definition at line 118 of file uirectangle.cpp.}\par
}
{\xe \v SetBorder\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetBorder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetBorder (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 ColourValue}}}
 & {\i Colour}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables a border and sets it's colour. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Colour} A colour value representing the colour to be set. \par
}
}{
Definition at line 124 of file uirectangle.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this rectangle. \par
}
}{
Definition at line 134 of file uirectangle.cpp.}\par
}
{\xe \v SetRenderPriority\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetRenderPriority (UI::RenderPriority {\i Priority}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default value for this is Medium. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Priority} The priority level to be used when rendering this button. \par
}
}{
Definition at line 182 of file uirectangle.cpp.}\par
}
{\xe \v SetSize\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this rectangle. \par
}
}{
Definition at line 157 of file uirectangle.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::Rectangle}
{\xe \v phys::UI::Rectangle\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Rectangle::SetVisible (bool {\i Visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visible} Bool determining whether or not this rectangle should be visible. \par
}
}{
Definition at line 74 of file uirectangle.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uirectangle.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uirectangle.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::ResizingInfo< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::ResizingInfo}
{\xe \v phys::UI::ResizingInfo}
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper struct for use in resizing UI containers. }}\par
{
{\f2 #include <uiresizinginfo.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYX" }{}}{\fldrslt {\cs37\ul\cf2 ResizingInfo}}}
 (T TheObject, UI::ResizeableAnchor RA, UI::ResizeableTether RT, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Off)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYY" }{}}{\fldrslt {\cs37\ul\cf2 ~ResizingInfo}}}
 (){\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

T {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYZ" }{}}{\fldrslt {\cs37\ul\cf2 Object}}}
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class this template applies to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UI::ResizeableAnchor {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZA" }{}}{\fldrslt {\cs37\ul\cf2 Anchor}}}
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How the object's position is anchored to the container on a resize. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UI::ResizeableTether {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZB" }{}}{\fldrslt {\cs37\ul\cf2 Tether}}}
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How the object's size is tethered to the container on a resize. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZC" }{}}{\fldrslt {\cs37\ul\cf2 Offset}}}
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The objects offset from the containers position. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T> struct phys::UI::ResizingInfo< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper struct for use in resizing UI containers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This struct contains all the information necessary to define complete behavior of repositioning and resizing child UI elements in a container. \par
}{
Definition at line 57 of file uiresizinginfo.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ResizingInfo\:phys::UI::ResizingInfo}
{\xe \v phys::UI::ResizingInfo\:ResizingInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ResizingInfo}}}
< T >::{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 ResizingInfo}}}
 (T {\i TheObject}, UI::ResizeableAnchor {\i RA}, UI::ResizeableTether {\i RT}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Off}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TheObject} The object to be stored and all the following info applies to. \par
{\i RA} The Resize Anchor, see enum for more info. \par
{\i RT} The Resize Tether, see enum for more info. \par
{\i Off} The objects offset from the container position. \par
}
}{
Definition at line 73 of file uiresizinginfo.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiresizinginfo.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ResourceInputStream Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ResourceInputStream}
{\xe \v phys::ResourceInputStream}
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A stream from a file, can read from zip files as well. }}\par
{
{\f2 #include <resourceinputstream.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSF" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}}
 (std::streambuf *InputBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}
 *ResourceManager_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSG" }{}}{\fldrslt {\cs37\ul\cf2 ~ResourceInputStream}}}
 (){\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tears down the Stream, and Delete the Buffer Passed in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSH" }{}}{\fldrslt {\cs37\ul\cf2 Readable}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Can this be read from. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 Writeable}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Can this be written to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class T > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}}
 & {\b operator>>} (T &Data){\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A stream from a file, can read from zip files as well. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid This currently only supports reading from the stream, and does not support any pointer navigation, or any other non-reading functions \par
}}{
Definition at line 63 of file resourceinputstream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ResourceInputStream\:phys::ResourceInputStream}
{\xe \v phys::ResourceInputStream\:ResourceInputStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ResourceInputStream::ResourceInputStream (std::streambuf * {\i InputBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}
 * {\i ResourceManager_}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InputBuffer} A pointer to an internal::OgreDataStreamBuf. A buffer to read from the disk access subsystem (which happens to be part of Ogre). This Stream will assume ownership of this buffer and will handle deleting it. \par
{\i ResourceManager_} Currently unused, future functionality may tuse this. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Do not delete the InputBuffer you pass in, this class will assume owner ship and delete it on it's own \par
}}{
Definition at line 82 of file resourceinputstream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Readable\:phys::ResourceInputStream}
{\xe \v phys::ResourceInputStream\:Readable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ResourceInputStream::Readable ()}
}\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Can this be read from. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A bool true if it can be read from \par
}}{
Definition at line 77 of file resourceinputstream.cpp.}\par
}
{\xe \v Writeable\:phys::ResourceInputStream}
{\xe \v phys::ResourceInputStream\:Writeable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ResourceInputStream::Writeable ()}
}\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Can this be written to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A bool true if it can be written to \par
}}{
Definition at line 82 of file resourceinputstream.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
resourceinputstream.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
resourceinputstream.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::ResourceManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::ResourceManager}
{\xe \v phys::ResourceManager}
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager responsible for the loading and unloading of files. }}\par
{
{\f2 #include <resourcemanager.h>}}\par
Inheritance diagram for phys::ResourceManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d35/classphys_1_1ResourceManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 ~ResourceManager}}}
 ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 ExportShapeData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &FileName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exports an actors shape data to a file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 ImportShapeData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &FileName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imports serialized shape data from the disk to be used in an Actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSO" }{}}{\fldrslt {\cs37\ul\cf2 AddResourceLocation}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Location, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Type, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Group, const bool &recursive=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a location for graphical resources. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSP" }{}}{\fldrslt {\cs37\ul\cf2 DeclareResource}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Type, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Group)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares the resource for use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSQ" }{}}{\fldrslt {\cs37\ul\cf2 InitResourceGroup}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes a resource group ready to use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSR" }{}}{\fldrslt {\cs37\ul\cf2 ParseMaterialScripts}}}
 (){\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses all Ogre Material scripts. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSS" }{}}{\fldrslt {\cs37\ul\cf2 GetResourceStream}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &FileName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a stream to read from the specified file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKR" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKX" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABST" }{}}{\fldrslt {\cs37\ul\cf2 ApplyShapeToActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, btCollisionShape *ColShape){\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies a saved shape to an Actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b AddResourceGroupName} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Name){\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::ResourceGroupManager * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 OgreResource}}}
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates the functionality of the ogre resource group manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSW" }{}}{\fldrslt {\cs37\ul\cf2 DeleteList}}}
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of Pointers to streams created to delete periodically. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 > {\b ResourceGroups}{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the manager responsible for the loading and unloading of files. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for the reading and writing of files of all kinds, be it graphical meshes, physics data, or XMl files. \par
}{
Definition at line 68 of file resourcemanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ResourceManager\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:ResourceManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ResourceManager::ResourceManager ()}
}\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard manager constructor. \par
}{
Definition at line 61 of file resourcemanager.cpp.}\par
}
{\xe \v ~ResourceManager\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:~ResourceManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::ResourceManager::~ResourceManager ()}
}\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. \par
}{
Definition at line 68 of file resourcemanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddResourceLocation\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:AddResourceLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ResourceManager::AddResourceLocation (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Location}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Type}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Group}, const bool & {\i recursive} = {\f2 false})}
}\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a location for graphical resources. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will add a location on the disk to find files needed to create and manipulate graphical objects. Once a resource is added it must be initalized using ResourceManager::InitResourceGroup(String Group). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Location} The location on the file system the resource can be found. \par
{\i Type} The kind of file system the location can be found in. \par Options are: filesystem, zip. \par
{\i Group} The name of the group the resources at this location belong to. \par
{\i recursive} Whether or not to search sub-directories. \par
}
}{
Definition at line 168 of file resourcemanager.cpp.}\par
}
{\xe \v DeclareResource\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:DeclareResource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ResourceManager::DeclareResource (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Type}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Group})}
}\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares the resource for use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function can be thought of as a preloader. This will prepare the defined resource located on the disk for use. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} Name of the file/resource to be 'prepared'. \par
{\i Type} The type of resource that the file is. \par Options are: Font, GpuProgram, HighLevelGpuProgram, Material, Mesh, Skeleton, Texture. \par
{\i Group} Name of the group the resource belongs to. \par
}
}{
Definition at line 174 of file resourcemanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ResourceManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class implements this for the sake of entension and compatibility this function does nothing. This is just empty during this round of refactoring, and this will get all the functionality that currently should be here, but is in the world. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 215 of file resourcemanager.cpp.}\par
}
{\xe \v ExportShapeData\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:ExportShapeData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ResourceManager::ExportShapeData ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i FileName})}
}\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exports an actors shape data to a file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i FileName} The Filename to save the data too. Remember to include a ".bullet" extension to the filename when serializing. \par
{\i Actor} The Actor's Shape to save \par
}
}{
Definition at line 106 of file resourcemanager.cpp.}\par
}
{\xe \v GetResourceStream\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:GetResourceStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}}
 * phys::ResourceManager::GetResourceStream (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i FileName})}
}\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a stream to read from the specified file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i FileName} The name of the File you want to stream data from \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An derivative of std::istream a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}} that will pull it's data from the desired resource\par
}The returned {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 ResourceInputStream}}} is the Caller's responsibility to deal with. If it is not deleted it is a memory leak. \par
}{
Definition at line 197 of file resourcemanager.cpp.}\par
}
{\xe \v GetType\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::ResourceManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::ResourceManager \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 219 of file resourcemanager.cpp.}\par
}
{\xe \v ImportShapeData\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:ImportShapeData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::ResourceManager::ImportShapeData ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i FileName})}
}\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imports serialized shape data from the disk to be used in an Actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i FileName} The Filename to load the data from. Remember to include a ".bullet" extension to the filename when serializing. \par
{\i Actor} The Actor's Shape to restore from file \par
}
}{
Definition at line 126 of file resourcemanager.cpp.}\par
}
{\xe \v Initialize\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ResourceManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions inherited from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}\par
This specific initializor is unneeded, but we implement it for compatibility. It also exists in case a derived class wants to override it for some reason. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 211 of file resourcemanager.cpp.}\par
}
{\xe \v InitResourceGroup\:phys::ResourceManager}
{\xe \v phys::ResourceManager\:InitResourceGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::ResourceManager::InitResourceGroup (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes a resource group ready to use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After adding all of your resources and declaring them as nessessary, this function is the final step. After calling this function any and all resources within the defined group will be ready to use. Do not initialize any more groups then you need to however, as that will take up memory and drop performance. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} Name of the resource group. \par
}
}{
Definition at line 179 of file resourcemanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
resourcemanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
resourcemanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::SceneManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::SceneManager}
{\xe \v phys::SceneManager}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains utilities and functions to allow the manipulation of the Graphical scene, rather then the physics inside, or the object inside. }}\par
{
{\f2 #include <scenemanager.h>}}\par
Inheritance diagram for phys::SceneManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da8/classphys_1_1SceneManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SceneManagerType} \{ {\b Generic}, 
{\b Exterior}, 
{\b ExteriorRealFar}, 
{\b Interior}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSY" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 (SceneManager::SceneManagerType ManagerType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSZ" }{}}{\fldrslt {\cs37\ul\cf2 ~SceneManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 (){\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 (){\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTA" }{}}{\fldrslt {\cs37\ul\cf2 CreateSkyPlane}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 &SkyPlane, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Material, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Group, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Scale=1000.0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Tiling=10.0, bool DrawFirst=true, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Bow=0, int XSegments=1, int YSegments=1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a skyplane for use in making a sky. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTB" }{}}{\fldrslt {\cs37\ul\cf2 DisableSkyPlane}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the currently active skyplane. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTC" }{}}{\fldrslt {\cs37\ul\cf2 CreateSkyBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Material, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Group, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Distance, bool DrawFirst=true, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Orientation={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
())\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a skybox for use in making a sky. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTD" }{}}{\fldrslt {\cs37\ul\cf2 DisableSkyBox}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the currently active skybox. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTE" }{}}{\fldrslt {\cs37\ul\cf2 CreateSkyDome}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Material, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Group, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Distance, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Curvature=10.0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Tiling=8.0, bool DrawFirst=true, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Orientation={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
(), int XSegments=16, int YSegments=16)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a skydome for use in making a sky. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTF" }{}}{\fldrslt {\cs37\ul\cf2 DisableSkyDome}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the currently active skydome. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 SetAmbientLight}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Red=1.0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Green=1.0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Blue=1.0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Alpha=1.0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the ambient light for the scene. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTH" }{}}{\fldrslt {\cs37\ul\cf2 CreateLight}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a dynamic light. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTI" }{}}{\fldrslt {\cs37\ul\cf2 GetLight}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created light by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTJ" }{}}{\fldrslt {\cs37\ul\cf2 GetLight}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created light by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTK" }{}}{\fldrslt {\cs37\ul\cf2 GetNumLights}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of lights created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTL" }{}}{\fldrslt {\cs37\ul\cf2 DestroyLight}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 *light)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a light and removes all trace of it from the manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTM" }{}}{\fldrslt {\cs37\ul\cf2 CreateParticleEffect}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Template)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a particle effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTN" }{}}{\fldrslt {\cs37\ul\cf2 GetParticleEffect}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created particle effect by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTO" }{}}{\fldrslt {\cs37\ul\cf2 GetParticleEffect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created particle effect by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTP" }{}}{\fldrslt {\cs37\ul\cf2 GetNumParticleEffects}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of particle effects created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTQ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyParticleEffect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 *particleeffect)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a particle effect and removes all trace of it from the manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTR" }{}}{\fldrslt {\cs37\ul\cf2 CreateOrbitingNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Target, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 RelativeLoc, bool AutoTrack)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a node that will orbit around a point. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTS" }{}}{\fldrslt {\cs37\ul\cf2 CreateStandNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 LookAt, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a stationary node that will look at a location. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTT" }{}}{\fldrslt {\cs37\ul\cf2 GetNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created node by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTU" }{}}{\fldrslt {\cs37\ul\cf2 GetNode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created node by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTV" }{}}{\fldrslt {\cs37\ul\cf2 GetNumNodes}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of nodes created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 GetNumStandNodes}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of stand type nodes created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTX" }{}}{\fldrslt {\cs37\ul\cf2 GetNumOrbitNodes}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of orbit type nodes created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 DestroyNode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 *node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a node and removes all trace of it from the manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTZ" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of manager that this manager is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::SceneManager * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUA" }{}}{\fldrslt {\cs37\ul\cf2 GetGraphicsWorldPointer}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal Ogre Scene Manager pointer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::SceneManager * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUB" }{}}{\fldrslt {\cs37\ul\cf2 OgreManager}}}
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer for the Ogre Scenemanager, where this manager gets it's functionality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUC" }{}}{\fldrslt {\cs37\ul\cf2 WorldNodes}}}
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vector storing all the nodes in use by this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUD" }{}}{\fldrslt {\cs37\ul\cf2 Lights}}}
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vector storing all the lights in use by this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 Particles}}}
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vector storing all the particle effects in use by this class. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains utilities and functions to allow the manipulation of the Graphical scene, rather then the physics inside, or the object inside. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains functions that allow the manipulation of lighting, skyboxes, internal scenemanager types, and more. \par
}{
Definition at line 69 of file scenemanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SceneManager\:phys::SceneManager}
{\xe \v phys::SceneManager\:SceneManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SceneManager::SceneManager (SceneManager::SceneManagerType {\i ManagerType})}
}\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard class initialization constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ManagerType} Type of Scene Manager to be created. \par
}
}{
Definition at line 52 of file scenemanager.cpp.}\par
}
{\xe \v ~SceneManager\:phys::SceneManager}
{\xe \v phys::SceneManager\:~SceneManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SceneManager::~SceneManager ()}
}\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 75 of file scenemanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateLight\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateLight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * phys::SceneManager::CreateLight (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a dynamic light. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name to be given to this light. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the light class which was created by this function. \par
}}{
Definition at line 139 of file scenemanager.cpp.}\par
}
{\xe \v CreateOrbitingNode\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateOrbitingNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * phys::SceneManager::CreateOrbitingNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Target}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i RelativeLoc}, bool {\i AutoTrack})}
}\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a node that will orbit around a point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will create 2 nodes in the scene, the first being the point in the world you want to orbit the second node around. The second being the node that does the orbiting. You can then attach a light, particle effect, or ribbon trail to the orbiting node . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Target} The location of the first node which you will be orbiting around. \par
{\i RelativeLoc} The location of the node that will be in orbit relative to the first node. Assume the first node is at Origin (0,0,0). \par
}
}{
Definition at line 236 of file scenemanager.cpp.}\par
}
{\xe \v CreateParticleEffect\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateParticleEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * phys::SceneManager::CreateParticleEffect (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Template})}
}\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a particle effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Particle effects are useful when trying to create visual effects for rain, smoke, explosions, fireworks, etc.. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name to be given to this particle effect. \par
{\i Template} The particle script (from a .particle file) to base this particle effect on. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the particle effect class which was created by this function. \par
}}{
Definition at line 185 of file scenemanager.cpp.}\par
}
{\xe \v CreateSkyBox\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateSkyBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::CreateSkyBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Material}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Group}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Distance}, bool {\i DrawFirst} = {\f2 true}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Orientation} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
()})}
}\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a skybox for use in making a sky. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Like skyplanes, only one can exist per scene. Unlike skyplanes, skyboxes will be applied individually to each camera in the scene. The skybox will move with the camera, so as a result the camera will never be able to "touch" the sky. Skyboxes are more performance intensive then skyplanes. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Material} The name of the material to be applied to the skybox. Note: This is not referring to the filename, but the specific material script within the file. \par
{\i Group} The resource group where the material can be found. \par
{\i Distance} The distance from the camera where the skybox is found. This is in world units. \par
{\i DrawFirst} Whether or not the skybox should be the first thing rendered in the scene. Usually you will want this to be true as it'll ensure all other objects are rendered on top of it. \par
{\i Orientation} Optional quaternion to rotate the orientation of the skybox. \par
}
}{
Definition at line 113 of file scenemanager.cpp.}\par
}
{\xe \v CreateSkyDome\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateSkyDome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::CreateSkyDome ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Material}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Group}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Distance}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Curvature} = {\f2 10.0}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Tiling} = {\f2 8.0}, bool {\i DrawFirst} = {\f2 true}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Orientation} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
()}, int {\i XSegments} = {\f2 16}, int {\i YSegments} = {\f2 16})}
}\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a skydome for use in making a sky. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Like the other two types of sky's, their can be only one skydome per scene. Skydomes much like skyboxes, except they have 5 sides(the bottom side is missing), and they bow each of the sides to make the dome. In all other respects they are the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Material} The name of the material to be applied to the skydome. Note: This is not referring to the filename, but the specific material script within the file. \par
{\i Group} The resource group where the material can be found. \par
{\i Distance} The distance from the camera where the skydome is found. This is in world units. \par
{\i Curvature} Curvature of the dome. Usually you want this value to be between 2 and 65. \par
{\i Tiling} The number of times to tile the texture or textures listed in the material script across the skydome. \par
{\i DrawFirst} Whether or not the skybox should be the first thing rendered in the scene. Usually you will want this to be true as it'll ensure all other objects are rendered on top of it. \par
{\i Orientation} Optional quaternion to rotate the orientation of the skydome. \par
{\i XSegments} The number of segments, or boxes, the skydome consists of on the dome's X axis. \par
{\i YSegments} The number of segments, or boxes, the skydome consists of on the dome's Y axis. \par
}
}{
Definition at line 123 of file scenemanager.cpp.}\par
}
{\xe \v CreateSkyPlane\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateSkyPlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::CreateSkyPlane ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 & {\i SkyPlane}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Material}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Group}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Scale} = {\f2 1000.0}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Tiling} = {\f2 10.0}, bool {\i DrawFirst} = {\f2 true}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Bow} = {\f2 0}, int {\i XSegments} = {\f2 1}, int {\i YSegments} = {\f2 1})}
}\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a skyplane for use in making a sky. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only one skyplane can exist in a scene. Making a new one will remove the old one. Skyplanes are flat planes that face in one direction. They are ideal for levels with surrounding mountains or anything where the horizon is not visable. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SkyPlane} The plane that will become the sky. \par
{\i Material} The name of the material to be applied to the skyplane. Note: This is not referring to the filename, but the specific material script within the file. \par
{\i Group} The resource group where the material can be found. \par
{\i Scale} The scaling to be applied to the skyplane. This may need to be tweaked based on how high you set the plane off the ground. \par
{\i Tiling} The number of times to tile the texture or textures listed in the material script across the skyplane. \par
{\i DrawFirst} Whether or not the skyplane should be the first thing rendered in the scene. Usually you will want this to be true as it'll ensure all other objects are rendered on top of it. \par
{\i Bow} This will add curvature to the skyplane if set above zero. Note: Use small numbers. A bow of 1.5 should be noticable. \par
{\i XSegments} The number of segments, or boxes, the skyplane consists of on the planes X axis. This is usful when giving the skyplane a bow. By default the skyplane is just one massive box. \par
{\i YSegments} The number of segments, or boxes, the skyplane consists of on the planes Y axis. This is usful when giving the skyplane a bow. By default the skyplane is just one massive box. \par
}
}{
Definition at line 103 of file scenemanager.cpp.}\par
}
{\xe \v CreateStandNode\:phys::SceneManager}
{\xe \v phys::SceneManager\:CreateStandNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * phys::SceneManager::CreateStandNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i LookAt}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a stationary node that will look at a location. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will create a node that doesn't move, and will look at one location that you specify. This node can then have lights, particle effects, or ribbon trails attached to it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i LookAt} The location you want the node to look at. Automatically handles orientation. \par
{\i Location} The location of the node itself. \par
}
}{
Definition at line 254 of file scenemanager.cpp.}\par
}
{\xe \v DestroyLight\:phys::SceneManager}
{\xe \v phys::SceneManager\:DestroyLight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::DestroyLight ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * {\i light})}
}\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a light and removes all trace of it from the manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i light} The light to be destroyed. \par
}
}{
Definition at line 170 of file scenemanager.cpp.}\par
}
{\xe \v DestroyNode\:phys::SceneManager}
{\xe \v phys::SceneManager\:DestroyNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::DestroyNode ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\i node})}
}\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a node and removes all trace of it from the manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i node} The node to be destroyed. \par
}
}{
Definition at line 321 of file scenemanager.cpp.}\par
}
{\xe \v DestroyParticleEffect\:phys::SceneManager}
{\xe \v phys::SceneManager\:DestroyParticleEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::DestroyParticleEffect ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * {\i particleeffect})}
}\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a particle effect and removes all trace of it from the manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i particleeffect} The particle effect to be destroyed. \par
}
}{
Definition at line 216 of file scenemanager.cpp.}\par
}
{\xe \v DisableSkyBox\:phys::SceneManager}
{\xe \v phys::SceneManager\:DisableSkyBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::DisableSkyBox ()}
}\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the currently active skybox. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using this function effectively deletes the skybox, so you will have to provide a new set of parameters if you wish to re-create the skybox. \par
}{
Definition at line 118 of file scenemanager.cpp.}\par
}
{\xe \v DisableSkyDome\:phys::SceneManager}
{\xe \v phys::SceneManager\:DisableSkyDome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::DisableSkyDome ()}
}\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the currently active skydome. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using this function effectively deletes the skydome, so you will have to provide a new set of parameters if you wish to re-create the skydome. \par
}{
Definition at line 129 of file scenemanager.cpp.}\par
}
{\xe \v DisableSkyPlane\:phys::SceneManager}
{\xe \v phys::SceneManager\:DisableSkyPlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::DisableSkyPlane ()}
}\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the currently active skyplane. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using this function effectively deletes the skyplane, so you will have to provide a new set of parameters if you wish to re-create the skyplane. \par
}{
Definition at line 108 of file scenemanager.cpp.}\par
}
{\xe \v GetGraphicsWorldPointer\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetGraphicsWorldPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::SceneManager * phys::SceneManager::GetGraphicsWorldPointer () const}
}\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal Ogre Scene Manager pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the ogre Scene Manager. \par
}\par}}{
Definition at line 339 of file scenemanager.cpp.}\par
}
{\xe \v GetLight\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetLight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * phys::SceneManager::GetLight (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}) const}
}\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created light by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the light of the specified name. \par
}}{
Definition at line 146 of file scenemanager.cpp.}\par
}
{\xe \v GetLight\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetLight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 Light}}}
 * phys::SceneManager::GetLight ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index}) const}
}\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created light by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the light at the specified index. \par
}}{
Definition at line 160 of file scenemanager.cpp.}\par
}
{\xe \v GetName\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::SceneManager::GetName () const}
}\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the name of this manager. \par
}}{
Definition at line 231 of file scenemanager.cpp.}\par
}
{\xe \v GetNode\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * phys::SceneManager::GetNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}) const}
}\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created node by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the node of the specified name, or 0 if no matching {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}} could be Found. \par
}}{
Definition at line 266 of file scenemanager.cpp.}\par
}
{\xe \v GetNode\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * phys::SceneManager::GetNode ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index}) const}
}\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created node by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the node at the specified index. \par
}}{
Definition at line 281 of file scenemanager.cpp.}\par
}
{\xe \v GetNumLights\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNumLights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SceneManager::GetNumLights () const}
}\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of lights created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of lights this manager is storing. \par
}}{
Definition at line 165 of file scenemanager.cpp.}\par
}
{\xe \v GetNumNodes\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNumNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SceneManager::GetNumNodes () const}
}\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of nodes created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of nodes this manager is storing. \par
}}{
Definition at line 286 of file scenemanager.cpp.}\par
}
{\xe \v GetNumOrbitNodes\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNumOrbitNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SceneManager::GetNumOrbitNodes () const}
}\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of orbit type nodes created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of orbit type nodes this manager is storing. \par
}}{
Definition at line 306 of file scenemanager.cpp.}\par
}
{\xe \v GetNumParticleEffects\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNumParticleEffects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SceneManager::GetNumParticleEffects () const}
}\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of particle effects created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of particle effects this manager is storing. \par
}}{
Definition at line 211 of file scenemanager.cpp.}\par
}
{\xe \v GetNumStandNodes\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetNumStandNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SceneManager::GetNumStandNodes () const}
}\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of stand type nodes created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of stand type nodes this manager is storing. \par
}}{
Definition at line 291 of file scenemanager.cpp.}\par
}
{\xe \v GetParticleEffect\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetParticleEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * phys::SceneManager::GetParticleEffect (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}) const}
}\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created particle effect by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the particle effect of the specified name. \par
}}{
Definition at line 192 of file scenemanager.cpp.}\par
}
{\xe \v GetParticleEffect\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetParticleEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 ParticleEffect}}}
 * phys::SceneManager::GetParticleEffect ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index}) const}
}\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created particle effect by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the particle effect at the specified index. \par
}}{
Definition at line 206 of file scenemanager.cpp.}\par
}
{\xe \v GetType\:phys::SceneManager}
{\xe \v phys::SceneManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::SceneManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of manager that this manager is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing the type of manager that this manager is. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 336 of file scenemanager.cpp.}\par
}
{\xe \v SetAmbientLight\:phys::SceneManager}
{\xe \v phys::SceneManager\:SetAmbientLight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SceneManager::SetAmbientLight ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Red} = {\f2 1.0}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Green} = {\f2 1.0}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Blue} = {\f2 1.0}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Alpha} = {\f2 1.0})}
}\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the ambient light for the scene. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not all scene's will need ambient light. Ambient light is light that hits all objects from all directions. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Red} The value representing the amount of red color in the ambient light. \par
{\i Green} The value representing the amount of green color in the ambient light. \par
{\i Blue} The value representing the amount of blue color in the ambient light. \par
{\i Alpha} The value representing the transparency of the color in the ambient light. \par
}
}{
Definition at line 134 of file scenemanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
scenemanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
scenemanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Scrollbar Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a widget class, to be used alongside any scrollable widget. }}\par
{
{\f2 #include <uiscrollbar.h>}}\par
Inheritance diagram for phys::UI::Scrollbar:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d3e/classphys_1_1UI_1_1Scrollbar.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZD" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, UI::ScrollbarStyle Style, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *parent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZE" }{}}{\fldrslt {\cs37\ul\cf2 ~Scrollbar}}}
 (){\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZF" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this scrollbar. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZG" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this scrollbar. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZH" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this scrollbar to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZI" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this scrollbar to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZJ" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZK" }{}}{\fldrslt {\cs37\ul\cf2 GetScrollerValue}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the currnent scroll position represented by a value between 0 and 1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZL" }{}}{\fldrslt {\cs37\ul\cf2 SetIncrementDistance}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 IncDist)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative distance the scrollbar will move when the up/left or down/right buttons are pressed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZM" }{}}{\fldrslt {\cs37\ul\cf2 SetScrollerSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the length(or height) of the scroller based on the relative size of it's background. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZN" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this widget in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZO" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZP" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZQ" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZR" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZS" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZT" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZU" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZV" }{}}{\fldrslt {\cs37\ul\cf2 GetScroller}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Scroller button within this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZW" }{}}{\fldrslt {\cs37\ul\cf2 GetUpLeftButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the UpLeft button within this widget, if it was initialized. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZX" }{}}{\fldrslt {\cs37\ul\cf2 GetDownRightButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the DownRight button within this widget, if it was initialized. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZY" }{}}{\fldrslt {\cs37\ul\cf2 GetScrollBack}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Scroller background within this widget. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZZ" }{}}{\fldrslt {\cs37\ul\cf2 CreateHorizontalScrollbar}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor helper function for creating a horizontally aligned scrollbar. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAA" }{}}{\fldrslt {\cs37\ul\cf2 CreateVerticalScrollbar}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor helper function for creating a vertically aligned scrollbar. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAB" }{}}{\fldrslt {\cs37\ul\cf2 IsValidDimensions}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the dimensions passed into this object are valid and can be used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAC" }{}}{\fldrslt {\cs37\ul\cf2 SetHorizontal}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the horizontal perameter as necessary based on the size provided for the widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAD" }{}}{\fldrslt {\cs37\ul\cf2 CalculateOffsets}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the relative offsets for the UI elements that make up this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAE" }{}}{\fldrslt {\cs37\ul\cf2 CalculateScrollLimits}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the limits by which the scroller is allowed to move. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAF" }{}}{\fldrslt {\cs37\ul\cf2 CalculateScrollValue}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the scrollbar value based on the scrollers current position. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAG" }{}}{\fldrslt {\cs37\ul\cf2 SetToWithinLimits}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Coord)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a provided coordinate is within the defined limits, and adjusts it if not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAH" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal function for setting the location(position) of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAI" }{}}{\fldrslt {\cs37\ul\cf2 SetArea}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal function for setting the area(size) of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAJ" }{}}{\fldrslt {\cs37\ul\cf2 ButtonScroll}}}
 (bool UpLeft)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scrolls the scroller either up/left or down/right, based on the parameter. For use with buttons. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAK" }{}}{\fldrslt {\cs37\ul\cf2 MouseScroll}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Scroll)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scrolls the scroller either up/left or down/right. For use with the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAL" }{}}{\fldrslt {\cs37\ul\cf2 ScrollBackScroll}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scrolls the scroller either up/left or down/right. For use with the scrollback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAM" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs all the necessary update and automation processes for this widget. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\b Scroller}{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * {\b ScrollBack}{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\b UpLeftButton}{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\b DownRightButton}{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\b HoveredButton}{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * {\b HoveredBack}{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b ScrollBackOffset}{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b UpLeftButtonOffset}{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b DownRightButtonOffset}{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b ScrollerUpperLimit}{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b ScrollerLowerLimit}{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b ScrollerValue}{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\b IncrementDistance}{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UI::ScrollbarStyle {\b ScrollStyle}{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Horizontal}{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ScrollerLock}{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ScrollBackLock}{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b UpLeftLock}{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b DownRightLock}{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBG" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIManager}}}
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a widget class, to be used alongside any scrollable widget. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If you want to have buttons to accompany your scrollbar they'll automatically have their height match the width of the scrollbar if it's vertical, or their width match their height of the scrollbar if it's horizontal, based on the dimensions provided. \par Scrollbars can come in a few styles. Separate is the typical way to present them with the Up or Left button being located at the top of left side of the scroller respectively. Together is where both scroll buttons are next to each other instead of on opposite sides of the scroller. \par
}{
Definition at line 68 of file uiscrollbar.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Scrollbar\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:Scrollbar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Scrollbar::Scrollbar ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, UI::ScrollbarStyle {\i Style}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i parent})}
}\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this scrollbar. \par
{\i Position} A vector2 representing the top left position for this widget to be placed on screen. \par
{\i Size} A vector2 representing the size of this widget. \par
{\i Style} An enum value representing how you want your scrollbar constructed. See class details for more info. \par
{\i parent} The Layer that created this scrollbar. \par
}
}{
Definition at line 55 of file uiscrollbar.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ButtonScroll\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:ButtonScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::ButtonScroll (bool {\i UpLeft}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scrolls the scroller either up/left or down/right, based on the parameter. For use with buttons. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 379 of file uiscrollbar.cpp.}\par
}
{\xe \v CalculateOffsets\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:CalculateOffsets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::CalculateOffsets (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Size}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the relative offsets for the UI elements that make up this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 241 of file uiscrollbar.cpp.}\par
}
{\xe \v CalculateScrollLimits\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:CalculateScrollLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::CalculateScrollLimits (){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the limits by which the scroller is allowed to move. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 285 of file uiscrollbar.cpp.}\par
}
{\xe \v CalculateScrollValue\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:CalculateScrollValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::CalculateScrollValue (){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the scrollbar value based on the scrollers current position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 297 of file uiscrollbar.cpp.}\par
}
{\xe \v CheckMouseHover\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Scrollbar::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this widget, false if it's not. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 568 of file uiscrollbar.cpp.}\par
}
{\xe \v CreateHorizontalScrollbar\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:CreateHorizontalScrollbar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::CreateHorizontalScrollbar (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor helper function for creating a horizontally aligned scrollbar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 96 of file uiscrollbar.cpp.}\par
}
{\xe \v CreateVerticalScrollbar\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:CreateVerticalScrollbar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::CreateVerticalScrollbar (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor helper function for creating a vertically aligned scrollbar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 156 of file uiscrollbar.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Scrollbar::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this widget. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 656 of file uiscrollbar.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Scrollbar::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this widget. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 701 of file uiscrollbar.cpp.}\par
}
{\xe \v GetDownRightButton\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetDownRightButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Scrollbar::GetDownRightButton (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the DownRight button within this widget, if it was initialized. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the DownRight button within this widget, or NULL if none. \par
}}{
Definition at line 716 of file uiscrollbar.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Scrollbar::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this widget. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 645 of file uiscrollbar.cpp.}\par
}
{\xe \v GetScrollBack\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetScrollBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * phys::UI::Scrollbar::GetScrollBack (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Scroller background within this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Scroller background within this widget. \par
}}{
Definition at line 721 of file uiscrollbar.cpp.}\par
}
{\xe \v GetScroller\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetScroller}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Scrollbar::GetScroller (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Scroller button within this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Scroller button within this widget. \par
}}{
Definition at line 706 of file uiscrollbar.cpp.}\par
}
{\xe \v GetScrollerValue\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetScrollerValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::UI::Scrollbar::GetScrollerValue (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the currnent scroll position represented by a value between 0 and 1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For example, if the scroller is halfway down the limits it's allowed, this will return 0.5. \par Like other values, the top and left represent origin(0) values. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the stored scroll position. \par
}}{
Definition at line 612 of file uiscrollbar.cpp.}\par
}
{\xe \v GetSize\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Scrollbar::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this widget. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 679 of file uiscrollbar.cpp.}\par
}
{\xe \v GetUpLeftButton\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:GetUpLeftButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Scrollbar::GetUpLeftButton (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the UpLeft button within this widget, if it was initialized. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the UpLeft button within this widget, or NULL if none. \par
}}{
Definition at line 711 of file uiscrollbar.cpp.}\par
}
{\xe \v IsValidDimensions\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:IsValidDimensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Scrollbar::IsValidDimensions (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Size}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the dimensions passed into this object are valid and can be used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 216 of file uiscrollbar.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Scrollbar::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this scrollbar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this scrollbar. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 541 of file uiscrollbar.cpp.}\par
}
{\xe \v MouseScroll\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:MouseScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::MouseScroll ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Scroll}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scrolls the scroller either up/left or down/right. For use with the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 401 of file uiscrollbar.cpp.}\par
}
{\xe \v ScrollBackScroll\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:ScrollBackScroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::ScrollBackScroll (){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scrolls the scroller either up/left or down/right. For use with the scrollback. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 420 of file uiscrollbar.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this widget. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 650 of file uiscrollbar.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this widget. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 684 of file uiscrollbar.cpp.}\par
}
{\xe \v SetArea\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetArea}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetArea (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Size}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal function for setting the area(size) of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 352 of file uiscrollbar.cpp.}\par
}
{\xe \v SetHorizontal\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetHorizontal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetHorizontal (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Size}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the horizontal perameter as necessary based on the size provided for the widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 229 of file uiscrollbar.cpp.}\par
}
{\xe \v SetIncrementDistance\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetIncrementDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetIncrementDistance (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i IncDist}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative distance the scrollbar will move when the up/left or down/right buttons are pressed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i IncDist} A real representing the amount to increment. Can be negative. \par
}
}{
Definition at line 617 of file uiscrollbar.cpp.}\par
}
{\xe \v SetLocation\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetLocation (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Position}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal function for setting the location(position) of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 330 of file uiscrollbar.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this widget in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par The top and the left are considered the origin, thus values of 0 represent one of these points. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this widget. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 638 of file uiscrollbar.cpp.}\par
}
{\xe \v SetScrollerSize\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetScrollerSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetScrollerSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the length(or height) of the scroller based on the relative size of it's background. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} The relative size you with to set the scroller to. Values range from 0.0 to 1.0. \par
}
}{
Definition at line 622 of file uiscrollbar.cpp.}\par
}
{\xe \v SetSize\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this widget. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 661 of file uiscrollbar.cpp.}\par
}
{\xe \v SetToWithinLimits\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetToWithinLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetToWithinLimits ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Coord}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a provided coordinate is within the defined limits, and adjusts it if not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 311 of file uiscrollbar.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::SetVisible (bool {\i visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this scrollbar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this scrollbar should be visible. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 530 of file uiscrollbar.cpp.}\par
}
{\xe \v Update\:phys::UI::Scrollbar}
{\xe \v phys::UI::Scrollbar\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Scrollbar::Update (bool {\i Force} = {\f2 false}){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs all the necessary update and automation processes for this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBH" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 454 of file uiscrollbar.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiscrollbar.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiscrollbar.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::SimpleTimer Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::SimpleTimer}
{\xe \v phys::SimpleTimer}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A basic timer class that can be used to track short intervals of time. }}\par
{
{\f2 #include <simpletimer.h>}}\par
Inheritance diagram for phys::SimpleTimer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d15/classphys_1_1SimpleTimer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUF" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUG" }{}}{\fldrslt {\cs37\ul\cf2 ~SimpleTimer}}}
 (){\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUH" }{}}{\fldrslt {\cs37\ul\cf2 Reset}}}
 (){\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current value to it's initial value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUI" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoReset}}}
 (const bool AutoReset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether or not the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} should reset if it reaches it's goal. \par Ex. If a stopwatch reaches 0. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUJ" }{}}{\fldrslt {\cs37\ul\cf2 SetCurrentTime}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Current)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUK" }{}}{\fldrslt {\cs37\ul\cf2 SetGoalTime}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Goal)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the goal time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 SetInitialTime}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Initial)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the initial time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUM" }{}}{\fldrslt {\cs37\ul\cf2 GetCurrentTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Current time in Microseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUN" }{}}{\fldrslt {\cs37\ul\cf2 GetGoalTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Goal time in Microseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUO" }{}}{\fldrslt {\cs37\ul\cf2 GetInitialTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Initial time in Microseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUP" }{}}{\fldrslt {\cs37\ul\cf2 GetCurrentTimeInMilli}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Current time in Milliseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUQ" }{}}{\fldrslt {\cs37\ul\cf2 GetGoalTimeInMilli}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Goal time in Milliseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUR" }{}}{\fldrslt {\cs37\ul\cf2 GetInitialTimeInMilli}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Initial time in Milliseconds. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Update} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b UpdateAsNormal} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b UpdateAsStopWatch} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b UpdateAsAlarm} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed){\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b GoalReached} (){\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b CurrentTime}{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b GoalTime}{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\b InitialTime}{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A basic timer class that can be used to track short intervals of time. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This timer class should be used only for shorter periods, such as tracking ability cooldowns or gun fire rates. For longer periods of time look at the EnhancedTimer class. \par
}{
Definition at line 54 of file simpletimer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SimpleTimer\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:SimpleTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SimpleTimer::SimpleTimer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 {\i style})}
}\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Style} The styling/type of timer to be constructed. \par
}
}{
Definition at line 47 of file simpletimer.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetCurrentTime\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:GetCurrentTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SimpleTimer::GetCurrentTime (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Current time in Microseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the current time in Microseconds. \par
}}{
Definition at line 147 of file simpletimer.cpp.}\par
}
{\xe \v GetCurrentTimeInMilli\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:GetCurrentTimeInMilli}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SimpleTimer::GetCurrentTimeInMilli (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Current time in Milliseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the current time in Milliseconds. \par
}}{
Definition at line 162 of file simpletimer.cpp.}\par
}
{\xe \v GetGoalTime\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:GetGoalTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SimpleTimer::GetGoalTime (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Goal time in Microseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the goal time in Microseconds. \par
}}{
Definition at line 152 of file simpletimer.cpp.}\par
}
{\xe \v GetGoalTimeInMilli\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:GetGoalTimeInMilli}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SimpleTimer::GetGoalTimeInMilli (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Goal time in Milliseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the goal time in Milliseconds. \par
}}{
Definition at line 167 of file simpletimer.cpp.}\par
}
{\xe \v GetInitialTime\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:GetInitialTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SimpleTimer::GetInitialTime (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Initial time in Microseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the initial time in Microseconds. \par
}}{
Definition at line 157 of file simpletimer.cpp.}\par
}
{\xe \v GetInitialTimeInMilli\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:GetInitialTimeInMilli}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SimpleTimer::GetInitialTimeInMilli (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Initial time in Milliseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Whole representing the initial time in Milliseconds. \par
}}{
Definition at line 172 of file simpletimer.cpp.}\par
}
{\xe \v SetAutoReset\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:SetAutoReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & phys::SimpleTimer::SetAutoReset (const bool {\i AutoReset}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether or not the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} should reset if it reaches it's goal. \par Ex. If a stopwatch reaches 0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}}{
Definition at line 123 of file simpletimer.cpp.}\par
}
{\xe \v SetCurrentTime\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:SetCurrentTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & phys::SimpleTimer::SetCurrentTime (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Current}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Current} The value to set as current time in Microseconds. \par
}
}{
Definition at line 129 of file simpletimer.cpp.}\par
}
{\xe \v SetGoalTime\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:SetGoalTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & phys::SimpleTimer::SetGoalTime (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Goal}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the goal time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Goal} The value to set as goal time in Microseconds. \par
}
}{
Definition at line 135 of file simpletimer.cpp.}\par
}
{\xe \v SetInitialTime\:phys::SimpleTimer}
{\xe \v phys::SimpleTimer\:SetInitialTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 & phys::SimpleTimer::SetInitialTime (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Initial}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the initial time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to this timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Initial} The value to set as initial time in Microseconds. \par
}
}{
Definition at line 141 of file simpletimer.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
simpletimer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
simpletimer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Sound Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Sound}
{\xe \v phys::Sound}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an instance of a sound that can be played and manipulated. }}\par
{
{\f2 #include <sound.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVA" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. Internal use only. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 (cAudio::IAudioSource *Source, cAudio::IAudioManager *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. Internal use only. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVC" }{}}{\fldrslt {\cs37\ul\cf2 ~Sound}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVD" }{}}{\fldrslt {\cs37\ul\cf2 Play}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVE" }{}}{\fldrslt {\cs37\ul\cf2 Play2d}}}
 (bool Loop=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound in 2D mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVF" }{}}{\fldrslt {\cs37\ul\cf2 Play3d}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 SoundStrength=1.0, bool Loop=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound in 3D mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVG" }{}}{\fldrslt {\cs37\ul\cf2 Pause}}}
 ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVH" }{}}{\fldrslt {\cs37\ul\cf2 Stop}}}
 ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVI" }{}}{\fldrslt {\cs37\ul\cf2 Loop}}}
 (bool ToLoop)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether this sound should loop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 Seek}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Seconds, bool Relative)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows you to go to a specific point in the sound. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVK" }{}}{\fldrslt {\cs37\ul\cf2 GetTotalAudioTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the total size of the sound in seconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVL" }{}}{\fldrslt {\cs37\ul\cf2 GetTotalAudioSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the total size of the sound in memory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVM" }{}}{\fldrslt {\cs37\ul\cf2 GetCompressedAudioSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the original compressed size of the sound. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVN" }{}}{\fldrslt {\cs37\ul\cf2 GetCurrentAudioTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position in the audio stream in seconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVO" }{}}{\fldrslt {\cs37\ul\cf2 GetCurrentAudioPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position in the audio stream in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVP" }{}}{\fldrslt {\cs37\ul\cf2 GetCurrentCompressedAudioPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position in the original audio stream in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVQ" }{}}{\fldrslt {\cs37\ul\cf2 IsPlaying}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVR" }{}}{\fldrslt {\cs37\ul\cf2 IsPaused}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently paused. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVS" }{}}{\fldrslt {\cs37\ul\cf2 IsStopped}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently stopped. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVT" }{}}{\fldrslt {\cs37\ul\cf2 IsLooping}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently set to loop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVU" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVV" }{}}{\fldrslt {\cs37\ul\cf2 SetVelocity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Velocity)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the velocity of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVW" }{}}{\fldrslt {\cs37\ul\cf2 SetDirection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Direction)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the sound source is facing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVX" }{}}{\fldrslt {\cs37\ul\cf2 SetRolloffFactor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Rolloff)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Rolloff factor used to attenuate the sound over a distance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVY" }{}}{\fldrslt {\cs37\ul\cf2 SetStrength}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 SoundStrength)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the strength of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVZ" }{}}{\fldrslt {\cs37\ul\cf2 SetMinDistance}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 MinDistance)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance from the sound source where attenuation will start. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWA" }{}}{\fldrslt {\cs37\ul\cf2 SetMaxDistance}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 MaxDistance)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance from the sound source where attenuation will stop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWB" }{}}{\fldrslt {\cs37\ul\cf2 SetPitch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Pitch)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pitch of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWC" }{}}{\fldrslt {\cs37\ul\cf2 SetVolume}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current volume of the sound source before effects. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWD" }{}}{\fldrslt {\cs37\ul\cf2 SetMinVolume}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 MinVolume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the minimum volume the sound source can achieve. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWE" }{}}{\fldrslt {\cs37\ul\cf2 SetMaxVolume}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 MaxVolume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum volume the sound source can achieve. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWF" }{}}{\fldrslt {\cs37\ul\cf2 SetInnerConeAngle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 InnerAngle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the inner cone angle of the sound source if you want the sound to be projected as a cone. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWG" }{}}{\fldrslt {\cs37\ul\cf2 SetOuterConeAngle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 OuterAngle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the outer cone angle of the sound source if you want the sound to be projected as a cone. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWH" }{}}{\fldrslt {\cs37\ul\cf2 SetOuterConeVolume}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 OuterVolume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets how much the volume is scaled in the outer cone. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWI" }{}}{\fldrslt {\cs37\ul\cf2 SetDopplerStrength}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 DopStr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the doppler strength, which impacts the doppler effect. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWJ" }{}}{\fldrslt {\cs37\ul\cf2 SetDopplerVelocity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Velocity)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the doppler velocity vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWK" }{}}{\fldrslt {\cs37\ul\cf2 Move}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWL" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects position. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWM" }{}}{\fldrslt {\cs37\ul\cf2 GetVelocity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects velocity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWN" }{}}{\fldrslt {\cs37\ul\cf2 GetDirection}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects direction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWO" }{}}{\fldrslt {\cs37\ul\cf2 GetRolloffFactor}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Rolloff factor of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWP" }{}}{\fldrslt {\cs37\ul\cf2 GetStrength}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Strength of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWQ" }{}}{\fldrslt {\cs37\ul\cf2 GetMinDistance}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the distance at which sound attenuation will start. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 GetMaxDistance}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the distance at which sound attenuation will stop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWS" }{}}{\fldrslt {\cs37\ul\cf2 GetPitch}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pitch of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWT" }{}}{\fldrslt {\cs37\ul\cf2 GetVolume}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current volume of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWU" }{}}{\fldrslt {\cs37\ul\cf2 GetMinVolume}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the minimum volume of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWV" }{}}{\fldrslt {\cs37\ul\cf2 GetMaxVolume}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Maximum volume of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 GetInnerConeAngle}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the inner cone angle of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWX" }{}}{\fldrslt {\cs37\ul\cf2 GetOuterConeAngle}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the outer cone angle of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWY" }{}}{\fldrslt {\cs37\ul\cf2 GetOuterConeVolume}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the outer cone volume of the sound source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWZ" }{}}{\fldrslt {\cs37\ul\cf2 GetDopplerStrength}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Doppler Strength of the sound. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXA" }{}}{\fldrslt {\cs37\ul\cf2 GetDopplerVelocity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the doppler velocity vector. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

cAudio::IAudioSource * {\b SoundSource}{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

cAudio::IAudioManager * {\b Manager}{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b SoundManager}{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an instance of a sound that can be played and manipulated. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a an instance of a sound that can be played, have effects applied to it, paused, stopped, triggered and other such crazyness. \par
}{
Definition at line 62 of file sound.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Sound\:phys::Sound}
{\xe \v phys::Sound\:Sound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Sound::Sound ()}
}\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. Internal use only. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class costructor. Should not be called manually, use the sound manager instead. \par
}}
{\xe \v Sound\:phys::Sound}
{\xe \v phys::Sound\:Sound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Sound::Sound (cAudio::IAudioSource * {\i Source}, cAudio::IAudioManager * {\i manager})}
}\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. Internal use only. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class costructor. Should not be called manually, use the sound manager instead. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Source} Pointer to the sound source. \par
}
}{
Definition at line 48 of file sound.cpp.}\par
}
{\xe \v ~Sound\:phys::Sound}
{\xe \v phys::Sound\:~Sound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Sound::~Sound ()}
}\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 54 of file sound.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetCompressedAudioSize\:phys::Sound}
{\xe \v phys::Sound\:GetCompressedAudioSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::Sound::GetCompressedAudioSize ()}
}\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the original compressed size of the sound. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the compressed size of the sound. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real that is the original compressed size. \par
}}{
Definition at line 104 of file sound.cpp.}\par
}
{\xe \v GetCurrentAudioPosition\:phys::Sound}
{\xe \v phys::Sound\:GetCurrentAudioPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::Sound::GetCurrentAudioPosition ()}
}\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position in the audio stream in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current position of the sound in the audio stream. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current position in the audio stream in bytes. \par
}}{
Definition at line 114 of file sound.cpp.}\par
}
{\xe \v GetCurrentAudioTime\:phys::Sound}
{\xe \v phys::Sound\:GetCurrentAudioTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetCurrentAudioTime ()}
}\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position in the audio stream in seconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current position of the sound in the audio stream. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current position in the audio stream in seconds. \par
}}{
Definition at line 109 of file sound.cpp.}\par
}
{\xe \v GetCurrentCompressedAudioPosition\:phys::Sound}
{\xe \v phys::Sound\:GetCurrentCompressedAudioPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::Sound::GetCurrentCompressedAudioPosition ()}
}\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position in the original audio stream in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current position of the sound in the original audio stream. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current position in the original audio stream in bytes. \par
}}{
Definition at line 119 of file sound.cpp.}\par
}
{\xe \v GetDirection\:phys::Sound}
{\xe \v phys::Sound\:GetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Sound::GetDirection ()}
}\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects current direction. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the objects current direction. \par
}}{
Definition at line 241 of file sound.cpp.}\par
}
{\xe \v GetDopplerStrength\:phys::Sound}
{\xe \v phys::Sound\:GetDopplerStrength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetDopplerStrength ()}
}\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Doppler Strength of the sound. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the doppler strength, which enhances or diminishes the doppler effect. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the doppler strength. \par
}}{
Definition at line 302 of file sound.cpp.}\par
}
{\xe \v GetDopplerVelocity\:phys::Sound}
{\xe \v phys::Sound\:GetDopplerVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Sound::GetDopplerVelocity ()}
}\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the doppler velocity vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the override for the doppler velocity vector. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the override for the doppler velocity vector. \par
}}{
Definition at line 307 of file sound.cpp.}\par
}
{\xe \v GetInnerConeAngle\:phys::Sound}
{\xe \v phys::Sound\:GetInnerConeAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetInnerConeAngle ()}
}\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the inner cone angle of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the inner cone angle of the sound source. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWF" }{}}{\fldrslt {\cs37\ul\cf2 SetInnerConeAngle()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the angle of the inner sound cone of the source. \par
}}{
Definition at line 287 of file sound.cpp.}\par
}
{\xe \v GetMaxDistance\:phys::Sound}
{\xe \v phys::Sound\:GetMaxDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetMaxDistance ()}
}\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the distance at which sound attenuation will stop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the distance at which sound attenuation will stop. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the distance from the source where attenuation will stop. \par
}}{
Definition at line 262 of file sound.cpp.}\par
}
{\xe \v GetMaxVolume\:phys::Sound}
{\xe \v phys::Sound\:GetMaxVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetMaxVolume ()}
}\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Maximum volume of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the maximum volume the sound source can achieve. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the maximum volume that the source can achieve. \par
}}{
Definition at line 282 of file sound.cpp.}\par
}
{\xe \v GetMinDistance\:phys::Sound}
{\xe \v phys::Sound\:GetMinDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetMinDistance ()}
}\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the distance at which sound attenuation will start. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the distance at which sound attenuation will start. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the distance from the source where attenuation will start. \par
}}{
Definition at line 257 of file sound.cpp.}\par
}
{\xe \v GetMinVolume\:phys::Sound}
{\xe \v phys::Sound\:GetMinVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetMinVolume ()}
}\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the minimum volume of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the minimum volume the sound source can be attenuated to. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the minimum volume that the source can be attenuated to. \par
}}{
Definition at line 277 of file sound.cpp.}\par
}
{\xe \v GetOuterConeAngle\:phys::Sound}
{\xe \v phys::Sound\:GetOuterConeAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetOuterConeAngle ()}
}\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the outer cone angle of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the outer cone angle of the sound source. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWG" }{}}{\fldrslt {\cs37\ul\cf2 SetOuterConeAngle()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the angle of the outer sound cone of the source. \par
}}{
Definition at line 292 of file sound.cpp.}\par
}
{\xe \v GetOuterConeVolume\:phys::Sound}
{\xe \v phys::Sound\:GetOuterConeVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetOuterConeVolume ()}
}\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the outer cone volume of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the outer cone volume of the sound source. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWH" }{}}{\fldrslt {\cs37\ul\cf2 SetOuterConeVolume()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns how much the volume of the source is scaled in the outer cone. \par
}}{
Definition at line 297 of file sound.cpp.}\par
}
{\xe \v GetPitch\:phys::Sound}
{\xe \v phys::Sound\:GetPitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetPitch ()}
}\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pitch of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the pitch of the sound source. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the pitch of the source. \par
}}{
Definition at line 267 of file sound.cpp.}\par
}
{\xe \v GetPosition\:phys::Sound}
{\xe \v phys::Sound\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Sound::GetPosition ()}
}\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects current position. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the objects current position. \par
}}{
Definition at line 229 of file sound.cpp.}\par
}
{\xe \v GetRolloffFactor\:phys::Sound}
{\xe \v phys::Sound\:GetRolloffFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetRolloffFactor ()}
}\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Rolloff factor of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the factor used in attenuating the source over distance. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the factor used in attenuating the source over distance. \par
}}{
Definition at line 247 of file sound.cpp.}\par
}
{\xe \v GetStrength\:phys::Sound}
{\xe \v phys::Sound\:GetStrength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetStrength ()}
}\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Strength of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the strength of the source, which determines how well the sound carries over a distance. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the strength of the source. \par
}}{
Definition at line 252 of file sound.cpp.}\par
}
{\xe \v GetTotalAudioSize\:phys::Sound}
{\xe \v phys::Sound\:GetTotalAudioSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int phys::Sound::GetTotalAudioSize ()}
}\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the total size of the sound in memory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the total size of the sound in memory. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real that is the size in memory. \par
}}{
Definition at line 99 of file sound.cpp.}\par
}
{\xe \v GetTotalAudioTime\:phys::Sound}
{\xe \v phys::Sound\:GetTotalAudioTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetTotalAudioTime ()}
}\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the total size of the sound in seconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the amount of seconds of the sound. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a Real that is the size in seconds. \par
}}{
Definition at line 94 of file sound.cpp.}\par
}
{\xe \v GetVelocity\:phys::Sound}
{\xe \v phys::Sound\:GetVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Sound::GetVelocity ()}
}\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects velocity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the objects current velocity. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the objects current velocity. \par
}}{
Definition at line 235 of file sound.cpp.}\par
}
{\xe \v GetVolume\:phys::Sound}
{\xe \v phys::Sound\:GetVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Sound::GetVolume ()}
}\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current volume of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current volume of the sound source before effects are applied. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the source volume before attenuation and other effects. \par
}}{
Definition at line 272 of file sound.cpp.}\par
}
{\xe \v IsLooping\:phys::Sound}
{\xe \v phys::Sound\:IsLooping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Sound::IsLooping ()}
}\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently set to loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently set to loop. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns whether or not the sound is currently set to loop. \par
}}{
Definition at line 139 of file sound.cpp.}\par
}
{\xe \v IsPaused\:phys::Sound}
{\xe \v phys::Sound\:IsPaused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Sound::IsPaused ()}
}\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently paused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently paused. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns whether or not the sound is currently paused. \par
}}{
Definition at line 129 of file sound.cpp.}\par
}
{\xe \v IsPlaying\:phys::Sound}
{\xe \v phys::Sound\:IsPlaying}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Sound::IsPlaying ()}
}\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently playing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently playing. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns whether or not the sound is currently playing. \par
}}{
Definition at line 124 of file sound.cpp.}\par
}
{\xe \v IsStopped\:phys::Sound}
{\xe \v phys::Sound\:IsStopped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Sound::IsStopped ()}
}\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently stopped. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the sound is currently stopped. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns whether or not the sound is currently stopped. \par
}}{
Definition at line 134 of file sound.cpp.}\par
}
{\xe \v Loop\:phys::Sound}
{\xe \v phys::Sound\:Loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Loop (bool {\i ToLoop})}
}\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether this sound should loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether this sound should restart once it's done playing. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToLoop} Whether or not this sound should restart \par
}
}{
Definition at line 84 of file sound.cpp.}\par
}
{\xe \v Move\:phys::Sound}
{\xe \v phys::Sound\:Move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Move ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set both the position and velocity of the sound source. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The new position of the sound source. \par
}
}{
Definition at line 224 of file sound.cpp.}\par
}
{\xe \v Pause\:phys::Sound}
{\xe \v phys::Sound\:Pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Pause ()}
}\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses the sound. \par
}{
Definition at line 74 of file sound.cpp.}\par
}
{\xe \v Play\:phys::Sound}
{\xe \v phys::Sound\:Play}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Play ()}
}\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound with the same settings as the last time it was played. \par
}{
Definition at line 59 of file sound.cpp.}\par
}
{\xe \v Play2d\:phys::Sound}
{\xe \v phys::Sound\:Play2d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Play2d (bool {\i Loop} = {\f2 false})}
}\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound in 2D mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will play the sound without altering it by it's position in 3D space. Ideal for music and ambient sounds. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Loop} Whether or not the sound should restart once it's done playing. \par
}
}{
Definition at line 64 of file sound.cpp.}\par
}
{\xe \v Play3d\:phys::Sound}
{\xe \v phys::Sound\:Play3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Play3d ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i SoundStrength} = {\f2 1.0}, bool {\i Loop} = {\f2 false})}
}\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plays the sound in 3D mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will play the sound and alter it's properties based on it's location in 3D space. Sounds can sound like they are coming more from one direction then another, etc.. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The location in 3D space where the sound originates. \par
{\i SoundStrength} The higher the sound strength, the further away you can hear the sound, not the same as volume. \par
{\i Loop} Whether or not the sound should restart once it's done playing. \par
}
}{
Definition at line 69 of file sound.cpp.}\par
}
{\xe \v Seek\:phys::Sound}
{\xe \v phys::Sound\:Seek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Seek ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Seconds}, bool {\i Relative})}
}\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows you to go to a specific point in the sound. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will allow you to jump ahead or rewind to any specific point in the sound. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Seconds} How many seconds into the sound you want to jump to. \par
{\i Relative} Whether or not you want the jump to be relative to where the sound is at the time of calling this function. \par
}
}{
Definition at line 89 of file sound.cpp.}\par
}
{\xe \v SetDirection\:phys::Sound}
{\xe \v phys::Sound\:SetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetDirection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Direction})}
}\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the sound source is facing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the direction the sound source is facing to be used with the sound in 3D mode. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Direction} The new direction of the sound source. \par
}
}{
Definition at line 154 of file sound.cpp.}\par
}
{\xe \v SetDopplerStrength\:phys::Sound}
{\xe \v phys::Sound\:SetDopplerStrength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetDopplerStrength ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i DopStr})}
}\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the doppler strength, which impacts the doppler effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the doppler strength of the sound source, which can enhance or diminish the doppler effect given off by this sound source. Default: 1.0 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i DopStr} The doppler strength to be applied to this sound source. \par
}
}{
Definition at line 214 of file sound.cpp.}\par
}
{\xe \v SetDopplerVelocity\:phys::Sound}
{\xe \v phys::Sound\:SetDopplerVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetDopplerVelocity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Velocity})}
}\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the doppler velocity vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In most cases you shouldn't need to call this as this is handled by the engine. Is called every time position, velocity, or direction is altered. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Velocity} A vector3 representing the doppler velocity to be applied. \par
}
}{
Definition at line 219 of file sound.cpp.}\par
}
{\xe \v SetInnerConeAngle\:phys::Sound}
{\xe \v phys::Sound\:SetInnerConeAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetInnerConeAngle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i InnerAngle})}
}\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the inner cone angle of the sound source if you want the sound to be projected as a cone. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the angle for the inner cone which the sound will be projected. The cone will open up in the direction set by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVW" }{}}{\fldrslt {\cs37\ul\cf2 SetDirection()}}}. Sounds are at their loudest only if the listener is within the inner cone. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i InnerAngle} The angle of the inner cone. Range is: 0.0 to 360.0. Default: 360.0 (broadcast) \par
}
}{
Definition at line 199 of file sound.cpp.}\par
}
{\xe \v SetMaxDistance\:phys::Sound}
{\xe \v phys::Sound\:SetMaxDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetMaxDistance ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i MaxDistance})}
}\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance from the sound source where attenuation will stop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the distance from the sound source where attenuation effects will stop being applied. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MaxDistance} The distance at which attenuation effects stop being applied. \par
}
}{
Definition at line 174 of file sound.cpp.}\par
}
{\xe \v SetMaxVolume\:phys::Sound}
{\xe \v phys::Sound\:SetMaxVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetMaxVolume ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i MaxVolume})}
}\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum volume the sound source can achieve. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the maximum volume the sound source can achieve after effects(like attenuation) have been applied. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MaxVolume} The maximum volume allowed for the sound source. \par
}
}{
Definition at line 194 of file sound.cpp.}\par
}
{\xe \v SetMinDistance\:phys::Sound}
{\xe \v phys::Sound\:SetMinDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetMinDistance ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i MinDistance})}
}\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the distance from the sound source where attenuation will start. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the distance from the sound source where attenuation effects will start being applied. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MinDistance} The distance at which attenuation effects start being applied. \par
}
}{
Definition at line 169 of file sound.cpp.}\par
}
{\xe \v SetMinVolume\:phys::Sound}
{\xe \v phys::Sound\:SetMinVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetMinVolume ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i MinVolume})}
}\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the minimum volume the sound source can achieve. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the minimum volume the sound source can achieve after effects(like attenuation) have been applied. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i MinVolume} The minimum volume allowed for the sound source. \par
}
}{
Definition at line 189 of file sound.cpp.}\par
}
{\xe \v SetOuterConeAngle\:phys::Sound}
{\xe \v phys::Sound\:SetOuterConeAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetOuterConeAngle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i OuterAngle})}
}\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the outer cone angle of the sound source if you want the sound to be projected as a cone. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the angle for the outer cone which the sound will be projected. The cone will open up in the direction set by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVW" }{}}{\fldrslt {\cs37\ul\cf2 SetDirection()}}}. Sounds connot be heard if the listener is outside the outer cone. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OuterAngle} The angle of the outer cone. Range is: 0.0 to 360.0. Default: 360.0 (broadcast) \par
}
}{
Definition at line 204 of file sound.cpp.}\par
}
{\xe \v SetOuterConeVolume\:phys::Sound}
{\xe \v phys::Sound\:SetOuterConeVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetOuterConeVolume ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i OuterVolume})}
}\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets how much the volume is scaled in the outer cone. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set how much the volume is scaled by for sounds in the outer cone of the sound source. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OuterVolume} The scale for volume for sounds in the outer cone. \par
}
}{
Definition at line 209 of file sound.cpp.}\par
}
{\xe \v SetPitch\:phys::Sound}
{\xe \v phys::Sound\:SetPitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetPitch ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Pitch})}
}\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pitch of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the pitch of the sound source. Note: higher values will speed up the playback of the sound. Default: 1.0 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Pitch} The new pitch of the sound. \par
}
}{
Definition at line 179 of file sound.cpp.}\par
}
{\xe \v SetPosition\:phys::Sound}
{\xe \v phys::Sound\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetPosition ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the position of the source to be used with the sound in 3D mode. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The new position of the sound source. \par
}
}{
Definition at line 144 of file sound.cpp.}\par
}
{\xe \v SetRolloffFactor\:phys::Sound}
{\xe \v phys::Sound\:SetRolloffFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetRolloffFactor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Rolloff})}
}\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Rolloff factor used to attenuate the sound over a distance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set how much the sound source will attenuate over a distance. Larger values will make the sound attenuate faster/shorter distnaces, smaller values will make the sound carry better. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Rolloff} The factor at which the sound will attenuate. \par
}
}{
Definition at line 159 of file sound.cpp.}\par
}
{\xe \v SetStrength\:phys::Sound}
{\xe \v phys::Sound\:SetStrength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetStrength ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i SoundStrength})}
}\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the strength of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the strength of the sound, which will determine how well the sound from this sound source will carry over a distance. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundStrength} The strength of the sound. Default: 1.0 \par
}
}{
Definition at line 164 of file sound.cpp.}\par
}
{\xe \v SetVelocity\:phys::Sound}
{\xe \v phys::Sound\:SetVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetVelocity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Velocity})}
}\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the velocity of the sound source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the velocity of the source to be used with the sound in 3D mode. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Velocity} The new velocity of the sound source. \par
}
}{
Definition at line 149 of file sound.cpp.}\par
}
{\xe \v SetVolume\:phys::Sound}
{\xe \v phys::Sound\:SetVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::SetVolume ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Volume})}
}\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current volume of the sound source before effects. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the current volume of the sound source before effects (like attenuation) are applied. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Volume} The current volume of the sound source to be applied. \par
}
}{
Definition at line 184 of file sound.cpp.}\par
}
{\xe \v Stop\:phys::Sound}
{\xe \v phys::Sound\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Sound::Stop ()}
}\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the sound. \par
}{
Definition at line 79 of file sound.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
sound.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
sound.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::SoundListener Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::SoundListener}
{\xe \v phys::SoundListener}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the listener class used for 3D sound. }}\par
{
{\f2 #include <soundlistener.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXE" }{}}{\fldrslt {\cs37\ul\cf2 SoundListener}}}
 (cAudio::IListener *Listener)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. Internal use only. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXF" }{}}{\fldrslt {\cs37\ul\cf2 ~SoundListener}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the listener position. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 SetDirection}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Direction)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the listener is facing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXI" }{}}{\fldrslt {\cs37\ul\cf2 SetUpVector}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Up)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the up direction for the listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 SetVelocity}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Velocity)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the velocity of the listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXK" }{}}{\fldrslt {\cs37\ul\cf2 SetMasterVolume}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the master volume for all sources heard by this listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXL" }{}}{\fldrslt {\cs37\ul\cf2 Move}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves the listener to a new location. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXM" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position of the listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXN" }{}}{\fldrslt {\cs37\ul\cf2 GetDirection}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current direction of the listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXO" }{}}{\fldrslt {\cs37\ul\cf2 GetUpVector}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the upward orientation of the listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXP" }{}}{\fldrslt {\cs37\ul\cf2 GetVelocity}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current velocity of the listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXQ" }{}}{\fldrslt {\cs37\ul\cf2 GetMasterVolume}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the master volume used to scale sound sources. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXR" }{}}{\fldrslt {\cs37\ul\cf2 SetMetersPerUnit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Meters)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale to be used by the manager for this listener. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXS" }{}}{\fldrslt {\cs37\ul\cf2 GetMetersPerUnit}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scale used by the manager for this listener. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

cAudio::IListener * {\b AudioListener}{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the listener class used for 3D sound. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the listener class used for determining how 3D sound is played. \par
}{
Definition at line 60 of file soundlistener.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SoundListener\:phys::SoundListener}
{\xe \v phys::SoundListener\:SoundListener}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SoundListener::SoundListener (cAudio::IListener * {\i Listener})}
}\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. Internal use only. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class constructor. This is an internal function and shouldn't be called manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Listener} Pointer to the internal listener. \par
}
}{
Definition at line 48 of file soundlistener.cpp.}\par
}
{\xe \v ~SoundListener\:phys::SoundListener}
{\xe \v phys::SoundListener\:~SoundListener}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SoundListener::~SoundListener ()}
}\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 53 of file soundlistener.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetDirection\:phys::SoundListener}
{\xe \v phys::SoundListener\:GetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::SoundListener::GetDirection ()}
}\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current direction of the listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current direction of the listener. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current direction of the listener. \par
}}{
Definition at line 93 of file soundlistener.cpp.}\par
}
{\xe \v GetMasterVolume\:phys::SoundListener}
{\xe \v phys::SoundListener\:GetMasterVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::SoundListener::GetMasterVolume ()}
}\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the master volume used to scale sound sources. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the master volume, which is used to scale the volume of all sound sources heard by this listener. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current scale used for adjusting the volume of all sources heard by this listener. \par
}}{
Definition at line 111 of file soundlistener.cpp.}\par
}
{\xe \v GetMetersPerUnit\:phys::SoundListener}
{\xe \v phys::SoundListener\:GetMetersPerUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::SoundListener::GetMetersPerUnit ()}
}\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the scale used by the manager for this listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the amount of meters per unit used in your game/simulation scale. The engine assumes you use meters, so default is 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the amount of meters per unit in your scale. \par
}}{
Definition at line 121 of file soundlistener.cpp.}\par
}
{\xe \v GetPosition\:phys::SoundListener}
{\xe \v phys::SoundListener\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::SoundListener::GetPosition ()}
}\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current position of the listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current position of the listener. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current position of the listener. \par
}}{
Definition at line 87 of file soundlistener.cpp.}\par
}
{\xe \v GetUpVector\:phys::SoundListener}
{\xe \v phys::SoundListener\:GetUpVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::SoundListener::GetUpVector ()}
}\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the upward orientation of the listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets which direction is up for the listener \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current up orientation of the listener. \par
}}{
Definition at line 99 of file soundlistener.cpp.}\par
}
{\xe \v GetVelocity\:phys::SoundListener}
{\xe \v phys::SoundListener\:GetVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::SoundListener::GetVelocity ()}
}\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current velocity of the listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will get the current velocity of the listener. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current velocity of the listener. \par
}}{
Definition at line 105 of file soundlistener.cpp.}\par
}
{\xe \v Move\:phys::SoundListener}
{\xe \v phys::SoundListener\:Move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::Move ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves the listener to a new location. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set a new position and velocity of the listener. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The new position of the listener. \par
}
}{
Definition at line 82 of file soundlistener.cpp.}\par
}
{\xe \v SetDirection\:phys::SoundListener}
{\xe \v phys::SoundListener\:SetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::SetDirection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Direction})}
}\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the listener is facing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction the listener is facing. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Direction} The new direction for the listener. \par
}
}{
Definition at line 62 of file soundlistener.cpp.}\par
}
{\xe \v SetMasterVolume\:phys::SoundListener}
{\xe \v phys::SoundListener\:SetMasterVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::SetMasterVolume ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Volume})}
}\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the master volume for all sources heard by this listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will scale the volume for all sources heard by this listener by the amount provided. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Volume} The amount by which to scale all sound sources heard. \par
}
}{
Definition at line 77 of file soundlistener.cpp.}\par
}
{\xe \v SetMetersPerUnit\:phys::SoundListener}
{\xe \v phys::SoundListener\:SetMetersPerUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::SetMetersPerUnit ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Meters})}
}\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the scale to be used by the manager for this listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will set the engines scale for use with sounds. Internally the engine assumes all units are in meters. If that is not the case then this function should be called to set the scale. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Meters} The amount of meters that are in one unit of your games scale. \par
}
}{
Definition at line 116 of file soundlistener.cpp.}\par
}
{\xe \v SetPosition\:phys::SoundListener}
{\xe \v phys::SoundListener\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::SetPosition ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the listener position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the listeners position. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The new position for the listener. \par
}
}{
Definition at line 57 of file soundlistener.cpp.}\par
}
{\xe \v SetUpVector\:phys::SoundListener}
{\xe \v phys::SoundListener\:SetUpVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::SetUpVector ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Up})}
}\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the up direction for the listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the direction that is up relative to the orientation of the listener. Default: +Y {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Up} The new upward vector to be used by the listener. \par
}
}{
Definition at line 67 of file soundlistener.cpp.}\par
}
{\xe \v SetVelocity\:phys::SoundListener}
{\xe \v phys::SoundListener\:SetVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundListener::SetVelocity ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Velocity})}
}\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the velocity of the listener. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the listeners velocity, for use in determining doppler effects. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Velocity} The new velocity for the listener. \par
}
}{
Definition at line 72 of file soundlistener.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
soundlistener.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
soundlistener.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::SoundManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::SoundManager}
{\xe \v phys::SoundManager}
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} utilities and functions. }}\par
{
{\f2 #include <soundmanager.h>}}\par
Inheritance diagram for phys::SoundManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dc4/classphys_1_1SoundManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}}
 (bool DefaultSettings=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXV" }{}}{\fldrslt {\cs37\ul\cf2 ~SoundManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited Initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKT" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 InitializeManager}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &DeviceName, int OutputFrequency=-1, int EAXEffectSlots=4)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the Manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXX" }{}}{\fldrslt {\cs37\ul\cf2 CreateSound}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &SoundName, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &FilePath, bool Stream)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sound instance from a file that can be used to play sounds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 CreateSoundFromMemory}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &SoundName, const char *Data, int Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Extension)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sound instance from a memory buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXZ" }{}}{\fldrslt {\cs37\ul\cf2 DestroySound}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 *SoundName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 GetSoundByName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 SoundName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a sound by it's name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYB" }{}}{\fldrslt {\cs37\ul\cf2 DestroyAllSounds}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes all stored sounds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 CreateSoundSet}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 SoundSetName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sound set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYD" }{}}{\fldrslt {\cs37\ul\cf2 GetSoundSet}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 SoundSetName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an existing sound set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 AddSoundToSoundSet}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 SoundSetName, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 *SoundInst)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add's a sound to the defined set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYF" }{}}{\fldrslt {\cs37\ul\cf2 GetAvailableDeviceNameByIndex}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of an available device. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 GetDefaultDeviceName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of the default device. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYH" }{}}{\fldrslt {\cs37\ul\cf2 GetAvailableDeviceCount}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of available devices. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 SoundListener}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 GetListener}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve's the listener for this sound manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the manager type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::stringstream * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 GetLogs}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the logs that the audio subystem creates. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYK" }{}}{\fldrslt {\cs37\ul\cf2 ClearLogs}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This empties logs that the audio subystem creates. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

cAudio::IAudioManager * {\b AudioManager}{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::map< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
 * > {\b SoundSets}{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

cAudio::IListener * {\b AudioListener}{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is simply a place for storing all the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} utilities and functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a place for loading, storing, and running sound files as necessary in a given game. \par
}{
Definition at line 69 of file soundmanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SoundManager\:phys::SoundManager}
{\xe \v phys::SoundManager\:SoundManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SoundManager::SoundManager (bool {\i DefaultSettings} = {\f2 true})}
}\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the class constructor. It gives you the option to start up the manager with default values if you choose. If not then you'll need to setup and initialize the manager yourself after it is constructed. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i DefaultSettings} Whether or not to load default settings and initialize the manager immediately. \par
}
}{
Definition at line 49 of file soundmanager.cpp.}\par
}
{\xe \v ~SoundManager\:phys::SoundManager}
{\xe \v phys::SoundManager\:~SoundManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::SoundManager::~SoundManager ()}
}\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 56 of file soundmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddSoundToSoundSet\:phys::SoundManager}
{\xe \v phys::SoundManager\:AddSoundToSoundSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::AddSoundToSoundSet ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i SoundSetName}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * {\i SoundInst})}
}\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add's a sound to the defined set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will add a sound instance to a created sound set. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundName} The sound instance to be added. \par
}
}{
Definition at line 155 of file soundmanager.cpp.}\par
}
{\xe \v ClearLogs\:phys::SoundManager}
{\xe \v phys::SoundManager\:ClearLogs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::ClearLogs ()}
}\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This empties logs that the audio subystem creates. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internally the Physgame engine currently uses cAudio to process 3d sound. It has it's own logging system that we have customized to work with our logger. This clears that data allow us to work with it as we need \par
}{
Definition at line 194 of file soundmanager.cpp.}\par
}
{\xe \v CreateSound\:phys::SoundManager}
{\xe \v phys::SoundManager\:CreateSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * phys::SoundManager::CreateSound ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i SoundName}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i FilePath}, bool {\i Stream})}
}\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sound instance from a file that can be used to play sounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will create a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} from a file and returns a pointer to that {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}. You can also specify if you want the sound to be streamed from the disk so that it doesn't have to load the entire song from disk first. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundName} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} instance. \par
{\i FilePath} The path to the file AND the name of the file. \par
{\i Stream} Whether or not to stream the audio from the disk. Otherwise it has be completely loaded into memory before it can be used. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} Instance that was created. \par
}}{
Definition at line 74 of file soundmanager.cpp.}\par
}
{\xe \v CreateSoundFromMemory\:phys::SoundManager}
{\xe \v phys::SoundManager\:CreateSoundFromMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * phys::SoundManager::CreateSoundFromMemory ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i SoundName}, const char * {\i Data}, int {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Extension})}
}\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sound instance from a memory buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function allows you to create a sound instance from a sound that is already loaded into memory. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundName} The name of the sound instance. \par
{\i Data} Pointer to the char array (buffer). \par
{\i Size} Size of the char array (buffer). \par
{\i Extension} The extension of the file used to load that sound (wav, ogg). \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} Instance that was created. \par
}}{
Definition at line 86 of file soundmanager.cpp.}\par
}
{\xe \v CreateSoundSet\:phys::SoundManager}
{\xe \v phys::SoundManager\:CreateSoundSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
 * phys::SoundManager::CreateSoundSet ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i SoundSetName})}
}\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a sound set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will create a sound set vector you can use to store similiar sound instances. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundSetName} The name you wish the sound set to have. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created Vector. \par
}}{
Definition at line 142 of file soundmanager.cpp.}\par
}
{\xe \v DestroyAllSounds\:phys::SoundManager}
{\xe \v phys::SoundManager\:DestroyAllSounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::DestroyAllSounds ()}
}\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes all stored sounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will delete every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} that is stored in the manager. \par
}{
Definition at line 126 of file soundmanager.cpp.}\par
}
{\xe \v DestroySound\:phys::SoundManager}
{\xe \v phys::SoundManager\:DestroySound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::DestroySound ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * {\i SoundName})}
}\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} via a pointer. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundName} A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} you want deleted. \par
}
}{
Definition at line 121 of file soundmanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::SoundManager}
{\xe \v phys::SoundManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty MainLoopItems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class implements this for the sake of entension and compatibility this function does nothing \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 65 of file soundmanager.cpp.}\par
}
{\xe \v GetAvailableDeviceCount\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetAvailableDeviceCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::SoundManager::GetAvailableDeviceCount ()}
}\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of available devices. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the total number of available devices, including the default. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of available devices. \par
}}{
Definition at line 175 of file soundmanager.cpp.}\par
}
{\xe \v GetAvailableDeviceNameByIndex\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetAvailableDeviceNameByIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::SoundManager::GetAvailableDeviceNameByIndex ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of an available device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will retrieve the name of a device by it's index on the sound managers device list. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Index} The position on the device list you wish to access the name of. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the name of the device. \par
}}{
Definition at line 161 of file soundmanager.cpp.}\par
}
{\xe \v GetDefaultDeviceName\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetDefaultDeviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::SoundManager::GetDefaultDeviceName ()}
}\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of the default device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the name of the system default device. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the name of the default device. \par
}}{
Definition at line 168 of file soundmanager.cpp.}\par
}
{\xe \v GetListener\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetListener}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 SoundListener}}}
 * phys::SoundManager::GetListener ()}
}\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve's the listener for this sound manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will return the listener for this manager which can be used to help create 3D sound. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the managers {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}} Listener. \par
}}{
Definition at line 180 of file soundmanager.cpp.}\par
}
{\xe \v GetLogs\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetLogs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::stringstream * phys::SoundManager::GetLogs ()}
}\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the logs that the audio subystem creates. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internally the Physgame engine currently uses cAudio to process 3d sound. It has it's own logging system that we have customized to work with our logger. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This gets the log of what actions the audio system has performed \par
}}{
Definition at line 189 of file soundmanager.cpp.}\par
}
{\xe \v GetSoundByName\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetSoundByName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 Sound}}}
 * phys::SoundManager::GetSoundByName ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i SoundName})}
}\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a sound by it's name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will find and return the sound with the speicified name. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the specified sound. \par
}}{
Definition at line 131 of file soundmanager.cpp.}\par
}
{\xe \v GetSoundSet\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetSoundSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SoundSet}}}
 * phys::SoundManager::GetSoundSet ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i SoundSetName})}
}\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an existing sound set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will find the specified sound set and return a pointer to it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SoundSetName} The name of the sound set to retrieve. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the named Vector. \par
}}{
Definition at line 149 of file soundmanager.cpp.}\par
}
{\xe \v GetType\:phys::SoundManager}
{\xe \v phys::SoundManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::SoundManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the manager type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of manager that this is. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the manager type. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 186 of file soundmanager.cpp.}\par
}
{\xe \v Initialize\:phys::SoundManager}
{\xe \v phys::SoundManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited Initializer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Written to allow the class to compile, this currently does nothing, but could be used to run code Use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 InitializeManager()}}} instead. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 61 of file soundmanager.cpp.}\par
}
{\xe \v InitializeManager\:phys::SoundManager}
{\xe \v phys::SoundManager\:InitializeManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::SoundManager::InitializeManager ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i DeviceName}, int {\i OutputFrequency} = {\f2 -1}, int {\i EAXEffectSlots} = {\f2 4})}
}\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the Manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will initialize the manager using the device and parameters provided. You need to call this function if you passed false into the sound manager constructor before you can use the manager. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i DeviceName} The name of the device you wish to have this manager interface with/use. \par
{\i OutputFrequency} Frequency of the output audio, -1 for the devices default. \par
{\i EAXEffectSlots} The number of effects per sound allowed to be applied. \par
}
}{
Definition at line 69 of file soundmanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
soundmanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
soundmanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::TestAE Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::TestAE}
{\xe \v phys::TestAE}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a dummy class to test if the AE field works. Details will be output to the log. }}\par
{
{\f2 #include <areaeffect.h>}}\par
Inheritance diagram for phys::TestAE:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dca/classphys_1_1TestAE.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 TestAE}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Location)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 ~TestAE}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUN" }{}}{\fldrslt {\cs37\ul\cf2 ApplyEffect}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the effect this field has to object inside. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a dummy class to test if the AE field works. Details will be output to the log. \par
}{
Definition at line 233 of file areaeffect.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TestAE\:phys::TestAE}
{\xe \v phys::TestAE\:TestAE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::TestAE::TestAE (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Location})}
}\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic initialization constructor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the field. \par
{\i Location} The location of the AE field. \par
}
}{
Definition at line 469 of file areaeffect.cpp.}\par
}
{\xe \v ~TestAE\:phys::TestAE}
{\xe \v phys::TestAE\:~TestAE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::TestAE::~TestAE ()}
}\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. \par
}{
Definition at line 473 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyEffect\:phys::TestAE}
{\xe \v phys::TestAE\:ApplyEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::TestAE::ApplyEffect (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the effect this field has to object inside. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function defines the behavior for the class. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASS" }{}}{\fldrslt {\cs37\ul\cf2 phys::AreaEffect}}}
.}\par
{
Definition at line 477 of file areaeffect.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
areaeffect.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::TextButton Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::TextButton}
{\xe \v phys::UI::TextButton}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a button class that provides text capabilities. }}\par
{
{\f2 #include <uitextbutton.h>}}\par
Inheritance diagram for phys::UI::TextButton:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d03/classphys_1_1UI_1_1TextButton.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBI" }{}}{\fldrslt {\cs37\ul\cf2 TextButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBJ" }{}}{\fldrslt {\cs37\ul\cf2 ~TextButton}}}
 (){\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNV" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNP" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBK" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this button to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBL" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this button to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBM" }{}}{\fldrslt {\cs37\ul\cf2 SetText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text displayed within the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBN" }{}}{\fldrslt {\cs37\ul\cf2 GetText}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the text displayed within the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBO" }{}}{\fldrslt {\cs37\ul\cf2 HorizontallyAlign}}}
 (UI::TextHorizontalAlign Align)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBP" }{}}{\fldrslt {\cs37\ul\cf2 VerticallyAlign}}}
 (UI::TextVerticalAlign Align)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNS" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNM" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNQ" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNK" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNU" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNO" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNR" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNL" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this button in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNT" }{}}{\fldrslt {\cs37\ul\cf2 SetRenderPriority}}}
 (UI::RenderPriority Priority)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual UI::RenderPriority {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNN" }{}}{\fldrslt {\cs37\ul\cf2 GetRenderPriority}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Caption * {\b GorillaButton}{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a button class that provides text capabilities. \par
}{
Definition at line 57 of file uitextbutton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TextButton\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:TextButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::TextButton::TextButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the button. \par
{\i Position} The top left position of the button. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the button. \par
{\i Layer} Pointer to the Layer that created this button. \par
}
}{
Definition at line 53 of file uitextbutton.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetActualPosition\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::TextButton::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top left position of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 165 of file uitextbutton.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::TextButton::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this button. \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 194 of file uitextbutton.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::TextButton::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top left position of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 152 of file uitextbutton.cpp.}\par
}
{\xe \v GetRenderPriority\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:GetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UI::RenderPriority phys::UI::TextButton::GetRenderPriority (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing this button's priority level. \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMX" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 221 of file uitextbutton.cpp.}\par
}
{\xe \v GetSize\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::TextButton::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the size of this button. \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 181 of file uitextbutton.cpp.}\par
}
{\xe \v GetText\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::UI::TextButton::GetText (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the text displayed within the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the text being displayed. \par
}}{
Definition at line 97 of file uitextbutton.cpp.}\par
}
{\xe \v HorizontallyAlign\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:HorizontallyAlign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::HorizontallyAlign (UI::TextHorizontalAlign {\i Align}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value for this is UI::Txt_Middle. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Align} The enum value representing the horizontal alignment to be set. \par
}
}{
Definition at line 102 of file uitextbutton.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::TextButton::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this button. \par
}}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 75 of file uitextbutton.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the top left position of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 157 of file uitextbutton.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size of this button in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this button. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 186 of file uitextbutton.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative top left position of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the location of this button. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 142 of file uitextbutton.cpp.}\par
}
{\xe \v SetRenderPriority\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetRenderPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetRenderPriority (UI::RenderPriority {\i Priority}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the priority this button should be rendered with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default value for this is Medium. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Priority} The priority level to be used when rendering this button. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 200 of file uitextbutton.cpp.}\par
}
{\xe \v SetSize\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the size of this button. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 171 of file uitextbutton.cpp.}\par
}
{\xe \v SetText\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Text}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the text displayed within the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Text} The text to be displayed. \par
}
}{
Definition at line 92 of file uitextbutton.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::SetVisible (bool {\i Visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visible} Bool determining whether or not this button should be visible. \par
}
}{
Reimplemented from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLY" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Button}}}
.}\par
{
Definition at line 69 of file uitextbutton.cpp.}\par
}
{\xe \v VerticallyAlign\:phys::UI::TextButton}
{\xe \v phys::UI::TextButton\:VerticallyAlign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::TextButton::VerticallyAlign (UI::TextVerticalAlign {\i Align}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aligns the text of the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value for this is UI::Txt_Center. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Align} The enum value representing the vertical alignment to be set. \par
}
}{
Definition at line 122 of file uitextbutton.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uitextbutton.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uitextbutton.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Time Struct Reference\par \pard\plain 
{\tc\tcl2 \v phys::Time}
{\xe \v phys::Time}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A container for the metrics of time relevant for the timer class. }}\par
{
{\f2 #include <timer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\b Microseconds}{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\b Milliseconds}{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\b Seconds}{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\b Minutes}{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\b Hours}{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 Integer}}}
 {\b Days}{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A container for the metrics of time relevant for the timer class. \par
}{
Definition at line 52 of file extendedtimer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
extendedtimer.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Timer Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Timer}
{\xe \v phys::Timer}
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base timer class for the different timers. }}\par
{
{\f2 #include <timer.h>}}\par
Inheritance diagram for phys::Timer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d83/classphys_1_1Timer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 TimerStyle}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYO" }{}}{\fldrslt {\cs37\ul\cf2 Normal}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYP" }{}}{\fldrslt {\cs37\ul\cf2 StopWatch}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYQ" }{}}{\fldrslt {\cs37\ul\cf2 Alarm}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The style of timer to be used. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYR" }{}}{\fldrslt {\cs37\ul\cf2 TimerType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYS" }{}}{\fldrslt {\cs37\ul\cf2 Simple}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYT" }{}}{\fldrslt {\cs37\ul\cf2 Extended}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of timer to be used. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYU" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYV" }{}}{\fldrslt {\cs37\ul\cf2 ~Timer}}}
 (){\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYW" }{}}{\fldrslt {\cs37\ul\cf2 SetCallback}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 TimerCallback}}}
 *Call)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the callback to be used with this timer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYX" }{}}{\fldrslt {\cs37\ul\cf2 Start}}}
 (){\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activates the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYY" }{}}{\fldrslt {\cs37\ul\cf2 Stop}}}
 (){\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deactivates the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYZ" }{}}{\fldrslt {\cs37\ul\cf2 Reset}}}
 ()=0{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current values to their initial values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYR" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZA" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of timer this is. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Update} (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 MicroSecondsElapsed)=0{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b GoalReached} ()=0{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 {\b Style}{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYR" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerType}}}
 {\b Type}{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsSimple}{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ResetAtGoal}{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Active}{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 TimerCallback}}}
 * {\b Callback}{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b TimerManager}{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A base timer class for the different timers. \par
}{
Definition at line 55 of file timer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v TimerStyle\:phys::Timer}
{\xe \v phys::Timer\:TimerStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 phys::Timer::TimerStyle}}}
}
}\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The style of timer to be used. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Normal\:phys::Timer}
{\xe \v phys::Timer\:Normal}
{\b {\i Normal{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v StopWatch\:phys::Timer}
{\xe \v phys::Timer\:StopWatch}
{\b {\i StopWatch{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v Alarm\:phys::Timer}
{\xe \v phys::Timer\:Alarm}
{\b {\i Alarm{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}}
\par
{
Definition at line 59 of file timer.h.}\par
}
{\xe \v TimerType\:phys::Timer}
{\xe \v phys::Timer\:TimerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYR" }{}}{\fldrslt {\cs37\ul\cf2 phys::Timer::TimerType}}}
}
}\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of timer to be used. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Simple\:phys::Timer}
{\xe \v phys::Timer\:Simple}
{\b {\i Simple{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v Extended\:phys::Timer}
{\xe \v phys::Timer\:Extended}
{\b {\i Extended{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}}
\par
{
Definition at line 66 of file timer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Timer\:phys::Timer}
{\xe \v phys::Timer\:Timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Timer::Timer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 {\i style}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Style} The styling/type of timer to be constructed. \par
}
}{
Definition at line 84 of file timer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetType\:phys::Timer}
{\xe \v phys::Timer\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYR" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerType}}}
 phys::Timer::GetType (){\f2  [inline, virtual]}}
}\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of timer this is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing the type of timer this is. \par
}}{
Definition at line 98 of file timer.h.}\par
}
{\xe \v SetCallback\:phys::Timer}
{\xe \v phys::Timer\:SetCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::Timer::SetCallback ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 TimerCallback}}}
 * {\i Call}){\f2  [inline, virtual]}}
}\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the callback to be used with this timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Call} The callback to be set. \par
}
}{
Definition at line 89 of file timer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
timer.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::TimerCallback Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::TimerCallback}
{\xe \v phys::TimerCallback}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A callback class for use automated and timed-event based timers. }}\par
{
{\f2 #include <timer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZK" }{}}{\fldrslt {\cs37\ul\cf2 DoCallbackItems}}}
 ()=0{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The function called for this callback. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A callback class for use automated and timed-event based timers. \par
}{
Definition at line 107 of file timer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
timer.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::TimerManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::TimerManager}
{\xe \v phys::TimerManager}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A manager responsible for the updating of all timers in use by this engine. }}\par
{
{\f2 #include <timermanager.h>}}\par
Inheritance diagram for phys::TimerManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d66/classphys_1_1TimerManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZL" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}}
 (){\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZM" }{}}{\fldrslt {\cs37\ul\cf2 ~TimerManager}}}
 (){\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZN" }{}}{\fldrslt {\cs37\ul\cf2 CreateSimpleTimer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 Style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a simple timer within this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZO" }{}}{\fldrslt {\cs37\ul\cf2 CreateExtendedTimer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 Style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an extended timer within this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZP" }{}}{\fldrslt {\cs37\ul\cf2 GetTimer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZQ" }{}}{\fldrslt {\cs37\ul\cf2 GetNumTimers}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of Timers created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZR" }{}}{\fldrslt {\cs37\ul\cf2 DestroyTimer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a timer within this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKU" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Items to be done during the mainloop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
 * > {\b Timers}{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::Timer * {\b MasterTimer}{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A manager responsible for the updating of all timers in use by this engine. \par
}{
Definition at line 62 of file timermanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateExtendedTimer\:phys::TimerManager}
{\xe \v phys::TimerManager\:CreateExtendedTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 ExtendedTimer}}}
 * phys::TimerManager::CreateExtendedTimer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 {\i Style}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an extended timer within this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Style} The style of timer you wish to create. \par
}
}{
Definition at line 73 of file timermanager.cpp.}\par
}
{\xe \v CreateSimpleTimer\:phys::TimerManager}
{\xe \v phys::TimerManager\:CreateSimpleTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SimpleTimer}}}
 * phys::TimerManager::CreateSimpleTimer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 Timer::TimerStyle}}}
 {\i Style}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a simple timer within this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created timer. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Style} The style of timer you wish to create. \par
}
}{
Definition at line 66 of file timermanager.cpp.}\par
}
{\xe \v DestroyTimer\:phys::TimerManager}
{\xe \v phys::TimerManager\:DestroyTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::TimerManager::DestroyTimer ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
 * {\i ToBeDestroyed}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a timer within this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} A pointer to the timer class to be destroyed. \par
}
}{
Definition at line 90 of file timermanager.cpp.}\par
}
{\xe \v DoMainLoopItems\:phys::TimerManager}
{\xe \v phys::TimerManager\:DoMainLoopItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::TimerManager::DoMainLoopItems (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Items to be done during the mainloop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all the timers. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 111 of file timermanager.cpp.}\par
}
{\xe \v GetNumTimers\:phys::TimerManager}
{\xe \v phys::TimerManager\:GetNumTimers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::TimerManager::GetNumTimers (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of Timers created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of Timers this manager is storing. \par
}}{
Definition at line 85 of file timermanager.cpp.}\par
}
{\xe \v GetTimer\:phys::TimerManager}
{\xe \v phys::TimerManager\:GetTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}}
 * phys::TimerManager::GetTimer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 Timer}}} at the specified index. \par
}}{
Definition at line 80 of file timermanager.cpp.}\par
}
{\xe \v GetType\:phys::TimerManager}
{\xe \v phys::TimerManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::TimerManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the type of this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns ManagerTypeName::TimerManager. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 123 of file timermanager.cpp.}\par
}
{\xe \v Initialize\:phys::TimerManager}
{\xe \v phys::TimerManager\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::TimerManager::Initialize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Initializor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This specific initializor is unneeded, but we implement it for compatibility. It also exists in case a derived class wants to override it for some reason. \par
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 107 of file timermanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
timermanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
timermanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::TreeWalker Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::TreeWalker}
{\xe \v phys::xml::TreeWalker}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to call a function for_each member of the subtree of nodes descended from a specific node. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKL" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker}}}
 (){\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor, initializes depth, and can do little else without a fully implemented treewalker. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKM" }{}}{\fldrslt {\cs37\ul\cf2 ~TreeWalker}}}
 (){\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Virtual deconstructor. Tears down a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKN" }{}}{\fldrslt {\cs37\ul\cf2 begin}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called on the root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of the xml subtree when traversal begins. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKO" }{}}{\fldrslt {\cs37\ul\cf2 for_each}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Pure Virtual function that is expected to be implemented to create the desired behavior. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKP" }{}}{\fldrslt {\cs37\ul\cf2 end}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called on the root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of the xml subtree when traversal ends. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKQ" }{}}{\fldrslt {\cs37\ul\cf2 Depth}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How many descendants deep are we during traversal. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Node}{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to call a function for_each member of the subtree of nodes descended from a specific node. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 AttributeIterator}}}.\par
}If you want to do a deep tree traversal, you'll either have to do it via a recursive function or some equivalent method or use a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker}}}. This provides a helper for depth-first traversal of a subtree. In order to use it, you have to implement {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 xml::TreeWalker}}} interface and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIN" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node::Traverse()}}} function. \par\par First, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKN" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::begin()}}} is called with traversal root as its argument.\par Then, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKO" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::for_each()}}} function is called for all nodes in the traversal subtree in depth first order, excluding the traversal root. Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} is passed as an argument.\par Finally, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKP" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::end()}}} function is called with traversal root as its argument.\par\par If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKN" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::begin()}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKP" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::end()}}} or any of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKO" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::for_each()}}} calls return false, the traversal is terminated and false is returned as the traversal result; otherwise, the traversal results in true. Note that you don't have to override begin or end functions; their default implementations return true.\par\par You can get the node's depth relative to the traversal root at any point by calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKQ" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::Depth()}}} function. \par
}{
Definition at line 917 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:phys::xml::TreeWalker}
{\xe \v phys::xml::TreeWalker\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::TreeWalker::begin ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called on the root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of the xml subtree when traversal begins. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
By default this simply returns true, but is expected to be overridden with any desired behavior \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True by default. If it returns false, then traversal ends and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIN" }{}}{\fldrslt {\cs37\ul\cf2 Node::Traverse()}}} that was called is expected to return false. \par
}}}
{\xe \v Depth\:phys::xml::TreeWalker}
{\xe \v phys::xml::TreeWalker\:Depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::TreeWalker::Depth () const{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How many descendants deep are we during traversal. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns -1 if called from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKN" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::begin()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKP" }{}}{\fldrslt {\cs37\ul\cf2 TreeWalker::end()}}}, and returns 0-based depth if called from for_each - depth is 0 for all children of the traversal root, 1 for all grandchildren, 2 for great-grandchildren and so on. \par
}}}
{\xe \v end\:phys::xml::TreeWalker}
{\xe \v phys::xml::TreeWalker\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::TreeWalker::end ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called on the root {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} of the xml subtree when traversal ends. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
By default this simply returns true, but is expected to be overridden with any desired behavior \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True by default. If it returns false, then traversal ends and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIN" }{}}{\fldrslt {\cs37\ul\cf2 Node::Traverse()}}} that was called is expected to return false. \par
}}}
{\xe \v for_each\:phys::xml::TreeWalker}
{\xe \v phys::xml::TreeWalker\:for_each}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::TreeWalker::for_each ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A Pure Virtual function that is expected to be implemented to create the desired behavior. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called on every {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} that is traversed except the root node of the traversed subtree. Can be used to perform sophisticated searches of a portion of the xml document, alter the document on a large scale, gather statistics, or just about any other behavior that requires touching many nodes. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid if true Traversal is expected to continue, if false, then traversal ends and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIN" }{}}{\fldrslt {\cs37\ul\cf2 Node::Traverse()}}} that was called is expected to return false. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UILayer Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UILayer}
{\xe \v phys::UILayer}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the basic container class for UI elements. }}\par
{
{\f2 #include <uilayer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZU" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, Gorilla::Layer *GLayer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 *ParentScreen)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZV" }{}}{\fldrslt {\cs37\ul\cf2 ~UILayer}}}
 (){\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZW" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZX" }{}}{\fldrslt {\cs37\ul\cf2 GetParent}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the parent screen of this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the layers' visability. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZZ" }{}}{\fldrslt {\cs37\ul\cf2 GetVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the layers' visability. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAA" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces the layer to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAB" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces the layer to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAC" }{}}{\fldrslt {\cs37\ul\cf2 CreateButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a button within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 UI::TextButton}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAD" }{}}{\fldrslt {\cs37\ul\cf2 CreateTextButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text button within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAE" }{}}{\fldrslt {\cs37\ul\cf2 GetButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAF" }{}}{\fldrslt {\cs37\ul\cf2 GetButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAG" }{}}{\fldrslt {\cs37\ul\cf2 GetNumButtons}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of buttons created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 DestroyButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAI" }{}}{\fldrslt {\cs37\ul\cf2 CreateRectangle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rectangle within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAJ" }{}}{\fldrslt {\cs37\ul\cf2 GetRectangle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created rectangle by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAK" }{}}{\fldrslt {\cs37\ul\cf2 GetNumRectangles}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of rectangles created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAL" }{}}{\fldrslt {\cs37\ul\cf2 DestroyRectangle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAM" }{}}{\fldrslt {\cs37\ul\cf2 CreateCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a caption within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAN" }{}}{\fldrslt {\cs37\ul\cf2 GetCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAO" }{}}{\fldrslt {\cs37\ul\cf2 GetCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAP" }{}}{\fldrslt {\cs37\ul\cf2 GetNumCaptions}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of captions created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAQ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAR" }{}}{\fldrslt {\cs37\ul\cf2 CreateMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a markup text within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAS" }{}}{\fldrslt {\cs37\ul\cf2 GetMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAT" }{}}{\fldrslt {\cs37\ul\cf2 GetMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAU" }{}}{\fldrslt {\cs37\ul\cf2 GetNumMarkupTexts}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of markup texts created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAV" }{}}{\fldrslt {\cs37\ul\cf2 DestroyMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 UI::LineList}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAW" }{}}{\fldrslt {\cs37\ul\cf2 CreateLineList}}}
 (){\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a line list within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 UI::LineList}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAX" }{}}{\fldrslt {\cs37\ul\cf2 GetLineList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created line list by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAY" }{}}{\fldrslt {\cs37\ul\cf2 GetNumLineLists}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of line lists created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAZ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyLineList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 UI::LineList}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a line list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBA" }{}}{\fldrslt {\cs37\ul\cf2 GetWidget}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBB" }{}}{\fldrslt {\cs37\ul\cf2 GetWidget}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBC" }{}}{\fldrslt {\cs37\ul\cf2 GetNumWidgets}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of widgets created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 DestroyWidget}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBE" }{}}{\fldrslt {\cs37\ul\cf2 CreateScrollbar}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, UI::ScrollbarStyle Style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Scrollbar within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 UI::CheckBox}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBF" }{}}{\fldrslt {\cs37\ul\cf2 CreateCheckBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &LabelText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a CheckBox within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 UI::ButtonListBox}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBG" }{}}{\fldrslt {\cs37\ul\cf2 CreateButtonListBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 ScrollbarWidth, UI::ScrollbarStyle ScrollbarStyle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Button List Box within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 UI::ListBox}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBH" }{}}{\fldrslt {\cs37\ul\cf2 CreateListBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 ScrollbarWidth, UI::ScrollbarStyle ScrollbarStyle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a List Box within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Window}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBI" }{}}{\fldrslt {\cs37\ul\cf2 CreateWidgetWindow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Window within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 UI::Menu}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBJ" }{}}{\fldrslt {\cs37\ul\cf2 CreateMenu}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Menu within this layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBK" }{}}{\fldrslt {\cs37\ul\cf2 CheckButtonMouseIsOver}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button the mouse is over if any. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBL" }{}}{\fldrslt {\cs37\ul\cf2 CheckWidgetMouseIsOver}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the widget the mouse is over if any. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Gorilla::Layer * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBM" }{}}{\fldrslt {\cs37\ul\cf2 GetGorillaLayer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal gorilla layer pointer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Layer * {\b GorillaLayer}{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\b Parent}{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\b Name}{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * > {\b Buttons}{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * > {\b Rectangles}{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * > {\b Captions}{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * > {\b MarkupTexts}{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 UI::LineList}}}
 * > {\b LineLists}{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * > {\b Widgets}{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the basic container class for UI elements. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A layer is a container for widgets and other UI elements that are visable. \par
}{
Definition at line 83 of file uilayer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UILayer\:phys::UILayer}
{\xe \v phys::UILayer\:UILayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UILayer::UILayer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, Gorilla::Layer * {\i GLayer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\i ParentScreen})}
}\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of this layer. \par
{\i GLayer} The Gorilla Layer this Layer is based on. \par
{\i ParentScreen} The screen that created this layer. \par
}
}{
Definition at line 65 of file uilayer.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckButtonMouseIsOver\:phys::UILayer}
{\xe \v phys::UILayer\:CheckButtonMouseIsOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UILayer::CheckButtonMouseIsOver ()}
}\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button the mouse is over if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function searches only the buttons contained in this layer. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the button the mouse is over, or NULL if there are none. \par
}}{
Definition at line 453 of file uilayer.cpp.}\par
}
{\xe \v CheckWidgetMouseIsOver\:phys::UILayer}
{\xe \v phys::UILayer\:CheckWidgetMouseIsOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UILayer::CheckWidgetMouseIsOver ()}
}\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the widget the mouse is over if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function searches only the widgets contained in this layer. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the widget the mouse is over, or NULL if there are none. \par
}}{
Definition at line 474 of file uilayer.cpp.}\par
}
{\xe \v CreateButton\:phys::UILayer}
{\xe \v phys::UILayer\:CreateButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UILayer::CreateButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size})}
}\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a button within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created button. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the button. \par
{\i Position} The top left position of the button. \par
{\i Size} The size of the Button. \par
}
}{
Definition at line 144 of file uilayer.cpp.}\par
}
{\xe \v CreateButtonListBox\:phys::UILayer}
{\xe \v phys::UILayer\:CreateButtonListBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 UI::ButtonListBox}}}
 * phys::UILayer::CreateButtonListBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i ScrollbarWidth}, UI::ScrollbarStyle {\i ScrollbarStyle})}
}\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Button List Box within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created Button List Box. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the Button List Box. \par
{\i Position} The top left position of the Button List Box. \par
{\i Size} The size of the Button List Box. \par
{\i ScrollbarWidth} The relative width of the scrollbar thats created with this widget. \par
{\i ScrollbarStyle} The style of scrollbar you want to create, see Scrollbar documentation for more details. \par
}
}{
Definition at line 425 of file uilayer.cpp.}\par
}
{\xe \v CreateCaption\:phys::UILayer}
{\xe \v phys::UILayer\:CreateCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * phys::UILayer::CreateCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text})}
}\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a caption within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created caption. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this caption. \par
{\i Position} The top left position of the caption. \par
{\i Size} The size of the Button. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the caption. \par
}
}{
Definition at line 224 of file uilayer.cpp.}\par
}
{\xe \v CreateCheckBox\:phys::UILayer}
{\xe \v phys::UILayer\:CreateCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 UI::CheckBox}}}
 * phys::UILayer::CreateCheckBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i LabelText})}
}\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a CheckBox within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created CheckBox. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the CheckBox. \par
{\i Position} The top left position of the CheckBox. \par
{\i Size} The size of the CheckBox. \par
{\i Glyph} The glyphs to use by default for use with the label. Glyphs are defined in your .gorilla file. \par
{\i LabelText} The text to display with the label. The label uses the Markup Text class, and thus it's light markup text language. You can also pass in a blank string if you don't wish to have a label, you can create a label after construction. \par
}
}{
Definition at line 418 of file uilayer.cpp.}\par
}
{\xe \v CreateListBox\:phys::UILayer}
{\xe \v phys::UILayer\:CreateListBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 UI::ListBox}}}
 * phys::UILayer::CreateListBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i ScrollbarWidth}, UI::ScrollbarStyle {\i ScrollbarStyle})}
}\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a List Box within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created List Box. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the List Box. \par
{\i Position} The top left position of the List Box. \par
{\i Size} The size of the List Box. \par
{\i ScrollbarWidth} The relative width of the scrollbar thats created with this widget. \par
{\i ScrollbarStyle} The style of scrollbar you want to create, see Scrollbar documentation for more details. \par
}
}{
Definition at line 432 of file uilayer.cpp.}\par
}
{\xe \v CreateMarkupText\:phys::UILayer}
{\xe \v phys::UILayer\:CreateMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * phys::UILayer::CreateMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text})}
}\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a markup text within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created markup text. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this markup text. \par
{\i Position} The top left position of the markup text. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the markup text. \par
}
}{
Definition at line 267 of file uilayer.cpp.}\par
}
{\xe \v CreateMenu\:phys::UILayer}
{\xe \v phys::UILayer\:CreateMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 UI::Menu}}}
 * phys::UILayer::CreateMenu ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size})}
}\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Menu within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created Menu. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the Menu. \par
{\i Position} The top left position of the Menu. \par
{\i Size} The size of the Menu. \par
}
}{
Definition at line 446 of file uilayer.cpp.}\par
}
{\xe \v CreateRectangle\:phys::UILayer}
{\xe \v phys::UILayer\:CreateRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * phys::UILayer::CreateRectangle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size})}
}\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rectangle within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par Rectangles are innately put behind all captions, so z-order is not necessary. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The top left position of the button. \par
{\i Size} The size of the Button. \par
}
}{
Definition at line 194 of file uilayer.cpp.}\par
}
{\xe \v CreateScrollbar\:phys::UILayer}
{\xe \v phys::UILayer\:CreateScrollbar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * phys::UILayer::CreateScrollbar ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, UI::ScrollbarStyle {\i Style})}
}\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Scrollbar within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created Scrollbar. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the Scrollbar. \par
{\i Position} The top left position of the Scrollbar. \par
{\i Size} The size of the Scrollbar. \par
{\i Style} The style of scrollbar you want to create, see Scrollbar documentation for more details. \par
}
}{
Definition at line 411 of file uilayer.cpp.}\par
}
{\xe \v CreateTextButton\:phys::UILayer}
{\xe \v phys::UILayer\:CreateTextButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 UI::TextButton}}}
 * phys::UILayer::CreateTextButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 {\i Text})}
}\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text button within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created button. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the button. \par
{\i Position} The top left position of the button. \par
{\i Size} The size of the Button. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the button. \par
}
}{
Definition at line 151 of file uilayer.cpp.}\par
}
{\xe \v CreateWidgetWindow\:phys::UILayer}
{\xe \v phys::UILayer\:CreateWidgetWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Window}}}
 * phys::UILayer::CreateWidgetWindow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size})}
}\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Window within this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created Window. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the Window. \par
{\i Position} The top left position of the Window. \par
{\i Size} The size of the Window. \par
}
}{
Definition at line 439 of file uilayer.cpp.}\par
}
{\xe \v DestroyButton\:phys::UILayer}
{\xe \v phys::UILayer\:DestroyButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::DestroyButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the button you want destroyed. \par
}
}{
Definition at line 181 of file uilayer.cpp.}\par
}
{\xe \v DestroyCaption\:phys::UILayer}
{\xe \v phys::UILayer\:DestroyCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::DestroyCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the caption you want destroyed. \par
}
}{
Definition at line 254 of file uilayer.cpp.}\par
}
{\xe \v DestroyLineList\:phys::UILayer}
{\xe \v phys::UILayer\:DestroyLineList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::DestroyLineList ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 UI::LineList}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a line list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the line list you want destroyed. \par
}
}{
Definition at line 327 of file uilayer.cpp.}\par
}
{\xe \v DestroyMarkupText\:phys::UILayer}
{\xe \v phys::UILayer\:DestroyMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::DestroyMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the markup text you want destroyed. \par
}
}{
Definition at line 297 of file uilayer.cpp.}\par
}
{\xe \v DestroyRectangle\:phys::UILayer}
{\xe \v phys::UILayer\:DestroyRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::DestroyRectangle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the rectangle you want destroyed. \par
}
}{
Definition at line 211 of file uilayer.cpp.}\par
}
{\xe \v DestroyWidget\:phys::UILayer}
{\xe \v phys::UILayer\:DestroyWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::DestroyWidget ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the widget you want destroyed. \par
}
}{
Definition at line 363 of file uilayer.cpp.}\par
}
{\xe \v GetButton\:phys::UILayer}
{\xe \v phys::UILayer\:GetButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UILayer::GetButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button at the specified index. \par
}}{
Definition at line 171 of file uilayer.cpp.}\par
}
{\xe \v GetButton\:phys::UILayer}
{\xe \v phys::UILayer\:GetButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UILayer::GetButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button of the specified name. \par
}}{
Definition at line 158 of file uilayer.cpp.}\par
}
{\xe \v GetCaption\:phys::UILayer}
{\xe \v phys::UILayer\:GetCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * phys::UILayer::GetCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the caption of the specified name. \par
}}{
Definition at line 231 of file uilayer.cpp.}\par
}
{\xe \v GetCaption\:phys::UILayer}
{\xe \v phys::UILayer\:GetCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * phys::UILayer::GetCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the caption at the specified index. \par
}}{
Definition at line 244 of file uilayer.cpp.}\par
}
{\xe \v GetGorillaLayer\:phys::UILayer}
{\xe \v phys::UILayer\:GetGorillaLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gorilla::Layer * phys::UILayer::GetGorillaLayer ()}
}\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal gorilla layer pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 493 of file uilayer.cpp.}\par
}
{\xe \v GetLineList\:phys::UILayer}
{\xe \v phys::UILayer\:GetLineList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 UI::LineList}}}
 * phys::UILayer::GetLineList ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created line list by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the line list at the specified index. \par
}}{
Definition at line 317 of file uilayer.cpp.}\par
}
{\xe \v GetMarkupText\:phys::UILayer}
{\xe \v phys::UILayer\:GetMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * phys::UILayer::GetMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the markup text of the specified name. \par
}}{
Definition at line 274 of file uilayer.cpp.}\par
}
{\xe \v GetMarkupText\:phys::UILayer}
{\xe \v phys::UILayer\:GetMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * phys::UILayer::GetMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the markup text at the specified index. \par
}}{
Definition at line 287 of file uilayer.cpp.}\par
}
{\xe \v GetName\:phys::UILayer}
{\xe \v phys::UILayer\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & phys::UILayer::GetName ()}
}\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name of this layer. \par
}}{
Definition at line 114 of file uilayer.cpp.}\par
}
{\xe \v GetNumButtons\:phys::UILayer}
{\xe \v phys::UILayer\:GetNumButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UILayer::GetNumButtons ()}
}\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of buttons created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of buttons this class is storing. \par
}}{
Definition at line 176 of file uilayer.cpp.}\par
}
{\xe \v GetNumCaptions\:phys::UILayer}
{\xe \v phys::UILayer\:GetNumCaptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UILayer::GetNumCaptions ()}
}\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of captions created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of captions this class is storing. \par
}}{
Definition at line 249 of file uilayer.cpp.}\par
}
{\xe \v GetNumLineLists\:phys::UILayer}
{\xe \v phys::UILayer\:GetNumLineLists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UILayer::GetNumLineLists ()}
}\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of line lists created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of line lists this class is storing. \par
}}{
Definition at line 322 of file uilayer.cpp.}\par
}
{\xe \v GetNumMarkupTexts\:phys::UILayer}
{\xe \v phys::UILayer\:GetNumMarkupTexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UILayer::GetNumMarkupTexts ()}
}\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of markup texts created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of markup texts this class is storing. \par
}}{
Definition at line 292 of file uilayer.cpp.}\par
}
{\xe \v GetNumRectangles\:phys::UILayer}
{\xe \v phys::UILayer\:GetNumRectangles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UILayer::GetNumRectangles ()}
}\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of rectangles created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of rectangles this class is storing. \par
}}{
Definition at line 206 of file uilayer.cpp.}\par
}
{\xe \v GetNumWidgets\:phys::UILayer}
{\xe \v phys::UILayer\:GetNumWidgets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UILayer::GetNumWidgets ()}
}\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of widgets created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of widgets this class is storing. \par
}}{
Definition at line 358 of file uilayer.cpp.}\par
}
{\xe \v GetParent\:phys::UILayer}
{\xe \v phys::UILayer\:GetParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * phys::UILayer::GetParent ()}
}\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the parent screen of this layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the screen that created this layer. \par
}}{
Definition at line 119 of file uilayer.cpp.}\par
}
{\xe \v GetRectangle\:phys::UILayer}
{\xe \v phys::UILayer\:GetRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * phys::UILayer::GetRectangle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created rectangle by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the rectangle at the specified index. \par
}}{
Definition at line 201 of file uilayer.cpp.}\par
}
{\xe \v GetVisible\:phys::UILayer}
{\xe \v phys::UILayer\:GetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UILayer::GetVisible ()}
}\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the layers' visability. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visability of the layer. \par
}}{
Definition at line 129 of file uilayer.cpp.}\par
}
{\xe \v GetWidget\:phys::UILayer}
{\xe \v phys::UILayer\:GetWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UILayer::GetWidget ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the widget at the specified index. \par
}}{
Definition at line 353 of file uilayer.cpp.}\par
}
{\xe \v GetWidget\:phys::UILayer}
{\xe \v phys::UILayer\:GetWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UILayer::GetWidget ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the widget of the specified name. \par
}}{
Definition at line 340 of file uilayer.cpp.}\par
}
{\xe \v SetVisible\:phys::UILayer}
{\xe \v phys::UILayer\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UILayer::SetVisible (bool {\i Visible})}
}\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the layers' visability. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visable} A bool representing the visability of the layer. \par
}
}{
Definition at line 124 of file uilayer.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uilayer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uilayer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UIManager Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UIManager}
{\xe \v phys::UIManager}
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for any and all user interactions with the User interface/HUD. }}\par
{
{\f2 #include <uimanager.h>}}\par
Inheritance diagram for phys::UIManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dc5/classphys_1_1UIManager.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBX" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBY" }{}}{\fldrslt {\cs37\ul\cf2 ~UIManager}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 Initialize}}}
 (){\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKV" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopItems}}}
 (){\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inherited from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBZ" }{}}{\fldrslt {\cs37\ul\cf2 LoadGorilla}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loads a Gorilla file for use with this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCA" }{}}{\fldrslt {\cs37\ul\cf2 RedrawAll}}}
 (bool Force=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces everything loaded into the UI system to be redrawn. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCB" }{}}{\fldrslt {\cs37\ul\cf2 GetHoveredButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button the mouse is hovering over. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCC" }{}}{\fldrslt {\cs37\ul\cf2 GetHoveredWidget}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Widget the mouse is hovering over. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCD" }{}}{\fldrslt {\cs37\ul\cf2 GetWidgetFocus}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current widget being controlled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCE" }{}}{\fldrslt {\cs37\ul\cf2 CreateScreen}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &ScreenName, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Atlas, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 *WindowViewport)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an internal HUD screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCF" }{}}{\fldrslt {\cs37\ul\cf2 GetScreen}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created screen by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCG" }{}}{\fldrslt {\cs37\ul\cf2 GetScreen}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created screen by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCH" }{}}{\fldrslt {\cs37\ul\cf2 GetNumScreens}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of screens created and stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCI" }{}}{\fldrslt {\cs37\ul\cf2 DestroyScreen}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 *Screen)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a screen and removes all trace of it from the manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCJ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyAllScreens}}}
 (){\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes all screens stored in this manager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCK" }{}}{\fldrslt {\cs37\ul\cf2 GetLayer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches all screens and gets the named Layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCL" }{}}{\fldrslt {\cs37\ul\cf2 CheckButtonMouseIsOver}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches all visable screens and layers to see if a button was clicked. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCM" }{}}{\fldrslt {\cs37\ul\cf2 CheckWidgetMouseIsOver}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches all visable screens and layers to see if a widget was clicked. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCN" }{}}{\fldrslt {\cs37\ul\cf2 MouseIsInUISystem}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the mouse is over a UI element. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCO" }{}}{\fldrslt {\cs37\ul\cf2 GetInputQueryer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the input queryer used for automation in this subsystem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of manager that this manager is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Gorilla::Silverback * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCP" }{}}{\fldrslt {\cs37\ul\cf2 GetSilverbackPointer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal silverback pointer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b HoverChecks} (){\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WidgetFocusUpdate} (){\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Silverback * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCS" }{}}{\fldrslt {\cs37\ul\cf2 Silver}}}
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer for the Gorilla core class, where this manager gets it's functionality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * > {\b Screens}{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\b HoveredButton}{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\b HoveredWidget}{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\b WidgetFocus}{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}}
 * {\b InputQueryer}{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for any and all user interactions with the User interface/HUD. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently, you have to create the UI/HUD in code. Font and sprite data is loaded through a premade Gorilla file(*.gorilla). \par
}{
Definition at line 75 of file uimanager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UIManager\:phys::UIManager}
{\xe \v phys::UIManager\:UIManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UIManager::UIManager ()}
}\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard class initialization constructor. \par
}{
Definition at line 59 of file uimanager.cpp.}\par
}
{\xe \v ~UIManager\:phys::UIManager}
{\xe \v phys::UIManager\:~UIManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UIManager::~UIManager ()}
}\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class destructor. \par
}{
Definition at line 69 of file uimanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckButtonMouseIsOver\:phys::UIManager}
{\xe \v phys::UIManager\:CheckButtonMouseIsOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UIManager::CheckButtonMouseIsOver ()}
}\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches all visable screens and layers to see if a button was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called automatically once every frame. Should only be called on manually if you need more then one check per frame. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the button clicked if there is one, NULL if not. \par
}}{
Definition at line 237 of file uimanager.cpp.}\par
}
{\xe \v CheckWidgetMouseIsOver\:phys::UIManager}
{\xe \v phys::UIManager\:CheckWidgetMouseIsOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UIManager::CheckWidgetMouseIsOver ()}
}\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches all visable screens and layers to see if a widget was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called automatically once every frame. Should only be called on manually if you need more then one check per frame. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the widget clicked if there is one, NULL if not. \par
}}{
Definition at line 253 of file uimanager.cpp.}\par
}
{\xe \v CreateScreen\:phys::UIManager}
{\xe \v phys::UIManager\:CreateScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * phys::UIManager::CreateScreen (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i ScreenName}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Atlas}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * {\i WindowViewport})}
}\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an internal HUD screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Screens are the base set of renderable UI you can use, allowing you to switch entire sets of UI's on the fly if needed. For performance reasons you should always keep the number of screens you create to a minimum. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ScreenName} The name to be given to the screen. \par
{\i Atlas} The name of a previously loaded Gorilla file to be used with this screen. \par
{\i WindowViewport} The viewport to create this screen in. \par
}
}{
Definition at line 166 of file uimanager.cpp.}\par
}
{\xe \v DestroyScreen\:phys::UIManager}
{\xe \v phys::UIManager\:DestroyScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UIManager::DestroyScreen ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * {\i Screen})}
}\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes a screen and removes all trace of it from the manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroying a screen will also destroy all of it's layers, and everything contained in those layers. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Screen} The screen to be destroyed. \par
}
}{
Definition at line 199 of file uimanager.cpp.}\par
}
{\xe \v GetHoveredButton\:phys::UIManager}
{\xe \v phys::UIManager\:GetHoveredButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UIManager::GetHoveredButton ()}
}\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button the mouse is hovering over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This check will look through both standalone buttons and widget buttons. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button, or NULL if it's not over any visable buttons. \par
}}{
Definition at line 151 of file uimanager.cpp.}\par
}
{\xe \v GetHoveredWidget\:phys::UIManager}
{\xe \v phys::UIManager\:GetHoveredWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UIManager::GetHoveredWidget ()}
}\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Widget the mouse is hovering over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the widget found during widget checks belongs to a widget, this will get that widget. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the widget, or NULL if it's not over any visable buttons. \par
}}{
Definition at line 156 of file uimanager.cpp.}\par
}
{\xe \v GetInputQueryer\:phys::UIManager}
{\xe \v phys::UIManager\:GetInputQueryer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}}
 * phys::UIManager::GetInputQueryer ()}
}\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the input queryer used for automation in this subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 InputQueryTool}}} used to query input events for this subsystem. \par
}}{
Definition at line 279 of file uimanager.cpp.}\par
}
{\xe \v GetLayer\:phys::UIManager}
{\xe \v phys::UIManager\:GetLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * phys::UIManager::GetLayer ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches all screens and gets the named Layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the named layer if found, NULL if not. \par
}}{
Definition at line 226 of file uimanager.cpp.}\par
}
{\xe \v GetNumScreens\:phys::UIManager}
{\xe \v phys::UIManager\:GetNumScreens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UIManager::GetNumScreens ()}
}\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of screens created and stored in this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of screens this manager is storing. \par
}}{
Definition at line 194 of file uimanager.cpp.}\par
}
{\xe \v GetScreen\:phys::UIManager}
{\xe \v phys::UIManager\:GetScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * phys::UIManager::GetScreen (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created screen by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the screen of the specified name. \par
}}{
Definition at line 175 of file uimanager.cpp.}\par
}
{\xe \v GetScreen\:phys::UIManager}
{\xe \v phys::UIManager\:GetScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 * phys::UIManager::GetScreen ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created screen by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the screen at the specified index. \par
}}{
Definition at line 189 of file uimanager.cpp.}\par
}
{\xe \v GetSilverbackPointer\:phys::UIManager}
{\xe \v phys::UIManager\:GetSilverbackPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gorilla::Silverback * phys::UIManager::GetSilverbackPointer ()}
}\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal silverback pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the internal silverback class. \par
}\par}}{
Definition at line 287 of file uimanager.cpp.}\par
}
{\xe \v GetType\:phys::UIManager}
{\xe \v phys::UIManager\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 phys::UIManager::GetType () const{\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of manager that this manager is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing the type of manager that this manager is. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 phys::ManagerBase}}}
.}\par
{
Definition at line 284 of file uimanager.cpp.}\par
}
{\xe \v GetWidgetFocus\:phys::UIManager}
{\xe \v phys::UIManager\:GetWidgetFocus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UIManager::GetWidgetFocus ()}
}\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current widget being controlled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The widget control is used mostly for manipulating widgets while the mouse is not currently hovering over them, such as the click and drag action of scrollbars and resizing windows. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the currently controlled widget, or NULL if none are being controlled this frame. \par
}}{
Definition at line 161 of file uimanager.cpp.}\par
}
{\xe \v LoadGorilla\:phys::UIManager}
{\xe \v phys::UIManager\:LoadGorilla}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UIManager::LoadGorilla (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loads a Gorilla file for use with this manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the file to be loaded, not including the extension. \par
}
}{
Definition at line 138 of file uimanager.cpp.}\par
}
{\xe \v MouseIsInUISystem\:phys::UIManager}
{\xe \v phys::UIManager\:MouseIsInUISystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UIManager::MouseIsInUISystem ()}
}\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the mouse is over a UI element. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This should only be called on after this manager does it's main loop items for best results. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the mouse is over a visable UI element, false if not. \par
}}{
Definition at line 269 of file uimanager.cpp.}\par
}
{\xe \v RedrawAll\:phys::UIManager}
{\xe \v phys::UIManager\:RedrawAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UIManager::RedrawAll (bool {\i Force} = {\f2 false})}
}\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces everything loaded into the UI system to be redrawn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Force} If Force is set to true, it will redraw everything regardless of if it has changed. \par
}
}{
Definition at line 143 of file uimanager.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimanager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uimanager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UIScreen Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UIScreen}
{\xe \v phys::UIScreen}
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class for creating UI's. It is responsible for storing and keeping track of all the elements of a single UI screen. }}\par
{
{\f2 #include <uiscreen.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCY" }{}}{\fldrslt {\cs37\ul\cf2 UIScreen}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, Gorilla::Screen *GScreen, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 *WindowViewport)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCZ" }{}}{\fldrslt {\cs37\ul\cf2 ~UIScreen}}}
 (){\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDA" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDB" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool Visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the screens visability. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDC" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the screens visability. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDD" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces the screen to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDE" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces the screen to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 CreateLayer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Zorder)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a layer in the GUI screen to place GUI objects in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDF" }{}}{\fldrslt {\cs37\ul\cf2 GetLayer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created layer by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDG" }{}}{\fldrslt {\cs37\ul\cf2 GetLayer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created layer by it's index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDH" }{}}{\fldrslt {\cs37\ul\cf2 GetLayerbyZorder}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Zorder)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created layer by it's Zorder. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 GetNumLayers}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of layers created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDJ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyLayer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy's a previously created layer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDK" }{}}{\fldrslt {\cs37\ul\cf2 GetViewportDimensions}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current viewport dimensions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDL" }{}}{\fldrslt {\cs37\ul\cf2 CheckButtonMouseIsOver}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button the mouse is over if any. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDM" }{}}{\fldrslt {\cs37\ul\cf2 CheckWidgetMouseIsOver}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the widget the mouse is over if any. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Gorilla::Screen * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDN" }{}}{\fldrslt {\cs37\ul\cf2 GetGorillaScreen}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal screen this screen is based on. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Gorilla::Screen * {\b GorillaScreen}{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * {\b GameViewport}{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\b Name}{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::map< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * > {\b Layers}{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a helper class for creating UI's. It is responsible for storing and keeping track of all the elements of a single UI screen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UI's can optionally be divided up into Screens, or "pages". Each screen is batched together for rendering, so keeping the amount of screens to a minimum will improve performance. \par
}{
Definition at line 72 of file uiscreen.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UIScreen\:phys::UIScreen}
{\xe \v phys::UIScreen\:UIScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UIScreen::UIScreen (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, Gorilla::Screen * {\i GScreen}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 * {\i WindowViewport})}
}\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of this screen. \par
{\i GScreen} The Gorilla Screen this Screen is based on. \par
{\i WindowViewport} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}} to which this screen belongs. \par
}
}{
Definition at line 53 of file uiscreen.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckButtonMouseIsOver\:phys::UIScreen}
{\xe \v phys::UIScreen\:CheckButtonMouseIsOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * phys::UIScreen::CheckButtonMouseIsOver ()}
}\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the button the mouse is over if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function searches only the visable layers contained in this screen. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the button the mouse is over, or NULL if there are none. \par
}}{
Definition at line 165 of file uiscreen.cpp.}\par
}
{\xe \v CheckWidgetMouseIsOver\:phys::UIScreen}
{\xe \v phys::UIScreen\:CheckWidgetMouseIsOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * phys::UIScreen::CheckWidgetMouseIsOver ()}
}\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the widget the mouse is over if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function searches only the visable layers contained in this screen. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the widget the mouse is over, or NULL if there are none. \par
}}{
Definition at line 181 of file uiscreen.cpp.}\par
}
{\xe \v CreateLayer\:phys::UIScreen}
{\xe \v phys::UIScreen\:CreateLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * phys::UIScreen::CreateLayer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Zorder})}
}\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a layer in the GUI screen to place GUI objects in. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A GUI layer is exactly that, a layer of GUI objects. You can have multiple GUI layers per screen. The Zorder of the layer determines it's visability if there are multiple layers. If the Zorder of one layer is higher then another in the same space, then the Zorder with the higher Zorder will be rendered...giving it the appearance of being on top of the other GUI object or objects. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name to be given to the layer. \par
{\i Zorder} The layers Zorder, as explained above. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000025" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid add an exception here or maybe log entry, some notification it failed. \par
}
}}\par
{
Definition at line 91 of file uiscreen.cpp.}\par
}
{\xe \v DestroyLayer\:phys::UIScreen}
{\xe \v phys::UIScreen\:DestroyLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UIScreen::DestroyLayer ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy's a previously created layer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the layer to be destroyed. \par
}
}{
Definition at line 144 of file uiscreen.cpp.}\par
}
{\xe \v GetGorillaScreen\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetGorillaScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gorilla::Screen * phys::UIScreen::GetGorillaScreen ()}
}\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal screen this screen is based on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Gorilla screen this screen is based on. \par
}\par}}{
Definition at line 197 of file uiscreen.cpp.}\par
}
{\xe \v GetLayer\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * phys::UIScreen::GetLayer ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created layer by it's index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the layer at the specified index. \par
}}{
Definition at line 118 of file uiscreen.cpp.}\par
}
{\xe \v GetLayer\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * phys::UIScreen::GetLayer (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created layer by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the layer of the specified name. \par
}}{
Definition at line 105 of file uiscreen.cpp.}\par
}
{\xe \v GetLayerbyZorder\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetLayerbyZorder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * phys::UIScreen::GetLayerbyZorder ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Zorder})}
}\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created layer by it's Zorder. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the layer with the specified Zorder. \par
}}{
Definition at line 131 of file uiscreen.cpp.}\par
}
{\xe \v GetName\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & phys::UIScreen::GetName ()}
}\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name of this screen. \par
}}{
Definition at line 66 of file uiscreen.cpp.}\par
}
{\xe \v GetNumLayers\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetNumLayers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UIScreen::GetNumLayers ()}
}\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of layers created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of layers this class is storing. \par
}}{
Definition at line 139 of file uiscreen.cpp.}\par
}
{\xe \v GetViewportDimensions\:phys::UIScreen}
{\xe \v phys::UIScreen\:GetViewportDimensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UIScreen::GetViewportDimensions ()}
}\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current viewport dimensions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} representing the current viewport dimensions. \par
}}{
Definition at line 159 of file uiscreen.cpp.}\par
}
{\xe \v IsVisible\:phys::UIScreen}
{\xe \v phys::UIScreen\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UIScreen::IsVisible ()}
}\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the screens visability. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visability of the screen. \par
}}{
Definition at line 76 of file uiscreen.cpp.}\par
}
{\xe \v SetVisible\:phys::UIScreen}
{\xe \v phys::UIScreen\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UIScreen::SetVisible (bool {\i Visible})}
}\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the screens visability. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Visable} A bool representing the visability of the screen. \par
}
}{
Definition at line 71 of file uiscreen.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiscreen.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiscreen.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Vector2 Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Vector2}
{\xe \v phys::Vector2}
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point on a 2 dimentional area, such as a screen. }}\par
{
{\f2 #include <vector2.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDT" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDU" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 x, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real value Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDV" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 (Ogre::Vector2 Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Value Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Vector2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDW" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreVector2}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Ogre vector2. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDX" }{}}{\fldrslt {\cs37\ul\cf2 ExtractOgreVector2}}}
 (Ogre::Vector2 Ours)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Ogre vector2. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}
 &Vec2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}
 &Vec2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEA" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const Ogre::Vector2 &Vec2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const Ogre::Vector2 &Vec2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEC" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACED" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEE" }{}}{\fldrslt {\cs37\ul\cf2 operator*=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEF" }{}}{\fldrslt {\cs37\ul\cf2 operator/=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEG" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Vec2) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEH" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Vec2) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subraction Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEI" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Vec2) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplaction Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEJ" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Vec2) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division Operator. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEK" }{}}{\fldrslt {\cs37\ul\cf2 X}}}
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coordinate on the X vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEL" }{}}{\fldrslt {\cs37\ul\cf2 Y}}}
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coordinate on the Y vector. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point on a 2 dimentional area, such as a screen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This contains an X and Y value used to represent coordinates. This also has a number of facilities to make converting to graphics subsystems as easy as possible. \par
}{
Definition at line 62 of file vector2.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Vector2\:phys::Vector2}
{\xe \v phys::Vector2\:Vector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector2::Vector2 ()}
}\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic all zero initialization constructor. \par
}{
Definition at line 48 of file vector2.cpp.}\par
}
{\xe \v Vector2\:phys::Vector2}
{\xe \v phys::Vector2\:Vector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector2::Vector2 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i x}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i y})}
}\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real value Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets both vectors. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} Coordinate on the X vector. \par
{\i y} Coordinate on the Y vector. \par
}
}{
Definition at line 54 of file vector2.cpp.}\par
}
{\xe \v Vector2\:phys::Vector2}
{\xe \v phys::Vector2\:Vector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector2::Vector2 (Ogre::Vector2 {\i Vec})}
}\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Value Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all values to match the Ogre vector. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} The vector to be copied to make this vector. \par
}
}{
Definition at line 60 of file vector2.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExtractOgreVector2\:phys::Vector2}
{\xe \v phys::Vector2\:ExtractOgreVector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector2::ExtractOgreVector2 (Ogre::Vector2 {\i Ours})}
}\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Ogre vector2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will copy the values stored in an existing Ogre vector2 and set the values of this class to be the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Ours} The vector2 to be extracted. \par
}
}{
Definition at line 73 of file vector2.cpp.}\par
}
{\xe \v GetOgreVector2\:phys::Vector2}
{\xe \v phys::Vector2\:GetOgreVector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Vector2 phys::Vector2::GetOgreVector2 () const}
}\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Ogre vector2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Ogre vector2 with values equal to this class and returns it. \par
}{
Definition at line 65 of file vector2.cpp.}\par
}
{\xe \v operator!=\:phys::Vector2}
{\xe \v phys::Vector2\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector2::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}
 & {\i Vec2})}
}\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X!=X or Y!=Y. If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}. \par
}
}{
Definition at line 89 of file vector2.cpp.}\par
}
{\xe \v operator!=\:phys::Vector2}
{\xe \v phys::Vector2\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector2::operator!= (const Ogre::Vector2 & {\i Vec2})}
}\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X!=X or Y!=Y. If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other Ogre::Vector2. \par
}
}{
Definition at line 103 of file vector2.cpp.}\par
}
{\xe \v operator*\:phys::Vector2}
{\xe \v phys::Vector2\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::Vector2::operator* (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Vec2}) const}
}\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplaction Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for multiplaction from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} \par
}
}{
Definition at line 161 of file vector2.cpp.}\par
}
{\xe \v operator*\:phys::Vector2}
{\xe \v phys::Vector2\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::Vector2::operator* (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar}) const}
}\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Multiplies X, Y and Z by scalar \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} that has been scaled \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} by \par
}
}{
Definition at line 112 of file vector2.cpp.}\par
}
{\xe \v operator*=\:phys::Vector2}
{\xe \v phys::Vector2\:operator*=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector2::operator*= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar})}
}\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Multiplies X, Y and Z by scalar and stores the changes in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} by. \par
}
}{
Definition at line 130 of file vector2.cpp.}\par
}
{\xe \v operator+\:phys::Vector2}
{\xe \v phys::Vector2\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::Vector2::operator+ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Vec2}) const}
}\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for addition from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} \par
}
}{
Definition at line 145 of file vector2.cpp.}\par
}
{\xe \v operator-\:phys::Vector2}
{\xe \v phys::Vector2\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::Vector2::operator- (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Vec2}) const}
}\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subraction Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for subtraction from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} \par
}
}{
Definition at line 153 of file vector2.cpp.}\par
}
{\xe \v operator/\:phys::Vector2}
{\xe \v phys::Vector2\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::Vector2::operator/ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar}) const}
}\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Diisionn X, Y and Z by scalar \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} that has been scaled \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} by \par
}
}{
Definition at line 120 of file vector2.cpp.}\par
}
{\xe \v operator/\:phys::Vector2}
{\xe \v phys::Vector2\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::Vector2::operator/ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Vec2}) const}
}\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for division from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}} \par
}
}{
Definition at line 169 of file vector2.cpp.}\par
}
{\xe \v operator/=\:phys::Vector2}
{\xe \v phys::Vector2\:operator/=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector2::operator/= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar})}
}\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Division X, Y and Z by scalar and and stores the changes in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} by \par
}
}{
Definition at line 136 of file vector2.cpp.}\par
}
{\xe \v operator==\:phys::Vector2}
{\xe \v phys::Vector2\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector2::operator== (const Ogre::Vector2 & {\i Vec2})}
}\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X==X and Y==Y. If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other Ogre::Vector2. \par
}
}{
Definition at line 96 of file vector2.cpp.}\par
}
{\xe \v operator==\:phys::Vector2}
{\xe \v phys::Vector2\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector2::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}
 & {\i Vec2})}
}\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X==X and Y==Y. If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec2} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector2}}}. \par
}
}{
Definition at line 82 of file vector2.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
vector2.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
vector2.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Vector3 Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Vector3}
{\xe \v phys::Vector3}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point in space, or a vector through space. }}\par
{
{\f2 #include <vector3.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEM" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEN" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEO" }{}}{\fldrslt {\cs37\ul\cf2 X}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEP" }{}}{\fldrslt {\cs37\ul\cf2 Y}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 Z}}}
)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real value Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACER" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 (const Ogre::Vector3 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Value Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACES" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 (const btVector3 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Value Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACET" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 (const cAudio::cVector3 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Value Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEU" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEV" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const btVector3 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator to convert from Bullet Vectors. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEW" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const Ogre::Vector3 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator to convert from Ogre Vectors. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEX" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const cAudio::cVector3 &Vec)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator to convert from cAudio Vectors. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEY" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Additive Inverse Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEZ" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFA" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFB" }{}}{\fldrslt {\cs37\ul\cf2 operator*=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 operator/=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &scalar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFD" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const btVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFF" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const Ogre::Vector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFG" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFH" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const btVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFI" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const Ogre::Vector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFJ" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFK" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subraction Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplaction Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFM" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFN" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const btVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Addition Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const btVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Subtraction Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFP" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const btVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Multiplication Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const btVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Division Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFR" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const Ogre::Vector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Addition Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFS" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const Ogre::Vector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Subtraction Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFT" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const Ogre::Vector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Multiplication Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const Ogre::Vector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Division Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFV" }{}}{\fldrslt {\cs37\ul\cf2 operator+}}}
 (const cAudio::cVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Addition Operator }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 operator-}}}
 (const cAudio::cVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Subtraction Operator }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFX" }{}}{\fldrslt {\cs37\ul\cf2 operator*}}}
 (const cAudio::cVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Multiplication Operator }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 operator/}}}
 (const cAudio::cVector3 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Division Operator }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFZ" }{}}{\fldrslt {\cs37\ul\cf2 CrossProduct}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to calculate the crossproduct of this and another vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 dotProduct}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Vec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to calculate the dotproduct of this and another vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 Normalize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will change this point into it's own normal relative to the origin. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 GetNormal}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the normal for this relative to the origin. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGB" }{}}{\fldrslt {\cs37\ul\cf2 GetDirection}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &Destination) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get the direction between two points. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 Inverse}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will inverse the reals in the vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
btVector3 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGC" }{}}{\fldrslt {\cs37\ul\cf2 GetBulletVector3}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Bullet vector3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGD" }{}}{\fldrslt {\cs37\ul\cf2 ExtractBulletVector3}}}
 (btVector3 temp)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Bullet vector3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Vector3 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreVector3}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Ogre vector3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGF" }{}}{\fldrslt {\cs37\ul\cf2 ExtractOgreVector3}}}
 (Ogre::Vector3 temp)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Ogre vector3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cAudio::cVector3 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 GetcAudioVector3}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a cAudio vector3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGH" }{}}{\fldrslt {\cs37\ul\cf2 ExtractcAudioVector3}}}
 (cAudio::cVector3 temp)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing cAudio vector3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 Distance}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &OtherVec) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This return the distance between this point and another. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGJ" }{}}{\fldrslt {\cs37\ul\cf2 Unit_X}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the X unit of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 Unit_Y}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the Y unit of a vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGL" }{}}{\fldrslt {\cs37\ul\cf2 Unit_Z}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the Z unit of a vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGM" }{}}{\fldrslt {\cs37\ul\cf2 Neg_Unit_X}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the negative X unit of a vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGN" }{}}{\fldrslt {\cs37\ul\cf2 Neg_Unit_Y}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the negative Y unit of a vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGO" }{}}{\fldrslt {\cs37\ul\cf2 Neg_Unit_Z}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the negative Z unit of a vector. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEO" }{}}{\fldrslt {\cs37\ul\cf2 X}}}
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coordinate on the X vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEP" }{}}{\fldrslt {\cs37\ul\cf2 Y}}}
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coordinate on the Y vector. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 Z}}}
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coordinate on the Z vector. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to represent a point in space, or a vector through space. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This contains an X, Y and a Z value used to represent coordinates. This also has a number of facilities to make converting from Physics subsystem vectors or graphics subsystems as easy as possible \par
}{
Definition at line 67 of file vector3.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Vector3\:phys::Vector3}
{\xe \v phys::Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3::Vector3 ()}
}\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic all zero initialization constructor. \par
}{
Definition at line 56 of file vector3.cpp.}\par
}
{\xe \v Vector3\:phys::Vector3}
{\xe \v phys::Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3::Vector3 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i X}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Y}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Z})}
}\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real value Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all three vectors. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i X} Coordinate on the X vector. \par
{\i Y} Coordinate on the Y vector. \par
{\i Z} Coordinate on the Z vector. \par
}
}{
Definition at line 63 of file vector3.cpp.}\par
}
{\xe \v Vector3\:phys::Vector3}
{\xe \v phys::Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3::Vector3 (const Ogre::Vector3 & {\i Vec}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Value Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all values to match the Ogre vector. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} The vector to be copied to make this vector. \par
}
}{
Definition at line 70 of file vector3.cpp.}\par
}
{\xe \v Vector3\:phys::Vector3}
{\xe \v phys::Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3::Vector3 (const btVector3 & {\i Vec}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Value Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all values to match the Bullet vector. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} The vector to be copied to make this vector. \par
}
}{
Definition at line 73 of file vector3.cpp.}\par
}
{\xe \v Vector3\:phys::Vector3}
{\xe \v phys::Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3::Vector3 (const cAudio::cVector3 & {\i Vec}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Value Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor that sets all values to match the cAudio vector. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} The vector to be copied to make this vector. \par
}
}{
Definition at line 76 of file vector3.cpp.}\par
}
{\xe \v Vector3\:phys::Vector3}
{\xe \v phys::Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3::Vector3 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 & {\i Vec})}
}\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} to copy to make this one. \par
}
}{
Definition at line 79 of file vector3.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CrossProduct\:phys::Vector3}
{\xe \v phys::Vector3\:CrossProduct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::CrossProduct (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to calculate the crossproduct of this and another vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a third vector, which should be on a line perpendicular to lines that contain the origin and the other vectors \par\par Thanks to the guys at Ogre3d for the well written version of this function that we based this on. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} the Vector to work with to create the cross product \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This is the crossproduct of this vector and Vec \par
}}{
Definition at line 240 of file vector3.cpp.}\par
}
{\xe \v Distance\:phys::Vector3}
{\xe \v phys::Vector3\:Distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Vector3::Distance (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i OtherVec}) const}
}\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This return the distance between this point and another. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This uses a 3d extension of pythagoras thereom to calculate the distance between This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} and another. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OtherVec} this is the other point to measure against \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a Real number which is the distance. \par
}}{
Definition at line 343 of file vector3.cpp.}\par
}
{\xe \v dotProduct\:phys::Vector3}
{\xe \v phys::Vector3\:dotProduct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Vector3::dotProduct (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to calculate the dotproduct of this and another vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This calculates the sum of the products of X, Y and Z. \par\par Thanks to the guys at Ogre3d for the well written version of this function that we based this on. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} The vector to work with to create the cross product \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This is the dotproduct of this vector and vec \par
}}{
Definition at line 249 of file vector3.cpp.}\par
}
{\xe \v ExtractBulletVector3\:phys::Vector3}
{\xe \v phys::Vector3\:ExtractBulletVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector3::ExtractBulletVector3 (btVector3 {\i temp})}
}\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Bullet vector3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will copy the values stored in an existing Bullet vector3 and set the values of this class to be the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i temp} The vector3 to be extracted. \par
}
}{
Definition at line 304 of file vector3.cpp.}\par
}
{\xe \v ExtractcAudioVector3\:phys::Vector3}
{\xe \v phys::Vector3\:ExtractcAudioVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector3::ExtractcAudioVector3 (cAudio::cVector3 {\i temp})}
}\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing cAudio vector3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will copy the values stored in an existing cAudio vector3 and set the values of this class to be the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i temp} The vector3 to be extracted. \par
}
}{
Definition at line 336 of file vector3.cpp.}\par
}
{\xe \v ExtractOgreVector3\:phys::Vector3}
{\xe \v phys::Vector3\:ExtractOgreVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector3::ExtractOgreVector3 (Ogre::Vector3 {\i temp})}
}\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies an existing Ogre vector3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will copy the values stored in an existing Ogre vector3 and set the values of this class to be the same. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i temp} The vector3 to be extracted. \par
}
}{
Definition at line 320 of file vector3.cpp.}\par
}
{\xe \v GetBulletVector3\:phys::Vector3}
{\xe \v phys::Vector3\:GetBulletVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
btVector3 phys::Vector3::GetBulletVector3 () const}
}\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Bullet vector3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Bullet vector3 with values equal to this class and returns it. \par
}{
Definition at line 294 of file vector3.cpp.}\par
}
{\xe \v GetcAudioVector3\:phys::Vector3}
{\xe \v phys::Vector3\:GetcAudioVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cAudio::cVector3 phys::Vector3::GetcAudioVector3 () const}
}\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a cAudio vector3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a cAudio vector3 with values equal to this class and returns it. \par
}{
Definition at line 327 of file vector3.cpp.}\par
}
{\xe \v GetDirection\:phys::Vector3}
{\xe \v phys::Vector3\:GetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::GetDirection (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Destination}) const}
}\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will get the direction between two points. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the direction expressed as a vector between this vector and another provided vector. The vector this is being calling from is assumed to be the origin. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Destination} The point in space to determine the direction for. \par
}
}{
Definition at line 277 of file vector3.cpp.}\par
}
{\xe \v GetNormal\:phys::Vector3}
{\xe \v phys::Vector3\:GetNormal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::GetNormal () const}
}\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns the normal for this relative to the origin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will return a vector that is 1 unit in away from the origin, if a line were starting and the origin it would pass through both the normal and the original point. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid At a vector3 that is the normal of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} or 0,0,0 if the current Vector is all 0s \par
}}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000027" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid discuss the merits throwing an error here. \par
}
}}\par
{
Definition at line 265 of file vector3.cpp.}\par
}
{\xe \v GetOgreVector3\:phys::Vector3}
{\xe \v phys::Vector3\:GetOgreVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Vector3 phys::Vector3::GetOgreVector3 () const}
}\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a Ogre vector3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a Ogre vector3 with values equal to this class and returns it. \par
}{
Definition at line 311 of file vector3.cpp.}\par
}
{\xe \v Inverse\:phys::Vector3}
{\xe \v phys::Vector3\:Inverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector3::Inverse ()}
}\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will inverse the reals in the vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will inverse all the reals in the vector. \par
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000028" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid fix division by zero in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 Vector3::Inverse()}}} \par
}
}}\par
{
Definition at line 284 of file vector3.cpp.}\par
}
{\xe \v Neg_Unit_X\:phys::Vector3}
{\xe \v phys::Vector3\:Neg_Unit_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::Neg_Unit_X (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the negative X unit of a vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}(-1,0,0). \par
}}{
Definition at line 94 of file vector3.cpp.}\par
}
{\xe \v Neg_Unit_Y\:phys::Vector3}
{\xe \v phys::Vector3\:Neg_Unit_Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::Neg_Unit_Y (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the negative Y unit of a vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}(0,-1,0). \par
}}{
Definition at line 97 of file vector3.cpp.}\par
}
{\xe \v Neg_Unit_Z\:phys::Vector3}
{\xe \v phys::Vector3\:Neg_Unit_Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::Neg_Unit_Z (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the negative Z unit of a vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}(0,0,-1). \par
}}{
Definition at line 100 of file vector3.cpp.}\par
}
{\xe \v Normalize\:phys::Vector3}
{\xe \v phys::Vector3\:Normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Vector3::Normalize ()}
}\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will change this point into it's own normal relative to the origin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will change this vector into one that is the same direction from the origin, but only one unit a away. \par
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000026" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid discuss the merits throwing an error here. \par
}
}}\par
{
Definition at line 254 of file vector3.cpp.}\par
}
{\xe \v operator!=\:phys::Vector3}
{\xe \v phys::Vector3\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector3::operator!= (const btVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X!=getX(), Y!=getY() or Z!=getZ(). If all of those match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is an btVector3 that needs to be compared with this. \par
}
}{
Definition at line 171 of file vector3.cpp.}\par
}
{\xe \v operator!=\:phys::Vector3}
{\xe \v phys::Vector3\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector3::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X!=X, Y!=Y or Z!=Z. If all of those match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}. \par
}
}{
Definition at line 168 of file vector3.cpp.}\par
}
{\xe \v operator!=\:phys::Vector3}
{\xe \v phys::Vector3\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector3::operator!= (const Ogre::Vector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inequality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X!=x, Y!=y or Z!=z. If all of those match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is an Ogre::Vector3 that needs to be compared with this. \par
}
}{
Definition at line 174 of file vector3.cpp.}\par
}
{\xe \v operator*\:phys::Vector3}
{\xe \v phys::Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator* (const cAudio::cVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Multiplication Operator }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for multiplying between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a cAudio::cVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the cAudio::cVector3 to be multiplied \par
}
}{
Definition at line 231 of file vector3.cpp.}\par
}
{\xe \v operator*\:phys::Vector3}
{\xe \v phys::Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator* (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar}) const}
}\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Multiplies X, Y and Z by scalar \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} that has been scaled \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} by \par
}
}{
Definition at line 133 of file vector3.cpp.}\par
}
{\xe \v operator*\:phys::Vector3}
{\xe \v phys::Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator* (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplaction Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for multiplaction from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} \par
}
}{
Definition at line 186 of file vector3.cpp.}\par
}
{\xe \v operator*\:phys::Vector3}
{\xe \v phys::Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator* (const btVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Multiplication Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for multiplication between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a btVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the btVector3 to be multiplied \par
}
}{
Definition at line 201 of file vector3.cpp.}\par
}
{\xe \v operator*\:phys::Vector3}
{\xe \v phys::Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator* (const Ogre::Vector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Multiplication Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for multiplying between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a Ogre::Vector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the Ogre::Vector3 to be multiplied \par
}
}{
Definition at line 216 of file vector3.cpp.}\par
}
{\xe \v operator*=\:phys::Vector3}
{\xe \v phys::Vector3\:operator*=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & phys::Vector3::operator*= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar})}
}\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by multiplication. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Multiplies X, Y and Z by scalar and stores the changes in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} by. \par
}
}{
Definition at line 141 of file vector3.cpp.}\par
}
{\xe \v operator+\:phys::Vector3}
{\xe \v phys::Vector3\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator+ (const cAudio::cVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Addition Operator }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for addition between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a cAudio::cVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the cAudio::cVector3 to be added \par
}
}{
Definition at line 225 of file vector3.cpp.}\par
}
{\xe \v operator+\:phys::Vector3}
{\xe \v phys::Vector3\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator+ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for addition from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} \par
}
}{
Definition at line 180 of file vector3.cpp.}\par
}
{\xe \v operator+\:phys::Vector3}
{\xe \v phys::Vector3\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator+ (const btVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Addition Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for addition between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a btVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the btVector3 to be added \par
}
}{
Definition at line 195 of file vector3.cpp.}\par
}
{\xe \v operator+\:phys::Vector3}
{\xe \v phys::Vector3\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator+ (const Ogre::Vector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Addition Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for addition between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a Ogre::Vector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the Ogre::Vector3 to be added \par
}
}{
Definition at line 210 of file vector3.cpp.}\par
}
{\xe \v operator-\:phys::Vector3}
{\xe \v phys::Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator- (const cAudio::cVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Subtraction Operator }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for subtraction between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a cAudio::cVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the cAudio::cVector3 to be subtracted \par
}
}{
Definition at line 228 of file vector3.cpp.}\par
}
{\xe \v operator-\:phys::Vector3}
{\xe \v phys::Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator- (const Ogre::Vector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Subtraction Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for subtraction between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a Ogre::Vector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the Ogre::Vector3 to be subtracted \par
}
}{
Definition at line 213 of file vector3.cpp.}\par
}
{\xe \v operator-\:phys::Vector3}
{\xe \v phys::Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator- (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subraction Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for subtraction from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} \par
}
}{
Definition at line 183 of file vector3.cpp.}\par
}
{\xe \v operator-\:phys::Vector3}
{\xe \v phys::Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator- (const btVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Subtraction Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for subtraction between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a btVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the btVector3 to be subtracted \par
}
}{
Definition at line 198 of file vector3.cpp.}\par
}
{\xe \v operator-\:phys::Vector3}
{\xe \v phys::Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator- ()}
}\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Additive Inverse Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the opposite {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} relative to 0,0,0 \par
}{
Definition at line 128 of file vector3.cpp.}\par
}
{\xe \v operator/\:phys::Vector3}
{\xe \v phys::Vector3\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator/ (const Ogre::Vector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ogre Division Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for division between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a Ogre::Vector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the Ogre::Vector3 to be divided \par
}
}{
Definition at line 219 of file vector3.cpp.}\par
}
{\xe \v operator/\:phys::Vector3}
{\xe \v phys::Vector3\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator/ (const cAudio::cVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cAudio Division Operator }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for division between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a cAudio::cVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the cAudio::cVector3 to be divided \par
}
}{
Definition at line 234 of file vector3.cpp.}\par
}
{\xe \v operator/\:phys::Vector3}
{\xe \v phys::Vector3\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator/ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for division from a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} \par
}
}{
Definition at line 189 of file vector3.cpp.}\par
}
{\xe \v operator/\:phys::Vector3}
{\xe \v phys::Vector3\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator/ (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar}) const}
}\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Diisionn X, Y and Z by scalar \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} that has been scaled \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} by \par
}
}{
Definition at line 136 of file vector3.cpp.}\par
}
{\xe \v operator/\:phys::Vector3}
{\xe \v phys::Vector3\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::operator/ (const btVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bullet Division Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows for division between a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}} and a btVector3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the btVector3 to be divided \par
}
}{
Definition at line 204 of file vector3.cpp.}\par
}
{\xe \v operator/=\:phys::Vector3}
{\xe \v phys::Vector3\:operator/=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & phys::Vector3::operator/= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i scalar})}
}\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling by Division. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Division X, Y and Z by scalar and and stores the changes in this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i scalar} This is the amount to scale the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} by \par
}
}{
Definition at line 149 of file vector3.cpp.}\par
}
{\xe \v operator=\:phys::Vector3}
{\xe \v phys::Vector3\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & phys::Vector3::operator= (const btVector3 & {\i Vec})}
}\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator to convert from Bullet Vectors. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This copies the x,y and z values from the bullet into this vector {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is a btVector3 that will be copied \par
}
}{
Definition at line 105 of file vector3.cpp.}\par
}
{\xe \v operator=\:phys::Vector3}
{\xe \v phys::Vector3\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & phys::Vector3::operator= (const cAudio::cVector3 & {\i Vec})}
}\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator to convert from cAudio Vectors. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This copies the x,y and z values from the bullet into this vector {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is a cAudio::cVector3 that will be copied. \par
}
}{
Definition at line 119 of file vector3.cpp.}\par
}
{\xe \v operator=\:phys::Vector3}
{\xe \v phys::Vector3\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & phys::Vector3::operator= (const Ogre::Vector3 & {\i Vec})}
}\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator to convert from Ogre Vectors. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This copies the x,y and z values from the bullet into this vector {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is a Ogre::Vector3 that will be copied. \par
}
}{
Definition at line 112 of file vector3.cpp.}\par
}
{\xe \v operator==\:phys::Vector3}
{\xe \v phys::Vector3\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector3::operator== (const btVector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X==getX(), Y==getY() and Z==getZ(). If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is an btVector3 that needs to be compared with this. \par
}
}{
Definition at line 162 of file vector3.cpp.}\par
}
{\xe \v operator==\:phys::Vector3}
{\xe \v phys::Vector3\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector3::operator== (const Ogre::Vector3 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X==x, Y==y and Z==z. If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is an Ogre::Vector3 that needs to be compared with this. \par
}
}{
Definition at line 165 of file vector3.cpp.}\par
}
{\xe \v operator==\:phys::Vector3}
{\xe \v phys::Vector3\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::Vector3::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}
 & {\i Vec}) const}
}\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality Comparison Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if X==X, Y==Y and Z==Z. If any of those do not match this returns false. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Vec} This is the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Vector3}}}. \par
}
}{
Definition at line 159 of file vector3.cpp.}\par
}
{\xe \v Unit_X\:phys::Vector3}
{\xe \v phys::Vector3\:Unit_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::Unit_X (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the X unit of a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Vector3(1,0,0). \par
}}{
Definition at line 85 of file vector3.cpp.}\par
}
{\xe \v Unit_Y\:phys::Vector3}
{\xe \v phys::Vector3\:Unit_Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::Unit_Y (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the Y unit of a vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Vector3(0,1,0). \par
}}{
Definition at line 88 of file vector3.cpp.}\par
}
{\xe \v Unit_Z\:phys::Vector3}
{\xe \v phys::Vector3\:Unit_Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::Vector3::Unit_Z (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a vector representing the Z unit of a vector. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A Vector3(0,0,1). \par
}}{
Definition at line 91 of file vector3.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
vector3.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
vector3.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Vector3WActor Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Vector3WActor}
{\xe \v phys::Vector3WActor}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to store or transfer a position relative to an Actor. }}\par
{
{\f2 #include <vector3wactor.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGQ" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor_, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Vector_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete Constructor. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 Actor}}}
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 Vector}}}
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to store or transfer a position relative to an Actor. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is simply a Pointer to an actor and a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} \par
}{
Definition at line 54 of file vector3wactor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Vector3WActor\:phys::Vector3WActor}
{\xe \v phys::Vector3WActor\:Vector3WActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3WActor::Vector3WActor ()}
}\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}} with a null Actor pointer and a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} initialized to 0 \par
}{
Definition at line 48 of file vector3wactor.cpp.}\par
}
{\xe \v Vector3WActor\:phys::Vector3WActor}
{\xe \v phys::Vector3WActor\:Vector3WActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Vector3WActor::Vector3WActor ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor_}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Vector_})}
}\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This fills the class with data that is passed in. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Actor_} This is a pointer to an actor \par
{\i Vector_} This is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}} that represents some amount, like motion or distance \par
}
}{
Definition at line 53 of file vector3wactor.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
vector3wactor.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
vector3wactor.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::Viewport Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::Viewport}
{\xe \v phys::Viewport}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing viewports within a game window. }}\par
{
{\f2 #include <viewport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 *ViewportCamera, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 ZOrder, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 *ParentWindow)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGU" }{}}{\fldrslt {\cs37\ul\cf2 ~Viewport}}}
 (){\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGV" }{}}{\fldrslt {\cs37\ul\cf2 GetParentWindow}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the game window this viewport belongs to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGW" }{}}{\fldrslt {\cs37\ul\cf2 GetViewportCamera}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the camera associated with this viewport. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGX" }{}}{\fldrslt {\cs37\ul\cf2 SetDimensions}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position and size of this viewport within the game window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 SetDimensions}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Left, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Top, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Width, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 &Height)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position and size of this viewport within the game window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGZ" }{}}{\fldrslt {\cs37\ul\cf2 GetLeft}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative left position of the viewport. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHA" }{}}{\fldrslt {\cs37\ul\cf2 GetTop}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top position of the viewport. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHB" }{}}{\fldrslt {\cs37\ul\cf2 GetWidth}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative width of the viewport. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHC" }{}}{\fldrslt {\cs37\ul\cf2 GetHeight}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative height of the viewport. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHD" }{}}{\fldrslt {\cs37\ul\cf2 GetActualLeft}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the left position of the viewport in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHE" }{}}{\fldrslt {\cs37\ul\cf2 GetActualTop}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top position of the viewport in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHF" }{}}{\fldrslt {\cs37\ul\cf2 GetActualWidth}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the width of the viewport in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHG" }{}}{\fldrslt {\cs37\ul\cf2 GetActualHeight}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the height of the viewport in pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ogre::Viewport * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHH" }{}}{\fldrslt {\cs37\ul\cf2 GetOgreViewport}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::Viewport * {\b OgreViewport}{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\b Parent}{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\b ViewportCam}{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is for creating and managing viewports within a game window. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A game window can contain several veiwports, and veiwports can overlap. This is useful for editors mostly, but can be of use in games as well. Be careful about positioning Veiwports in a game window. \par
}{
Definition at line 62 of file viewport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Viewport\:phys::Viewport}
{\xe \v phys::Viewport\:Viewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::Viewport::Viewport ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * {\i ViewportCamera}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i ZOrder}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * {\i ParentWindow})}
}\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ViewportCamera} The camera that is to be attached to this veiwport. \par
{\i ZOrder} The render order of this viewport relative to other viewports in the game window. \par
{\i ParentWindow} The game window this viewport belongs to. \par
}
}{
Definition at line 51 of file viewport.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetActualHeight\:phys::Viewport}
{\xe \v phys::Viewport\:GetActualHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::Viewport::GetActualHeight ()}
}\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the height of the viewport in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a whole representing the height of this veiwport in pixels. \par
}}{
Definition at line 118 of file viewport.cpp.}\par
}
{\xe \v GetActualLeft\:phys::Viewport}
{\xe \v phys::Viewport\:GetActualLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::Viewport::GetActualLeft ()}
}\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the left position of the viewport in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a whole representing the left position of this veiwport in pixels. \par
}}{
Definition at line 103 of file viewport.cpp.}\par
}
{\xe \v GetActualTop\:phys::Viewport}
{\xe \v phys::Viewport\:GetActualTop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::Viewport::GetActualTop ()}
}\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the top position of the viewport in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a whole representing the top position of this veiwport in pixels. \par
}}{
Definition at line 108 of file viewport.cpp.}\par
}
{\xe \v GetActualWidth\:phys::Viewport}
{\xe \v phys::Viewport\:GetActualWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::Viewport::GetActualWidth ()}
}\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the width of the viewport in pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a whole representing the width of this veiwport in pixels. \par
}}{
Definition at line 113 of file viewport.cpp.}\par
}
{\xe \v GetHeight\:phys::Viewport}
{\xe \v phys::Viewport\:GetHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Viewport::GetHeight ()}
}\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative height of the viewport. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the relative height of this veiwport. \par
}}{
Definition at line 98 of file viewport.cpp.}\par
}
{\xe \v GetLeft\:phys::Viewport}
{\xe \v phys::Viewport\:GetLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Viewport::GetLeft ()}
}\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative left position of the viewport. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the relative left position of this veiwport. \par
}}{
Definition at line 83 of file viewport.cpp.}\par
}
{\xe \v GetOgreViewport\:phys::Viewport}
{\xe \v phys::Viewport\:GetOgreViewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ogre::Viewport * phys::Viewport::GetOgreViewport () const}
}\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the internal Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the Ogre {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 Viewport}}} this class is based on. \par
}\par}}{
Definition at line 123 of file viewport.cpp.}\par
}
{\xe \v GetParentWindow\:phys::Viewport}
{\xe \v phys::Viewport\:GetParentWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 GameWindow}}}
 * phys::Viewport::GetParentWindow ()}
}\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the game window this viewport belongs to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the game window that created this viewport. \par
}}{
Definition at line 63 of file viewport.cpp.}\par
}
{\xe \v GetTop\:phys::Viewport}
{\xe \v phys::Viewport\:GetTop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Viewport::GetTop ()}
}\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative top position of the viewport. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the relative top position of this veiwport. \par
}}{
Definition at line 88 of file viewport.cpp.}\par
}
{\xe \v GetViewportCamera\:phys::Viewport}
{\xe \v phys::Viewport\:GetViewportCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 Camera}}}
 * phys::Viewport::GetViewportCamera ()}
}\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the camera associated with this viewport. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the camera using this viewport. \par
}}{
Definition at line 68 of file viewport.cpp.}\par
}
{\xe \v GetWidth\:phys::Viewport}
{\xe \v phys::Viewport\:GetWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 phys::Viewport::GetWidth ()}
}\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative width of the viewport. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a real representing the relative width of this veiwport. \par
}}{
Definition at line 93 of file viewport.cpp.}\par
}
{\xe \v SetDimensions\:phys::Viewport}
{\xe \v phys::Viewport\:SetDimensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Viewport::SetDimensions (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Left}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Top}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Width}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 & {\i Height})}
}\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position and size of this viewport within the game window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Left} A relative value(range: 0-1) representing the leftmost position of the viewport. \par
{\i Top} A relative value(range: 0-1) representing the topmost position of the viewport. \par
{\i Width} A relative value(range: 0-1) representing the width of the viewport. \par
{\i Height} A relative value(range: 0-1) representing the height of the viewport. \par
}
}{
Definition at line 78 of file viewport.cpp.}\par
}
{\xe \v SetDimensions\:phys::Viewport}
{\xe \v phys::Viewport\:SetDimensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::Viewport::SetDimensions (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 & {\i Size})}
}\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position and size of this viewport within the game window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} of relative values(range: 0-1) representing the top left corner of the viewport. Values are relative to the game window this viewport belongs to. \par
{\i Size} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}} of relative values(range: 0-1) representing the width and height of the viewport. Values are relative to the game window this viewport belongs to. \par
}
}{
Definition at line 73 of file viewport.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
viewport.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
viewport.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Widget Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Widget}
{\xe \v phys::UI::Widget}
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the base class for all widgets. }}\par
{
{\f2 #include <uiwidget.h>}}\par
Inheritance diagram for phys::UI::Widget:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d48/classphys_1_1UI_1_1Widget.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WidgetType} \{ {\b ButtonListBox}, 
{\b CheckBox}, 
{\b DropDownMenu}, 
{\b ListBox}, 
{\b Menu}, 
{\b RadioButton}, 
{\b Scrollbar}, 
{\b Spinner}, 
{\b TextBox}, 
{\b Window}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBR" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *parent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBS" }{}}{\fldrslt {\cs37\ul\cf2 ~Widget}}}
 (){\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBT" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 ()=0{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this widget to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBU" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 ()=0{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this widget to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WidgetType {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBV" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of widget this is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBW" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBX" }{}}{\fldrslt {\cs37\ul\cf2 GetHoveredButton}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the hovered button within this widget, if any. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBY" }{}}{\fldrslt {\cs37\ul\cf2 GetHoveredSubWidget}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the hovered sub-widget within this widget, if any. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBH" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false)=0{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with widget update/automation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBZ" }{}}{\fldrslt {\cs37\ul\cf2 SubWidgetUpdate}}}
 (bool Force=false){\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with sub-widget update/automation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCA" }{}}{\fldrslt {\cs37\ul\cf2 SubWidgetFocusUpdate}}}
 (bool Force=false){\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with sub-widget update/automation when the mouse isn't hovered. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\b Manager}{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\b Parent}{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\b HoveredButton}{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\b HoveredSubWidget}{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\b SubWidgetFocus}{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Visible}{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelPosition}{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\b RelSize}{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

WidgetType {\b Type}{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\b Name}{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCL" }{}}{\fldrslt {\cs37\ul\cf2 phys::UIManager}}}
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the base class for all widgets. \par
}{
Definition at line 60 of file uiwidget.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Widget\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:Widget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Widget::Widget (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i parent})}
}\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i parent} The parent layer that created this widget. \par
{\i name} The Name for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}. \par
}
}{
Definition at line 51 of file uiwidget.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool phys::UI::Widget::CheckMouseHover (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this widget, false if it's not. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOC" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v GetActualPosition\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Widget::GetActualPosition (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this widget. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSD" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUD" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v GetActualSize\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Widget::GetActualSize (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this widget. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWX" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v GetHoveredButton\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetHoveredButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Widget::GetHoveredButton (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the hovered button within this widget, if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button within this widget the mouse is hovering over, or NULL if none. \par
}}{
Definition at line 90 of file uiwidget.cpp.}\par
}
{\xe \v GetHoveredSubWidget\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetHoveredSubWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 * phys::UI::Widget::GetHoveredSubWidget (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the hovered sub-widget within this widget, if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the sub-widget within this widget the mouse is hovering over, or NULL if none. \par
}}{
Definition at line 95 of file uiwidget.cpp.}\par
}
{\xe \v GetName\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & phys::UI::Widget::GetName (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a String containing the name of this widget. \par
}}{
Definition at line 85 of file uiwidget.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Widget::GetPosition (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this widget. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACON" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSB" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUB" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v GetSize\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Widget::GetSize (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this widget. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSF" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUF" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v GetType\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Widget::WidgetType phys::UI::Widget::GetType () const}
}\par
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of widget this is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an enum value representing the type of widget this is. \par
}}{
Definition at line 80 of file uiwidget.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool phys::UI::Widget::IsVisible (){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this widget. \par
}}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWL" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZG" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v SetActualPosition\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::UI::Widget::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this widget. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSC" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUC" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v SetActualSize\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::UI::Widget::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this widget. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSG" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUG" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v SetPosition\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::UI::Widget::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this widget. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSA" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUA" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v SetSize\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::UI::Widget::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this widget. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSE" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUE" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\xe \v SetVisible\:phys::UI::Widget}
{\xe \v phys::UI::Widget\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::UI::Widget::SetVisible (bool {\i visible}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this widget should be visible. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNY" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ButtonListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::CheckBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTL" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::ListBox}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWK" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Menu}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZF" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Scrollbar}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Window}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiwidget.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiwidget.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::UI::Window Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::UI::Window}
{\xe \v phys::UI::Window}
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container widget capable of holding any other widget. }}\par
{
{\f2 #include <uiwindow.h>}}\par
Inheritance diagram for phys::UI::Window:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d86/classphys_1_1UI_1_1Window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCX" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 *Layer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCY" }{}}{\fldrslt {\cs37\ul\cf2 ~Window}}}
 (){\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCW" }{}}{\fldrslt {\cs37\ul\cf2 SetVisible}}}
 (bool visible)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCR" }{}}{\fldrslt {\cs37\ul\cf2 IsVisible}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCZ" }{}}{\fldrslt {\cs37\ul\cf2 Show}}}
 (){\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this window to be shown. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDA" }{}}{\fldrslt {\cs37\ul\cf2 Hide}}}
 (){\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forces this window to hide. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDB" }{}}{\fldrslt {\cs37\ul\cf2 GetWindowBack}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the background object of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCM" }{}}{\fldrslt {\cs37\ul\cf2 CheckMouseHover}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCU" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCP" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCS" }{}}{\fldrslt {\cs37\ul\cf2 SetActualPosition}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCN" }{}}{\fldrslt {\cs37\ul\cf2 GetActualPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCV" }{}}{\fldrslt {\cs37\ul\cf2 SetSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCQ" }{}}{\fldrslt {\cs37\ul\cf2 GetSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCT" }{}}{\fldrslt {\cs37\ul\cf2 SetActualSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCO" }{}}{\fldrslt {\cs37\ul\cf2 GetActualSize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDC" }{}}{\fldrslt {\cs37\ul\cf2 CreateButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a button within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 TextButton}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDD" }{}}{\fldrslt {\cs37\ul\cf2 CreateTextButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text button within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDE" }{}}{\fldrslt {\cs37\ul\cf2 GetButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDF" }{}}{\fldrslt {\cs37\ul\cf2 GetButton}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetButtonInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDG" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetButtonInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetButtonInfo of an already created button by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetButtonInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDH" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetButtonInfo}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetButtonInfo of an already created button by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDI" }{}}{\fldrslt {\cs37\ul\cf2 GetNumButtons}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of buttons created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDJ" }{}}{\fldrslt {\cs37\ul\cf2 DestroyButton}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a button. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDK" }{}}{\fldrslt {\cs37\ul\cf2 CreateRectangle}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rectangle within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDL" }{}}{\fldrslt {\cs37\ul\cf2 GetRectangle}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created rectangle by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetRectangleInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDM" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetRectangleInfo}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetRectangleInfo of an already created rectangle by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDN" }{}}{\fldrslt {\cs37\ul\cf2 GetNumRectangles}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of rectangles created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDO" }{}}{\fldrslt {\cs37\ul\cf2 DestroyRectangle}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDP" }{}}{\fldrslt {\cs37\ul\cf2 CreateCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a caption within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDQ" }{}}{\fldrslt {\cs37\ul\cf2 GetCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDR" }{}}{\fldrslt {\cs37\ul\cf2 GetCaption}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetCaptionInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDS" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetCaptionInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetCaptionInfo of an already created caption by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetCaptionInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDT" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetCaptionInfo}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetCaptionInfo of an already created caption by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDU" }{}}{\fldrslt {\cs37\ul\cf2 GetNumCaptions}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of captions created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDV" }{}}{\fldrslt {\cs37\ul\cf2 DestroyCaption}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a caption. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDW" }{}}{\fldrslt {\cs37\ul\cf2 CreateMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 Text)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a markup text within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDX" }{}}{\fldrslt {\cs37\ul\cf2 GetMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDY" }{}}{\fldrslt {\cs37\ul\cf2 GetMarkupText}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetMarkupTextInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDZ" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetMarkupTextInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetMarkupTextInfo of an already created markup text by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetMarkupTextInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEA" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetMarkupTextInfo}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetMarkupTextInfo of an already created markup text by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEB" }{}}{\fldrslt {\cs37\ul\cf2 GetNumMarkupTexts}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of markup texts created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEC" }{}}{\fldrslt {\cs37\ul\cf2 DestroyMarkupText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a markup text. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADED" }{}}{\fldrslt {\cs37\ul\cf2 GetWidget}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEE" }{}}{\fldrslt {\cs37\ul\cf2 GetWidget}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetWidgetInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEF" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetWidgetInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetWidgetInfo of an already created widget by name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetWidgetInfo}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEG" }{}}{\fldrslt {\cs37\ul\cf2 GetOffsetWidgetInfo}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetWidgetInfo of an already created widget by index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEH" }{}}{\fldrslt {\cs37\ul\cf2 GetNumWidgets}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of widgets created and stored in this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEI" }{}}{\fldrslt {\cs37\ul\cf2 DestroyWidget}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 *ToBeDestroyed)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEJ" }{}}{\fldrslt {\cs37\ul\cf2 CreateScrollbar}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, UI::ScrollbarStyle Style)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 UI::CheckBox}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEK" }{}}{\fldrslt {\cs37\ul\cf2 CreateCheckBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 Glyph, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &LabelText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}} within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 UI::ButtonListBox}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEL" }{}}{\fldrslt {\cs37\ul\cf2 CreateButtonListBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 ScrollbarWidth, UI::ScrollbarStyle ScrollbarStyle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 UI::ListBox}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEM" }{}}{\fldrslt {\cs37\ul\cf2 CreateListBox}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 &Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Position, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 Size, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 ScrollbarWidth, UI::ScrollbarStyle ScrollbarStyle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a List Box within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEN" }{}}{\fldrslt {\cs37\ul\cf2 Update}}}
 (bool Force=false){\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For use with widget update/automation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEO" }{}}{\fldrslt {\cs37\ul\cf2 SetLocation}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Position){\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal function for setting the location(position) of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEP" }{}}{\fldrslt {\cs37\ul\cf2 SetArea}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 &Size){\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal function for setting the area(size) of this widget. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEQ" }{}}{\fldrslt {\cs37\ul\cf2 CalculateOffset}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 NewSize, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 OldSize, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 EleOffset, UI::ResizeableAnchor Anchor){\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates a new offset for an individual element. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADER" }{}}{\fldrslt {\cs37\ul\cf2 CalculateSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 NewSize, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 OldSize, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 EleSize, UI::ResizeableTether Tether){\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates a new size for an individual element. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * {\b WindowBack}{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetButtonInfo}}}
 > {\b Buttons}{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetRectangleInfo}}}
 > {\b Rectangles}{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetCaptionInfo}}}
 > {\b Captions}{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetMarkupTextInfo}}}
 > {\b MarkupTexts}{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetWidgetInfo}}}
 > {\b Widgets}{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a container widget capable of holding any other widget. \par
}{
Definition at line 73 of file uiwindow.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Window\:phys::UI::Window}
{\xe \v phys::UI::Window\:Window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::UI::Window::Window ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 UILayer}}}
 * {\i Layer})}
}\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The name of the window. \par
{\i Position} The position of the window. \par
{\i Size} The size of the window. \par
{\i Layer} The parent layer this window belongs to. \par
}
}{
Definition at line 65 of file uiwindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckMouseHover\:phys::UI::Window}
{\xe \v phys::UI::Window\:CheckMouseHover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Window::CheckMouseHover (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if the current mouse position is over this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool value, true if the mouse is over this window, false if it's not. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 399 of file uiwindow.cpp.}\par
}
{\xe \v CreateButton\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Window::CreateButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size})}
}\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a button within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created button. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the button. \par
{\i Position} The top left position of the button. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
}
}{
Definition at line 488 of file uiwindow.cpp.}\par
}
{\xe \v CreateButtonListBox\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateButtonListBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 UI::ButtonListBox}}}
 * phys::UI::Window::CreateButtonListBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i ScrollbarWidth}, UI::ScrollbarStyle {\i ScrollbarStyle})}
}\par
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
{\i Position} The top left position of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}} List Box. \par
{\i ScrollbarWidth} The relative width of the scrollbar thats created with this widget. \par
{\i ScrollbarStyle} The style of scrollbar you want to create, see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} documentation for more details. \par
}
}{
Definition at line 826 of file uiwindow.cpp.}\par
}
{\xe \v CreateCaption\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * phys::UI::Window::CreateCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text})}
}\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a caption within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created caption. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this caption. \par
{\i Position} The top left position of the caption. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the caption. \par
}
}{
Definition at line 597 of file uiwindow.cpp.}\par
}
{\xe \v CreateCheckBox\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 UI::CheckBox}}}
 * phys::UI::Window::CreateCheckBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i LabelText})}
}\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}} within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}}. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}}. \par
{\i Position} The top left position of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}}. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 CheckBox}}}. \par
{\i Glyph} The glyphs to use by default for use with the label. Glyphs are defined in your .gorilla file. \par
{\i LabelText} The text to display with the label. The label uses the Markup Text class, and thus it's light markup text language. You can also pass in a blank string if you don't wish to have a label, you can create a label after construction. \par
}
}{
Definition at line 817 of file uiwindow.cpp.}\par
}
{\xe \v CreateListBox\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateListBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 UI::ListBox}}}
 * phys::UI::Window::CreateListBox ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i ScrollbarWidth}, UI::ScrollbarStyle {\i ScrollbarStyle})}
}\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a List Box within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created List Box. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the List Box. \par
{\i Position} The top left position of the List Box. \par
{\i Size} The size of the List Box. \par
{\i ScrollbarWidth} The relative width of the scrollbar thats created with this widget. \par
{\i ScrollbarStyle} The style of scrollbar you want to create, see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} documentation for more details. \par
}
}{
Definition at line 835 of file uiwindow.cpp.}\par
}
{\xe \v CreateMarkupText\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * phys::UI::Window::CreateMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\i Text})}
}\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a markup text within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created markup text. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this markup text. \par
{\i Position} The top left position of the markup text. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the markup text. \par
}
}{
Definition at line 660 of file uiwindow.cpp.}\par
}
{\xe \v CreateRectangle\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * phys::UI::Window::CreateRectangle (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size})}
}\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a rectangle within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par Rectangles are innately put behind all captions, so z-order is not necessary. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} The top left position of the button. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
}
}{
Definition at line 560 of file uiwindow.cpp.}\par
}
{\xe \v CreateScrollbar\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateScrollbar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 UI::Scrollbar}}}
 * phys::UI::Window::CreateScrollbar ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, UI::ScrollbarStyle {\i Style})}
}\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}}. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}}. \par
{\i Position} The top left position of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}}. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}}. \par
{\i Style} The style of scrollbar you want to create, see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 Scrollbar}}} documentation for more details. \par
}
}{
Definition at line 808 of file uiwindow.cpp.}\par
}
{\xe \v CreateTextButton\:phys::UI::Window}
{\xe \v phys::UI::Window\:CreateTextButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 TextButton}}}
 * phys::UI::Window::CreateTextButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Glyph}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 {\i Text})}
}\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text button within this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 Window}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor expects relative values for position and size(values from 0.0 to 1.0). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the created button. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the button. \par
{\i Position} The top left position of the button. \par
{\i Size} The size of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}. \par
{\i Glyph} One of the glyphs specified in your gorilla file. Must be valid. \par
{\i Text} Any text you want printed on the button. \par
}
}{
Definition at line 496 of file uiwindow.cpp.}\par
}
{\xe \v DestroyButton\:phys::UI::Window}
{\xe \v phys::UI::Window\:DestroyButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::DestroyButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 UI::Button}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the button you want destroyed. \par
}
}{
Definition at line 547 of file uiwindow.cpp.}\par
}
{\xe \v DestroyCaption\:phys::UI::Window}
{\xe \v phys::UI::Window\:DestroyCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::DestroyCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 UI::Caption}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a caption. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the caption you want destroyed. \par
}
}{
Definition at line 647 of file uiwindow.cpp.}\par
}
{\xe \v DestroyMarkupText\:phys::UI::Window}
{\xe \v phys::UI::Window\:DestroyMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::DestroyMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 UI::MarkupText}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a markup text. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the markup text you want destroyed. \par
}
}{
Definition at line 711 of file uiwindow.cpp.}\par
}
{\xe \v DestroyRectangle\:phys::UI::Window}
{\xe \v phys::UI::Window\:DestroyRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::DestroyRectangle ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 UI::Rectangle}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the rectangle you want destroyed. \par
}
}{
Definition at line 584 of file uiwindow.cpp.}\par
}
{\xe \v DestroyWidget\:phys::UI::Window}
{\xe \v phys::UI::Window\:DestroyWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::DestroyWidget ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 UI::Widget}}}
 * {\i ToBeDestroyed})}
}\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys a widget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ToBeDestroyed} Pointer to the widget you want destroyed. \par
}
}{
Definition at line 766 of file uiwindow.cpp.}\par
}
{\xe \v GetActualPosition\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Window::GetActualPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel position of this window. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 460 of file uiwindow.cpp.}\par
}
{\xe \v GetActualSize\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Window::GetActualSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the pixel size of this window. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 483 of file uiwindow.cpp.}\par
}
{\xe \v GetButton\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Window::GetButton ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button of the specified name. \par
}}{
Definition at line 505 of file uiwindow.cpp.}\par
}
{\xe \v GetButton\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 Button}}}
 * phys::UI::Window::GetButton (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created button by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the button at the specified index. \par
}}{
Definition at line 518 of file uiwindow.cpp.}\par
}
{\xe \v GetCaption\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * phys::UI::Window::GetCaption ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the caption of the specified name. \par
}}{
Definition at line 605 of file uiwindow.cpp.}\par
}
{\xe \v GetCaption\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 Caption}}}
 * phys::UI::Window::GetCaption (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created caption by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the caption at the specified index. \par
}}{
Definition at line 618 of file uiwindow.cpp.}\par
}
{\xe \v GetMarkupText\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * phys::UI::Window::GetMarkupText ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the markup text of the specified name. \par
}}{
Definition at line 669 of file uiwindow.cpp.}\par
}
{\xe \v GetMarkupText\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetMarkupText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 MarkupText}}}
 * phys::UI::Window::GetMarkupText (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created markup text by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the markup text at the specified index. \par
}}{
Definition at line 682 of file uiwindow.cpp.}\par
}
{\xe \v GetNumButtons\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetNumButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Window::GetNumButtons ()}
}\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of buttons created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of buttons this class is storing. \par
}}{
Definition at line 542 of file uiwindow.cpp.}\par
}
{\xe \v GetNumCaptions\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetNumCaptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Window::GetNumCaptions ()}
}\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of captions created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of captions this class is storing. \par
}}{
Definition at line 642 of file uiwindow.cpp.}\par
}
{\xe \v GetNumMarkupTexts\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetNumMarkupTexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Window::GetNumMarkupTexts ()}
}\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of markup texts created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of markup texts this class is storing. \par
}}{
Definition at line 706 of file uiwindow.cpp.}\par
}
{\xe \v GetNumRectangles\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetNumRectangles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Window::GetNumRectangles ()}
}\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of rectangles created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of rectangles this class is storing. \par
}}{
Definition at line 579 of file uiwindow.cpp.}\par
}
{\xe \v GetNumWidgets\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetNumWidgets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::UI::Window::GetNumWidgets ()}
}\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of widgets created and stored in this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of widgets this class is storing. \par
}}{
Definition at line 761 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetButtonInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetButtonInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetButtonInfo}}}
 * phys::UI::Window::GetOffsetButtonInfo ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetButtonInfo of an already created button by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the button of the specified name. \par
}}{
Definition at line 523 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetButtonInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetButtonInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetButtonInfo}}}
 * phys::UI::Window::GetOffsetButtonInfo (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetButtonInfo of an already created button by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the button at the specified index. \par
}}{
Definition at line 536 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetCaptionInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetCaptionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetCaptionInfo}}}
 * phys::UI::Window::GetOffsetCaptionInfo (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetCaptionInfo of an already created caption by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the caption at the specified index. \par
}}{
Definition at line 636 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetCaptionInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetCaptionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetCaptionInfo}}}
 * phys::UI::Window::GetOffsetCaptionInfo ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetCaptionInfo of an already created caption by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the caption of the specified name. \par
}}{
Definition at line 623 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetMarkupTextInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetMarkupTextInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetMarkupTextInfo}}}
 * phys::UI::Window::GetOffsetMarkupTextInfo ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetMarkupTextInfo of an already created markup text by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the markup text of the specified name. \par
}}{
Definition at line 687 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetMarkupTextInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetMarkupTextInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetMarkupTextInfo}}}
 * phys::UI::Window::GetOffsetMarkupTextInfo (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetMarkupTextInfo of an already created markup text by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the markup text at the specified index. \par
}}{
Definition at line 700 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetRectangleInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetRectangleInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetRectangleInfo}}}
 * phys::UI::Window::GetOffsetRectangleInfo (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetRectangleInfo of an already created rectangle by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the rectangle at the specified index. \par
}}{
Definition at line 573 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetWidgetInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetWidgetInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetWidgetInfo}}}
 * phys::UI::Window::GetOffsetWidgetInfo ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetWidgetInfo of an already created widget by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the widget of the specified name. \par
}}{
Definition at line 742 of file uiwindow.cpp.}\par
}
{\xe \v GetOffsetWidgetInfo\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetOffsetWidgetInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 OffsetWidgetInfo}}}
 * phys::UI::Window::GetOffsetWidgetInfo (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the OffsetWidgetInfo of an already created widget by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a reference to the widget at the specified index. \par
}}{
Definition at line 755 of file uiwindow.cpp.}\par
}
{\xe \v GetPosition\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Window::GetPosition (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative position of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative position of this window. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 449 of file uiwindow.cpp.}\par
}
{\xe \v GetRectangle\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * phys::UI::Window::GetRectangle (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created rectangle by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the rectangle at the specified index. \par
}}{
Definition at line 568 of file uiwindow.cpp.}\par
}
{\xe \v GetSize\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 phys::UI::Window::GetSize (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the relative size of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector2 representing the relative size of this window. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 472 of file uiwindow.cpp.}\par
}
{\xe \v GetWidget\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 * phys::UI::Window::GetWidget (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\i Index})}
}\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the widget at the specified index. \par
}}{
Definition at line 737 of file uiwindow.cpp.}\par
}
{\xe \v GetWidget\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 Widget}}}
 * phys::UI::Window::GetWidget ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\i Name})}
}\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an already created widget by name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the widget of the specified name. \par
}}{
Definition at line 724 of file uiwindow.cpp.}\par
}
{\xe \v GetWindowBack\:phys::UI::Window}
{\xe \v phys::UI::Window\:GetWindowBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 Rectangle}}}
 * phys::UI::Window::GetWindowBack (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the background object of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the rectangle that is the background for this window. \par
}}{
Definition at line 394 of file uiwindow.cpp.}\par
}
{\xe \v IsVisible\:phys::UI::Window}
{\xe \v phys::UI::Window\:IsVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::UI::Window::IsVisible (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the visibility of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a bool representing the visibility of this window. \par
}}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 331 of file uiwindow.cpp.}\par
}
{\xe \v SetActualPosition\:phys::UI::Window}
{\xe \v phys::UI::Window\:SetActualPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::SetActualPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel position of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the pixel position of this window. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 454 of file uiwindow.cpp.}\par
}
{\xe \v SetActualSize\:phys::UI::Window}
{\xe \v phys::UI::Window\:SetActualSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::SetActualSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pixel size of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the pixel size of this window. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 477 of file uiwindow.cpp.}\par
}
{\xe \v SetPosition\:phys::UI::Window}
{\xe \v phys::UI::Window\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::SetPosition (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Position}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative position of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The position is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector2 representing the relative position of this window. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 442 of file uiwindow.cpp.}\par
}
{\xe \v SetSize\:phys::UI::Window}
{\xe \v phys::UI::Window\:SetSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::SetSize (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 Vector2}}}
 {\i Size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the relative size of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size is relative to the screen size. Values range from 0.0 to 1.0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Size} A vector2 representing the relative size of this window. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 465 of file uiwindow.cpp.}\par
}
{\xe \v SetVisible\:phys::UI::Window}
{\xe \v phys::UI::Window\:SetVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::UI::Window::SetVisible (bool {\i visible}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the visibility of this window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i visible} Bool determining whether or not this window should be visible. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 phys::UI::Widget}}}
.}\par
{
Definition at line 302 of file uiwindow.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiwindow.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uiwindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::World Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::World}
{\xe \v phys::World}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the main entry point for the entire library. }}\par
{
{\f2 #include <world.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHL" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &GeographyLowerBounds_, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &GeographyUpperbounds_, SceneManager::SceneManagerType SceneType, const unsigned short int &MaxPhysicsProxies_=1024, std::string LogFileName="Physgame.log")\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor With Manager Pointers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHM" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &GeographyLowerBounds_, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 &GeographyUpperbounds_, const unsigned short int &MaxPhysicsProxies_, SceneManager::SceneManagerType SceneType, const std::string &LogFileName, const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * > &ManagerToBeAdded)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHN" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHO" }{}}{\fldrslt {\cs37\ul\cf2 ~World}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 Log}}}
 (const T &Message)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Runtime event and message logging. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHQ" }{}}{\fldrslt {\cs37\ul\cf2 Log}}}
 (){\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force any outstanding logs to be commited to logs. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 LogAndThrow}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 Exception}}}
 Err)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the preferred way to throw an exception. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHR" }{}}{\fldrslt {\cs37\ul\cf2 LogAndThrow}}}
 (const T &Message)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the preferred a good way to throw an exception, in a recordable fashion. It streams any thrown object to the log. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHS" }{}}{\fldrslt {\cs37\ul\cf2 LogString}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &message)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Log String directly with no conversion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHT" }{}}{\fldrslt {\cs37\ul\cf2 GetWindowName}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the Current Window Title. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 SetWindowName}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &NewName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This can set the the Text in the titlebar. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 GetTargetFrameTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the amount of milliseconds we would like each iteration of the Main Loop to be. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHU" }{}}{\fldrslt {\cs37\ul\cf2 SetTargetFrameTime}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &NewTargetTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets a new Target {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHV" }{}}{\fldrslt {\cs37\ul\cf2 SetTargetFrameRate}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &NewFrameRate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets a new Target Frame Rate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 GetFrameTime}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the amount of time since the last time Rendering began. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHX" }{}}{\fldrslt {\cs37\ul\cf2 SetFrameTime}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 &FrameTime_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the amount of time since the last time Rendering began. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 GameInit}}}
 (const bool &CallMainLoop=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates the game window and starts the game. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEY" }{}}{\fldrslt {\cs37\ul\cf2 MainLoop}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Function house the main loop. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHY" }{}}{\fldrslt {\cs37\ul\cf2 DoMainLoopLogging}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This commits the log stream to the log. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHZ" }{}}{\fldrslt {\cs37\ul\cf2 AddManager}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 *ManagerToAdd)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds a manager, in the correct order, to the list that the world calls on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIA" }{}}{\fldrslt {\cs37\ul\cf2 RemoveManager}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 *ManagerToRemove)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes a manager by finding the matching pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIB" }{}}{\fldrslt {\cs37\ul\cf2 RemoveManager}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 &ManagersToRemoveType, short unsigned int WhichOne)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes a manager of a specific type from the list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIC" }{}}{\fldrslt {\cs37\ul\cf2 GetManager}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 &ManagersToRemoveType, short unsigned int WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is will find the manager of a given type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACID" }{}}{\fldrslt {\cs37\ul\cf2 UpdateManagerOrder}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 *ManagerToChange, short int Priority_)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes a Manager's time of execution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIE" }{}}{\fldrslt {\cs37\ul\cf2 UpdateManagerOrder}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This forces the list of managers to be resorted. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerBase}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIF" }{}}{\fldrslt {\cs37\ul\cf2 GetActorManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the ActorManager from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIG" }{}}{\fldrslt {\cs37\ul\cf2 GetCameraManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIH" }{}}{\fldrslt {\cs37\ul\cf2 GetEventManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACII" }{}}{\fldrslt {\cs37\ul\cf2 GetGraphicsManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIJ" }{}}{\fldrslt {\cs37\ul\cf2 GetPhysicsManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 GetSceneManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIL" }{}}{\fldrslt {\cs37\ul\cf2 GetSoundManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIM" }{}}{\fldrslt {\cs37\ul\cf2 GetResourceManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}} from the manager list. These are responsible for reading and writing files on the disk. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIN" }{}}{\fldrslt {\cs37\ul\cf2 GetTimerManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}} from the manager list. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIO" }{}}{\fldrslt {\cs37\ul\cf2 GetUIManager}}}
 (const short unsigned int &WhichOne=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}} from the manager list. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIP" }{}}{\fldrslt {\cs37\ul\cf2 GetWorldPointer}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the world. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::stringstream {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIQ" }{}}{\fldrslt {\cs37\ul\cf2 LogStream}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is another way to put data in the log. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIR" }{}}{\fldrslt {\cs37\ul\cf2 TheRealWorld}}}
 = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to the one and only world. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the main entry point for the entire library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physworld coordinates and integrates all the underlying subsystems, Currently Ogre3d is used for 3d Graphics, Bullet is used for physics, and SDL is used for user input and window management. Games will need a container for all the playing pieces. It makes sense to tie all of this functionality into one world object. \par
}{
Definition at line 176 of file world.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v World\:phys::World}
{\xe \v phys::World\:World}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::World::World (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i GeographyLowerBounds_}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i GeographyUpperbounds_}, SceneManager::SceneManagerType {\i SceneType}, const unsigned short int & {\i MaxPhysicsProxies_} = {\f2 1024}, std::string {\i LogFileName} = {\f2 "Physgame.log"})}
}\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor With Manager Pointers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor allows for an easier way to define the boundaries for items moving about inside the physworld. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GeographyLowerBounds_} The lower limits for the size of the physics simulation \par
{\i GeographyUpperbounds_} The Upper limits for the size of the physics simulation \par
{\i MaxPhysicsProxies_} This is the amount of Actors (Also called Proxies) allowed in a physics simulation. \par
{\i SceneType} A cue to the scenemanager as to how rendering should occur. \par
{\i LogFileName} This is the place that log messages get sent to. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Do not make a new world if one already exists. This can only cause problems \par
}}{
Definition at line 100 of file world.cpp.}\par
}
{\xe \v World\:phys::World}
{\xe \v phys::World\:World}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::World::World (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i GeographyLowerBounds_}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 & {\i GeographyUpperbounds_}, const unsigned short int & {\i MaxPhysicsProxies_}, SceneManager::SceneManagerType {\i SceneType}, const std::string & {\i LogFileName}, const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * > & {\i ManagerToBeAdded})}
}\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descriptive constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor allows for an easier way to define the boundaries for items moving about inside the physworld. This constructor provides no default arguments, but allows for maximum customization. In addition to everything the other constructors this one can accept a vector of pointers to managers. They will be add {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GeographyLowerBounds_} The lower limits for the size of the physics simulation \par
{\i GeographyUpperbounds_} The Upper limits for the size of the physics simulation \par
{\i MaxPhysicsProxies_} This is the amount of Actors (Also called Proxies) allowed in a physics simulation. \par
{\i LogFileName} This is the place that log messages get sent to. \par
{\i SceneType} A cue to the scenemanager as to how rendering should occur. \par
{\i ManagerToBeAdded} This is a vector of manager pointers that will be used instead of creating new ones \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Do not make a new world if one already exists. This can only cause problems. \par
}}{
Definition at line 115 of file world.cpp.}\par
}
{\xe \v World\:phys::World}
{\xe \v phys::World\:World}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::World::World ()}
}\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This simply performs the same work as the descriptive constructor with some sane, but small, limits. It will give you a world which expands for 100 units from the Origin, and only allows 10 Actors \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Do not make a new world if one already exists. This can only cause problems \par
}}{
Definition at line 91 of file world.cpp.}\par
}
{\xe \v ~World\:phys::World}
{\xe \v phys::World\:~World}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::World::~World ()}
}\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deconstructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Tears down all the items created by the physworld, and safely frees any graphical resources, we will also delete any Objects passed into the Physworld by pointer. We will not delete any pointers we pass out (like from the Events from the Event manager) \par
}{
Definition at line 212 of file world.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddManager\:phys::World}
{\xe \v phys::World\:AddManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::AddManager ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * {\i ManagerToAdd})}
}\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This adds a manager, in the correct order, to the list that the world calls on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internally the world had a list of managers that is sorted by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKP" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::Priority}}}. Everytime a manager is added, the list is searched for the sorted point to insert the manager at. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ManagerToAdd} The pointer to the manager to be added \par
}
}{
Definition at line 427 of file world.cpp.}\par
}
{\xe \v DoMainLoopLogging\:phys::World}
{\xe \v phys::World\:DoMainLoopLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::DoMainLoopLogging ()}
}\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This commits the log stream to the log. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called automatically during the main loop just before rendering. \par
}{
Definition at line 356 of file world.cpp.}\par
}
{\xe \v GameInit\:phys::World}
{\xe \v phys::World\:GameInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::GameInit (const bool & {\i CallMainLoop} = {\f2 true})}
}\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates the game window and starts the game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i CallMainLoop} should the main loop be called\par
}
Prior to this all of the physics and graphical object containers should have been loaded and prepared for use. There should be minimal delay from the time you call this and the game actually begins. This will automatically call the Main Loop unless passed false. \par
}{
Definition at line 255 of file world.cpp.}\par
}
{\xe \v GetActorManager\:phys::World}
{\xe \v phys::World\:GetActorManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 ActorContainerBase}}}
 * phys::World::GetActorManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the ActorManager from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple ActorManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a ActorManager, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 556 of file world.cpp.}\par
}
{\xe \v GetCameraManager\:phys::World}
{\xe \v phys::World\:GetCameraManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}
 * phys::World::GetCameraManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple CameraManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 CameraManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 561 of file world.cpp.}\par
}
{\xe \v GetEventManager\:phys::World}
{\xe \v phys::World\:GetEventManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}
 * phys::World::GetEventManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple EventManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 EventManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 566 of file world.cpp.}\par
}
{\xe \v GetFrameTime\:phys::World}
{\xe \v phys::World\:GetFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::World::GetFrameTime ()}
}\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the amount of time since the last time Rendering began. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This returns, in milliseconds the amount of time since the frame started (since the last rendering began) \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a whole number which can be used to aid in the timimg of various algorithms. \par
}}{
Definition at line 414 of file world.cpp.}\par
}
{\xe \v GetGraphicsManager\:phys::World}
{\xe \v phys::World\:GetGraphicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}
 * phys::World::GetGraphicsManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple GraphicsManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 GraphicsManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 571 of file world.cpp.}\par
}
{\xe \v GetManager\:phys::World}
{\xe \v phys::World\:GetManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * phys::World::GetManager (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 & {\i ManagersToRemoveType}, short unsigned int {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is will find the manager of a given type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifically this will iterate from lowest priority to highest priority, and return a pointer to the first Manager with a matching type found. If you specify WhichOne, it will the Nth+1 in the list matching the type (kind of like array subscript). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ManagersToRemoveType} \par
{\i WhichOne} If not getting the first/only manager of the given type, get one. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}, or a NULL pointer if no matching manager exists \par
}}{
Definition at line 490 of file world.cpp.}\par
}
{\xe \v GetPhysicsManager\:phys::World}
{\xe \v phys::World\:GetPhysicsManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}}
 * phys::World::GetPhysicsManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple PhysicsManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 PhysicsManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 576 of file world.cpp.}\par
}
{\xe \v GetResourceManager\:phys::World}
{\xe \v phys::World\:GetResourceManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}
 * phys::World::GetResourceManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}} from the manager list. These are responsible for reading and writing files on the disk. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple ResourceManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 ResourceManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 591 of file world.cpp.}\par
}
{\xe \v GetSceneManager\:phys::World}
{\xe \v phys::World\:GetSceneManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * phys::World::GetSceneManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple SceneManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 581 of file world.cpp.}\par
}
{\xe \v GetSoundManager\:phys::World}
{\xe \v phys::World\:GetSoundManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}}
 * phys::World::GetSoundManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple SoundManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SoundManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 586 of file world.cpp.}\par
}
{\xe \v GetTargetFrameTime\:phys::World}
{\xe \v phys::World\:GetTargetFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::World::GetTargetFrameTime ()}
}\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the amount of milliseconds we would like each iteration of the Main Loop to be. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In practice harI've done some more testing, started out digging through the code to see if there was anything wrong, there seemed to be random extra words inside our code that the compiler didn't mind that shouldn't be there. like there was a " Schedule : " right after a line where a pointer was initialized. I only found such occurrences in gamebase.cpp though, removed them and did two tests. First test I was just randomly clicking and then I inadvertently threw the metal sphere down into the abyss, the sphere was really close to the camera when this happened, about to go over. Second time I ran the game trying to click stuff, I simply couldn't click anything. I even tried zooming in on the robots, although I can only get so close to them before I have to tamper with the camera, which I haven't done yet, but there were no results with the Robots. The third time I was successfully able to stop two spheres and move them around the platform quite smoothly. These spheres were slightly further away from the camera compared to the first run. I stopped the wooden sphere and the second metal sphere. I included a screen shot and a copy of my log for the third run. The spheres in the screenshot are both in a rest position.dware performance or timing concerns can cause this goal to be unnaitanable or trivially easy. The main loop with actually pause execution until this amount of time is reach is main loop iteration, However, the mainloop will always skip waiting if hardware is overburdened. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a Whole with the current Value \par
}}{
Definition at line 399 of file world.cpp.}\par
}
{\xe \v GetTimerManager\:phys::World}
{\xe \v phys::World\:GetTimerManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}}
 * phys::World::GetTimerManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple TimerManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 TimerManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 596 of file world.cpp.}\par
}
{\xe \v GetUIManager\:phys::World}
{\xe \v phys::World\:GetUIManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}
 * phys::World::GetUIManager (const short unsigned int & {\i WhichOne} = {\f2 0})}
}\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}} from the manager list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i WhichOne} If you have multiple UIManagers this will choose which one to return. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 UIManager}}}, or a NULL pointer if no matching manager exists. \par
}}{
Definition at line 601 of file world.cpp.}\par
}
{\xe \v GetWindowName\:phys::World}
{\xe \v phys::World\:GetWindowName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string phys::World::GetWindowName ()}
}\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the Current Window Title. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the texts that the engine has stored for use in the title bar \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a String Containing the Window Title \par
}}{
Definition at line 384 of file world.cpp.}\par
}
{\xe \v GetWorldPointer\:phys::World}
{\xe \v phys::World\:GetWorldPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * phys::World::GetWorldPointer (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer the one and only {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} \par
}}{
Definition at line 131 of file world.cpp.}\par
}
{\xe \v Log\:phys::World}
{\xe \v phys::World\:Log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void phys::World::Log (const T & {\i Message}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Runtime event and message logging. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Message} This is what will be streamed to the log\par
}
This also commits any outstanding log messages that are waiting in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIQ" }{}}{\fldrslt {\cs37\ul\cf2 World::LogStream}}}, and any outstanding Log messages from any subsystem. Currently the Graphics subsystem (Ogre3d) and the sound subsystem (cAudio) are the Only ones to produce meaningul log messages. \par
}{
Definition at line 279 of file world.h.}\par
}
{\xe \v LogAndThrow\:phys::World}
{\xe \v phys::World\:LogAndThrow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::LogAndThrow ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 Exception}}}
 {\i Err}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the preferred way to throw an exception. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Err} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 phys::Exception}}} to be logged and thrown \par
}
}{
Definition at line 294 of file world.h.}\par
}
{\xe \v LogAndThrow\:phys::World}
{\xe \v phys::World\:LogAndThrow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void phys::World::LogAndThrow (const T & {\i Message}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the preferred a good way to throw an exception, in a recordable fashion. It streams any thrown object to the log. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will log the Message, and will throw an exception with the Message included. Currently this supports all the Data types that overload the stream insertion operator ( << ) {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Message} This will be streamed to the log, then used in a thrown exception. \par
}
}{
Definition at line 305 of file world.h.}\par
}
{\xe \v LogString\:phys::World}
{\xe \v phys::World\:LogString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::LogString (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i message})}
}\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Log String directly with no conversion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i message} The string to log \par
}
}{
Definition at line 226 of file world.cpp.}\par
}
{\xe \v MainLoop\:phys::World}
{\xe \v phys::World\:MainLoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::MainLoop ()}
}\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Function house the main loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
By default this is called from the function {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 World.GameInit()}}} this is were the bulk of the simulation is ran from, see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 Main Loop Structure and Flow}}}  \par
}}
{\xe \v RemoveManager\:phys::World}
{\xe \v phys::World\:RemoveManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::RemoveManager ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * {\i ManagerToRemove})}
}\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes a manager by finding the matching pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently this just iterates through the list looking for the matching pointer, at some future point this could replaced with more sophisticated algorithm, but for now assume this operates in linear time. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ManagerToRemove} A pointer to the manager to be removed \par
}
}{
Definition at line 452 of file world.cpp.}\par
}
{\xe \v RemoveManager\:phys::World}
{\xe \v phys::World\:RemoveManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::RemoveManager (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}}
 & {\i ManagersToRemoveType}, short unsigned int {\i WhichOne})}
}\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes a manager of a specific type from the list. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This starts at the beginning (should be the lowest priority)of the list and iterates through looking for a matching type, at some future point this could replaced with more sophisticated algorithm, but for now assume this operates in linear time. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ManagersToRemoveType} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase::ManagerTypeName}}} of the manager to remove. \par
{\i WhichOne} If not removing the first/only manager of the given type, which one by count are you erasing. \par
}
}{
Definition at line 469 of file world.cpp.}\par
}
{\xe \v SetFrameTime\:phys::World}
{\xe \v phys::World\:SetFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::SetFrameTime (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i FrameTime_})}
}\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the amount of time since the last time Rendering began. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i FrameTime_} This is the amount of time in milliseconds.\par
}
This sets, in milliseconds the amount of time since the frame started (since the last rendering began). Don't set this carelessely can screw up a lot of stuff, for the most part this should be by the rendering manager during the rendering process. \par}}{
Definition at line 419 of file world.cpp.}\par
}
{\xe \v SetTargetFrameRate\:phys::World}
{\xe \v phys::World\:SetTargetFrameRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::SetTargetFrameRate (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i NewFrameRate})}
}\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets a new Target Frame Rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets a new time for each frame. This divides 1000 by the NewFrameRate, drops and floating point amount and uses that amount in an call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHU" }{}}{\fldrslt {\cs37\ul\cf2 World::SetTargetFrameTime}}}. For example a target frame rate of 40 with cause each frame to take 25 milliseconds, and a Framerate of 70 would take 14 ms {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i NewFrameRate} The new desired frame rate. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Setting vary low or very High values could cause unknown errors, This is on our todo list of issues to fix. \par
}}{
Definition at line 409 of file world.cpp.}\par
}
{\xe \v SetTargetFrameTime\:phys::World}
{\xe \v phys::World\:SetTargetFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::SetTargetFrameTime (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 & {\i NewTargetTime})}
}\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets a new Target {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 Time}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets a new time for each frame. Each iteration of the game loop will take around this long to run, but rarely exactly this long. Setting this value Higher can results in power savings (battery life), but setting it too High can cause choppiness. Settings this value higher can result in smoother gameplay, but set it too high, and system resources could becom completely taxed and power will be wasted. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i NewTargetTime} The new length of time, in milliseconds. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Setting vary low or very High values could cause unknown errors, This is on our todo list of issues to fix. \par
}}{
Definition at line 404 of file world.cpp.}\par
}
{\xe \v SetWindowName\:phys::World}
{\xe \v phys::World\:SetWindowName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::SetWindowName (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i NewName})}
}\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This can set the the Text in the titlebar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This changes the text in the bar at the top of the game window in windowed mode. It can be changed at anytime. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i NewName} This is the new text to be used in the titlebar. \par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000030" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO Change the name of an application once it is running \par
}
}}\par
{
Definition at line 389 of file world.cpp.}\par
}
{\xe \v UpdateManagerOrder\:phys::World}
{\xe \v phys::World\:UpdateManagerOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::UpdateManagerOrder ()}
}\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This forces the list of managers to be resorted. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This should only need to be called if the Priority attribute of a manager in the list has changed. This sorts the list of managers \par
}{
Definition at line 541 of file world.cpp.}\par
}
{\xe \v UpdateManagerOrder\:phys::World}
{\xe \v phys::World\:UpdateManagerOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::World::UpdateManagerOrder ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 ManagerBase}}}
 * {\i ManagerToChange}, short int {\i Priority_})}
}\par
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Changes a Manager's time of execution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Searches through the Manager list and removes any previous entries to the changing manager, and add a new entry in the correct location. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ManagerToChange} A pointer to the manager that needs to be changed \par
{\i Priority_} the new desire priority/execution order of the Manager \par
}
}{
Definition at line 521 of file world.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v LogStream\:phys::World}
{\xe \v phys::World\:LogStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::stringstream {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::World::LogStream}}}
}
}\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is another way to put data in the log. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The contents of this will be commited to the log once per frame, just before rendering, or whenever {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 World::Log}}} is called. Because the entry of this data into the actual log file(or whatever destination) is delayed, do not use this for data that is likely to be required to debug something the frame something crashes. However, for other kinds of debugging data and creating in game logs and gameworld recreations. \par
}{
Definition at line 290 of file world.h.}\par
}
{\xe \v TheRealWorld\:phys::World}
{\xe \v phys::World\:TheRealWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIR" }{}}{\fldrslt {\cs37\ul\cf2 phys::World::TheRealWorld}}}
 = 0{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to the one and only world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}{
Definition at line 218 of file world.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
world.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
world.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::WorldGetSet Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::WorldGetSet}
{\xe \v phys::WorldGetSet}
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple set of function to manage a pointer to the gameworld. }}\par
{
{\f2 #include <worldgetset.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIS" }{}}{\fldrslt {\cs37\ul\cf2 GetGameWorld}}}
 () const =0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this class is working with. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIT" }{}}{\fldrslt {\cs37\ul\cf2 SetGameWorld}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
 *GameWorld_)=0{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}} that this Manager works with. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple set of function to manage a pointer to the gameworld. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a common interface for all objects that are expected to interact with the world. \par
}{
Definition at line 55 of file worldgetset.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetGameWorld\:phys::WorldGetSet}
{\xe \v phys::WorldGetSet\:GetGameWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}}
* phys::WorldGetSet::GetGameWorld () const{\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This gets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 World}}} that this class is working with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}* \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
worldgetset.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::WorldNode Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::WorldNode}
{\xe \v phys::WorldNode}
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class which non-physics objects, such as lights, cameras, ribbon trails, and particle effects may be attached to for enhanced effects. }}\par
{
{\f2 #include <worldnode.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 NodeType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIV" }{}}{\fldrslt {\cs37\ul\cf2 Center}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIW" }{}}{\fldrslt {\cs37\ul\cf2 Orbit}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIX" }{}}{\fldrslt {\cs37\ul\cf2 Stand}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIY" }{}}{\fldrslt {\cs37\ul\cf2 Free}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kinds of movement (or non-movement modes) a world node could have. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIZ" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 &Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJA" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 (Ogre::SceneNode *snode, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 *manager)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJB" }{}}{\fldrslt {\cs37\ul\cf2 ~WorldNode}}}
 (){\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJC" }{}}{\fldrslt {\cs37\ul\cf2 GetName}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJD" }{}}{\fldrslt {\cs37\ul\cf2 AttachElement}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
 *Element)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attaches an attachable element to this Node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJE" }{}}{\fldrslt {\cs37\ul\cf2 DetachElement}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
 *Element)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detaches an attachable element from this Node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJF" }{}}{\fldrslt {\cs37\ul\cf2 DetachAllElements}}}
 (){\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detaches all attached cameras, lights, and particle effects. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJG" }{}}{\fldrslt {\cs37\ul\cf2 GetNumAttachedElements}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of elements attached to this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJH" }{}}{\fldrslt {\cs37\ul\cf2 SetPosition}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position of this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJI" }{}}{\fldrslt {\cs37\ul\cf2 GetPosition}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the position of this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJJ" }{}}{\fldrslt {\cs37\ul\cf2 SetOrientation}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 Orientation)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJK" }{}}{\fldrslt {\cs37\ul\cf2 GetOrientation}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the orientation of this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJL" }{}}{\fldrslt {\cs37\ul\cf2 LookAt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 LookAt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatically sets the orientation needed to point this node at a location in the world. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJM" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoTracking}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 *node, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Offset={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
())\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes this node autotrack another node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJN" }{}}{\fldrslt {\cs37\ul\cf2 SetAutoTracking}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 *Actor, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 Offset={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
())\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes this node autotrack an actor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJO" }{}}{\fldrslt {\cs37\ul\cf2 DisableAutoTracking}}}
 (){\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables any active autotracking for this node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJP" }{}}{\fldrslt {\cs37\ul\cf2 IncrementOrbit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Radians)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the orbit of this node if this is an orbiting node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJQ" }{}}{\fldrslt {\cs37\ul\cf2 SetType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode::NodeType}}}
 type)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of node that this is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode::NodeType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJR" }{}}{\fldrslt {\cs37\ul\cf2 GetType}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of node that this is. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Ogre::SceneNode * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJS" }{}}{\fldrslt {\cs37\ul\cf2 OgreNode}}}
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the ogre scenenode from which this class gets it's functionality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJT" }{}}{\fldrslt {\cs37\ul\cf2 Manager}}}
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the manager that created this class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode::NodeType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJU" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum value storing the type of node this class is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
 * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJV" }{}}{\fldrslt {\cs37\ul\cf2 Elements}}}
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vector storing all attached cameras. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a helper class which non-physics objects, such as lights, cameras, ribbon trails, and particle effects may be attached to for enhanced effects. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class simply contains a group of functions for easy manipulation of movement and orientation as well as attaching elements to them. This class should only be created through the scene manager. \par There are 4 types of nodes: \par Center - Works in conjunction with the orbit node and serves as it's center point for the orbit node to rotate around. \par Orbit - Counterpart to the Center node, this type does the orbiting. \par Stand - Stationary node that points in one direction, that is it. \par Free - A node with no rules governing how it moves. \par Note: There are no rules restricting the use of nodes anyway, this enum is here simply to help indicate the intended use upon creation. \par
}{
Definition at line 77 of file worldnode.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v NodeType\:phys::WorldNode}
{\xe \v phys::WorldNode\:NodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 phys::WorldNode::NodeType}}}
}
}\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kinds of movement (or non-movement modes) a world node could have. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Center\:phys::WorldNode}
{\xe \v phys::WorldNode\:Center}
{\b {\i Center{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v Orbit\:phys::WorldNode}
{\xe \v phys::WorldNode\:Orbit}
{\b {\i Orbit{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v Stand\:phys::WorldNode}
{\xe \v phys::WorldNode\:Stand}
{\b {\i Stand{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}{\xe \v Free\:phys::WorldNode}
{\xe \v phys::WorldNode\:Free}
{\b {\i Free{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description Required. \par
}}
\par
{
Definition at line 81 of file worldnode.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WorldNode\:phys::WorldNode}
{\xe \v phys::WorldNode\:WorldNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::WorldNode::WorldNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 & {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\i manager})}
}\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard initialization constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of this node. \par
{\i manager} Pointer to the manager that this node is to be used in. \par
}
}{
Definition at line 56 of file worldnode.cpp.}\par
}
{\xe \v WorldNode\:phys::WorldNode}
{\xe \v phys::WorldNode\:WorldNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::WorldNode::WorldNode (Ogre::SceneNode * {\i snode}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SceneManager}}}
 * {\i manager})}
}\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This constructor should not be called on manually. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i snode} Pointer to the Ogre SceneNode this class is based on. \par
{\i manager} Pointer to the manager that this node is to be used in. \par
}
\par}}{
Definition at line 63 of file worldnode.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AttachElement\:phys::WorldNode}
{\xe \v phys::WorldNode\:AttachElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::AttachElement ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
 * {\i Element})}
}\par
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attaches an attachable element to this Node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Element} The Element to be attached. \par
}
}{
Definition at line 80 of file worldnode.cpp.}\par
}
{\xe \v DetachElement\:phys::WorldNode}
{\xe \v phys::WorldNode\:DetachElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::DetachElement ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 Attachable}}}
 * {\i Element})}
}\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detaches an attachable element from this Node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Element} The Element to be detached. \par
}
}{
Definition at line 113 of file worldnode.cpp.}\par
}
{\xe \v GetName\:phys::WorldNode}
{\xe \v phys::WorldNode\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 ConstString}}}
 & phys::WorldNode::GetName () const}
}\par
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of this node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a string containing the name given to this node. \par
}}{
Definition at line 75 of file worldnode.cpp.}\par
}
{\xe \v GetNumAttachedElements\:phys::WorldNode}
{\xe \v phys::WorldNode\:GetNumAttachedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 Whole}}}
 phys::WorldNode::GetNumAttachedElements ()}
}\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of elements attached to this node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of elements attached to this node. \par
}}{
Definition at line 158 of file worldnode.cpp.}\par
}
{\xe \v GetOrientation\:phys::WorldNode}
{\xe \v phys::WorldNode\:GetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 phys::WorldNode::GetOrientation ()}
}\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the orientation of this node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a quaternion representing the orientation of this node. \par
}}{
Definition at line 179 of file worldnode.cpp.}\par
}
{\xe \v GetPosition\:phys::WorldNode}
{\xe \v phys::WorldNode\:GetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 phys::WorldNode::GetPosition ()}
}\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the position of this node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a vector3 representing the location of this node. \par
}}{
Definition at line 168 of file worldnode.cpp.}\par
}
{\xe \v GetType\:phys::WorldNode}
{\xe \v phys::WorldNode\:GetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode::NodeType}}}
 phys::WorldNode::GetType ()}
}\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of node that this is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the type of node this is set as. \par
}}{
Definition at line 219 of file worldnode.cpp.}\par
}
{\xe \v IncrementOrbit\:phys::WorldNode}
{\xe \v phys::WorldNode\:IncrementOrbit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::IncrementOrbit ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Radians})}
}\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the orbit of this node if this is an orbiting node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function has no effect if this isn't an orbiting node. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Radians} A real reprsenting the amount of orbit to increment in radians. \par
}
}{
Definition at line 205 of file worldnode.cpp.}\par
}
{\xe \v LookAt\:phys::WorldNode}
{\xe \v phys::WorldNode\:LookAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::LookAt ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i LookAt})}
}\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatically sets the orientation needed to point this node at a location in the world. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i LookAt} The location in world space to point at. \par
}
}{
Definition at line 185 of file worldnode.cpp.}\par
}
{\xe \v SetAutoTracking\:phys::WorldNode}
{\xe \v phys::WorldNode\:SetAutoTracking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::SetAutoTracking ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode}}}
 * {\i node}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Offset} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
()})}
}\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes this node autotrack another node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will make this node update it's orientation every frame automatically so that it's always facing the target node. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i node} The node to be tracked. \par
{\i Offset} A vector3 representing the offset from the nodes location to be tracked. \par
}
}{
Definition at line 190 of file worldnode.cpp.}\par
}
{\xe \v SetAutoTracking\:phys::WorldNode}
{\xe \v phys::WorldNode\:SetAutoTracking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::SetAutoTracking ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 ActorBase}}}
 * {\i Actor}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Offset} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
()})}
}\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes this node autotrack an actor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will make this node update it's orientation every frame automatically so that it's always facing the target actor. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Actor} The actor to be tracked. \par
{\i Offset} A vector3 representing the offset from the actor's location to be tracked. \par
}
}{
Definition at line 195 of file worldnode.cpp.}\par
}
{\xe \v SetOrientation\:phys::WorldNode}
{\xe \v phys::WorldNode\:SetOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::SetOrientation ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}}
 {\i Orientation})}
}\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the orientation of this node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Orientation} A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 Quaternion}}} representing the orientation of this node. \par
}
}{
Definition at line 174 of file worldnode.cpp.}\par
}
{\xe \v SetPosition\:phys::WorldNode}
{\xe \v phys::WorldNode\:SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::SetPosition ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 {\i Position})}
}\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the position of this node. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Position} A vector3 representing the location of this node. \par
}
}{
Definition at line 163 of file worldnode.cpp.}\par
}
{\xe \v SetType\:phys::WorldNode}
{\xe \v phys::WorldNode\:SetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void phys::WorldNode::SetType ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 WorldNode::NodeType}}}
 {\i type})}
}\par
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the type of node that this is. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This is intended for internal/expert use only. Manually calling this could disrupt normal function. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i type} The type of node this is to be set as. \par
}
\par}}{
Definition at line 214 of file worldnode.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
worldnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
worldnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::WorldQueryTool Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of optional tools for working with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. }}\par
{
{\f2 #include <worldquerytool.h>}}\par
Inheritance diagram for phys::WorldQueryTool:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d69/classphys_1_1WorldQueryTool.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJW" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJX" }{}}{\fldrslt {\cs37\ul\cf2 ~WorldQueryTool}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJY" }{}}{\fldrslt {\cs37\ul\cf2 GetFirstActorOnRayByPolygon}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 ActorRay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will find the first Actor to intesect the Given ray. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 GetFirstActorOnRayByAABB}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 ActorRay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Partially implemented. This should find the first Actor that is on or almost on the a given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJZ" }{}}{\fldrslt {\cs37\ul\cf2 GetActorUnderMouse}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 RayLength=1000.0, bool UsePolygon=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will find the actor under the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKA" }{}}{\fldrslt {\cs37\ul\cf2 RayPlaneIntersection}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 &QueryRay, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 &QueryPlane)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Where does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} Meet this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKB" }{}}{\fldrslt {\cs37\ul\cf2 GetMouseRay}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 Length=1000)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} from the current viewport, following the mouse. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides a number of optional tools for working with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 phys::World}}}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently this allows for more seamless mouse use, including 'picking' of objects with the mouse, and associated functionality. \par
}{
Definition at line 68 of file worldquerytool.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WorldQueryTool\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:WorldQueryTool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::WorldQueryTool::WorldQueryTool ()}
}\par
{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This creates a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool}}} Ready to run queries on the the world you pass it. \par
}{
Definition at line 58 of file worldquerytool.cpp.}\par
}
{\xe \v ~WorldQueryTool\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:~WorldQueryTool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::WorldQueryTool::~WorldQueryTool ()}
}\par
{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes everything in the world query tool. \par
}{
Definition at line 67 of file worldquerytool.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetActorUnderMouse\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:GetActorUnderMouse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 * phys::WorldQueryTool::GetActorUnderMouse ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i RayLength} = {\f2 1000.0}, bool {\i UsePolygon} = {\f2 true})}
}\par
{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will find the actor under the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will use {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i UsePolygon} If true this will use GetFirstActorOnRayByPolygon, otherwise this will use GetFirstActorOnRayByAABB . \par
{\i RayLength} The length of the ray to cast from te mouse to search for actors. This defaults to 1000.0 \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}} which has a pointer to the actor under the mouse, and a vector representing the distance of the mouse fromt the center of mass. \par
}}{
Definition at line 201 of file worldquerytool.cpp.}\par
}
{\xe \v GetFirstActorOnRayByAABB\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:GetFirstActorOnRayByAABB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 * phys::WorldQueryTool::GetFirstActorOnRayByAABB ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 {\i ActorRay})}
}\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Partially implemented. This should find the first Actor that is on or almost on the a given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This casts a ray through the gameworld. The first actor with an Axis Aligned Bounding Box that intersects that ray is returned. Presently this is untested and does not return the Offset of the intersection. This should perform faster than {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJY" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool::GetFirstActorOnRayByPolygon}}} but not by a known amount. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ActorRay} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} to search along. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an actorbase, which is the first actor to have an Axis-Aligned Bounding Box along the ray. \par
}}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000031" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: The function {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool::GetFirstActorOnRayByAABB}}} does not return an valid offset. This needs to be calculated somehow. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000032" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: The function {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool::GetFirstActorOnRayByAABB}}} has not been tested and needs to be tested \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "dd/da0/todo__todo000033" }{}}{\fldrslt {\cs37\ul\cf2 Todo}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TODO: The function {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 WorldQueryTool::GetFirstActorOnRayByAABB}}} does not take other obstructions into account \par
}
}}\par
{
Definition at line 167 of file worldquerytool.cpp.}\par
}
{\xe \v GetFirstActorOnRayByPolygon\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:GetFirstActorOnRayByPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}
 * phys::WorldQueryTool::GetFirstActorOnRayByPolygon ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 {\i ActorRay})}
}\par
{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will find the first Actor to intesect the Given ray. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This use the graphics subsystem to cast a ray in the world. If the ray passes through any the triangles in an actor This will return that actor. This function runs in linear time relative to the amount of triangles in 3d meshes near the the ray being cast. This will start at ray.from and go to ray.to . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ActorRay} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} to search along. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 Vector3WActor}}}, which contains the first actor along the ray and the point of intersection Relative to the actor \par
}}{
Definition at line 74 of file worldquerytool.cpp.}\par
}
{\xe \v GetMouseRay\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:GetMouseRay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 * phys::WorldQueryTool::GetMouseRay ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Real}}}
 {\i Length} = {\f2 1000})}
}\par
{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} from the current viewport, following the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This calls on the graphics subsystem to get a ray from the location of the current camera {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Length} how long of a ray do you want? Thsi defaults to 1000 \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a ray that matches originates at the camera and goes out in 3d space behind the mouse pointer. \par
}}{
Definition at line 317 of file worldquerytool.cpp.}\par
}
{\xe \v RayPlaneIntersection\:phys::WorldQueryTool}
{\xe \v phys::WorldQueryTool\:RayPlaneIntersection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 Vector3}}}
 * phys::WorldQueryTool::RayPlaneIntersection (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}
 & {\i QueryRay}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}
 & {\i QueryPlane})}
}\par
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Where does this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} Meet this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 Plane}}}? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This does some fancy math to return the point where the ray and the plane intersent. This returns a NULL pointer in the event the ray and plane do not meet, or are completely coterminous. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i QueryRay} This is the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}} that could intersent the plane \par
{\i QueryPlane} This is the plane to be interesected. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns a pointer to a vector that matches where the intersection of the plane and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Ray}}}, if possible \par
}}{
Definition at line 218 of file worldquerytool.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
worldquerytool.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
worldquerytool.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::Writer Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::Writer}
{\xe \v phys::xml::Writer}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface for node printing (see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Node::Print}}} ). }}\par
{
{\f2 #include <xmldoc.h>}}\par
Inheritance diagram for phys::xml::Writer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d28/classphys_1_1xml_1_1Writer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEY" }{}}{\fldrslt {\cs37\ul\cf2 ~Writer}}}
 (){\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Virtual Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEZ" }{}}{\fldrslt {\cs37\ul\cf2 Write}}}
 (const void *data, size_t size)=0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be used to output xml to an external source such as a file or stream. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface for node printing (see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Node::Print}}} ). \par
}{
Definition at line 296 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Write\:phys::xml::Writer}
{\xe \v phys::xml::Writer\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::xml::Writer::Write (const void * {\i data}, size_t {\i size}){\f2  [pure virtual]}}
}\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be used to output xml to an external source such as a file or stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} This is a pointer to something that will get written to the output \par
{\i size} The size in bytes of whatever was passed in. \par
}
}{
Implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFA" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::WriterFile}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::WriterStream}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::WriterFile Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::WriterFile}
{\xe \v phys::xml::WriterFile}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing to FILEs as defined in stdio. }}\par
{
{\f2 #include <xmldoc.h>}}\par
Inheritance diagram for phys::xml::WriterFile:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d53/classphys_1_1xml_1_1WriterFile.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFC" }{}}{\fldrslt {\cs37\ul\cf2 WriterFile}}}
 (void *file)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}} from a FILE* object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFA" }{}}{\fldrslt {\cs37\ul\cf2 Write}}}
 (const void *data, size_t size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be used to output xml to an external source such as a file or stream. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing to FILEs as defined in stdio. \par
}{
Definition at line 309 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WriterFile\:phys::xml::WriterFile}
{\xe \v phys::xml::WriterFile\:WriterFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::WriterFile::WriterFile (void * {\i file})}
}\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}} from a FILE* object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i file} The FILE to be written to. The FILE can be a File handle as per stdio or the standard input, output or even error. The use of void* was intended to avoid a depedency on the stdio header, in the original PugiXML. After a review for compatibility this may change to promote better type safety. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Write\:phys::xml::WriterFile}
{\xe \v phys::xml::WriterFile\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::xml::WriterFile::Write (const void * {\i data}, size_t {\i size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be used to output xml to an external source such as a file or stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} This is a pointer to something that will get written to the output \par
{\i size} The size in bytes of whatever was passed in. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Writer}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::WriterStream Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::WriterStream}
{\xe \v phys::xml::WriterStream}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing std::ostreams. }}\par
{
{\f2 #include <xmldoc.h>}}\par
Inheritance diagram for phys::xml::WriterStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d6f/classphys_1_1xml_1_1WriterStream.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFD" }{}}{\fldrslt {\cs37\ul\cf2 WriterStream}}}
 (std::basic_ostream< char, std::char_traits< char > > &stream)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A constructor that accepts a stream of characters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFE" }{}}{\fldrslt {\cs37\ul\cf2 WriterStream}}}
 (std::basic_ostream< wchar_t, std::char_traits< wchar_t > > &stream)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A constructor that accepts a stream of wide characters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFB" }{}}{\fldrslt {\cs37\ul\cf2 Write}}}
 (const void *data, size_t size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be used to output xml to an external source such as a file or stream. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing std::ostreams. \par
}{
Definition at line 323 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WriterStream\:phys::xml::WriterStream}
{\xe \v phys::xml::WriterStream\:WriterStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::WriterStream::WriterStream (std::basic_ostream< char, std::char_traits< char > > & {\i stream})}
}\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A constructor that accepts a stream of characters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} A stream to send stuff to. \par
}
}}
{\xe \v WriterStream\:phys::xml::WriterStream}
{\xe \v phys::xml::WriterStream\:WriterStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::WriterStream::WriterStream (std::basic_ostream< wchar_t, std::char_traits< wchar_t > > & {\i stream})}
}\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A constructor that accepts a stream of wide characters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i stream} A stream to send stuff to. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Write\:phys::xml::WriterStream}
{\xe \v phys::xml::WriterStream\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void phys::xml::WriterStream::Write (const void * {\i data}, size_t {\i size}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be used to output xml to an external source such as a file or stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} This is a pointer to something that will get written to the output \par
{\i size} The size in bytes of whatever was passed in. \par
}
}{
Implements {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Writer}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathException Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathException}
{\xe \v phys::xml::XPathException}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thrown in a variety of XPath only situations, to indicate type mismatch or other issues. }}\par
{
{\f2 #include <xmldoc.h>}}\par
Inheritance diagram for phys::xml::XPathException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d30/classphys_1_1xml_1_1XPathException.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNF" }{}}{\fldrslt {\cs37\ul\cf2 XPathException}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}}
 &Result){\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct exception from parse Result. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNG" }{}}{\fldrslt {\cs37\ul\cf2 what}}}
 () const   throw ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get error message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNH" }{}}{\fldrslt {\cs37\ul\cf2 Result}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get parse Result. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thrown in a variety of XPath only situations, to indicate type mismatch or other issues. \par
}{
Definition at line 1310 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Result\:phys::xml::XPathException}
{\xe \v phys::xml::XPathException\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathException::Result () const}
}\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get parse Result. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}} used to create this exception. \par
}}}
{\xe \v what\:phys::xml::XPathException}
{\xe \v phys::xml::XPathException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathException::what () const  throw (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get error message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A description of the error message as a c-style string. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathNode Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPath node which can store handles to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNI" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 (){\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor; constructs empty XPath node. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNJ" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &node)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct From a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNK" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 &GetAttribute, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 &GetParent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct From a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNL" }{}}{\fldrslt {\cs37\ul\cf2 GetNode}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} this is referencing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNM" }{}}{\fldrslt {\cs37\ul\cf2 GetAttribute}}}
 () const {\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} this is referencing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNN" }{}}{\fldrslt {\cs37\ul\cf2 GetParent}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the parent of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} this refers to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNO" }{}}{\fldrslt {\cs37\ul\cf2 operator unspecified_bool_type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNP" }{}}{\fldrslt {\cs37\ul\cf2 operator!}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logical not operator, used a workaround for borland compiler. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNQ" }{}}{\fldrslt {\cs37\ul\cf2 operator==}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called when comparing two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} instances for equality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNR" }{}}{\fldrslt {\cs37\ul\cf2 operator!=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called when comparing two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} instances for inequality. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPath node which can store handles to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because an XPath node can be either a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}, there is a special type, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}, which is a discriminated union of these types. A value of this type contains two node handles, one of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} type, and another one of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} type; at most one of them can be non-null. The accessors to get these handles are available: {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNL" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode::GetNode()}}} an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNM" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode::GetAttribute()}}} . \par \par XPath nodes can be null, in which case both accessors return null handles. \par
}{
Definition at line 1329 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v XPathNode\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:XPathNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNode::XPathNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i node})}
}\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct From a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i node} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} this handle should reference. \par
}
}}
{\xe \v XPathNode\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:XPathNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNode::XPathNode (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}
 & {\i GetAttribute}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}
 & {\i GetParent})}
}\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct From a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i GetAttribute} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} this handle should reference. \par
{\i GetParent} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} is on. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetNode\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:GetNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNode::GetNode () const}
}\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} this is referencing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}, or a null node if this doesn't reference a an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}. \par
}}}
{\xe \v GetParent\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:GetParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNode::GetParent () const}
}\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the parent of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}} this refers to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}, or a null node if this doesn't reference a an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. \par
}}}
{\xe \v operator unspecified_bool_type\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:operator unspecified_bool_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNode::operator unspecified_bool_type () const}
}\par
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the internal data is set and false otherwise. \par
}}}
{\xe \v operator!\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:operator!}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNode::operator! () const}
}\par
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logical not operator, used a workaround for borland compiler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A valid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}, or a null node if this doesn't reference a an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}}. \par
A bool that is the opposite of evaluatig this as a bool normally. \par
}}}
{\xe \v operator!=\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathNode::operator!= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called when comparing two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} instances for inequality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 xml::XPathNode}}} to compare this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} against for inequality. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if this and the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 xml::XPathNode}}} are referencing the same item, false otherwise; \par
}}}
{\xe \v operator==\:phys::xml::XPathNode}
{\xe \v phys::xml::XPathNode\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathNode::operator== (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called when comparing two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} instances for equality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 xml::XPathNode}}} to compare this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}} against for equality. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if this and the other {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 xml::XPathNode}}} are referencing the same item, false otherwise; \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathNodeSet Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A collection of nodes that an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} can work on. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNS" }{}}{\fldrslt {\cs37\ul\cf2 CollectionType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNT" }{}}{\fldrslt {\cs37\ul\cf2 TypeUnsorted}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNU" }{}}{\fldrslt {\cs37\ul\cf2 TypeSorted}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNV" }{}}{\fldrslt {\cs37\ul\cf2 TypeSortedReverse}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The different ways a collection may or may not be ordered. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNW" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An iterator trait. Const iterator for XPathNodes. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNX" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 (){\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. Constructs empty set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNY" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
 begin, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
 end, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNS" }{}}{\fldrslt {\cs37\ul\cf2 CollectionType}}}
 Type=TypeUnsorted)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a set from iterator range. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNZ" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 &ns)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOA" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 &ns)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNS" }{}}{\fldrslt {\cs37\ul\cf2 CollectionType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOB" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get collection Type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOC" }{}}{\fldrslt {\cs37\ul\cf2 size}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get collection size. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOD" }{}}{\fldrslt {\cs37\ul\cf2 operator[]}}}
 (size_t index) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexing operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOE" }{}}{\fldrslt {\cs37\ul\cf2 begin}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Beginning iterator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOF" }{}}{\fldrslt {\cs37\ul\cf2 end}}}
 () const {\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Ending iterator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOG" }{}}{\fldrslt {\cs37\ul\cf2 sort}}}
 (bool reverse=false)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sort the collection in ascending/descending order by document order. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOH" }{}}{\fldrslt {\cs37\ul\cf2 first}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get first node in the collection by document order. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOI" }{}}{\fldrslt {\cs37\ul\cf2 Empty}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if collection is empty. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A collection of nodes that an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} can work on. \par
}{
Definition at line 1381 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v CollectionType\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:CollectionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNS" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathNodeSet::CollectionType}}}
}
}\par
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The different ways a collection may or may not be ordered. }}\par
{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v TypeUnsorted\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:TypeUnsorted}
{\b {\i TypeUnsorted{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not Ordered. \par
}{\xe \v TypeSorted\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:TypeSorted}
{\b {\i TypeSorted{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In document Order. \par
}{\xe \v TypeSortedReverse\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:TypeSortedReverse}
{\b {\i TypeSortedReverse{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In reverse document Order. \par
}}
\par
{
Definition at line 1385 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v XPathNodeSet\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:XPathNodeSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::XPathNodeSet ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
 {\i begin}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 const_iterator}}}
 {\i end}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNS" }{}}{\fldrslt {\cs37\ul\cf2 CollectionType}}}
 {\i Type} = {\f2 TypeUnsorted})}
}\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a set from iterator range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i begin} A const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} iterator at the beginning of the set of nodes. \par
{\i end} A const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} iterator at the end of the set of nodes. \par
{\i Type} What {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNS" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet::CollectionType}}} is being used, this defaults to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet::TypeUnsorted}}}\par
}
Data is not checked for duplicates and is not sorted according to provided Type, so be careful. \par
}}
{\xe \v XPathNodeSet\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:XPathNodeSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::XPathNodeSet (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 & {\i ns})}
}\par
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ns} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}} to copy. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::begin () const}
}\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Beginning iterator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNW" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet::const_iterator}}} to the beginning of the collection. \par
}}}
{\xe \v Empty\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:Empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::Empty () const}
}\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if collection is empty. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True if the document is empty, false otherwise. \par
}}}
{\xe \v first\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::first () const}
}\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get first node in the collection by document order. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The first node of the, in document order as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}. \par
}}}
{\xe \v operator=\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 & {\i ns})}
}\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ns} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}} to copy. \par
}
}}
{\xe \v operator[]\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::operator[] (size_t {\i index}) const}
}\par
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexing operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i index} A size_t indicating which {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} you would like to retrieve \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A const reference to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} you requested. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Out of bounds errors are checked using assert. Exceptions will not be thrown, during debugging out of bounds access will abort the termination and in production code out of bounds accesses will cause undefined behavior. \par
}}}
{\xe \v size\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t phys::xml::XPathNodeSet::size () const}
}\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get collection size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} instances as a size_t in the set \par
}}}
{\xe \v sort\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:sort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::sort (bool {\i reverse} = {\f2 false})}
}\par
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sort the collection in ascending/descending order by document order. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNW" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet::const_iterator}}} to the end of the collection. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i reverse} If true this sorts the collection in the opposite of document order. \par
}
}}
{\xe \v Type\:phys::xml::XPathNodeSet}
{\xe \v phys::xml::XPathNodeSet\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathNodeSet::Type () const}
}\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get collection Type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A reference to the freshly assigned {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}. \par
CollectionType \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathParseResult Struct Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathParseResult}
{\xe \v phys::xml::XPathParseResult}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPath parsing result. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}}
 (){\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor, initializes object to failed state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLR" }{}}{\fldrslt {\cs37\ul\cf2 operator bool}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cast to bool operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLS" }{}}{\fldrslt {\cs37\ul\cf2 Description}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text description of the error situation, if any exists. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLT" }{}}{\fldrslt {\cs37\ul\cf2 error}}}
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error message (0 if no error). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ptrdiff_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLU" }{}}{\fldrslt {\cs37\ul\cf2 Offset}}}
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Last parsed Offset (in Character units from string start). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPath parsing result. \par
}{
Definition at line 1115 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Description\:phys::xml::XPathParseResult}
{\xe \v phys::xml::XPathParseResult\:Description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* phys::xml::XPathParseResult::Description () const}
}\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a text description of the error situation, if any exists. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A const char* with a brief error description based on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKV" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult::Status}}} \par
}}}
{\xe \v operator bool\:phys::xml::XPathParseResult}
{\xe \v phys::xml::XPathParseResult\:operator bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathParseResult::operator bool () const}
}\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cast to bool operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This returns true if the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKV" }{}}{\fldrslt {\cs37\ul\cf2 ParseResult::Status}}} member is set to ParseStatus::StatusOk, otherwise this returns false. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathQuery Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A compiled XPath query object. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMU" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *query, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 *variables=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a compiled object from XPath expression. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMV" }{}}{\fldrslt {\cs37\ul\cf2 ~XPathQuery}}}
 (){\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMW" }{}}{\fldrslt {\cs37\ul\cf2 ReturnType}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get query expression return Type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMX" }{}}{\fldrslt {\cs37\ul\cf2 EvaluateBoolean}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as boolean value in the specified context; performs Type conversion if necessary. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMY" }{}}{\fldrslt {\cs37\ul\cf2 EvaluateNumber}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as double value in the specified context; performs Type conversion if necessary. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMZ" }{}}{\fldrslt {\cs37\ul\cf2 EvaluateString}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as string value in the specified context; performs Type conversion if necessary. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNA" }{}}{\fldrslt {\cs37\ul\cf2 EvaluateString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *buffer, size_t capacity, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as string value in the specified context; performs Type conversion if necessary. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNB" }{}}{\fldrslt {\cs37\ul\cf2 EvaluateNodeSet}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 &n) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as node set in the specified context. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNC" }{}}{\fldrslt {\cs37\ul\cf2 Result}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get parsing Result (used to get compilation errors when XML_NO_EXCEPTIONS is enabled). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADND" }{}}{\fldrslt {\cs37\ul\cf2 operator unspecified_bool_type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADNE" }{}}{\fldrslt {\cs37\ul\cf2 operator!}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logical not operator, used a workaround for borland compiler. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A compiled XPath query object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid A pointer to the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}.\par
}When you call select_nodes with an expression string as an argument, a query object is created behind the scenes. A query object represents a compiled XPath expression. Query objects can be needed in the following circumstances: \par{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
You can precompile expressions to query objects to save compilation time if it becomes an issue; \par\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
You can use query objects to evaluate XPath expressions which result in booleans, numbers or strings; \par\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
You can get the type of expression value via query object. \par \par Query objects correspond to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 xml::XPathQuery}}} type. They are immutable and non-copyable: they are bound to the expression at creation time and can not be cloned. If you want to put query objects in a container, allocate them on heap via new operator and store pointers to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 xml::XPathQuery}}} in the container. \par \par To evaluate an XPath expression there are a few EvaluatedType functions. According to XPath specification, value of any type can be converted to boolean, number or string value, but no type other than node set can be converted to node set. Because of this, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMX" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery::EvaluateBoolean()}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMY" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery::EvaluateNumber()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMZ" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery::EvaluateString()}}} always return a result, but EvaluateNodeSet results in an error if the return type is not node set. \par}
}{
Definition at line 1225 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v XPathQuery\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:XPathQuery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathQuery::XPathQuery (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i query}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 * {\i variables} = {\f2 0}){\f2  [explicit]}}
}\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a compiled object from XPath expression. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i query} The query in the form of a c-string style char_t array. \par
{\i variables} Any extra data the query might need, passing a null pointer simply omits passing any arguments. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i If} XML_NO_EXCEPTIONS is not defined (which is the default), throws {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 XPathException}}} on compilation errors. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v EvaluateBoolean\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:EvaluateBoolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathQuery::EvaluateBoolean (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as boolean value in the specified context; performs Type conversion if necessary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} that will serve as the context for the query. \par
}
}}
{\xe \v EvaluateNodeSet\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:EvaluateNodeSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 phys::xml::XPathQuery::EvaluateNodeSet (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as node set in the specified context. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} that with serve as the context for the query. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i If} XML_NO_EXCEPTIONS is not defined (by default it is not defined), throws throws {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 XPathException}}} on Type mismatch and std::bad_alloc on out of memory errors. If XML_NO_EXCEPTIONS is defined, returns empty node set instead. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}. \par
}}}
{\xe \v EvaluateNumber\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:EvaluateNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double phys::xml::XPathQuery::EvaluateNumber (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as double value in the specified context; performs Type conversion if necessary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} that will serve as the context for the query. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i If} XML_NO_EXCEPTIONS is not defined (by default it is not defined), throws std::bad_alloc on out of memory errors. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A result as a double from evaluating the expression. \par
}}}
{\xe \v EvaluateString\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:EvaluateString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 String}}}
 phys::xml::XPathQuery::EvaluateString (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as string value in the specified context; performs Type conversion if necessary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} that will serve as the context for the query. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i If} XML_NO_EXCEPTIONS is not defined (by default it is not defined), throws std::bad_alloc on out of memory errors. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A result as a String from evaluating the expression. \par
}}}
{\xe \v EvaluateString\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:EvaluateString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t phys::xml::XPathQuery::EvaluateString ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i buffer}, size_t {\i capacity}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}}
 & {\i n}) const}
}\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate expression as string value in the specified context; performs Type conversion if necessary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i buffer} The place to store the c-style Character array \par
{\i capacity} At most capacity characters are written to the destination buffer. \par
{\i n} The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 XPathNode}}} that with serve as the context for the query. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i If} XML_NO_EXCEPTIONS is not defined (by default it is not defined), throws std::bad_alloc on out of memory errors. If XML_NO_EXCEPTIONS is defined, this returns empty set instead. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Full result size is returned (includes terminating zero). \par
}}}
{\xe \v operator unspecified_bool_type\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:operator unspecified_bool_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathQuery::operator unspecified_bool_type () const}
}\par
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to convert this to a boolean value in a safe way. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the internal data is set and false otherwise. \par
}}}
{\xe \v operator!\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:operator!}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathQuery::operator! () const}
}\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logical not operator, used a workaround for borland compiler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A const reference to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 XPathParseResult}}}. \par
A bool that is the opposite of evaluatig this as a bool normally. \par
}}}
{\xe \v Result\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathQuery::Result () const}
}\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get parsing Result (used to get compilation errors when XML_NO_EXCEPTIONS is enabled). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i If} XML_NO_EXCEPTIONS is not defined (by default it is not defined), throws std::bad_alloc on out of memory errors. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A bool result of evaluating the expression. \par
}}}
{\xe \v ReturnType\:phys::xml::XPathQuery}
{\xe \v phys::xml::XPathQuery\:ReturnType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathQuery::ReturnType () const}
}\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get query expression return Type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A XPathValueType. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathVariable Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single XPath variable. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLV" }{}}{\fldrslt {\cs37\ul\cf2 Name}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the name of this variable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLW" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the variable type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLX" }{}}{\fldrslt {\cs37\ul\cf2 GetBoolean}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a bool. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLY" }{}}{\fldrslt {\cs37\ul\cf2 GetNumber}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a double. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLZ" }{}}{\fldrslt {\cs37\ul\cf2 GetString}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a c-string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMA" }{}}{\fldrslt {\cs37\ul\cf2 GetNodeSet}}}
 () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMB" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (bool Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMC" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (double Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMD" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADME" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 &Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMF" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 (){\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protected Default constructor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMG" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 &){\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protected Copy Constructor, used to force noncopyable semantics. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMH" }{}}{\fldrslt {\cs37\ul\cf2 operator=}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 &)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protected assignment operator, used to force noncopyable semantics. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMI" }{}}{\fldrslt {\cs37\ul\cf2 _type}}}
{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
What kind of data does this variable store. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMJ" }{}}{\fldrslt {\cs37\ul\cf2 _next}}}
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The next variable in the variable set. I think, and I am not certain, that this is a circularly linked list. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b XPathVariableSet}{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single XPath variable. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is intended to be used as a single member of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}, and for moving data into and out of XPathQueries. \par
}{
Definition at line 1136 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetBoolean\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:GetBoolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariable::GetBoolean () const}
}\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a bool. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get variable Value; no Type conversion is performed, default Value (false, NaN, empty string, empty node set) is returned on Type mismatch error \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A This as a bool, without conversion. \par
}}}
{\xe \v GetNodeSet\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:GetNodeSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariable::GetNodeSet () const}
}\par
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get variable Value; no Type conversion is performed, default Value (false, NaN, empty string, empty node set) is returned on Type mismatch error \par
}}
{\xe \v GetNumber\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariable::GetNumber () const}
}\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a double. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get variable Value; no Type conversion is performed, default Value (false, NaN, empty string, empty node set) is returned on Type mismatch error \par
}}
{\xe \v GetString\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:GetString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariable::GetString () const}
}\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get this as a c-string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A This as a double, without conversion.\par
}Get variable Value; no Type conversion is performed, default Value (false, NaN, empty string, empty node set) is returned on Type mismatch error \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A This as a c-string of char_t, without conversion. \par
}}}
{\xe \v Name\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
* phys::xml::XPathVariable::Name () const}
}\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the name of this variable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A const c-style string made of char_t, that contains the name of this variable \par
}}}
{\xe \v operator=\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariable::operator= (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 &){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protected assignment operator, used to force noncopyable semantics. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Shouldn't be used, not implemented. \par
}}}
{\xe \v Set\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathVariable::Set (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 & {\i Value})}
}\par
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Value} The value to attempt to put into this. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned on Type mismatch error. \par
}}}
{\xe \v Set\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathVariable::Set (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Value})}
}\par
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Value} The value as a char_t array to attempt to put into this. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned on Type mismatch error. \par
}}}
{\xe \v Set\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariable::Set (bool {\i Value})}
}\par
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A This as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}, without conversion. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Value} The value to attempt to put into this. \par
}
}}
{\xe \v Set\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathVariable::Set (double {\i Value})}
}\par
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Value} The value as a double to attempt to put into this. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned on Type mismatch error. \par
}}}
{\xe \v Type\:phys::xml::XPathVariable}
{\xe \v phys::xml::XPathVariable\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 phys::xml::XPathVariable::Type () const}
}\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the variable type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid An XPathValueType specifying the kind of data stored in this variable. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
phys::xml::XPathVariableSet Class Reference\par \pard\plain 
{\tc\tcl2 \v phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of XPath variables. }}\par
{
{\f2 #include <xmldoc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADML" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariableSet}}}
 (){\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor, Blanks any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}} it contains. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMM" }{}}{\fldrslt {\cs37\ul\cf2 ~XPathVariableSet}}}
 (){\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Deconstructor, Deletes any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}} it contains. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMN" }{}}{\fldrslt {\cs37\ul\cf2 Add}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 Type)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new variable or get the existing one, if the Types match. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMO" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, bool Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMP" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, double Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMQ" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMR" }{}}{\fldrslt {\cs37\ul\cf2 Set}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 &Value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMS" }{}}{\fldrslt {\cs37\ul\cf2 Get}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the named {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMT" }{}}{\fldrslt {\cs37\ul\cf2 Get}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 *Name) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the named {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of XPath variables. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned on Type mismatch error. \par
}}{
Definition at line 1182 of file xml.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariableSet::Add (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 XPathValueType}}}
 {\i Type})}
}\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new variable or get the existing one, if the Types match. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}} you referenced or just created. \par
}}}
{\xe \v Get\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariableSet::Get (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}) const}
}\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the named {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}} you want. \par
}
}}
{\xe \v Get\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariableSet::Get (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name})}
}\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the named {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned if there is no such variable or on Type mismatch error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 XPathVariable}}} you want. \par
}
}}
{\xe \v Set\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathVariableSet::Set (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 XPathNodeSet}}}
 & {\i Value})}
}\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of variable to change. \par
{\i Value} The value to attempt to put into the named variable. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned if there is no such variable or on Type mismatch error. \par
}}}
{\xe \v Set\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathVariableSet::Set (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Value})}
}\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of variable to change. \par
{\i Value} The value to attempt to put into the named variable. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned if there is no such variable or on Type mismatch error. \par
}}}
{\xe \v Set\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool phys::xml::XPathVariableSet::Set (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, double {\i Value})}
}\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of variable to change. \par
{\i Value} The value to attempt to put into the named variable. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True is return, false is returned if there is no such variable or on Type mismatch error. \par
}}}
{\xe \v Set\:phys::xml::XPathVariableSet}
{\xe \v phys::xml::XPathVariableSet\:Set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
phys::xml::XPathVariableSet::Set (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 char_t}}}
 * {\i Name}, bool {\i Value})}
}\par
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set contained variable Value; no Type conversion is performed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Name} The name of variable to change. \par
{\i Value} The value to attempt to put into the named variable. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
crossplatformexport.h File Reference\par \pard\plain 
{\tc\tcl2 \v crossplatformexport.h}
{\xe \v crossplatformexport.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file is used on some platforms to determine what data should be read and written to and from a shared/dynamic library. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file is used on some platforms to determine what data should be read and written to and from a shared/dynamic library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently this file uses __declspec(dllexport) and __declspec(dllimport) on the windows platform to control what is imported from or exported to the Physgame DLL. If WINDOWS if defined then PHYS_LIB will be set to either "__declspec(dllexport)" or "__declspec(dllimport)". Every Class, template, function variable, and other item intended to be in physgame is tagged with PHYS_LIB. \par \parDuring compilation of the Physgame engine __declspec(dllexport) tells the compiler that a given item (a function, class, template, etc...), should be included in the dll and made available for use in games (or whatever kind of applicaitons use Physgame). This header sets PHYS_LIB to __declspec(dllexport) if EXPORTINGPHYSGAMEDLL is set. If Physgame is compiled using the cmake build provided then this is handle automatically. If the cmake build is not used, then this file will attempt to detect if the platform it is running on is windows or not. It is preferable that you configure your build environment to define WINDOWS and EXPORTINGPHYSGAMEDLL if you are compiling this on windows without the provided cmake build. \par \parCompilation of applications using Physgame __declspec(dllimport), tells the compiler what to expect from the dll and may make optimizations available with some compilers. This is automatically set if you use the cmake build, if you aren't this file will attempt to determine if you are running windows. It is best to set the build envirnoment of your game or applciation to define WINDOWS, if possible copy of our cmake builds for Catch! or the EngineDemo. \par \parThe Macro PHYS_LIB is declared as empty if WINDOWS is not defined, as should be the case if LINUX or MACOSX is defined. \par \par \par
}{
Definition in file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 crossplatformexport.h}}}
.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
datatypes.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v datatypes.cpp}
{\xe \v datatypes.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds utilities for converting, concatenating, manipulating and working with simple datatypes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sstream>}\par
{\f2 #include "datatypes.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 phys}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bulk of the engine components go in this namspace. \par
}}}
}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 phys::StringCat}}}
 (const String &Front, const String &Back)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 2 Strings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 phys::StringCat}}}
 (const String &Front, const String &Middle, const String &Back)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 3 Strings. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 phys::StringCat}}}
 (const String &Front, const String &Middle1, const String &Middle2, const String &Back)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenates 3 Strings. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds utilities for converting, concatenating, manipulating and working with simple datatypes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 datatypes.cpp}}}
.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
physgame.h File Reference\par \pard\plain 
{\tc\tcl2 \v physgame.h}
{\xe \v physgame.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single file that includes all of the physgame engine. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "actorbase.h"}\par
{\f2 #include "actorcontainerbase.h"}\par
{\f2 #include "actorcontainervector.h"}\par
{\f2 #include "actorgraphicssettings.h"}\par
{\f2 #include "actorragdoll.h"}\par
{\f2 #include "actorrigid.h"}\par
{\f2 #include "actorsoft.h"}\par
{\f2 #include "actorterrain.h"}\par
{\f2 #include "areaeffect.h"}\par
{\f2 #include "attachable.h"}\par
{\f2 #include "camera.h"}\par
{\f2 #include "cameramanager.h"}\par
{\f2 #include "colourvalue.h"}\par
{\f2 #include "constraint.h"}\par
{\f2 #include "crossplatform.h"}\par
{\f2 #include "crossplatformexport.h"}\par
{\f2 #include "datatypes.h"}\par
{\f2 #include "enumerations.h"}\par
{\f2 #include "eventbase.h"}\par
{\f2 #include "eventcollision.h"}\par
{\f2 #include "eventgamewindow.h"}\par
{\f2 #include "eventmanager.h"}\par
{\f2 #include "eventquit.h"}\par
{\f2 #include "eventrendertime.h"}\par
{\f2 #include "eventuserinput.h"}\par
{\f2 #include "exception.h"}\par
{\f2 #include "extendedtimer.h"}\par
{\f2 #include "gamewindow.h"}\par
{\f2 #include "graphicsmanager.h"}\par
{\f2 #include "graphicssettings.h"}\par
{\f2 #include "inputquerytool.h"}\par
{\f2 #include "light.h"}\par
{\f2 #include "linegroup.h"}\par
{\f2 #include "managerbase.h"}\par
{\f2 #include "meshgenerator.h"}\par
{\f2 #include "metacode.h"}\par
{\f2 #include "particleeffect.h"}\par
{\f2 #include "physicsmanager.h"}\par
{\f2 #include "plane.h"}\par
{\f2 #include "quaternion.h"}\par
{\f2 #include "ray.h"}\par
{\f2 #include "resourceinputstream.h"}\par
{\f2 #include "resourcemanager.h"}\par
{\f2 #include "scenemanager.h"}\par
{\f2 #include "simpletimer.h"}\par
{\f2 #include "sound.h"}\par
{\f2 #include "soundlistener.h"}\par
{\f2 #include "soundmanager.h"}\par
{\f2 #include "timer.h"}\par
{\f2 #include "timermanager.h"}\par
{\f2 #include "uibutton.h"}\par
{\f2 #include "uibuttonlistbox.h"}\par
{\f2 #include "uicaption.h"}\par
{\f2 #include "uicheckbox.h"}\par
{\f2 #include "uilayer.h"}\par
{\f2 #include "uilinelist.h"}\par
{\f2 #include "uilistbox.h"}\par
{\f2 #include "uimanager.h"}\par
{\f2 #include "uimarkuptext.h"}\par
{\f2 #include "uimenu.h"}\par
{\f2 #include "uimenuwindow.h"}\par
{\f2 #include "uirectangle.h"}\par
{\f2 #include "uiresizinginfo.h"}\par
{\f2 #include "uiscreen.h"}\par
{\f2 #include "uiscrollbar.h"}\par
{\f2 #include "uitextbutton.h"}\par
{\f2 #include "uiwidget.h"}\par
{\f2 #include "uiwindow.h"}\par
{\f2 #include "vector2.h"}\par
{\f2 #include "vector3.h"}\par
{\f2 #include "vector3wactor.h"}\par
{\f2 #include "viewport.h"}\par
{\f2 #include "world.h"}\par
{\f2 #include "worldgetset.h"}\par
{\f2 #include "worldnode.h"}\par
{\f2 #include "worldquerytool.h"}\par
{\f2 #include "xml.h"}\par
{\f2 #include "xmldoc.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single file that includes all of the physgame engine. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file exists solely to make it easier for others to include parts of the physgame engine in their project with out needing to know or care about the internals of our project. \par
}{
Definition in file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 physgame.h}}}
.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
xml.h File Reference\par \pard\plain 
{\tc\tcl2 \v xml.h}
{\xe \v xml.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem is declare, there are numerous class that are all tighlty integrated so one file seemed appropriate. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "crossplatform.h"}\par
{\f2 #include "xmldoc.h"}\par
{\f2 #include "exception.h"}\par
{\f2 #include <exception>}\par
{\f2 #include <stddef.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Writer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface for node printing (see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Node::Print}}} ). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::WriterFile}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing to FILEs as defined in stdio. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::WriterStream}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An implementation of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 Writer}}}  intended for writing std::ostreams. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Attribute}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating attributes in DOM tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Node}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A light-weight handle for manipulating nodes in DOM tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Child node iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AttributeIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}} iterator (a bidirectional iterator over a collection of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 Attribute}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::TreeWalker}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to call a function for_each member of the subtree of nodes descended from a specific node. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseResult}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All the information needed to troubleshoot a Parsing error. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Document}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root node of any xml hierarchy is a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 Document}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 Node}}}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathParseResult}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPath parsing result. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathVariable}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single XPath variable. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathVariableSet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of XPath variables. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathQuery}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A compiled XPath query object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathException}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thrown in a variety of XPath only situations, to indicate type mismatch or other issues. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathNode}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPath node which can store handles to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 xml::Node}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 xml::Attribute}}}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathNodeSet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A collection of nodes that an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 XPathQuery}}} can work on. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 phys}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bulk of the engine components go in this namspace. \par
}}}
}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem resides, there are numerous class that are all tighlty integrated so one file seemed appropriate. \par
}}}
}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 _XML_H}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prevents accidental loading of the file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}} multiple times. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 XML_DEPRECATED}}}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to mark XML internals as deprecated at the compiler level. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 XML_TEXT}}}
(t)\~ t\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used before the inclusion of string literal in the Pugi XML code, to allow the determination of the character type at compile time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 XML_CHAR}}}
\~ char\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Links the Pugi character datatype to match the Physgame phys::Characterdatatype. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef Character {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::char_t}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent a UTF8 code point, char, or wchar_t depending on how compiled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::basic_string< XML_CHAR, std::char_traits< XML_CHAR >, std::allocator< XML_CHAR > > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::String}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent a string of UTF8 code point, char, or wchar_t depending on how compiled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void *(* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AllocationFunction}}}
 )(size_t size){\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory allocation function interface; returns pointer to allocated memory or NULL on failure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef void(* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::deAllocationFunction}}}
 )(void *ptr){\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory deallocation function interface. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeNull}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeDocument}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeElement}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodePcdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeCdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeComment}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodePi}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeDeclaration}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::NodeDocType}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The types of nodes. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Encoding}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingAuto}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF8}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF16LE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF16BE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF16}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF32LE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF32BE}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::EncodingUTF32}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::Encodingwchar_t}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These flags determine the encoding of input data for an XML document. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseStatus}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusOk}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusFileNotFound}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusIOError}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADC" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusOutOfMemory}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusInternalError}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusUnrecognizedTag}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadPi}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadComment}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadCdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadDocType}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadPcdata}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadStartElement}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADL" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadAttribute}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusBadEndElement}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::StatusEndElementMismatch}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These statuses are used to help determine what issues, if any the parser had. the XML parser had. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathValueType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADP" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathTypeNone}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathTypeNodeSet}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathTypeNumber}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADS" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathTypeString}}}
, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADT" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::XPathTypeBoolean}}}

 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPathQuery return type. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< char, std::char_traits< char >, std::allocator< char > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AsUtf8}}}
 (const wchar_t *str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a c-style string of wchar_t to std::string containing UTF8. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< char, std::char_traits< char >, std::allocator< char > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AsUtf8}}}
 (const std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > &str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a std::wstring to a UTF8 std::string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADW" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AsWide}}}
 (const char *str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a Convert a c-style string to std::wstring containing native encoding (Usually UCS2 on windows and UTF32 on Linux/Mac). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::basic_string< wchar_t, std::char_traits< wchar_t >, std::allocator< wchar_t > > PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADX" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::AsWide}}}
 (const std::basic_string< char, std::char_traits< char >, std::allocator< char > > &str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a Convert a std::string to std::wstring containing native encoding (Usually UCS2 on windows and UTF32 on Linux/Mac). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADY" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::SetMemory_management_functions}}}
 (AllocationFunction allocate, deAllocationFunction deallocate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override default memory management functions. All subsequent allocations/deallocations will be performed via supplied functions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AllocationFunction PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::GetMemoryAllocationFunction}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current allocation funciton. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
deAllocationFunction PHYS_LIB {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::GetMemoryDeallocationFunction}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current allocation funciton. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEB" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseMinimal}}}
 = 0x0000\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimal parsing mode (equivalent to turning all other flags off). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParsePi}}}
 = 0x0001{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if processing instructions (NodePi) are added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAED" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseComments}}}
 = 0x0002{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if comments (NodeComment) are added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEE" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseCdata}}}
 = 0x0004{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if CDATA sections (NodeCdata) are added to the DOM tree. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEF" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseWsPcdata}}}
 = 0x0008\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if plain character data (NodePcdata) that consist only of whitespace are added to the DOM tree. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseEscapes}}}
 = 0x0010{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if character and entity references are expanded during parsing. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseEol}}}
 = 0x0020{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if EOL characters are normalized (converted to xA) during parsing. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEI" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseWconvAttribute}}}
 = 0x0040{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if attribute values are normalized using CDATA normalization rules during parsing. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEJ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseWnormAttribute}}}
 = 0x0080{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if attribute values are normalized using NMTOKENS normalization rules during parsing. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseDeclaration}}}
 = 0x0100{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if document declaration (NodeDeclaration) is added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEL" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseDocType}}}
 = 0x0200{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This flag determines if document type declaration (NodeDoctype) is added to the DOM tree. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseDefault}}}
 = ParseCdata | ParseEscapes | ParseWconvAttribute | ParseEol\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default parsing mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEN" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::ParseFull}}}
 = ParseDefault | ParsePi | ParseComments | ParseDeclaration | ParseDocType\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full parsing mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::FormatIndent}}}
 = 0x01{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indent the nodes that are written to output stream with as many indentation strings as deep the node is in DOM tree. This flag is on by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEP" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::FormatWriteBom}}}
 = 0x02{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write encoding-specific Byte Order Mark (BOM) to the output stream. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEQ" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::FormatRaw}}}
 = 0x04{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use raw output mode (no indentation and no line breaks are written). This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::FormatNoDeclaration}}}
 = 0x08{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Omit default XML declaration even if there is no declaration in the document. This flag is off by default. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::FormatDefault}}}
 = FormatIndent\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The default set of formatting flags. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem is declare, there are numerous class that are all tighlty integrated so one file seemed appropriate. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}} for additional details. \par
}{
Definition in file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEU" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v _XML_H\:xml.h}
{\xe \v xml.h\:_XML_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _XML_H}
}\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prevents accidental loading of the file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}} multiple times. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}}
{\xe \v XML_CHAR\:xml.h}
{\xe \v xml.h\:XML_CHAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XML_CHAR\~ char}
}\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Links the Pugi character datatype to match the Physgame phys::Characterdatatype. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}}
{\xe \v XML_TEXT\:xml.h}
{\xe \v xml.h\:XML_TEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XML_TEXT(t)\~ t}
}\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used before the inclusion of string literal in the Pugi XML code, to allow the determination of the character type at compile time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\b For internal use only.}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
xmldoc.h File Reference\par \pard\plain 
{\tc\tcl2 \v xmldoc.h}
{\xe \v xmldoc.h}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Doxygen documentation and minor tools to assist with the XML system. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "datatypes.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 phys}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bulk of the engine components go in this namspace. \par
}}}
}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml}}}
\par
\par
{
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is where bulk of the XML subsystem resides, there are numerous class that are all tighlty integrated so one file seemed appropriate. \par
}}}
}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEV" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::GetOneTag}}}
 (std::istream &stream)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the first tag out of the Stream and returns it as a String. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Document * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEW" }{}}{\fldrslt {\cs37\ul\cf2 phys::xml::PreParseClassFromSingleTag}}}
 (const String &NameSpace, const String &ClassName, const String &OneTag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a basic series of checks for extracting meaning from a single xml tag. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Doxygen documentation and minor tools to assist with the XML system. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The integration process for PugiXML requires that our changes all be stored in shell script. This is not condusive to good clean documentation and is why the doxygen documention for the XML parser exist here instead of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 xml.h}}}. \par
}{
Definition in file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEX" }{}}{\fldrslt {\cs37\ul\cf2 xmldoc.h}}}
.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}